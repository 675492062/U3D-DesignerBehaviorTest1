// Upgrade NOTE: replaced 'glstate.matrix.mvp' with 'UNITY_MATRIX_MVP'

Shader "Custom/WaveFlag"
{
	Properties
	{
		_Color ("Main Color", Color) = (1,1,1,0)
		_MainTex ("Texture", 2D) = "white" { }
		_WaveSpeed ("Wave Speed", float) = 50.0
		_Amplitude ("Amplitude", float) = 1.0
	}

	SubShader
	{
		Tags {"Queue"="AlphaTest" "IgnoreProjector"="True" "RenderType"="TransparentCutout"}
		LOD 200
	
			
	Pass {
		Name "FORWARD"
		Tags { "LightMode" = "ForwardBase" }
		ColorMask RGB
Program "vp" {
// Vertex combos: 12
//   opengl - ALU: 70 to 127
//   d3d9 - ALU: 70 to 127
//   d3d11 - ALU: 19 to 61, TEX: 0 to 0, FLOW: 1 to 1
//   d3d11_9x - ALU: 19 to 61, TEX: 0 to 0, FLOW: 1 to 1
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 9 [_Time]
Vector 10 [unity_SHAr]
Vector 11 [unity_SHAg]
Vector 12 [unity_SHAb]
Vector 13 [unity_SHBr]
Vector 14 [unity_SHBg]
Vector 15 [unity_SHBb]
Vector 16 [unity_SHC]
Matrix 5 [_Object2World]
Vector 17 [unity_Scale]
Float 18 [_WaveSpeed]
Float 19 [_Amplitude]
Vector 20 [_MainTex_ST]
"!!ARBvp1.0
# 91 ALU
PARAM c[26] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.mvp,
		program.local[5..20],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[18];
MUL R0.x, R0, c[9];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[21];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[22].xyxw, c[22].zwzw;
MAD R1.xyz, R1, R0, c[23].xyxw;
MAD R1.xyz, R1, R0, c[23].zwzw;
MAD R1.xyz, R1, R0, c[24].xyxw;
MAD R0.xyz, R1, R0, c[21].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[24].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[21].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[25].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[19];
MAD R0.w, -R0.x, c[25].x, vertex.position.z;
MAD R0.x, R1.w, c[25].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[21];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[22].xyxw, c[22].zwzw;
MAD R3.xyz, R2, R0, c[23].xyxw;
MAD R3.xyz, R3, R0, c[23].zwzw;
MAD R3.xyz, R3, R0, c[24].xyxw;
ADD R1.xyz, -R1.w, c[21];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[22].xyxw, c[22].zwzw;
MAD R2.xyz, R2, R1, c[23].xyxw;
MAD R3.xyz, R3, R0, c[21].wzww;
MAD R2.xyz, R2, R1, c[23].zwzw;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[24].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[21].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[24].xyxw;
MAD R1.xyz, R0, R1, c[21].wzww;
SGE R0.yz, R1.w, c[24].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[21].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R1.xyz, vertex.normal, c[17].w;
DP3 R3.w, R1, c[7];
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R0, c[19];
MUL R0.y, -R0, c[25].z;
MAD R0.y, R0.x, c[21], R0;
MUL R0.x, R2.w, c[19];
MAD R0.x, R0, c[21].y, vertex.position;
DP3 R2.w, R1, c[6];
DP4 result.position.w, R0.xywz, c[4];
DP4 result.position.z, R0.xywz, c[3];
DP4 result.position.y, R0.xywz, c[2];
DP4 result.position.x, R0.xywz, c[1];
DP3 R0.x, R1, c[5];
MOV R0.y, R2.w;
MOV R0.z, R3.w;
MUL R1, R0.xyzz, R0.yzzx;
MOV R0.w, c[21].z;
DP4 R2.z, R0, c[12];
DP4 R2.y, R0, c[11];
DP4 R2.x, R0, c[10];
MUL R0.y, R2.w, R2.w;
DP4 R3.z, R1, c[15];
DP4 R3.y, R1, c[14];
DP4 R3.x, R1, c[13];
MAD R0.y, R0.x, R0.x, -R0;
MUL R1.xyz, R0.y, c[16];
ADD R2.xyz, R2, R3;
ADD result.texcoord[2].xyz, R2, R1;
MOV result.texcoord[1].z, R3.w;
MOV result.texcoord[1].y, R2.w;
MOV result.texcoord[1].x, R0;
MAD result.texcoord[0].xy, vertex.texcoord[0], c[20], c[20].zwzw;
END
# 91 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Vector 9 [unity_SHAr]
Vector 10 [unity_SHAg]
Vector 11 [unity_SHAb]
Vector 12 [unity_SHBr]
Vector 13 [unity_SHBg]
Vector 14 [unity_SHBb]
Vector 15 [unity_SHC]
Matrix 4 [_Object2World]
Vector 16 [unity_Scale]
Float 17 [_WaveSpeed]
Float 18 [_Amplitude]
Vector 19 [_MainTex_ST]
"vs_2_0
; 91 ALU
def c20, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c21, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c22, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c23, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c24, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_normal0 v2
dcl_texcoord0 v3
mul r0.xyz, v2, c16.w
dp3 r4.x, r0, c5
dp3 r4.y, r0, c6
dp3 r2.x, r0, c4
mov r0.x, c8
mul r1.w, c17.x, r0.x
mov r2.y, r4.x
mov r2.z, r4.y
mov r2.w, c20.z
dp4 r1.z, r2, c11
dp4 r1.y, r2, c10
dp4 r1.x, r2, c9
slt r0.x, r1.w, c22
max r2.w, -r0.x, r0.x
mul r0, r2.xyzz, r2.yzzx
slt r2.z, c22.x, r2.w
add r2.y, -r2.z, c20.z
mul r2.w, r1, r2.y
mad r1.w, r2.z, -r1, r2
add r3.x, v0, v0.y
add r2.y, r3.x, v0.z
mad r2.z, r1.w, c22.y, r2.y
dp4 r3.z, r0, c14
dp4 r3.y, r0, c13
dp4 r3.x, r0, c12
mad r2.z, r2, c22, c22.w
frc r0.x, r2.z
mad r2.z, r0.x, c23.x, c23.y
add r1.xyz, r1, r3
mov r3.w, v0
sincos r0.xy, r2.z, c21.xyzw, c20.xyzw
mul r2.w, r4.x, r4.x
mad r0.x, r2, r2, -r2.w
mul r3.xyz, r0.x, c15
mul r0.x, r0.y, v3.y
mad r0.y, r1.w, c24.x, r2
mad r0.y, r0, c22.z, c22.w
frc r0.y, r0
add oT2.xyz, r1, r3
mul r0.x, r0, c18
mad r3.z, -r0.x, c24.y, v0
mad r0.x, r1.w, c23.z, r2.y
mad r0.y, r0, c23.x, c23
mad r0.x, r0, c22.z, c22.w
sincos r1.xy, r0.y, c21.xyzw, c20.xyzw
frc r0.x, r0
mad r1.x, r0, c23, c23.y
sincos r0.xy, r1.x, c21.xyzw, c20.xyzw
mul r0.w, v3.y, r1.y
mul r0.x, v3.y, r0.y
mul r0.z, v3.y, v3.x
mul r0.x, r0, c18
mul r0.y, -r0.z, c23.w
mad r3.y, r0.x, c20.w, r0
mul r0.x, r0.w, c18
mad r3.x, r0, c20.w, v0
dp4 oPos.w, r3, c3
dp4 oPos.z, r3, c2
dp4 oPos.y, r3, c1
dp4 oPos.x, r3, c0
mov oT1.z, r4.y
mov oT1.y, r4.x
mov oT1.x, r2
mad oT0.xy, v3, c19, c19.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Float 17 [_Amplitude]
Vector 18 [_MainTex_ST]
Matrix 12 [_Object2World] 3
Vector 0 [_Time]
Float 16 [_WaveSpeed]
Matrix 8 [glstate_matrix_mvp] 4
Vector 3 [unity_SHAb]
Vector 2 [unity_SHAg]
Vector 1 [unity_SHAr]
Vector 6 [unity_SHBb]
Vector 5 [unity_SHBg]
Vector 4 [unity_SHBr]
Vector 7 [unity_SHC]
Vector 15 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 46.67-48.00 (35-36 instructions), vertex: 32, texture: 0,
//   sequencer: 20,  5 GPRs, 31 threads,
// Performance (if enough threads): ~46-48 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacliaaaaacfmaaaaaaaaaaaaaaceaaaaaceeaaaaacgmaaaaaaaa
aaaaaaaaaaaaacbmaaaaaabmaaaaacappppoadaaaaaaaaaoaaaaaabmaaaaaaaa
aaaaacaiaaaaabdeaaacaabbaaabaaaaaaaaabeaaaaaaaaaaaaaabfaaaacaabc
aaabaaaaaaaaabfmaaaaaaaaaaaaabgmaaacaaamaaadaaaaaaaaabhmaaaaaaaa
aaaaabimaaacaaaaaaabaaaaaaaaabfmaaaaaaaaaaaaabjcaaacaabaaaabaaaa
aaaaabeaaaaaaaaaaaaaabjnaaacaaaiaaaeaaaaaaaaabhmaaaaaaaaaaaaabla
aaacaaadaaabaaaaaaaaabfmaaaaaaaaaaaaabllaaacaaacaaabaaaaaaaaabfm
aaaaaaaaaaaaabmgaaacaaabaaabaaaaaaaaabfmaaaaaaaaaaaaabnbaaacaaag
aaabaaaaaaaaabfmaaaaaaaaaaaaabnmaaacaaafaaabaaaaaaaaabfmaaaaaaaa
aaaaabohaaacaaaeaaabaaaaaaaaabfmaaaaaaaaaaaaabpcaaacaaahaaabaaaa
aaaaabfmaaaaaaaaaaaaabpmaaacaaapaaabaaaaaaaaabfmaaaaaaaafpebgnha
gmgjhehfgegfaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaafpengbgjgofegfhi
fpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpepgcgkgfgdhedcfhgphcgm
geaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpfegjgngfaafpfhgbhggffd
hagfgfgeaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaahfgogjhehjfpfdei
ebgcaahfgogjhehjfpfdeiebghaahfgogjhehjfpfdeiebhcaahfgogjhehjfpfd
eiecgcaahfgogjhehjfpfdeiecghaahfgogjhehjfpfdeiechcaahfgogjhehjfp
fdeiedaahfgogjhehjfpfdgdgbgmgfaahghdfpddfpdaaadccodacodcdadddfdd
codaaaklaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabeaapmaabaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaacbmaacbaaaeaaaaaaaaaaaaaaaa
aaaacagdaaaaaaabaaaaaaadaaaaaaadaaaaacjaaabaaaafaaaadaagaadafaah
aaaadafaaaabhbfbaaachcfcaaaabaclaaaabackaaaabacjaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaadoccpjidlpiaaaaamaejapnldpiaaaaadpaaaaaadoemmmmn
eamjapnldpggggggdpljjjjkeaehkobeeaammmmndpaaaaaahajfgaafbaalbaaa
fgaaaaaaaaaaaaaagaammcaabcaaaaaaaaaagabcfabibcaabcaaaaaaaaaaaaaa
gabnmeaabcaaaaaaaaaagacddacjbcaaccaaaaaaafpibaaaaaaaagiiaaaaaaaa
afpicaaaaaaaaoiiaaaaaaaaafpiaaaaaaaaaohiaaaaaaaamiacaaaaaagmlbaa
cbaapnaamiaiaaaaaagmgmaacbaabaaaheacaaababloblbllaabpnaakiiaaaaa
biaaaaebmcaaaabamiaiaaadaamggmaaobaaaaaamiahaaadaablmalbklaappab
miahaaadaamagmbliladpnppmiahaaadaamaaaaaoiadaaaamiapaaaeaadeagaa
kbadpoaamiahaaadaalemgaakaaepnaamabaadaaaaaaaagmocaaaaadmacaadaa
aaaaaalbocaaaaadmaekadaaaamglmmgkbaapoadmiahaaadaabbmaaaobaaadaa
miahaaaeaamagmaakbadbbaamiacaaaaaagmgmaaoaaeabaabeapaaadaablaalb
kbabalaeaeibaaabafmgmgbloaaeabaemiapaaabaagmiiiiklabakadmiapaaab
aabldejeklaaajabmiapiadoaalbaadeklaaaiabmialaaabaagfblaakbacapaa
miahaaacaalbleaakbabaoaamiahaaabaagmlemaklabanacmiahaaabaabllema
klabamabceipabaeaalehcgmobababiamiabaaadaadoanaagpababaamiacaaad
aadoanaagpacabaamiaeaaadaadoanaagpadabaamiabaaacaakhkhaakpaeaeaa
aiccaaacaakhkhgmkpaeafabaiieaaacaakhkhmgkpaeagabgechaaacaalololl
oaadacaamiahiaacaalbmagfklaaahacmiahiaabaaleleaaocababaamiadiaaa
aamelabkilaabcbcaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_Time]
Vector 466 [unity_SHAr]
Vector 465 [unity_SHAg]
Vector 464 [unity_SHAb]
Vector 463 [unity_SHBr]
Vector 462 [unity_SHBg]
Vector 461 [unity_SHBb]
Vector 460 [unity_SHC]
Matrix 260 [_Object2World]
Vector 459 [unity_Scale]
Float 458 [_WaveSpeed]
Float 457 [_Amplitude]
Vector 456 [_MainTex_ST]
"sce_vp_rsx // 45 instructions using 5 registers
[Configuration]
8
0000002d01050500
[Defaults]
2
455 4
400ccccd3e4ccccd4047ae143f000000
454 2
3f6666663fb9999a
[Microcode]
720
00009c6c009cb20c013fc0c36041dffc401f9c6c011c8808010400d740619f9c
00001c6c0040007f8106c08360403ffc00001c6c005ca0000186c08360409ffc
00009c6c00c000000106c08aa0403ffc00011c6c0080082a8100008360411ffc
00019c6c0150400c028600c360411ffc00001c6c0150600c028600c360411ffc
00001c6c0150500c028600c360405ffc00011c6c009c6080048000c360403ffc
00021c6c00c000550106c09fe0a11ffc00021c6c009d302a808000c360409ffc
201fdc6c0040002a8886c08360411ffc00019c6c0040002a8886c08360403ffc
00011c6c0080005500aa804360411ffc40019c6c004000550086c08360409fa0
40019c6c004000000086c08360405fa000001c6c019d000c0686c0c360405ffc
00001c6c019d100c0686c0c360409ffc00001c6c019d200c0686c0c360411ffc
00009c6c0080000d069a03436041fffc00019c6c010000000680036001209ffc
00011c6c01dcd00d8286c0c360405ffc00011c6c01dce00d8286c0c360409ffc
00011c6c01dcf00d8286c0c360411ffc0001a400004000aa8886c08360403ffc
00009c6c00c0000c0086c0830121dffc00001c6c011c707f868800c002219ffc
00001c6c011c607f869540c002205ffc401f9c6c784000000686c08aa0290020
00011c6c789cc02a868600c00031c07c00019c6c7880082a81154055402300fc
00001c6c008008000095408360409ffc00001c6c0080082a813fc14360411ffc
00001c6c009c9000008000c360411ffc00001c6c009c902a808000c360405ffc
00001c6c009c9000068000c360409ffc00001c6c011c702a80bfc0dfe1209ffc
00001c6c011c70d5009540d540405ffc00001c6c011c700000bfc0c000411ffc
401f9c6c00c0000c0486c08300a1dfa4401f9c6c01d0300d8086c0c360403f80
401f9c6c01d0200d8086c0c360405f80401f9c6c01d0100d8086c0c360409f80
401f9c6c01d0000d8086c0c360411f81
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 112 // 96 used size, 8 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityLighting" 720 // 720 used size, 17 vars
Vector 608 [unity_SHAr] 4
Vector 624 [unity_SHAg] 4
Vector 640 [unity_SHAb] 4
Vector 656 [unity_SHBr] 4
Vector 672 [unity_SHBg] 4
Vector 688 [unity_SHBb] 4
Vector 704 [unity_SHC] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 37 instructions, 4 temp regs, 0 temp arrays:
// ALU 33 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedgionncjooopdchghopficbbdmeoghpdeabaaaaaaoaagaaaaadaaaaaa
cmaaaaaapeaaaaaahmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaa
aiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaheaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefc
fmafaaaaeaaaabaafhabaaaafjaaaaaeegiocaaaaaaaaaaaagaaaaaafjaaaaae
egiocaaaabaaaaaaabaaaaaafjaaaaaeegiocaaaacaaaaaacnaaaaaafjaaaaae
egiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaa
acaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaaddccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaa
adaaaaaagiaaaaacaeaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaa
aeaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaa
aceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaag
hcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaa
aaaaaaaafgifcaaaaaaaaaaaaeaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaa
bkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaa
abeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaa
aaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaa
ckaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaafgafbaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaafaaaaaaogikcaaaaaaaaaaaafaaaaaa
diaaaaaihcaabaaaaaaaaaaaegbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaa
diaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaa
dcaaaaaklcaabaaaaaaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaa
egaibaaaabaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaaaoaaaaaa
kgakbaaaaaaaaaaaegadbaaaaaaaaaaadgaaaaafhccabaaaacaaaaaaegacbaaa
aaaaaaaadgaaaaaficaabaaaaaaaaaaaabeaaaaaaaaaiadpbbaaaaaibcaabaaa
abaaaaaaegiocaaaacaaaaaacgaaaaaaegaobaaaaaaaaaaabbaaaaaiccaabaaa
abaaaaaaegiocaaaacaaaaaachaaaaaaegaobaaaaaaaaaaabbaaaaaiecaabaaa
abaaaaaaegiocaaaacaaaaaaciaaaaaaegaobaaaaaaaaaaadiaaaaahpcaabaaa
acaaaaaajgacbaaaaaaaaaaaegakbaaaaaaaaaaabbaaaaaibcaabaaaadaaaaaa
egiocaaaacaaaaaacjaaaaaaegaobaaaacaaaaaabbaaaaaiccaabaaaadaaaaaa
egiocaaaacaaaaaackaaaaaaegaobaaaacaaaaaabbaaaaaiecaabaaaadaaaaaa
egiocaaaacaaaaaaclaaaaaaegaobaaaacaaaaaaaaaaaaahhcaabaaaabaaaaaa
egacbaaaabaaaaaaegacbaaaadaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaabkaabaaaaaaaaaaadcaaaaakbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
akaabaaaaaaaaaaabkaabaiaebaaaaaaaaaaaaaadcaaaaakhccabaaaadaaaaaa
egiccaaaacaaaaaacmaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab
"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLES


#ifdef VERTEX

varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  highp vec3 shlight_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = _glesVertex;
  highp float t_6;
  highp float tmpvar_7;
  tmpvar_7 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_8;
  tmpvar_8 = (_Time * _WaveSpeed).x;
  t_6 = tmpvar_8;
  if ((tmpvar_8 < 0.0)) {
    t_6 = (tmpvar_8 * -1.0);
  };
  tmpvar_5.x = (_glesVertex.x + (((sin(((t_6 * 1.45) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_5.y = ((((sin(((t_6 * 3.12) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_5.z = (_glesVertex.z - (((sin(((t_6 * 2.2) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_9 * (tmpvar_1 * unity_Scale.w));
  tmpvar_3 = tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_10;
  mediump vec3 tmpvar_12;
  mediump vec4 normal_13;
  normal_13 = tmpvar_11;
  highp float vC_14;
  mediump vec3 x3_15;
  mediump vec3 x2_16;
  mediump vec3 x1_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAr, normal_13);
  x1_17.x = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAg, normal_13);
  x1_17.y = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAb, normal_13);
  x1_17.z = tmpvar_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normal_13.xyzz * normal_13.yzzx);
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBr, tmpvar_21);
  x2_16.x = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBg, tmpvar_21);
  x2_16.y = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBb, tmpvar_21);
  x2_16.z = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y));
  vC_14 = tmpvar_25;
  highp vec3 tmpvar_26;
  tmpvar_26 = (unity_SHC.xyz * vC_14);
  x3_15 = tmpvar_26;
  tmpvar_12 = ((x1_17 + x2_16) + x3_15);
  shlight_2 = tmpvar_12;
  tmpvar_4 = shlight_2;
  gl_Position = (glstate_matrix_mvp * tmpvar_5);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _WorldSpaceLightPos0;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float tmpvar_5;
  tmpvar_5 = c_2.w;
  lowp float x_6;
  x_6 = (c_2.w - _Cutoff);
  if ((x_6 < 0.0)) {
    discard;
  };
  lowp vec4 c_7;
  c_7.xyz = ((c_2.xyz * _LightColor0.xyz) * (max (0.0, dot (xlv_TEXCOORD1, _WorldSpaceLightPos0.xyz)) * 2.0));
  c_7.w = tmpvar_5;
  c_1.xyz = (c_7.xyz + (c_2.xyz * xlv_TEXCOORD2));
  c_1.w = tmpvar_5;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLES


#ifdef VERTEX

varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  highp vec3 shlight_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = _glesVertex;
  highp float t_6;
  highp float tmpvar_7;
  tmpvar_7 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_8;
  tmpvar_8 = (_Time * _WaveSpeed).x;
  t_6 = tmpvar_8;
  if ((tmpvar_8 < 0.0)) {
    t_6 = (tmpvar_8 * -1.0);
  };
  tmpvar_5.x = (_glesVertex.x + (((sin(((t_6 * 1.45) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_5.y = ((((sin(((t_6 * 3.12) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_5.z = (_glesVertex.z - (((sin(((t_6 * 2.2) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_9 * (tmpvar_1 * unity_Scale.w));
  tmpvar_3 = tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_10;
  mediump vec3 tmpvar_12;
  mediump vec4 normal_13;
  normal_13 = tmpvar_11;
  highp float vC_14;
  mediump vec3 x3_15;
  mediump vec3 x2_16;
  mediump vec3 x1_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAr, normal_13);
  x1_17.x = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAg, normal_13);
  x1_17.y = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAb, normal_13);
  x1_17.z = tmpvar_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normal_13.xyzz * normal_13.yzzx);
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBr, tmpvar_21);
  x2_16.x = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBg, tmpvar_21);
  x2_16.y = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBb, tmpvar_21);
  x2_16.z = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y));
  vC_14 = tmpvar_25;
  highp vec3 tmpvar_26;
  tmpvar_26 = (unity_SHC.xyz * vC_14);
  x3_15 = tmpvar_26;
  tmpvar_12 = ((x1_17 + x2_16) + x3_15);
  shlight_2 = tmpvar_12;
  tmpvar_4 = shlight_2;
  gl_Position = (glstate_matrix_mvp * tmpvar_5);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _WorldSpaceLightPos0;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float tmpvar_5;
  tmpvar_5 = c_2.w;
  lowp float x_6;
  x_6 = (c_2.w - _Cutoff);
  if ((x_6 < 0.0)) {
    discard;
  };
  lowp vec4 c_7;
  c_7.xyz = ((c_2.xyz * _LightColor0.xyz) * (max (0.0, dot (xlv_TEXCOORD1, _WorldSpaceLightPos0.xyz)) * 2.0));
  c_7.w = tmpvar_5;
  c_1.xyz = (c_7.xyz + (c_2.xyz * xlv_TEXCOORD2));
  c_1.w = tmpvar_5;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "flash " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Vector 9 [unity_SHAr]
Vector 10 [unity_SHAg]
Vector 11 [unity_SHAb]
Vector 12 [unity_SHBr]
Vector 13 [unity_SHBg]
Vector 14 [unity_SHBb]
Vector 15 [unity_SHC]
Matrix 4 [_Object2World]
Vector 16 [unity_Scale]
Float 17 [_WaveSpeed]
Float 18 [_Amplitude]
Vector 19 [_MainTex_ST]
"agal_vs
c20 -0.020833 -0.125 1.0 0.5
c21 -0.000002 -0.000022 0.002604 0.00026
c22 0.0 2.2 0.159155 0.5
c23 6.283185 -3.141593 3.12 0.9
c24 1.45 0.2 0.0 0.0
[bc]
adaaaaaaaaaaahacabaaaaoeaaaaaaaabaaaaappabaaaaaa mul r0.xyz, a1, c16.w
bcaaaaaaaeaaabacaaaaaakeacaaaaaaafaaaaoeabaaaaaa dp3 r4.x, r0.xyzz, c5
bcaaaaaaaeaaacacaaaaaakeacaaaaaaagaaaaoeabaaaaaa dp3 r4.y, r0.xyzz, c6
bcaaaaaaacaaabacaaaaaakeacaaaaaaaeaaaaoeabaaaaaa dp3 r2.x, r0.xyzz, c4
aaaaaaaaaaaaabacaiaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r0.x, c8
adaaaaaaabaaaiacbbaaaaaaabaaaaaaaaaaaaaaacaaaaaa mul r1.w, c17.x, r0.x
aaaaaaaaacaaacacaeaaaaaaacaaaaaaaaaaaaaaaaaaaaaa mov r2.y, r4.x
aaaaaaaaacaaaeacaeaaaaffacaaaaaaaaaaaaaaaaaaaaaa mov r2.z, r4.y
aaaaaaaaacaaaiacbeaaaakkabaaaaaaaaaaaaaaaaaaaaaa mov r2.w, c20.z
bdaaaaaaabaaaeacacaaaaoeacaaaaaaalaaaaoeabaaaaaa dp4 r1.z, r2, c11
bdaaaaaaabaaacacacaaaaoeacaaaaaaakaaaaoeabaaaaaa dp4 r1.y, r2, c10
bdaaaaaaabaaabacacaaaaoeacaaaaaaajaaaaoeabaaaaaa dp4 r1.x, r2, c9
ckaaaaaaaaaaabacabaaaappacaaaaaabgaaaaoeabaaaaaa slt r0.x, r1.w, c22
bfaaaaaaadaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r3.x, r0.x
ahaaaaaaacaaaiacadaaaaaaacaaaaaaaaaaaaaaacaaaaaa max r2.w, r3.x, r0.x
adaaaaaaaaaaapacacaaaakeacaaaaaaacaaaacjacaaaaaa mul r0, r2.xyzz, r2.yzzx
ckaaaaaaacaaaeacbgaaaaaaabaaaaaaacaaaappacaaaaaa slt r2.z, c22.x, r2.w
bfaaaaaaaeaaaeacacaaaakkacaaaaaaaaaaaaaaaaaaaaaa neg r4.z, r2.z
abaaaaaaacaaacacaeaaaakkacaaaaaabeaaaakkabaaaaaa add r2.y, r4.z, c20.z
adaaaaaaacaaaiacabaaaappacaaaaaaacaaaaffacaaaaaa mul r2.w, r1.w, r2.y
bfaaaaaaabaaaiacabaaaappacaaaaaaaaaaaaaaaaaaaaaa neg r1.w, r1.w
adaaaaaaabaaaiacacaaaakkacaaaaaaabaaaappacaaaaaa mul r1.w, r2.z, r1.w
abaaaaaaabaaaiacabaaaappacaaaaaaacaaaappacaaaaaa add r1.w, r1.w, r2.w
abaaaaaaadaaabacaaaaaaoeaaaaaaaaaaaaaaffaaaaaaaa add r3.x, a0, a0.y
abaaaaaaacaaacacadaaaaaaacaaaaaaaaaaaakkaaaaaaaa add r2.y, r3.x, a0.z
adaaaaaaafaaaeacabaaaappacaaaaaabgaaaaffabaaaaaa mul r5.z, r1.w, c22.y
abaaaaaaacaaaeacafaaaakkacaaaaaaacaaaaffacaaaaaa add r2.z, r5.z, r2.y
bdaaaaaaadaaaeacaaaaaaoeacaaaaaaaoaaaaoeabaaaaaa dp4 r3.z, r0, c14
bdaaaaaaadaaacacaaaaaaoeacaaaaaaanaaaaoeabaaaaaa dp4 r3.y, r0, c13
bdaaaaaaadaaabacaaaaaaoeacaaaaaaamaaaaoeabaaaaaa dp4 r3.x, r0, c12
adaaaaaaacaaaeacacaaaakkacaaaaaabgaaaaoeabaaaaaa mul r2.z, r2.z, c22
abaaaaaaacaaaeacacaaaakkacaaaaaabgaaaappabaaaaaa add r2.z, r2.z, c22.w
aiaaaaaaaaaaabacacaaaakkacaaaaaaaaaaaaaaaaaaaaaa frc r0.x, r2.z
adaaaaaaacaaaeacaaaaaaaaacaaaaaabhaaaaaaabaaaaaa mul r2.z, r0.x, c23.x
abaaaaaaacaaaeacacaaaakkacaaaaaabhaaaaffabaaaaaa add r2.z, r2.z, c23.y
abaaaaaaabaaahacabaaaakeacaaaaaaadaaaakeacaaaaaa add r1.xyz, r1.xyzz, r3.xyzz
aaaaaaaaadaaaiacaaaaaaoeaaaaaaaaaaaaaaaaaaaaaaaa mov r3.w, a0
apaaaaaaaaaaabacacaaaakkacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r2.z
baaaaaaaaaaaacacacaaaakkacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r2.z
adaaaaaaacaaaiacaeaaaaaaacaaaaaaaeaaaaaaacaaaaaa mul r2.w, r4.x, r4.x
adaaaaaaafaaabacacaaaaaaacaaaaaaacaaaaaaacaaaaaa mul r5.x, r2.x, r2.x
acaaaaaaaaaaabacafaaaaaaacaaaaaaacaaaappacaaaaaa sub r0.x, r5.x, r2.w
adaaaaaaadaaahacaaaaaaaaacaaaaaaapaaaaoeabaaaaaa mul r3.xyz, r0.x, c15
adaaaaaaaaaaabacaaaaaaffacaaaaaaadaaaaffaaaaaaaa mul r0.x, r0.y, a3.y
adaaaaaaaaaaacacabaaaappacaaaaaabiaaaaaaabaaaaaa mul r0.y, r1.w, c24.x
abaaaaaaaaaaacacaaaaaaffacaaaaaaacaaaaffacaaaaaa add r0.y, r0.y, r2.y
adaaaaaaaaaaacacaaaaaaffacaaaaaabgaaaakkabaaaaaa mul r0.y, r0.y, c22.z
abaaaaaaaaaaacacaaaaaaffacaaaaaabgaaaappabaaaaaa add r0.y, r0.y, c22.w
aiaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa frc r0.y, r0.y
abaaaaaaacaaahaeabaaaakeacaaaaaaadaaaakeacaaaaaa add v2.xyz, r1.xyzz, r3.xyzz
adaaaaaaaaaaabacaaaaaaaaacaaaaaabcaaaaoeabaaaaaa mul r0.x, r0.x, c18
bfaaaaaaafaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r5.x, r0.x
adaaaaaaadaaaeacafaaaaaaacaaaaaabiaaaaffabaaaaaa mul r3.z, r5.x, c24.y
abaaaaaaadaaaeacadaaaakkacaaaaaaaaaaaaoeaaaaaaaa add r3.z, r3.z, a0
adaaaaaaaaaaabacabaaaappacaaaaaabhaaaakkabaaaaaa mul r0.x, r1.w, c23.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaacaaaaffacaaaaaa add r0.x, r0.x, r2.y
adaaaaaaaaaaacacaaaaaaffacaaaaaabhaaaaaaabaaaaaa mul r0.y, r0.y, c23.x
abaaaaaaaaaaacacaaaaaaffacaaaaaabhaaaaoeabaaaaaa add r0.y, r0.y, c23
adaaaaaaaaaaabacaaaaaaaaacaaaaaabgaaaakkabaaaaaa mul r0.x, r0.x, c22.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaabgaaaappabaaaaaa add r0.x, r0.x, c22.w
apaaaaaaabaaabacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa sin r1.x, r0.y
baaaaaaaabaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa cos r1.y, r0.y
aiaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r0.x, r0.x
adaaaaaaabaaabacaaaaaaaaacaaaaaabhaaaaoeabaaaaaa mul r1.x, r0.x, c23
abaaaaaaabaaabacabaaaaaaacaaaaaabhaaaaffabaaaaaa add r1.x, r1.x, c23.y
apaaaaaaaaaaabacabaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.x
baaaaaaaaaaaacacabaaaaaaacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.x
adaaaaaaaaaaaiacadaaaaffaaaaaaaaabaaaaffacaaaaaa mul r0.w, a3.y, r1.y
adaaaaaaaaaaabacadaaaaffaaaaaaaaaaaaaaffacaaaaaa mul r0.x, a3.y, r0.y
adaaaaaaaaaaaeacadaaaaffaaaaaaaaadaaaaaaaaaaaaaa mul r0.z, a3.y, a3.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaabcaaaaoeabaaaaaa mul r0.x, r0.x, c18
bfaaaaaaafaaaeacaaaaaakkacaaaaaaaaaaaaaaaaaaaaaa neg r5.z, r0.z
adaaaaaaaaaaacacafaaaakkacaaaaaabhaaaappabaaaaaa mul r0.y, r5.z, c23.w
adaaaaaaadaaacacaaaaaaaaacaaaaaabeaaaappabaaaaaa mul r3.y, r0.x, c20.w
abaaaaaaadaaacacadaaaaffacaaaaaaaaaaaaffacaaaaaa add r3.y, r3.y, r0.y
adaaaaaaaaaaabacaaaaaappacaaaaaabcaaaaoeabaaaaaa mul r0.x, r0.w, c18
adaaaaaaadaaabacaaaaaaaaacaaaaaabeaaaappabaaaaaa mul r3.x, r0.x, c20.w
abaaaaaaadaaabacadaaaaaaacaaaaaaaaaaaaoeaaaaaaaa add r3.x, r3.x, a0
bdaaaaaaaaaaaiadadaaaaoeacaaaaaaadaaaaoeabaaaaaa dp4 o0.w, r3, c3
bdaaaaaaaaaaaeadadaaaaoeacaaaaaaacaaaaoeabaaaaaa dp4 o0.z, r3, c2
bdaaaaaaaaaaacadadaaaaoeacaaaaaaabaaaaoeabaaaaaa dp4 o0.y, r3, c1
bdaaaaaaaaaaabadadaaaaoeacaaaaaaaaaaaaoeabaaaaaa dp4 o0.x, r3, c0
aaaaaaaaabaaaeaeaeaaaaffacaaaaaaaaaaaaaaaaaaaaaa mov v1.z, r4.y
aaaaaaaaabaaacaeaeaaaaaaacaaaaaaaaaaaaaaaaaaaaaa mov v1.y, r4.x
aaaaaaaaabaaabaeacaaaaaaacaaaaaaaaaaaaaaaaaaaaaa mov v1.x, r2.x
adaaaaaaafaaadacadaaaaoeaaaaaaaabdaaaaoeabaaaaaa mul r5.xy, a3, c19
abaaaaaaaaaaadaeafaaaafeacaaaaaabdaaaaooabaaaaaa add v0.xy, r5.xyyy, c19.zwzw
aaaaaaaaaaaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v0.zw, c0
aaaaaaaaabaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v1.w, c0
aaaaaaaaacaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v2.w, c0
"
}

SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 112 // 96 used size, 8 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityLighting" 720 // 720 used size, 17 vars
Vector 608 [unity_SHAr] 4
Vector 624 [unity_SHAg] 4
Vector 640 [unity_SHAb] 4
Vector 656 [unity_SHBr] 4
Vector 672 [unity_SHBg] 4
Vector 688 [unity_SHBb] 4
Vector 704 [unity_SHC] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 37 instructions, 4 temp regs, 0 temp arrays:
// ALU 33 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecedijogpagikpoplpflhlchbchmgdppbmgiabaaaaaaeialaaaaaeaaaaaa
daaaaaaajeaeaaaapiajaaaamaakaaaaebgpgodjfmaeaaaafmaeaaaaaaacpopp
omadaaaahaaaaaaaagaaceaaaaaagmaaaaaagmaaaaaaceaaabaagmaaaaaaaeaa
acaaabaaaaaaaaaaabaaaaaaabaaadaaaaaaaaaaacaacgaaahaaaeaaaaaaaaaa
adaaaaaaaeaaalaaaaaaaaaaadaaamaaadaaapaaaaaaaaaaadaabeaaabaabcaa
aaaaaaaaaaaaaaaaaaacpoppfbaaaaafbdaaapkajkjjljdpbekoeheamnmmamea
ggggggdpfbaaaaafbeaaapkanlapmjeanlapejmamnmmemdoaaaaiadpfbaaaaaf
bfaaapkaaaaaaaaaaaaaaamaidpjccdoaaaaaadpfbaaaaafbgaaapkaabannalf
gballglhklkkckdlijiiiidjfbaaaaafbhaaapkaklkkkklmaaaaaaloaaaaiadp
aaaaaadpbpaaaaacafaaaaiaaaaaapjabpaaaaacafaaaciaacaaapjabpaaaaac
afaaadiaadaaapjaaeaaaaaeaaaaadoaadaaoejaacaaoekaacaaookaafaaaaad
aaaaahiaacaaoejabcaappkaafaaaaadabaaahiaaaaaffiabaaaoekaaeaaaaae
aaaaaliaapaakekaaaaaaaiaabaakeiaaeaaaaaeaaaaahiabbaaoekaaaaakkia
aaaapeiaabaaaaacaaaaaiiabeaappkaajaaaaadabaaabiaaeaaoekaaaaaoeia
ajaaaaadabaaaciaafaaoekaaaaaoeiaajaaaaadabaaaeiaagaaoekaaaaaoeia
afaaaaadacaaapiaaaaacjiaaaaakeiaajaaaaadadaaabiaahaaoekaacaaoeia
ajaaaaadadaaaciaaiaaoekaacaaoeiaajaaaaadadaaaeiaajaaoekaacaaoeia
acaaaaadabaaahiaabaaoeiaadaaoeiaafaaaaadaaaaaiiaaaaaffiaaaaaffia
aeaaaaaeaaaaaiiaaaaaaaiaaaaaaaiaaaaappibabaaaaacabaaahoaaaaaoeia
aeaaaaaeacaaahoaakaaoekaaaaappiaabaaoeiaabaaaaacaaaaabiaabaaaaka
afaaaaadaaaaabiaaaaaaaiaadaaaakaamaaaaadaaaaaciaaaaaaaiabfaaaaka
afaaaaadaaaaaciaaaaaffiaaaaaaaiaaeaaaaaeaaaaabiaaaaaffiabfaaffka
aaaaaaiaacaaaaadaaaaaciaaaaaffjaaaaaaajaacaaaaadaaaaaciaaaaaffia
aaaakkjaaeaaaaaeaaaaahiaaaaaaaiabdaaoekaaaaaffiaaeaaaaaeaaaaahia
aaaaoeiabfaakkkabfaappkabdaaaaacaaaaahiaaaaaoeiaaeaaaaaeaaaaahia
aaaaoeiabeaaaakabeaaffkacfaaaaaeabaaaciaaaaaffiabgaaoekabhaaoeka
afaaaaadaaaaaciaabaaffiaadaaffjaafaaaaadaaaaaciaaaaaffiaabaaffka
afaaaaadaaaaaiiaadaaaajaadaaffjaafaaaaadaaaaaiiaaaaappiabdaappka
aeaaaaaeaaaaaciaaaaaffiabfaappkaaaaappibafaaaaadabaaapiaaaaaffia
amaaoekacfaaaaaeacaaaciaaaaaaaiabgaaoekabhaaoekacfaaaaaeadaaacia
aaaakkiabgaaoekabhaaoekaafaaaaadaaaaabiaadaaffiaadaaffjaafaaaaad
aaaaabiaaaaaaaiaabaaffkaaeaaaaaeaaaaabiaaaaaaaiabeaakkkbaaaakkja
afaaaaadaaaaaciaacaaffiaadaaffjaafaaaaadaaaaaciaaaaaffiaabaaffka
aeaaaaaeaaaaaciaaaaaffiabfaappkaaaaaaajaaeaaaaaeabaaapiaalaaoeka
aaaaffiaabaaoeiaaeaaaaaeaaaaapiaanaaoekaaaaaaaiaabaaoeiaaeaaaaae
aaaaapiaaoaaoekaaaaappjaaaaaoeiaaeaaaaaeaaaaadmaaaaappiaaaaaoeka
aaaaoeiaabaaaaacaaaaammaaaaaoeiappppaaaafdeieefcfmafaaaaeaaaabaa
fhabaaaafjaaaaaeegiocaaaaaaaaaaaagaaaaaafjaaaaaeegiocaaaabaaaaaa
abaaaaaafjaaaaaeegiocaaaacaaaaaacnaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaad
dcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagiaaaaac
aeaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaaakiacaaa
abaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaa
aaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaa
aaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaa
akbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaa
aaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdp
bekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaa
aanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaa
fgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaa
aaaaaaaaaeaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaa
aaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaa
dcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdp
bkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaa
adaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaa
aaaaaadpakbabaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaackaabaiaebaaaaaa
aaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaa
egiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaa
egiacaaaaaaaaaaaafaaaaaaogikcaaaaaaaaaaaafaaaaaadiaaaaaihcaabaaa
aaaaaaaaegbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaa
abaaaaaafgafbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaa
aaaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaaegaibaaaabaaaaaa
dcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaaaaaaaaa
egadbaaaaaaaaaaadgaaaaafhccabaaaacaaaaaaegacbaaaaaaaaaaadgaaaaaf
icaabaaaaaaaaaaaabeaaaaaaaaaiadpbbaaaaaibcaabaaaabaaaaaaegiocaaa
acaaaaaacgaaaaaaegaobaaaaaaaaaaabbaaaaaiccaabaaaabaaaaaaegiocaaa
acaaaaaachaaaaaaegaobaaaaaaaaaaabbaaaaaiecaabaaaabaaaaaaegiocaaa
acaaaaaaciaaaaaaegaobaaaaaaaaaaadiaaaaahpcaabaaaacaaaaaajgacbaaa
aaaaaaaaegakbaaaaaaaaaaabbaaaaaibcaabaaaadaaaaaaegiocaaaacaaaaaa
cjaaaaaaegaobaaaacaaaaaabbaaaaaiccaabaaaadaaaaaaegiocaaaacaaaaaa
ckaaaaaaegaobaaaacaaaaaabbaaaaaiecaabaaaadaaaaaaegiocaaaacaaaaaa
claaaaaaegaobaaaacaaaaaaaaaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaa
egacbaaaadaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaabkaabaaa
aaaaaaaadcaaaaakbcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaaaaaaaaa
bkaabaiaebaaaaaaaaaaaaaadcaaaaakhccabaaaadaaaaaaegiccaaaacaaaaaa
cmaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadoaaaaabejfdeheomaaaaaaa
agaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaa
kbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaacaaaaaaahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
adaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaa
ljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeo
aafeebeoehefeofeaaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaakl
epfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
heaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaahaiaaaaheaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaafeeffied
epepfceeaaklklkl"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    lowp vec3 vlight;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 425
uniform highp vec4 _MainTex_ST;
uniform lowp float _Cutoff;
#line 137
mediump vec3 ShadeSH9( in mediump vec4 normal ) {
    mediump vec3 x1;
    mediump vec3 x2;
    mediump vec3 x3;
    x1.x = dot( unity_SHAr, normal);
    #line 141
    x1.y = dot( unity_SHAg, normal);
    x1.z = dot( unity_SHAb, normal);
    mediump vec4 vB = (normal.xyzz * normal.yzzx);
    x2.x = dot( unity_SHBr, vB);
    #line 145
    x2.y = dot( unity_SHBg, vB);
    x2.z = dot( unity_SHBb, vB);
    highp float vC = ((normal.x * normal.x) - (normal.y * normal.y));
    x3 = (unity_SHC.xyz * vC);
    #line 149
    return ((x1 + x2) + x3);
}
#line 400
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 404
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 408
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 426
v2f_surf vert_surf( in appdata_full v ) {
    v2f_surf o;
    #line 429
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec3 worldN = (mat3( _Object2World) * (v.normal * unity_Scale.w));
    #line 433
    o.normal = worldN;
    highp vec3 shlight = ShadeSH9( vec4( worldN, 1.0));
    o.vlight = shlight;
    #line 437
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out lowp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec3(xl_retval.normal);
    xlv_TEXCOORD2 = vec3(xl_retval.vlight);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    lowp vec3 vlight;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 425
uniform highp vec4 _MainTex_ST;
uniform lowp float _Cutoff;
#line 338
lowp vec4 LightingLambert( in SurfaceOutput s, in lowp vec3 lightDir, in lowp float atten ) {
    lowp float diff = max( 0.0, dot( s.Normal, lightDir));
    lowp vec4 c;
    #line 342
    c.xyz = ((s.Albedo * _LightColor0.xyz) * ((diff * atten) * 2.0));
    c.w = s.Alpha;
    return c;
}
#line 411
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 413
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 440
lowp vec4 frag_surf( in v2f_surf IN ) {
    #line 442
    Input surfIN;
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    #line 446
    o.Emission = vec3( 0.0);
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    #line 450
    o.Normal = IN.normal;
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    lowp float atten = 1.0;
    #line 454
    lowp vec4 c = vec4( 0.0);
    c = LightingLambert( o, _WorldSpaceLightPos0.xyz, atten);
    c.xyz += (o.Albedo * IN.vlight);
    c.w = o.Alpha;
    #line 458
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in lowp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.normal = vec3(xlv_TEXCOORD1);
    xlt_IN.vlight = vec3(xlv_TEXCOORD2);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 9 [_Time]
Float 10 [_WaveSpeed]
Float 11 [_Amplitude]
Vector 12 [unity_LightmapST]
Vector 13 [_MainTex_ST]
"!!ARBvp1.0
# 70 ALU
PARAM c[19] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.mvp,
		program.local[5..13],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[10];
MUL R0.x, R0, c[9];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[14];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[15].xyxw, c[15].zwzw;
MAD R1.xyz, R1, R0, c[16].xyxw;
MAD R1.xyz, R1, R0, c[16].zwzw;
MAD R1.xyz, R1, R0, c[17].xyxw;
MAD R0.xyz, R1, R0, c[14].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[17].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[14].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[18].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[11];
MAD R0.w, -R0.x, c[18].x, vertex.position.z;
MAD R0.x, R1.w, c[18].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[14];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[15].xyxw, c[15].zwzw;
MAD R3.xyz, R2, R0, c[16].xyxw;
MAD R3.xyz, R3, R0, c[16].zwzw;
MAD R3.xyz, R3, R0, c[17].xyxw;
ADD R1.xyz, -R1.w, c[14];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[15].xyxw, c[15].zwzw;
MAD R2.xyz, R2, R1, c[16].xyxw;
MAD R2.xyz, R2, R1, c[16].zwzw;
MAD R3.xyz, R3, R0, c[14].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[17].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[14].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[17].xyxw;
MAD R1.xyz, R0, R1, c[14].wzww;
SGE R0.yz, R1.w, c[17].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[14].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R0.x, R0, c[11];
MUL R0.y, -R0, c[18].z;
MAD R0.y, R0.x, c[14], R0;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R2.w, c[11];
MAD R0.x, R0, c[14].y, vertex.position;
DP4 result.position.w, R0.xywz, c[4];
DP4 result.position.z, R0.xywz, c[3];
DP4 result.position.y, R0.xywz, c[2];
DP4 result.position.x, R0.xywz, c[1];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[13], c[13].zwzw;
MAD result.texcoord[1].xy, vertex.texcoord[1], c[12], c[12].zwzw;
END
# 70 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Float 9 [_WaveSpeed]
Float 10 [_Amplitude]
Vector 11 [unity_LightmapST]
Vector 12 [_MainTex_ST]
"vs_2_0
; 70 ALU
def c13, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c14, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c15, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c16, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c17, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_texcoord0 v3
dcl_texcoord1 v4
add r0.w, v0.x, v0.y
mov r0.x, c8
mul r0.x, c9, r0
slt r0.y, r0.x, c15.x
max r0.y, -r0, r0
slt r0.y, c15.x, r0
add r0.z, -r0.y, c13
mul r0.z, r0.x, r0
mad r1.y, r0, -r0.x, r0.z
add r1.x, r0.w, v0.z
mad r0.x, r1.y, c15.y, r1
mad r0.x, r0, c15.z, c15.w
frc r0.x, r0
mad r1.z, r0.x, c16.x, c16.y
sincos r0.xy, r1.z, c14.xyzw, c13.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1, c17.x, r1.x
mul r0.x, r0, c10
mad r2.z, -r0.x, c17.y, v0
mad r0.x, r1.y, c16.z, r1
mad r0.x, r0, c15.z, c15.w
mad r0.y, r0, c15.z, c15.w
frc r0.y, r0
mov r2.w, v0
mad r1.y, r0, c16.x, c16
frc r1.x, r0
sincos r0.xy, r1.y, c14.xyzw, c13.xyzw
mad r0.x, r1, c16, c16.y
sincos r1.xy, r0.x, c14.xyzw, c13.xyzw
mul r0.z, v3.y, r0.y
mul r0.y, v3, v3.x
mul r0.x, v3.y, r1.y
mul r0.x, r0, c10
mul r0.y, -r0, c16.w
mad r2.y, r0.x, c13.w, r0
mul r0.x, r0.z, c10
mad r2.x, r0, c13.w, v0
dp4 oPos.w, r2, c3
dp4 oPos.z, r2, c2
dp4 oPos.y, r2, c1
dp4 oPos.x, r2, c0
mad oT0.xy, v3, c12, c12.zwzw
mad oT1.xy, v4, c11, c11.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Float 6 [_Amplitude]
Vector 8 [_MainTex_ST]
Vector 0 [_Time]
Float 5 [_WaveSpeed]
Matrix 1 [glstate_matrix_mvp] 4
Vector 7 [unity_LightmapST]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 29.33-30.67 (22-23 instructions), vertex: 32, texture: 0,
//   sequencer: 16,  5 GPRs, 31 threads,
// Performance (if enough threads): ~32 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaabliaaaaableaaaaaaaaaaaaaaceaaaaabemaaaaabheaaaaaaaa
aaaaaaaaaaaaabceaaaaaabmaaaaabbipppoadaaaaaaaaagaaaaaabmaaaaaaaa
aaaaabbbaaaaaajeaaacaaagaaabaaaaaaaaaakaaaaaaaaaaaaaaalaaaacaaai
aaabaaaaaaaaaalmaaaaaaaaaaaaaammaaacaaaaaaabaaaaaaaaaalmaaaaaaaa
aaaaaancaaacaaafaaabaaaaaaaaaakaaaaaaaaaaaaaaannaaacaaabaaaeaaaa
aaaaaapaaaaaaaaaaaaaabaaaaacaaahaaabaaaaaaaaaalmaaaaaaaafpebgnha
gmgjhehfgegfaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaafpengbgjgofegfhi
fpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpfegjgngfaafpfhgbhggffd
hagfgfgeaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaaaaadaaadaaaeaaae
aaabaaaaaaaaaaaahfgogjhehjfpemgjghgihegngbhafdfeaahghdfpddfpdaaa
dccodacodcdadddfddcodaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabe
aapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaabheaabbaaae
aaaaaaaaaaaaaaaaaaaabaecaaaaaaabaaaaaaadaaaaaaacaaaaacjaaabaaaae
aaaafaafaadbfaagaaaadafaaaabdbfbaaaababmaaaababnaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaadoccpjidlpiaaaaamaejapnldpiaaaaadpaaaaaadoemmmmn
eamjapnldpggggggdpljjjjkeaehkobeeaammmmndpaaaaaahajfgaaebaakbaaa
fgaaaaaaaaaaaaaagaalmcaabcaaaaaaaaaagabbfabhbcaabcaaaaaaaaaaaaaa
cabmmeaaccaaaaaaafpibaaaaaaaagiiaaaaaaaaafpicaaaaaaaapmiaaaaaaaa
afpiaaaaaaaaaohiaaaaaaaamiacaaaaaagmlbaacbaapnaamiaiaaaaaagmgmaa
cbaaafaaheacaaababloblbllaabpnaakiiaaaaabiaaaaebmcaaaaafmiaiaaad
aalbgmaaobacacaamiahaaadaablmalbklaappabmiahaaadaamagmbliladpnpp
miahaaadaamaaaaaoiadaaaamiapaaaeaadeagaakbadpoaamiahaaadaalemgaa
kaaepnaamabaadaaaaaaaagmocaaaaadmacaadaaaaaaaalbocaaaaadmaekadaa
aalblmmgkbacpoadmiahaaadaabbmaaaobaaadaamiahaaaeaamagmaakbadagaa
miacaaaaaagmgmaaoaaeabaabeapaaadaablaalbkbabaeaeaeibaaabafmgmgbl
oaaeabaemiapaaabaagmiiiiklabadadmiapaaabaabldejeklaaacabmiapiado
aalbaadeklaaababmiadiaaaaalalabkilacaiaimiadiaabaamelabkilaaahah
aaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 467 [_Time]
Float 466 [_WaveSpeed]
Float 465 [_Amplitude]
Vector 464 [unity_LightmapST]
Vector 463 [_MainTex_ST]
"sce_vp_rsx // 27 instructions using 3 registers
[Configuration]
8
0000001b03010300
[Defaults]
2
462 4
400ccccd3e4ccccd4047ae143f000000
461 2
3f6666663fb9999a
[Microcode]
432
401f9c6c011cf808010400d740619f9c401f9c6c011d0908010400d740619fa0
00001c6c00c000000106c08aa0409ffc00001c6c005d20000186c08360411ffc
00001c6c009d3000008000c360411ffc201fdc6c004000000086c08360411ffc
00001c6c00c000550106c08aa0203ffc00001c6c004000000086c08360405ffc
00002400004000800086c08360405ffc00001c6c011ce055008800dfe0219ffc
00001c6c011cd055009540dfe0205ffc00009c6c7880082a8100008aa029007c
00009c6c789cd080028000c00031007c00011c6c7880082a81154055402900fc
00001c6c008008000095408360411ffc00001c6c0080082a8115414360409ffc
00001c6c009d102a808000c360409ffc00001c6c009d1000008000c360411ffc
00001c6c009d1000048000c360405ffc00009c6c011ce05500bfc0c000a09ffc
00009c6c011ce080009540d540405ffc00009c6c011ce02a80bfc0c000411ffc
00009c6c0040007f8106c08360403ffc401f9c6c01d0300d8286c0c360403f80
401f9c6c01d0200d8286c0c360405f80401f9c6c01d0100d8286c0c360409f80
401f9c6c01d0000d8286c0c360411f81
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "color" Color
ConstBuffer "$Globals" 128 // 112 used size, 9 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [unity_LightmapST] 4
Vector 96 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityPerDraw" 336 // 64 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityPerDraw" 2
// 21 instructions, 2 temp regs, 0 temp arrays:
// ALU 19 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedihjedpooikmjegjojmgaepmhggdnmdbfabaaaaaalmaeaaaaadaaaaaa
cmaaaaaapeaaaaaageabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheogiaaaaaaadaaaaaa
aiaaaaaafaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaafmaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaafmaaaaaaabaaaaaaaaaaaaaa
adaaaaaaabaaaaaaamadaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklfdeieefcfaadaaaaeaaaabaaneaaaaaafjaaaaaeegiocaaaaaaaaaaa
ahaaaaaafjaaaaaeegiocaaaabaaaaaaabaaaaaafjaaaaaeegiocaaaacaaaaaa
aeaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaaddcbabaaaadaaaaaafpaaaaad
dcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadmccabaaaabaaaaaagiaaaaacacaaaaaadiaaaaajbcaabaaa
aaaaaaaaakiacaaaaaaaaaaaaeaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaah
ccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaa
aaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaa
aaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaah
ccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaa
aaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaa
fgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaa
diaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaai
hcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaaaaaaaaaaaeaaaaaadiaaaaah
ccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaa
aaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaa
dkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaai
pcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaadcaaaaaj
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaa
dcaaaaakccaabaaaaaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdo
ckbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaacaaaaaaaaaaaaaa
agaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
acaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaa
aaaaaaaaegiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaagaaaaaa
ogikcaaaaaaaaaaaagaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaaeaaaaaa
agiecaaaaaaaaaaaafaaaaaakgiocaaaaaaaaaaaafaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLES


#ifdef VERTEX

varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp float t_2;
  highp float tmpvar_3;
  tmpvar_3 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_4;
  tmpvar_4 = (_Time * _WaveSpeed).x;
  t_2 = tmpvar_4;
  if ((tmpvar_4 < 0.0)) {
    t_2 = (tmpvar_4 * -1.0);
  };
  tmpvar_1.x = (_glesVertex.x + (((sin(((t_2 * 1.45) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_1.y = ((((sin(((t_2 * 3.12) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_1.z = (_glesVertex.z - (((sin(((t_2 * 2.2) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  gl_Position = (glstate_matrix_mvp * tmpvar_1);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D unity_Lightmap;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float x_5;
  x_5 = (c_2.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  c_1.xyz = (c_2.xyz * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz));
  c_1.w = c_2.w;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLES


#ifdef VERTEX

varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp float t_2;
  highp float tmpvar_3;
  tmpvar_3 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_4;
  tmpvar_4 = (_Time * _WaveSpeed).x;
  t_2 = tmpvar_4;
  if ((tmpvar_4 < 0.0)) {
    t_2 = (tmpvar_4 * -1.0);
  };
  tmpvar_1.x = (_glesVertex.x + (((sin(((t_2 * 1.45) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_1.y = ((((sin(((t_2 * 3.12) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_1.z = (_glesVertex.z - (((sin(((t_2 * 2.2) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  gl_Position = (glstate_matrix_mvp * tmpvar_1);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D unity_Lightmap;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float x_5;
  x_5 = (c_2.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (unity_Lightmap, xlv_TEXCOORD1);
  c_1.xyz = (c_2.xyz * ((8.0 * tmpvar_6.w) * tmpvar_6.xyz));
  c_1.w = c_2.w;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "flash " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Float 9 [_WaveSpeed]
Float 10 [_Amplitude]
Vector 11 [unity_LightmapST]
Vector 12 [_MainTex_ST]
"agal_vs
c13 -0.020833 -0.125 1.0 0.5
c14 -0.000002 -0.000022 0.002604 0.00026
c15 0.0 2.2 0.159155 0.5
c16 6.283185 -3.141593 3.12 0.9
c17 1.45 0.2 0.0 0.0
[bc]
abaaaaaaaaaaaiacaaaaaaaaaaaaaaaaaaaaaaffaaaaaaaa add r0.w, a0.x, a0.y
aaaaaaaaaaaaabacaiaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r0.x, c8
adaaaaaaaaaaabacajaaaaoeabaaaaaaaaaaaaaaacaaaaaa mul r0.x, c9, r0.x
ckaaaaaaaaaaacacaaaaaaaaacaaaaaaapaaaaaaabaaaaaa slt r0.y, r0.x, c15.x
bfaaaaaaabaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r1.y, r0.y
ahaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa max r0.y, r1.y, r0.y
ckaaaaaaaaaaacacapaaaaaaabaaaaaaaaaaaaffacaaaaaa slt r0.y, c15.x, r0.y
bfaaaaaaabaaaiacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r1.w, r0.y
abaaaaaaaaaaaeacabaaaappacaaaaaaanaaaaoeabaaaaaa add r0.z, r1.w, c13
adaaaaaaaaaaaeacaaaaaaaaacaaaaaaaaaaaakkacaaaaaa mul r0.z, r0.x, r0.z
bfaaaaaaacaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r2.x, r0.x
adaaaaaaabaaacacaaaaaaffacaaaaaaacaaaaaaacaaaaaa mul r1.y, r0.y, r2.x
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaakkacaaaaaa add r1.y, r1.y, r0.z
abaaaaaaabaaabacaaaaaappacaaaaaaaaaaaakkaaaaaaaa add r1.x, r0.w, a0.z
adaaaaaaaaaaabacabaaaaffacaaaaaaapaaaaffabaaaaaa mul r0.x, r1.y, c15.y
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaapaaaakkabaaaaaa mul r0.x, r0.x, c15.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaapaaaappabaaaaaa add r0.x, r0.x, c15.w
aiaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r0.x, r0.x
adaaaaaaabaaaeacaaaaaaaaacaaaaaabaaaaaaaabaaaaaa mul r1.z, r0.x, c16.x
abaaaaaaabaaaeacabaaaakkacaaaaaabaaaaaffabaaaaaa add r1.z, r1.z, c16.y
apaaaaaaaaaaabacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.z
baaaaaaaaaaaacacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.z
adaaaaaaaaaaabacaaaaaaffacaaaaaaadaaaaffaaaaaaaa mul r0.x, r0.y, a3.y
adaaaaaaaaaaacacabaaaaffacaaaaaabbaaaaaaabaaaaaa mul r0.y, r1.y, c17.x
abaaaaaaaaaaacacaaaaaaffacaaaaaaabaaaaaaacaaaaaa add r0.y, r0.y, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaakaaaaoeabaaaaaa mul r0.x, r0.x, c10
bfaaaaaaadaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r3.x, r0.x
adaaaaaaacaaaeacadaaaaaaacaaaaaabbaaaaffabaaaaaa mul r2.z, r3.x, c17.y
abaaaaaaacaaaeacacaaaakkacaaaaaaaaaaaaoeaaaaaaaa add r2.z, r2.z, a0
adaaaaaaaaaaabacabaaaaffacaaaaaabaaaaakkabaaaaaa mul r0.x, r1.y, c16.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaapaaaakkabaaaaaa mul r0.x, r0.x, c15.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaapaaaappabaaaaaa add r0.x, r0.x, c15.w
adaaaaaaaaaaacacaaaaaaffacaaaaaaapaaaakkabaaaaaa mul r0.y, r0.y, c15.z
abaaaaaaaaaaacacaaaaaaffacaaaaaaapaaaappabaaaaaa add r0.y, r0.y, c15.w
aiaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa frc r0.y, r0.y
aaaaaaaaacaaaiacaaaaaaoeaaaaaaaaaaaaaaaaaaaaaaaa mov r2.w, a0
adaaaaaaabaaacacaaaaaaffacaaaaaabaaaaaaaabaaaaaa mul r1.y, r0.y, c16.x
abaaaaaaabaaacacabaaaaffacaaaaaabaaaaaoeabaaaaaa add r1.y, r1.y, c16
aiaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r1.x, r0.x
apaaaaaaaaaaabacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.y
baaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.y
adaaaaaaaaaaabacabaaaaaaacaaaaaabaaaaaoeabaaaaaa mul r0.x, r1.x, c16
abaaaaaaaaaaabacaaaaaaaaacaaaaaabaaaaaffabaaaaaa add r0.x, r0.x, c16.y
apaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sin r1.x, r0.x
baaaaaaaabaaacacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa cos r1.y, r0.x
adaaaaaaaaaaaeacadaaaaffaaaaaaaaaaaaaaffacaaaaaa mul r0.z, a3.y, r0.y
adaaaaaaaaaaacacadaaaaoeaaaaaaaaadaaaaaaaaaaaaaa mul r0.y, a3, a3.x
adaaaaaaaaaaabacadaaaaffaaaaaaaaabaaaaffacaaaaaa mul r0.x, a3.y, r1.y
adaaaaaaaaaaabacaaaaaaaaacaaaaaaakaaaaoeabaaaaaa mul r0.x, r0.x, c10
bfaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r0.y, r0.y
adaaaaaaaaaaacacaaaaaaffacaaaaaabaaaaappabaaaaaa mul r0.y, r0.y, c16.w
adaaaaaaacaaacacaaaaaaaaacaaaaaaanaaaappabaaaaaa mul r2.y, r0.x, c13.w
abaaaaaaacaaacacacaaaaffacaaaaaaaaaaaaffacaaaaaa add r2.y, r2.y, r0.y
adaaaaaaaaaaabacaaaaaakkacaaaaaaakaaaaoeabaaaaaa mul r0.x, r0.z, c10
adaaaaaaacaaabacaaaaaaaaacaaaaaaanaaaappabaaaaaa mul r2.x, r0.x, c13.w
abaaaaaaacaaabacacaaaaaaacaaaaaaaaaaaaoeaaaaaaaa add r2.x, r2.x, a0
bdaaaaaaaaaaaiadacaaaaoeacaaaaaaadaaaaoeabaaaaaa dp4 o0.w, r2, c3
bdaaaaaaaaaaaeadacaaaaoeacaaaaaaacaaaaoeabaaaaaa dp4 o0.z, r2, c2
bdaaaaaaaaaaacadacaaaaoeacaaaaaaabaaaaoeabaaaaaa dp4 o0.y, r2, c1
bdaaaaaaaaaaabadacaaaaoeacaaaaaaaaaaaaoeabaaaaaa dp4 o0.x, r2, c0
adaaaaaaadaaadacadaaaaoeaaaaaaaaamaaaaoeabaaaaaa mul r3.xy, a3, c12
abaaaaaaaaaaadaeadaaaafeacaaaaaaamaaaaooabaaaaaa add v0.xy, r3.xyyy, c12.zwzw
adaaaaaaadaaadacaeaaaaoeaaaaaaaaalaaaaoeabaaaaaa mul r3.xy, a4, c11
abaaaaaaabaaadaeadaaaafeacaaaaaaalaaaaooabaaaaaa add v1.xy, r3.xyyy, c11.zwzw
aaaaaaaaaaaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v0.zw, c0
aaaaaaaaabaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v1.zw, c0
"
}

SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "color" Color
ConstBuffer "$Globals" 128 // 112 used size, 9 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [unity_LightmapST] 4
Vector 96 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityPerDraw" 336 // 64 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityPerDraw" 2
// 21 instructions, 2 temp regs, 0 temp arrays:
// ALU 19 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecedidodlnhfgfpagglbpbblpkgfmfjfhkolabaaaaaapmahaaaaaeaaaaaa
daaaaaaagmadaaaameagaaaaimahaaaaebgpgodjdeadaaaadeadaaaaaaacpopp
oiacaaaaemaaaaaaadaaceaaaaaaeiaaaaaaeiaaaaaaceaaabaaeiaaaaaaaeaa
adaaabaaaaaaaaaaabaaaaaaabaaaeaaaaaaaaaaacaaaaaaaeaaafaaaaaaaaaa
aaaaaaaaaaacpoppfbaaaaafajaaapkajkjjljdpbekoeheamnmmameaggggggdp
fbaaaaafakaaapkaaaaaaaaaaaaaaamaidpjccdoaaaaaadpfbaaaaafalaaapka
nlapmjeanlapejmamnmmemdoaaaaaaaafbaaaaafamaaapkaabannalfgballglh
klkkckdlijiiiidjfbaaaaafanaaapkaklkkkklmaaaaaaloaaaaiadpaaaaaadp
bpaaaaacafaaaaiaaaaaapjabpaaaaacafaaadiaadaaapjabpaaaaacafaaaeia
aeaaapjaaeaaaaaeaaaaadoaadaaoejaadaaoekaadaaookaaeaaaaaeaaaaamoa
aeaabejaacaabekaacaalekaabaaaaacaaaaabiaabaaaakaafaaaaadaaaaabia
aaaaaaiaaeaaaakaamaaaaadaaaaaciaaaaaaaiaakaaaakaafaaaaadaaaaacia
aaaaffiaaaaaaaiaaeaaaaaeaaaaabiaaaaaffiaakaaffkaaaaaaaiaacaaaaad
aaaaaciaaaaaffjaaaaaaajaacaaaaadaaaaaciaaaaaffiaaaaakkjaaeaaaaae
aaaaahiaaaaaaaiaajaaoekaaaaaffiaaeaaaaaeaaaaahiaaaaaoeiaakaakkka
akaappkabdaaaaacaaaaahiaaaaaoeiaaeaaaaaeaaaaahiaaaaaoeiaalaaaaka
alaaffkacfaaaaaeabaaaciaaaaaffiaamaaoekaanaaoekaafaaaaadaaaaacia
abaaffiaadaaffjaafaaaaadaaaaaciaaaaaffiaabaaffkaafaaaaadaaaaaiia
adaaaajaadaaffjaafaaaaadaaaaaiiaaaaappiaajaappkaaeaaaaaeaaaaacia
aaaaffiaakaappkaaaaappibafaaaaadabaaapiaaaaaffiaagaaoekacfaaaaae
acaaaciaaaaaaaiaamaaoekaanaaoekacfaaaaaeadaaaciaaaaakkiaamaaoeka
anaaoekaafaaaaadaaaaabiaadaaffiaadaaffjaafaaaaadaaaaabiaaaaaaaia
abaaffkaaeaaaaaeaaaaabiaaaaaaaiaalaakkkbaaaakkjaafaaaaadaaaaacia
acaaffiaadaaffjaafaaaaadaaaaaciaaaaaffiaabaaffkaaeaaaaaeaaaaacia
aaaaffiaakaappkaaaaaaajaaeaaaaaeabaaapiaafaaoekaaaaaffiaabaaoeia
aeaaaaaeaaaaapiaahaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaapiaaiaaoeka
aaaappjaaaaaoeiaaeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaac
aaaaammaaaaaoeiappppaaaafdeieefcfaadaaaaeaaaabaaneaaaaaafjaaaaae
egiocaaaaaaaaaaaahaaaaaafjaaaaaeegiocaaaabaaaaaaabaaaaaafjaaaaae
egiocaaaacaaaaaaaeaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaaddcbabaaa
adaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaaddccabaaaabaaaaaagfaaaaadmccabaaaabaaaaaagiaaaaacacaaaaaa
diaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaaakiacaaaabaaaaaa
aaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaa
dhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaa
akaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaaakbabaaa
aaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaaaaaaaaaa
dcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdpbekoehea
mnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaaaanaaaaa
egacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaafgbfbaaa
adaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaaaaaaaaaa
aeaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaaadp
diaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaadcaaaaak
ccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdpbkaabaaa
aaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaacaaaaaa
abaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaadp
akbabaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaackaabaiaebaaaaaaaaaaaaaa
abeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
acaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaacaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaaabaaaaaa
dcaaaaakpccabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaadcaaaaalmccabaaaabaaaaaa
agbebaaaaeaaaaaaagiecaaaaaaaaaaaafaaaaaakgiocaaaaaaaaaaaafaaaaaa
doaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaa
apaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaaahaaaaaalaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaa
adaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaa
apaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfcenebemaafeeffied
epepfceeaaedepemepfcaaklepfdeheogiaaaaaaadaaaaaaaiaaaaaafaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaafmaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadamaaaafmaaaaaaabaaaaaaaaaaaaaaadaaaaaaabaaaaaa
amadaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec2 lmap;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 424
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
#line 437
uniform sampler2D unity_Lightmap;
uniform lowp float _Cutoff;
#line 400
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 404
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 408
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 426
v2f_surf vert_surf( in appdata_full v ) {
    #line 428
    v2f_surf o;
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    #line 432
    o.lmap.xy = ((v.texcoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp vec3 worldN = (mat3( _Object2World) * (v.normal * unity_Scale.w));
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec2(xl_retval.lmap);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec2 lmap;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 424
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
#line 437
uniform sampler2D unity_Lightmap;
uniform lowp float _Cutoff;
#line 177
lowp vec3 DecodeLightmap( in lowp vec4 color ) {
    #line 179
    return (2.0 * color.xyz);
}
#line 411
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 413
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 439
lowp vec4 frag_surf( in v2f_surf IN ) {
    #line 441
    Input surfIN;
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    #line 445
    o.Emission = vec3( 0.0);
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    #line 449
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    lowp float atten = 1.0;
    lowp vec4 c = vec4( 0.0);
    #line 453
    lowp vec4 lmtex = texture( unity_Lightmap, IN.lmap.xy);
    lowp vec3 lm = DecodeLightmap( lmtex);
    c.xyz += (o.Albedo * lm);
    c.w = o.Alpha;
    #line 457
    c.w = o.Alpha;
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.lmap = vec2(xlv_TEXCOORD1);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 9 [_Time]
Float 10 [_WaveSpeed]
Float 11 [_Amplitude]
Vector 12 [unity_LightmapST]
Vector 13 [_MainTex_ST]
"!!ARBvp1.0
# 70 ALU
PARAM c[19] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.mvp,
		program.local[5..13],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[10];
MUL R0.x, R0, c[9];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[14];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[15].xyxw, c[15].zwzw;
MAD R1.xyz, R1, R0, c[16].xyxw;
MAD R1.xyz, R1, R0, c[16].zwzw;
MAD R1.xyz, R1, R0, c[17].xyxw;
MAD R0.xyz, R1, R0, c[14].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[17].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[14].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[18].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[11];
MAD R0.w, -R0.x, c[18].x, vertex.position.z;
MAD R0.x, R1.w, c[18].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[14];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[15].xyxw, c[15].zwzw;
MAD R3.xyz, R2, R0, c[16].xyxw;
MAD R3.xyz, R3, R0, c[16].zwzw;
MAD R3.xyz, R3, R0, c[17].xyxw;
ADD R1.xyz, -R1.w, c[14];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[15].xyxw, c[15].zwzw;
MAD R2.xyz, R2, R1, c[16].xyxw;
MAD R2.xyz, R2, R1, c[16].zwzw;
MAD R3.xyz, R3, R0, c[14].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[17].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[14].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[17].xyxw;
MAD R1.xyz, R0, R1, c[14].wzww;
SGE R0.yz, R1.w, c[17].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[14].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R0.x, R0, c[11];
MUL R0.y, -R0, c[18].z;
MAD R0.y, R0.x, c[14], R0;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R2.w, c[11];
MAD R0.x, R0, c[14].y, vertex.position;
DP4 result.position.w, R0.xywz, c[4];
DP4 result.position.z, R0.xywz, c[3];
DP4 result.position.y, R0.xywz, c[2];
DP4 result.position.x, R0.xywz, c[1];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[13], c[13].zwzw;
MAD result.texcoord[1].xy, vertex.texcoord[1], c[12], c[12].zwzw;
END
# 70 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Float 9 [_WaveSpeed]
Float 10 [_Amplitude]
Vector 11 [unity_LightmapST]
Vector 12 [_MainTex_ST]
"vs_2_0
; 70 ALU
def c13, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c14, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c15, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c16, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c17, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_texcoord0 v3
dcl_texcoord1 v4
add r0.w, v0.x, v0.y
mov r0.x, c8
mul r0.x, c9, r0
slt r0.y, r0.x, c15.x
max r0.y, -r0, r0
slt r0.y, c15.x, r0
add r0.z, -r0.y, c13
mul r0.z, r0.x, r0
mad r1.y, r0, -r0.x, r0.z
add r1.x, r0.w, v0.z
mad r0.x, r1.y, c15.y, r1
mad r0.x, r0, c15.z, c15.w
frc r0.x, r0
mad r1.z, r0.x, c16.x, c16.y
sincos r0.xy, r1.z, c14.xyzw, c13.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1, c17.x, r1.x
mul r0.x, r0, c10
mad r2.z, -r0.x, c17.y, v0
mad r0.x, r1.y, c16.z, r1
mad r0.x, r0, c15.z, c15.w
mad r0.y, r0, c15.z, c15.w
frc r0.y, r0
mov r2.w, v0
mad r1.y, r0, c16.x, c16
frc r1.x, r0
sincos r0.xy, r1.y, c14.xyzw, c13.xyzw
mad r0.x, r1, c16, c16.y
sincos r1.xy, r0.x, c14.xyzw, c13.xyzw
mul r0.z, v3.y, r0.y
mul r0.y, v3, v3.x
mul r0.x, v3.y, r1.y
mul r0.x, r0, c10
mul r0.y, -r0, c16.w
mad r2.y, r0.x, c13.w, r0
mul r0.x, r0.z, c10
mad r2.x, r0, c13.w, v0
dp4 oPos.w, r2, c3
dp4 oPos.z, r2, c2
dp4 oPos.y, r2, c1
dp4 oPos.x, r2, c0
mad oT0.xy, v3, c12, c12.zwzw
mad oT1.xy, v4, c11, c11.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Float 6 [_Amplitude]
Vector 8 [_MainTex_ST]
Vector 0 [_Time]
Float 5 [_WaveSpeed]
Matrix 1 [glstate_matrix_mvp] 4
Vector 7 [unity_LightmapST]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 29.33-30.67 (22-23 instructions), vertex: 32, texture: 0,
//   sequencer: 16,  5 GPRs, 31 threads,
// Performance (if enough threads): ~32 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaabliaaaaableaaaaaaaaaaaaaaceaaaaabemaaaaabheaaaaaaaa
aaaaaaaaaaaaabceaaaaaabmaaaaabbipppoadaaaaaaaaagaaaaaabmaaaaaaaa
aaaaabbbaaaaaajeaaacaaagaaabaaaaaaaaaakaaaaaaaaaaaaaaalaaaacaaai
aaabaaaaaaaaaalmaaaaaaaaaaaaaammaaacaaaaaaabaaaaaaaaaalmaaaaaaaa
aaaaaancaaacaaafaaabaaaaaaaaaakaaaaaaaaaaaaaaannaaacaaabaaaeaaaa
aaaaaapaaaaaaaaaaaaaabaaaaacaaahaaabaaaaaaaaaalmaaaaaaaafpebgnha
gmgjhehfgegfaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaafpengbgjgofegfhi
fpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpfegjgngfaafpfhgbhggffd
hagfgfgeaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaaaaadaaadaaaeaaae
aaabaaaaaaaaaaaahfgogjhehjfpemgjghgihegngbhafdfeaahghdfpddfpdaaa
dccodacodcdadddfddcodaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabe
aapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaabheaabbaaae
aaaaaaaaaaaaaaaaaaaabaecaaaaaaabaaaaaaadaaaaaaacaaaaacjaaabaaaae
aaaafaafaadbfaagaaaadafaaaabdbfbaaaababmaaaababnaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaadoccpjidlpiaaaaamaejapnldpiaaaaadpaaaaaadoemmmmn
eamjapnldpggggggdpljjjjkeaehkobeeaammmmndpaaaaaahajfgaaebaakbaaa
fgaaaaaaaaaaaaaagaalmcaabcaaaaaaaaaagabbfabhbcaabcaaaaaaaaaaaaaa
cabmmeaaccaaaaaaafpibaaaaaaaagiiaaaaaaaaafpicaaaaaaaapmiaaaaaaaa
afpiaaaaaaaaaohiaaaaaaaamiacaaaaaagmlbaacbaapnaamiaiaaaaaagmgmaa
cbaaafaaheacaaababloblbllaabpnaakiiaaaaabiaaaaebmcaaaaafmiaiaaad
aalbgmaaobacacaamiahaaadaablmalbklaappabmiahaaadaamagmbliladpnpp
miahaaadaamaaaaaoiadaaaamiapaaaeaadeagaakbadpoaamiahaaadaalemgaa
kaaepnaamabaadaaaaaaaagmocaaaaadmacaadaaaaaaaalbocaaaaadmaekadaa
aalblmmgkbacpoadmiahaaadaabbmaaaobaaadaamiahaaaeaamagmaakbadagaa
miacaaaaaagmgmaaoaaeabaabeapaaadaablaalbkbabaeaeaeibaaabafmgmgbl
oaaeabaemiapaaabaagmiiiiklabadadmiapaaabaabldejeklaaacabmiapiado
aalbaadeklaaababmiadiaaaaalalabkilacaiaimiadiaabaamelabkilaaahah
aaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_OFF" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 467 [_Time]
Float 466 [_WaveSpeed]
Float 465 [_Amplitude]
Vector 464 [unity_LightmapST]
Vector 463 [_MainTex_ST]
"sce_vp_rsx // 27 instructions using 3 registers
[Configuration]
8
0000001b03010300
[Defaults]
2
462 4
400ccccd3e4ccccd4047ae143f000000
461 2
3f6666663fb9999a
[Microcode]
432
401f9c6c011cf808010400d740619f9c401f9c6c011d0908010400d740619fa0
00001c6c00c000000106c08aa0409ffc00001c6c005d20000186c08360411ffc
00001c6c009d3000008000c360411ffc201fdc6c004000000086c08360411ffc
00001c6c00c000550106c08aa0203ffc00001c6c004000000086c08360405ffc
00002400004000800086c08360405ffc00001c6c011ce055008800dfe0219ffc
00001c6c011cd055009540dfe0205ffc00009c6c7880082a8100008aa029007c
00009c6c789cd080028000c00031007c00011c6c7880082a81154055402900fc
00001c6c008008000095408360411ffc00001c6c0080082a8115414360409ffc
00001c6c009d102a808000c360409ffc00001c6c009d1000008000c360411ffc
00001c6c009d1000048000c360405ffc00009c6c011ce05500bfc0c000a09ffc
00009c6c011ce080009540d540405ffc00009c6c011ce02a80bfc0c000411ffc
00009c6c0040007f8106c08360403ffc401f9c6c01d0300d8286c0c360403f80
401f9c6c01d0200d8286c0c360405f80401f9c6c01d0100d8286c0c360409f80
401f9c6c01d0000d8286c0c360411f81
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "color" Color
ConstBuffer "$Globals" 128 // 112 used size, 9 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [unity_LightmapST] 4
Vector 96 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityPerDraw" 336 // 64 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityPerDraw" 2
// 21 instructions, 2 temp regs, 0 temp arrays:
// ALU 19 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedihjedpooikmjegjojmgaepmhggdnmdbfabaaaaaalmaeaaaaadaaaaaa
cmaaaaaapeaaaaaageabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheogiaaaaaaadaaaaaa
aiaaaaaafaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaafmaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaafmaaaaaaabaaaaaaaaaaaaaa
adaaaaaaabaaaaaaamadaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklfdeieefcfaadaaaaeaaaabaaneaaaaaafjaaaaaeegiocaaaaaaaaaaa
ahaaaaaafjaaaaaeegiocaaaabaaaaaaabaaaaaafjaaaaaeegiocaaaacaaaaaa
aeaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaaddcbabaaaadaaaaaafpaaaaad
dcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadmccabaaaabaaaaaagiaaaaacacaaaaaadiaaaaajbcaabaaa
aaaaaaaaakiacaaaaaaaaaaaaeaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaah
ccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaa
aaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaa
aaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaah
ccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaa
aaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaa
fgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaa
diaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaai
hcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaaaaaaaaaaaeaaaaaadiaaaaah
ccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaa
aaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaa
dkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaai
pcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaadcaaaaaj
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaa
dcaaaaakccaabaaaaaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdo
ckbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaacaaaaaaaaaaaaaa
agaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
acaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaa
aaaaaaaaegiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaagaaaaaa
ogikcaaaaaaaaaaaagaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaaeaaaaaa
agiecaaaaaaaaaaaafaaaaaakgiocaaaaaaaaaaaafaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_OFF" }
"!!GLES


#ifdef VERTEX

varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp float t_2;
  highp float tmpvar_3;
  tmpvar_3 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_4;
  tmpvar_4 = (_Time * _WaveSpeed).x;
  t_2 = tmpvar_4;
  if ((tmpvar_4 < 0.0)) {
    t_2 = (tmpvar_4 * -1.0);
  };
  tmpvar_1.x = (_glesVertex.x + (((sin(((t_2 * 1.45) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_1.y = ((((sin(((t_2 * 3.12) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_1.z = (_glesVertex.z - (((sin(((t_2 * 2.2) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  gl_Position = (glstate_matrix_mvp * tmpvar_1);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D unity_Lightmap;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float x_5;
  x_5 = (c_2.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  mediump vec3 lm_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz);
  lm_6 = tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = (c_2.xyz * lm_6);
  c_1.xyz = tmpvar_8;
  c_1.w = c_2.w;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_OFF" }
"!!GLES


#ifdef VERTEX

varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp float t_2;
  highp float tmpvar_3;
  tmpvar_3 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_4;
  tmpvar_4 = (_Time * _WaveSpeed).x;
  t_2 = tmpvar_4;
  if ((tmpvar_4 < 0.0)) {
    t_2 = (tmpvar_4 * -1.0);
  };
  tmpvar_1.x = (_glesVertex.x + (((sin(((t_2 * 1.45) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_1.y = ((((sin(((t_2 * 3.12) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_1.z = (_glesVertex.z - (((sin(((t_2 * 2.2) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  gl_Position = (glstate_matrix_mvp * tmpvar_1);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D unity_Lightmap;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float x_5;
  x_5 = (c_2.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (unity_Lightmap, xlv_TEXCOORD1);
  mediump vec3 lm_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((8.0 * tmpvar_6.w) * tmpvar_6.xyz);
  lm_7 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (c_2.xyz * lm_7);
  c_1.xyz = tmpvar_9;
  c_1.w = c_2.w;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "flash " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Float 9 [_WaveSpeed]
Float 10 [_Amplitude]
Vector 11 [unity_LightmapST]
Vector 12 [_MainTex_ST]
"agal_vs
c13 -0.020833 -0.125 1.0 0.5
c14 -0.000002 -0.000022 0.002604 0.00026
c15 0.0 2.2 0.159155 0.5
c16 6.283185 -3.141593 3.12 0.9
c17 1.45 0.2 0.0 0.0
[bc]
abaaaaaaaaaaaiacaaaaaaaaaaaaaaaaaaaaaaffaaaaaaaa add r0.w, a0.x, a0.y
aaaaaaaaaaaaabacaiaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r0.x, c8
adaaaaaaaaaaabacajaaaaoeabaaaaaaaaaaaaaaacaaaaaa mul r0.x, c9, r0.x
ckaaaaaaaaaaacacaaaaaaaaacaaaaaaapaaaaaaabaaaaaa slt r0.y, r0.x, c15.x
bfaaaaaaabaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r1.y, r0.y
ahaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa max r0.y, r1.y, r0.y
ckaaaaaaaaaaacacapaaaaaaabaaaaaaaaaaaaffacaaaaaa slt r0.y, c15.x, r0.y
bfaaaaaaabaaaiacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r1.w, r0.y
abaaaaaaaaaaaeacabaaaappacaaaaaaanaaaaoeabaaaaaa add r0.z, r1.w, c13
adaaaaaaaaaaaeacaaaaaaaaacaaaaaaaaaaaakkacaaaaaa mul r0.z, r0.x, r0.z
bfaaaaaaacaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r2.x, r0.x
adaaaaaaabaaacacaaaaaaffacaaaaaaacaaaaaaacaaaaaa mul r1.y, r0.y, r2.x
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaakkacaaaaaa add r1.y, r1.y, r0.z
abaaaaaaabaaabacaaaaaappacaaaaaaaaaaaakkaaaaaaaa add r1.x, r0.w, a0.z
adaaaaaaaaaaabacabaaaaffacaaaaaaapaaaaffabaaaaaa mul r0.x, r1.y, c15.y
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaapaaaakkabaaaaaa mul r0.x, r0.x, c15.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaapaaaappabaaaaaa add r0.x, r0.x, c15.w
aiaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r0.x, r0.x
adaaaaaaabaaaeacaaaaaaaaacaaaaaabaaaaaaaabaaaaaa mul r1.z, r0.x, c16.x
abaaaaaaabaaaeacabaaaakkacaaaaaabaaaaaffabaaaaaa add r1.z, r1.z, c16.y
apaaaaaaaaaaabacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.z
baaaaaaaaaaaacacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.z
adaaaaaaaaaaabacaaaaaaffacaaaaaaadaaaaffaaaaaaaa mul r0.x, r0.y, a3.y
adaaaaaaaaaaacacabaaaaffacaaaaaabbaaaaaaabaaaaaa mul r0.y, r1.y, c17.x
abaaaaaaaaaaacacaaaaaaffacaaaaaaabaaaaaaacaaaaaa add r0.y, r0.y, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaakaaaaoeabaaaaaa mul r0.x, r0.x, c10
bfaaaaaaadaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r3.x, r0.x
adaaaaaaacaaaeacadaaaaaaacaaaaaabbaaaaffabaaaaaa mul r2.z, r3.x, c17.y
abaaaaaaacaaaeacacaaaakkacaaaaaaaaaaaaoeaaaaaaaa add r2.z, r2.z, a0
adaaaaaaaaaaabacabaaaaffacaaaaaabaaaaakkabaaaaaa mul r0.x, r1.y, c16.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaapaaaakkabaaaaaa mul r0.x, r0.x, c15.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaapaaaappabaaaaaa add r0.x, r0.x, c15.w
adaaaaaaaaaaacacaaaaaaffacaaaaaaapaaaakkabaaaaaa mul r0.y, r0.y, c15.z
abaaaaaaaaaaacacaaaaaaffacaaaaaaapaaaappabaaaaaa add r0.y, r0.y, c15.w
aiaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa frc r0.y, r0.y
aaaaaaaaacaaaiacaaaaaaoeaaaaaaaaaaaaaaaaaaaaaaaa mov r2.w, a0
adaaaaaaabaaacacaaaaaaffacaaaaaabaaaaaaaabaaaaaa mul r1.y, r0.y, c16.x
abaaaaaaabaaacacabaaaaffacaaaaaabaaaaaoeabaaaaaa add r1.y, r1.y, c16
aiaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r1.x, r0.x
apaaaaaaaaaaabacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.y
baaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.y
adaaaaaaaaaaabacabaaaaaaacaaaaaabaaaaaoeabaaaaaa mul r0.x, r1.x, c16
abaaaaaaaaaaabacaaaaaaaaacaaaaaabaaaaaffabaaaaaa add r0.x, r0.x, c16.y
apaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sin r1.x, r0.x
baaaaaaaabaaacacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa cos r1.y, r0.x
adaaaaaaaaaaaeacadaaaaffaaaaaaaaaaaaaaffacaaaaaa mul r0.z, a3.y, r0.y
adaaaaaaaaaaacacadaaaaoeaaaaaaaaadaaaaaaaaaaaaaa mul r0.y, a3, a3.x
adaaaaaaaaaaabacadaaaaffaaaaaaaaabaaaaffacaaaaaa mul r0.x, a3.y, r1.y
adaaaaaaaaaaabacaaaaaaaaacaaaaaaakaaaaoeabaaaaaa mul r0.x, r0.x, c10
bfaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r0.y, r0.y
adaaaaaaaaaaacacaaaaaaffacaaaaaabaaaaappabaaaaaa mul r0.y, r0.y, c16.w
adaaaaaaacaaacacaaaaaaaaacaaaaaaanaaaappabaaaaaa mul r2.y, r0.x, c13.w
abaaaaaaacaaacacacaaaaffacaaaaaaaaaaaaffacaaaaaa add r2.y, r2.y, r0.y
adaaaaaaaaaaabacaaaaaakkacaaaaaaakaaaaoeabaaaaaa mul r0.x, r0.z, c10
adaaaaaaacaaabacaaaaaaaaacaaaaaaanaaaappabaaaaaa mul r2.x, r0.x, c13.w
abaaaaaaacaaabacacaaaaaaacaaaaaaaaaaaaoeaaaaaaaa add r2.x, r2.x, a0
bdaaaaaaaaaaaiadacaaaaoeacaaaaaaadaaaaoeabaaaaaa dp4 o0.w, r2, c3
bdaaaaaaaaaaaeadacaaaaoeacaaaaaaacaaaaoeabaaaaaa dp4 o0.z, r2, c2
bdaaaaaaaaaaacadacaaaaoeacaaaaaaabaaaaoeabaaaaaa dp4 o0.y, r2, c1
bdaaaaaaaaaaabadacaaaaoeacaaaaaaaaaaaaoeabaaaaaa dp4 o0.x, r2, c0
adaaaaaaadaaadacadaaaaoeaaaaaaaaamaaaaoeabaaaaaa mul r3.xy, a3, c12
abaaaaaaaaaaadaeadaaaafeacaaaaaaamaaaaooabaaaaaa add v0.xy, r3.xyyy, c12.zwzw
adaaaaaaadaaadacaeaaaaoeaaaaaaaaalaaaaoeabaaaaaa mul r3.xy, a4, c11
abaaaaaaabaaadaeadaaaafeacaaaaaaalaaaaooabaaaaaa add v1.xy, r3.xyyy, c11.zwzw
aaaaaaaaaaaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v0.zw, c0
aaaaaaaaabaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v1.zw, c0
"
}

SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "color" Color
ConstBuffer "$Globals" 128 // 112 used size, 9 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [unity_LightmapST] 4
Vector 96 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityPerDraw" 336 // 64 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityPerDraw" 2
// 21 instructions, 2 temp regs, 0 temp arrays:
// ALU 19 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecedidodlnhfgfpagglbpbblpkgfmfjfhkolabaaaaaapmahaaaaaeaaaaaa
daaaaaaagmadaaaameagaaaaimahaaaaebgpgodjdeadaaaadeadaaaaaaacpopp
oiacaaaaemaaaaaaadaaceaaaaaaeiaaaaaaeiaaaaaaceaaabaaeiaaaaaaaeaa
adaaabaaaaaaaaaaabaaaaaaabaaaeaaaaaaaaaaacaaaaaaaeaaafaaaaaaaaaa
aaaaaaaaaaacpoppfbaaaaafajaaapkajkjjljdpbekoeheamnmmameaggggggdp
fbaaaaafakaaapkaaaaaaaaaaaaaaamaidpjccdoaaaaaadpfbaaaaafalaaapka
nlapmjeanlapejmamnmmemdoaaaaaaaafbaaaaafamaaapkaabannalfgballglh
klkkckdlijiiiidjfbaaaaafanaaapkaklkkkklmaaaaaaloaaaaiadpaaaaaadp
bpaaaaacafaaaaiaaaaaapjabpaaaaacafaaadiaadaaapjabpaaaaacafaaaeia
aeaaapjaaeaaaaaeaaaaadoaadaaoejaadaaoekaadaaookaaeaaaaaeaaaaamoa
aeaabejaacaabekaacaalekaabaaaaacaaaaabiaabaaaakaafaaaaadaaaaabia
aaaaaaiaaeaaaakaamaaaaadaaaaaciaaaaaaaiaakaaaakaafaaaaadaaaaacia
aaaaffiaaaaaaaiaaeaaaaaeaaaaabiaaaaaffiaakaaffkaaaaaaaiaacaaaaad
aaaaaciaaaaaffjaaaaaaajaacaaaaadaaaaaciaaaaaffiaaaaakkjaaeaaaaae
aaaaahiaaaaaaaiaajaaoekaaaaaffiaaeaaaaaeaaaaahiaaaaaoeiaakaakkka
akaappkabdaaaaacaaaaahiaaaaaoeiaaeaaaaaeaaaaahiaaaaaoeiaalaaaaka
alaaffkacfaaaaaeabaaaciaaaaaffiaamaaoekaanaaoekaafaaaaadaaaaacia
abaaffiaadaaffjaafaaaaadaaaaaciaaaaaffiaabaaffkaafaaaaadaaaaaiia
adaaaajaadaaffjaafaaaaadaaaaaiiaaaaappiaajaappkaaeaaaaaeaaaaacia
aaaaffiaakaappkaaaaappibafaaaaadabaaapiaaaaaffiaagaaoekacfaaaaae
acaaaciaaaaaaaiaamaaoekaanaaoekacfaaaaaeadaaaciaaaaakkiaamaaoeka
anaaoekaafaaaaadaaaaabiaadaaffiaadaaffjaafaaaaadaaaaabiaaaaaaaia
abaaffkaaeaaaaaeaaaaabiaaaaaaaiaalaakkkbaaaakkjaafaaaaadaaaaacia
acaaffiaadaaffjaafaaaaadaaaaaciaaaaaffiaabaaffkaaeaaaaaeaaaaacia
aaaaffiaakaappkaaaaaaajaaeaaaaaeabaaapiaafaaoekaaaaaffiaabaaoeia
aeaaaaaeaaaaapiaahaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaapiaaiaaoeka
aaaappjaaaaaoeiaaeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaac
aaaaammaaaaaoeiappppaaaafdeieefcfaadaaaaeaaaabaaneaaaaaafjaaaaae
egiocaaaaaaaaaaaahaaaaaafjaaaaaeegiocaaaabaaaaaaabaaaaaafjaaaaae
egiocaaaacaaaaaaaeaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaaddcbabaaa
adaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaaddccabaaaabaaaaaagfaaaaadmccabaaaabaaaaaagiaaaaacacaaaaaa
diaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaaakiacaaaabaaaaaa
aaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaa
dhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaa
akaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaaakbabaaa
aaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaaaaaaaaaa
dcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdpbekoehea
mnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaaaanaaaaa
egacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaafgbfbaaa
adaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaaaaaaaaaa
aeaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaaadp
diaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaadcaaaaak
ccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdpbkaabaaa
aaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaacaaaaaa
abaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaadp
akbabaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaackaabaiaebaaaaaaaaaaaaaa
abeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
acaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaacaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaaabaaaaaa
dcaaaaakpccabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaadcaaaaalmccabaaaabaaaaaa
agbebaaaaeaaaaaaagiecaaaaaaaaaaaafaaaaaakgiocaaaaaaaaaaaafaaaaaa
doaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaa
apaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaaahaaaaaalaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaa
adaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaa
apaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfcenebemaafeeffied
epepfceeaaedepemepfcaaklepfdeheogiaaaaaaadaaaaaaaiaaaaaafaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaafmaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadamaaaafmaaaaaaabaaaaaaaaaaaaaaadaaaaaaabaaaaaa
amadaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec2 lmap;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 424
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
#line 437
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform lowp float _Cutoff;
#line 400
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 404
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 408
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 426
v2f_surf vert_surf( in appdata_full v ) {
    #line 428
    v2f_surf o;
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    #line 432
    o.lmap.xy = ((v.texcoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp vec3 worldN = (mat3( _Object2World) * (v.normal * unity_Scale.w));
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec2(xl_retval.lmap);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
mat2 xll_transpose_mf2x2(mat2 m) {
  return mat2( m[0][0], m[1][0], m[0][1], m[1][1]);
}
mat3 xll_transpose_mf3x3(mat3 m) {
  return mat3( m[0][0], m[1][0], m[2][0],
               m[0][1], m[1][1], m[2][1],
               m[0][2], m[1][2], m[2][2]);
}
mat4 xll_transpose_mf4x4(mat4 m) {
  return mat4( m[0][0], m[1][0], m[2][0], m[3][0],
               m[0][1], m[1][1], m[2][1], m[3][1],
               m[0][2], m[1][2], m[2][2], m[3][2],
               m[0][3], m[1][3], m[2][3], m[3][3]);
}
float xll_saturate_f( float x) {
  return clamp( x, 0.0, 1.0);
}
vec2 xll_saturate_vf2( vec2 x) {
  return clamp( x, 0.0, 1.0);
}
vec3 xll_saturate_vf3( vec3 x) {
  return clamp( x, 0.0, 1.0);
}
vec4 xll_saturate_vf4( vec4 x) {
  return clamp( x, 0.0, 1.0);
}
mat2 xll_saturate_mf2x2(mat2 m) {
  return mat2( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0));
}
mat3 xll_saturate_mf3x3(mat3 m) {
  return mat3( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0));
}
mat4 xll_saturate_mf4x4(mat4 m) {
  return mat4( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0), clamp(m[3], 0.0, 1.0));
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec2 lmap;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 424
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
#line 437
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform lowp float _Cutoff;
#line 177
lowp vec3 DecodeLightmap( in lowp vec4 color ) {
    #line 179
    return (2.0 * color.xyz);
}
#line 325
mediump vec3 DirLightmapDiffuse( in mediump mat3 dirBasis, in lowp vec4 color, in lowp vec4 scale, in mediump vec3 normal, in bool surfFuncWritesNormal, out mediump vec3 scalePerBasisVector ) {
    mediump vec3 lm = DecodeLightmap( color);
    scalePerBasisVector = DecodeLightmap( scale);
    #line 329
    if (surfFuncWritesNormal){
        mediump vec3 normalInRnmBasis = xll_saturate_vf3((dirBasis * normal));
        lm *= dot( normalInRnmBasis, scalePerBasisVector);
    }
    #line 334
    return lm;
}
#line 353
mediump vec4 LightingLambert_DirLightmap( in SurfaceOutput s, in lowp vec4 color, in lowp vec4 scale, in bool surfFuncWritesNormal ) {
    #line 355
    highp mat3 unity_DirBasis = xll_transpose_mf3x3(mat3( vec3( 0.816497, 0.0, 0.57735), vec3( -0.408248, 0.707107, 0.57735), vec3( -0.408248, -0.707107, 0.57735)));
    mediump vec3 scalePerBasisVector;
    mediump vec3 lm = DirLightmapDiffuse( unity_DirBasis, color, scale, s.Normal, surfFuncWritesNormal, scalePerBasisVector);
    return vec4( lm, 0.0);
}
#line 411
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 413
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 440
lowp vec4 frag_surf( in v2f_surf IN ) {
    #line 442
    Input surfIN;
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    #line 446
    o.Emission = vec3( 0.0);
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    #line 450
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    lowp float atten = 1.0;
    lowp vec4 c = vec4( 0.0);
    #line 454
    lowp vec4 lmtex = texture( unity_Lightmap, IN.lmap.xy);
    lowp vec4 lmIndTex = texture( unity_LightmapInd, IN.lmap.xy);
    mediump vec3 lm = LightingLambert_DirLightmap( o, lmtex, lmIndTex, false).xyz;
    c.xyz += (o.Albedo * lm);
    #line 458
    c.w = o.Alpha;
    c.w = o.Alpha;
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.lmap = vec2(xlv_TEXCOORD1);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 9 [_Time]
Vector 10 [_ProjectionParams]
Vector 11 [unity_SHAr]
Vector 12 [unity_SHAg]
Vector 13 [unity_SHAb]
Vector 14 [unity_SHBr]
Vector 15 [unity_SHBg]
Vector 16 [unity_SHBb]
Vector 17 [unity_SHC]
Matrix 5 [_Object2World]
Vector 18 [unity_Scale]
Float 19 [_WaveSpeed]
Float 20 [_Amplitude]
Vector 21 [_MainTex_ST]
"!!ARBvp1.0
# 96 ALU
PARAM c[27] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.mvp,
		program.local[5..21],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[19];
MUL R0.x, R0, c[9];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[22];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[23].xyxw, c[23].zwzw;
MAD R1.xyz, R1, R0, c[24].xyxw;
MAD R1.xyz, R1, R0, c[24].zwzw;
MAD R1.xyz, R1, R0, c[25].xyxw;
MAD R0.xyz, R1, R0, c[22].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[25].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[22].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[26].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[20];
MAD R0.w, -R0.x, c[26].x, vertex.position.z;
MAD R0.x, R1.w, c[26].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[22];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[23].xyxw, c[23].zwzw;
MAD R3.xyz, R2, R0, c[24].xyxw;
MAD R3.xyz, R3, R0, c[24].zwzw;
MAD R3.xyz, R3, R0, c[25].xyxw;
ADD R1.xyz, -R1.w, c[22];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[23].xyxw, c[23].zwzw;
MAD R2.xyz, R2, R1, c[24].xyxw;
MAD R3.xyz, R3, R0, c[22].wzww;
MAD R2.xyz, R2, R1, c[24].zwzw;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[25].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[22].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[25].xyxw;
MAD R1.xyz, R0, R1, c[22].wzww;
SGE R0.yz, R1.w, c[25].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[22].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R0, c[20];
MUL R0.y, -R0, c[26].z;
MAD R0.y, R0.x, c[22], R0;
MUL R0.x, R2.w, c[20];
MAD R0.x, R0, c[22].y, vertex.position;
DP4 R1.w, R0.xywz, c[4];
DP4 R1.z, R0.xywz, c[3];
DP4 R1.x, R0.xywz, c[1];
DP4 R1.y, R0.xywz, c[2];
MUL R2.xyz, R1.xyww, c[22].y;
MUL R2.y, R2, c[10].x;
ADD result.texcoord[3].xy, R2, R2.z;
MUL R2.xyz, vertex.normal, c[18].w;
DP3 R3.w, R2, c[6];
DP3 R2.w, R2, c[7];
DP3 R0.x, R2, c[5];
MOV R0.y, R3.w;
MOV R0.z, R2.w;
MOV R0.w, c[22].z;
DP4 R2.z, R0, c[13];
DP4 R2.y, R0, c[12];
DP4 R2.x, R0, c[11];
MOV result.position, R1;
MOV result.texcoord[3].zw, R1;
MUL R1, R0.xyzz, R0.yzzx;
MUL R0.y, R3.w, R3.w;
DP4 R3.z, R1, c[16];
DP4 R3.y, R1, c[15];
DP4 R3.x, R1, c[14];
MAD R0.y, R0.x, R0.x, -R0;
MUL R1.xyz, R0.y, c[17];
ADD R2.xyz, R2, R3;
ADD result.texcoord[2].xyz, R2, R1;
MOV result.texcoord[1].z, R2.w;
MOV result.texcoord[1].y, R3.w;
MOV result.texcoord[1].x, R0;
MAD result.texcoord[0].xy, vertex.texcoord[0], c[21], c[21].zwzw;
END
# 96 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Vector 9 [_ProjectionParams]
Vector 10 [_ScreenParams]
Vector 11 [unity_SHAr]
Vector 12 [unity_SHAg]
Vector 13 [unity_SHAb]
Vector 14 [unity_SHBr]
Vector 15 [unity_SHBg]
Vector 16 [unity_SHBb]
Vector 17 [unity_SHC]
Matrix 4 [_Object2World]
Vector 18 [unity_Scale]
Float 19 [_WaveSpeed]
Float 20 [_Amplitude]
Vector 21 [_MainTex_ST]
"vs_2_0
; 96 ALU
def c22, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c23, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c24, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c25, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c26, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_normal0 v2
dcl_texcoord0 v3
add r0.w, v0.x, v0.y
mov r0.x, c8
mul r0.x, c19, r0
slt r0.y, r0.x, c24.x
max r0.y, -r0, r0
slt r0.y, c24.x, r0
add r0.z, -r0.y, c22
mul r0.z, r0.x, r0
mad r1.x, r0.y, -r0, r0.z
add r1.y, r0.w, v0.z
mad r0.x, r1, c24.y, r1.y
mad r0.x, r0, c24.z, c24.w
frc r0.x, r0
mad r1.z, r0.x, c25.x, c25.y
sincos r0.xy, r1.z, c23.xyzw, c22.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1.x, c26.x, r1
mul r0.x, r0, c20
mad r1.z, -r0.x, c26.y, v0
mad r0.x, r1, c25.z, r1.y
mad r0.x, r0, c24.z, c24.w
mad r0.y, r0, c24.z, c24.w
frc r0.y, r0
mov r1.w, v0
mad r1.y, r0, c25.x, c25
frc r1.x, r0
sincos r0.xy, r1.y, c23.xyzw, c22.xyzw
mad r0.x, r1, c25, c25.y
sincos r2.xy, r0.x, c23.xyzw, c22.xyzw
mul r0.x, v3.y, r2.y
mul r2.xyz, v2, c18.w
dp3 r4.w, r2, c5
mul r0.z, v3.y, r0.y
dp3 r5.x, r2, c6
mul r0.y, v3, v3.x
mov r0.w, c22.z
mul r0.y, -r0, c25.w
mul r0.x, r0, c20
mad r1.y, r0.x, c22.w, r0
mul r0.x, r0.z, c20
mad r1.x, r0, c22.w, v0
dp4 r3.w, r1, c3
dp4 r3.x, r1, c0
dp4 r3.y, r1, c1
mul r0.xyz, r3.xyww, c22.w
mul r0.y, r0, c9.x
mad oT3.xy, r0.z, c10.zwzw, r0
dp3 r0.x, r2, c4
mov r0.y, r4.w
mov r0.z, r5.x
mul r2, r0.xyzz, r0.yzzx
dp4 r4.z, r0, c13
dp4 r4.y, r0, c12
dp4 r4.x, r0, c11
dp4 r0.w, r2, c16
dp4 r0.z, r2, c15
dp4 r0.y, r2, c14
mul r3.z, r4.w, r4.w
mad r2.w, r0.x, r0.x, -r3.z
dp4 r3.z, r1, c2
add r2.xyz, r4, r0.yzww
mul r4.xyz, r2.w, c17
add oT2.xyz, r2, r4
mov oPos, r3
mov oT3.zw, r3
mov oT1.z, r5.x
mov oT1.y, r4.w
mov oT1.x, r0
mad oT0.xy, v3, c21, c21.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Float 19 [_Amplitude]
Vector 20 [_MainTex_ST]
Matrix 14 [_Object2World] 3
Vector 1 [_ProjectionParams]
Vector 2 [_ScreenParams]
Vector 0 [_Time]
Float 18 [_WaveSpeed]
Matrix 10 [glstate_matrix_mvp] 4
Vector 5 [unity_SHAb]
Vector 4 [unity_SHAg]
Vector 3 [unity_SHAr]
Vector 8 [unity_SHBb]
Vector 7 [unity_SHBg]
Vector 6 [unity_SHBr]
Vector 9 [unity_SHC]
Vector 17 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 53.33-54.67 (40-41 instructions), vertex: 32, texture: 0,
//   sequencer: 22,  6 GPRs, 30 threads,
// Performance (if enough threads): ~53-54 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaadamaaaaackeaaaaaaaaaaaaaaceaaaaacimaaaaacleaaaaaaaa
aaaaaaaaaaaaacgeaaaaaabmaaaaacfhpppoadaaaaaaaabaaaaaaabmaaaaaaaa
aaaaacfaaaaaabfmaaacaabdaaabaaaaaaaaabgiaaaaaaaaaaaaabhiaaacaabe
aaabaaaaaaaaabieaaaaaaaaaaaaabjeaaacaaaoaaadaaaaaaaaabkeaaaaaaaa
aaaaableaaacaaabaaabaaaaaaaaabieaaaaaaaaaaaaabmgaaacaaacaaabaaaa
aaaaabieaaaaaaaaaaaaabneaaacaaaaaaabaaaaaaaaabieaaaaaaaaaaaaabnk
aaacaabcaaabaaaaaaaaabgiaaaaaaaaaaaaabofaaacaaakaaaeaaaaaaaaabke
aaaaaaaaaaaaabpiaaacaaafaaabaaaaaaaaabieaaaaaaaaaaaaacadaaacaaae
aaabaaaaaaaaabieaaaaaaaaaaaaacaoaaacaaadaaabaaaaaaaaabieaaaaaaaa
aaaaacbjaaacaaaiaaabaaaaaaaaabieaaaaaaaaaaaaacceaaacaaahaaabaaaa
aaaaabieaaaaaaaaaaaaaccpaaacaaagaaabaaaaaaaaabieaaaaaaaaaaaaacdk
aaacaaajaaabaaaaaaaaabieaaaaaaaaaaaaaceeaaacaabbaaabaaaaaaaaabie
aaaaaaaafpebgnhagmgjhehfgegfaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaa
fpengbgjgofegfhifpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpepgcgk
gfgdhedcfhgphcgmgeaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpfahcgp
gkgfgdhegjgpgofagbhcgbgnhdaafpfdgdhcgfgfgofagbhcgbgnhdaafpfegjgn
gfaafpfhgbhggffdhagfgfgeaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaa
hfgogjhehjfpfdeiebgcaahfgogjhehjfpfdeiebghaahfgogjhehjfpfdeiebhc
aahfgogjhehjfpfdeiecgcaahfgogjhehjfpfdeiecghaahfgogjhehjfpfdeiec
hcaahfgogjhehjfpfdeiedaahfgogjhehjfpfdgdgbgmgfaahghdfpddfpdaaadc
codacodcdadddfddcodaaaklaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabe
aapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaacgeaadbaaaf
aaaaaaaaaaaaaaaaaaaadaieaaaaaaabaaaaaaadaaaaaaafaaaaacjaaabaaaag
aaaadaahaacafaaiaaaadafaaaabhbfbaaachcfcaaadpdfdaaaabacpaaaabaco
aaaabacnaaaaaacmaaaabadbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeamjapnl
lpiaaaaamaejapnldpiaaaaadpaaaaaadoemmmmndoccpjiddpggggggdpljjjjk
eaehkobeeaammmmndpaaaaaahajfgaagbaambaaafgaaaaaaaaaaaaaagaanmcaa
bcaaaaaaaaaagabdgabjbcaabcaaaaaaaaaaaaaagabpmeaabcaaaaaaaaaagacf
gaclbcaabcaaaaaaaaaabadbaaaaccaaaaaaaaaaafpicaaaaaaaagiiaaaaaaaa
afpidaaaaaaaaoiiaaaaaaaaafpibaaaaaaaapmiaaaaaaaamiacaaaaaagmlbaa
cbaapnaamiabaaaaaagmgmaacbaabcaaheaeaaaaabloblgmlaacpnaakibaaaaa
biaaaaebmcaaaabcmiaiaaaeaalbgmaaobababaamiahaaaeaagmmamgklaappaa
miapaaaeaaaaagaakbaepoaamiahaaaaaamablaakaaeppaamiahaaaaaamaaaaa
oiaaaaaamiahaaaaaamagmmgilaapnpnmabaaaaaaaaaaagmocaaaaaamacaaaaa
aaaaaalbocaaaaaamaemaaabaalbkmmgkbabpoaamiahaaaaaabgmaaaobabaaaa
miahaaaeaamagmaakbaabdaamiaeaaabaagmgmaaoaaeacaabeapaaaaaablaalb
kbacanaeaeibabacafmgmgbloaaeacaemiapaaaaaagmnanaklacamaamiapaaaa
aabldepiklabalaamiapaaaeaamgnajeklabakaamiapiadoaananaaaocaeaeaa
mialaaaaaagfblaakbadbbaamiahaaacaalbleaakbaabaaamiahaaaaaagmlema
klaaapacmiahaaacaabllemaklaaaoaaceipacafaalehcgmobacaciamiabaaad
aadoanaagpadacaamiacaaadaadoanaagpaeacaamiaeaaadaadoanaagpafacaa
miabaaaaaakhkhaakpafagaamiacaaaaaakhkhaakpafahaaaieeabaaaakhkhgm
kpafaiacaiihabadaalolomgoaadaaacgeihaaaaaamablmlkbaeppabmiamiaad
aanlnlaaocaeaeaamiahiaacaablmagfklaaajadmiahiaabaaleleaaocacacaa
miadiaaaaalalabkilabbebekiiaaaaaaaaaaaebmcaaaaabmiadiaadaamgbkbi
klaaacaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_Time]
Vector 466 [_ProjectionParams]
Vector 465 [unity_SHAr]
Vector 464 [unity_SHAg]
Vector 463 [unity_SHAb]
Vector 462 [unity_SHBr]
Vector 461 [unity_SHBg]
Vector 460 [unity_SHBb]
Vector 459 [unity_SHC]
Matrix 260 [_Object2World]
Vector 458 [unity_Scale]
Float 457 [_WaveSpeed]
Float 456 [_Amplitude]
Vector 455 [_MainTex_ST]
"sce_vp_rsx // 51 instructions using 5 registers
[Configuration]
8
0000003301050500
[Defaults]
2
454 4
400ccccd3e4ccccd4047ae143f000000
453 2
3f6666663fb9999a
[Microcode]
816
00001c6c009ca20c013fc0c36041dffc401f9c6c011c7808010400d740619f9c
00009c6c0040007f8106c08360403ffc00001c6c005c90000186c08360403ffc
00009c6c00c000000106c08aa0411ffc00009c6c0080082a8100008360409ffc
00019c6c0150400c008600c360411ffc00021c6c0150500c008600c360405ffc
00001c6c0150600c008600c360411ffc00021c6c009c50aa828000c360409ffc
00021c6c00c000550106c08000a11ffc00021c6c009d307f808000c360403ffc
201fdc6c0040007f8886c08360411ffc00019c6c0040007f8886c08360403ffc
40019c6c004000000086c08360405fa000011c6c0080005508aa844360411ffc
00019c6c004000550886c08360409ffc00009c6c019cf00c0686c0c360405ffc
00009c6c019d000c0686c0c360409ffc00009c6c019d100c0686c0c360411ffc
00001c6c0080000d069a03436041fffc00011c6c010000000680036001203ffc
00011c6c01dcc00d8086c0c360405ffc00011c6c01dcd00d8086c0c360409ffc
00011c6c01dce00d8086c0c360411ffc0001a400004000ff8886c08360403ffc
00011c6c00c0000c0286c0830121dffc00001c6c011c607f868800c002219ffc
00001c6c011c507f869540c002205ffc401f9c6c784000550886c08aa0288020
401f9c6c784000000686c0800031002000019c6c7880082a81154055403100fc
00001c6c008008000095408360409ffc00001c6c0080082a8100014360411ffc
00001c6c009c8000008000c360411ffc00001c6c009c802a808000c360409ffc
00001c6c009c8000068000c360405ffc00009c6c011c605500bfc0caa2209ffc
00009c6c011c60aa809540d540405ffc00009c6c011c600000bfc0c000411ffc
00019c6c009cb07f848600c36041dffc00001c6c01d0300d8286c0c360403ffc
00001c6c01d0200d8286c0c360405ffc00001c6c01d0100d8286c0c360409ffc
00001c6c01d0000d8286c0c360411ffc401f9c6c00c0000c0686c0830121dfa4
401f9c6c0040000d8086c0836041ff80401f9c6c004000558086c08360407fa8
00001c6c009c600e00bfc0c36041dffc00001c6c009d202a808000c360409ffc
401f9c6c00c000080086c09540219fa9
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 176 // 160 used size, 9 vars
Float 128 [_WaveSpeed]
Float 132 [_Amplitude]
Vector 144 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 0 [_Time] 4
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityLighting" 720 // 720 used size, 17 vars
Vector 608 [unity_SHAr] 4
Vector 624 [unity_SHAg] 4
Vector 640 [unity_SHAb] 4
Vector 656 [unity_SHBr] 4
Vector 672 [unity_SHBg] 4
Vector 688 [unity_SHBb] 4
Vector 704 [unity_SHC] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 42 instructions, 5 temp regs, 0 temp arrays:
// ALU 36 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedjbcnpeflkeabeejmmaadfgcacbecphbiabaaaaaajaahaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcpeafaaaaeaaaabaa
hnabaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaafjaaaaaeegiocaaaabaaaaaa
agaaaaaafjaaaaaeegiocaaaacaaaaaacnaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaad
dcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaad
pccabaaaaeaaaaaagiaaaaacafaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaa
aaaaaaaaaiaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaa
aaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaa
aaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaa
aaaaaaaaaceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaa
enaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgifcaaaaaaaaaaaaiaaaaaadiaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaa
adaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaa
aaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakccaabaaa
aaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaa
dcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaa
fgafbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaa
egiacaaaaaaaaaaaajaaaaaaogikcaaaaaaaaaaaajaaaaaadiaaaaaihcaabaaa
abaaaaaaegbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaa
acaaaaaafgafbaaaabaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaa
abaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaaabaaaaaaegaibaaaacaaaaaa
dcaaaaakhcaabaaaabaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaabaaaaaa
egadbaaaabaaaaaadgaaaaafhccabaaaacaaaaaaegacbaaaabaaaaaadgaaaaaf
icaabaaaabaaaaaaabeaaaaaaaaaiadpbbaaaaaibcaabaaaacaaaaaaegiocaaa
acaaaaaacgaaaaaaegaobaaaabaaaaaabbaaaaaiccaabaaaacaaaaaaegiocaaa
acaaaaaachaaaaaaegaobaaaabaaaaaabbaaaaaiecaabaaaacaaaaaaegiocaaa
acaaaaaaciaaaaaaegaobaaaabaaaaaadiaaaaahpcaabaaaadaaaaaajgacbaaa
abaaaaaaegakbaaaabaaaaaabbaaaaaibcaabaaaaeaaaaaaegiocaaaacaaaaaa
cjaaaaaaegaobaaaadaaaaaabbaaaaaiccaabaaaaeaaaaaaegiocaaaacaaaaaa
ckaaaaaaegaobaaaadaaaaaabbaaaaaiecaabaaaaeaaaaaaegiocaaaacaaaaaa
claaaaaaegaobaaaadaaaaaaaaaaaaahhcaabaaaacaaaaaaegacbaaaacaaaaaa
egacbaaaaeaaaaaadiaaaaahccaabaaaabaaaaaabkaabaaaabaaaaaabkaabaaa
abaaaaaadcaaaaakbcaabaaaabaaaaaaakaabaaaabaaaaaaakaabaaaabaaaaaa
bkaabaiaebaaaaaaabaaaaaadcaaaaakhccabaaaadaaaaaaegiccaaaacaaaaaa
cmaaaaaaagaabaaaabaaaaaaegacbaaaacaaaaaadiaaaaaiccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaa
agahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaaf
mccabaaaaeaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaaeaaaaaakgakbaaa
abaaaaaamgaabaaaabaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLES


#ifdef VERTEX

varying highp vec4 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  highp vec3 shlight_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = _glesVertex;
  highp float t_6;
  highp float tmpvar_7;
  tmpvar_7 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_8;
  tmpvar_8 = (_Time * _WaveSpeed).x;
  t_6 = tmpvar_8;
  if ((tmpvar_8 < 0.0)) {
    t_6 = (tmpvar_8 * -1.0);
  };
  tmpvar_5.x = (_glesVertex.x + (((sin(((t_6 * 1.45) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_5.y = ((((sin(((t_6 * 3.12) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_5.z = (_glesVertex.z - (((sin(((t_6 * 2.2) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_9 * (tmpvar_1 * unity_Scale.w));
  tmpvar_3 = tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_10;
  mediump vec3 tmpvar_12;
  mediump vec4 normal_13;
  normal_13 = tmpvar_11;
  highp float vC_14;
  mediump vec3 x3_15;
  mediump vec3 x2_16;
  mediump vec3 x1_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAr, normal_13);
  x1_17.x = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAg, normal_13);
  x1_17.y = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAb, normal_13);
  x1_17.z = tmpvar_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normal_13.xyzz * normal_13.yzzx);
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBr, tmpvar_21);
  x2_16.x = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBg, tmpvar_21);
  x2_16.y = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBb, tmpvar_21);
  x2_16.z = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y));
  vC_14 = tmpvar_25;
  highp vec3 tmpvar_26;
  tmpvar_26 = (unity_SHC.xyz * vC_14);
  x3_15 = tmpvar_26;
  tmpvar_12 = ((x1_17 + x2_16) + x3_15);
  shlight_2 = tmpvar_12;
  tmpvar_4 = shlight_2;
  gl_Position = (glstate_matrix_mvp * tmpvar_5);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * (_Object2World * tmpvar_5));
}



#endif
#ifdef FRAGMENT

varying highp vec4 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _WorldSpaceLightPos0;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float tmpvar_5;
  tmpvar_5 = c_2.w;
  lowp float x_6;
  x_6 = (c_2.w - _Cutoff);
  if ((x_6 < 0.0)) {
    discard;
  };
  lowp float tmpvar_7;
  mediump float lightShadowDataX_8;
  highp float dist_9;
  lowp float tmpvar_10;
  tmpvar_10 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD3).x;
  dist_9 = tmpvar_10;
  highp float tmpvar_11;
  tmpvar_11 = _LightShadowData.x;
  lightShadowDataX_8 = tmpvar_11;
  highp float tmpvar_12;
  tmpvar_12 = max (float((dist_9 > (xlv_TEXCOORD3.z / xlv_TEXCOORD3.w))), lightShadowDataX_8);
  tmpvar_7 = tmpvar_12;
  lowp vec4 c_13;
  c_13.xyz = ((c_2.xyz * _LightColor0.xyz) * ((max (0.0, dot (xlv_TEXCOORD1, _WorldSpaceLightPos0.xyz)) * tmpvar_7) * 2.0));
  c_13.w = tmpvar_5;
  c_1.xyz = (c_13.xyz + (c_2.xyz * xlv_TEXCOORD2));
  c_1.w = tmpvar_5;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLES


#ifdef VERTEX

varying highp vec4 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  highp vec3 shlight_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = _glesVertex;
  highp float t_6;
  highp float tmpvar_7;
  tmpvar_7 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_8;
  tmpvar_8 = (_Time * _WaveSpeed).x;
  t_6 = tmpvar_8;
  if ((tmpvar_8 < 0.0)) {
    t_6 = (tmpvar_8 * -1.0);
  };
  tmpvar_5.x = (_glesVertex.x + (((sin(((t_6 * 1.45) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_5.y = ((((sin(((t_6 * 3.12) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_5.z = (_glesVertex.z - (((sin(((t_6 * 2.2) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * tmpvar_5);
  mat3 tmpvar_10;
  tmpvar_10[0] = _Object2World[0].xyz;
  tmpvar_10[1] = _Object2World[1].xyz;
  tmpvar_10[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (tmpvar_1 * unity_Scale.w));
  tmpvar_3 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = tmpvar_11;
  mediump vec3 tmpvar_13;
  mediump vec4 normal_14;
  normal_14 = tmpvar_12;
  highp float vC_15;
  mediump vec3 x3_16;
  mediump vec3 x2_17;
  mediump vec3 x1_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAr, normal_14);
  x1_18.x = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAg, normal_14);
  x1_18.y = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAb, normal_14);
  x1_18.z = tmpvar_21;
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_14.xyzz * normal_14.yzzx);
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBr, tmpvar_22);
  x2_17.x = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBg, tmpvar_22);
  x2_17.y = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBb, tmpvar_22);
  x2_17.z = tmpvar_25;
  mediump float tmpvar_26;
  tmpvar_26 = ((normal_14.x * normal_14.x) - (normal_14.y * normal_14.y));
  vC_15 = tmpvar_26;
  highp vec3 tmpvar_27;
  tmpvar_27 = (unity_SHC.xyz * vC_15);
  x3_16 = tmpvar_27;
  tmpvar_13 = ((x1_18 + x2_17) + x3_16);
  shlight_2 = tmpvar_13;
  tmpvar_4 = shlight_2;
  highp vec4 o_28;
  highp vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_9 * 0.5);
  highp vec2 tmpvar_30;
  tmpvar_30.x = tmpvar_29.x;
  tmpvar_30.y = (tmpvar_29.y * _ProjectionParams.x);
  o_28.xy = (tmpvar_30 + tmpvar_29.w);
  o_28.zw = tmpvar_9.zw;
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = o_28;
}



#endif
#ifdef FRAGMENT

varying highp vec4 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _WorldSpaceLightPos0;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float tmpvar_5;
  tmpvar_5 = c_2.w;
  lowp float x_6;
  x_6 = (c_2.w - _Cutoff);
  if ((x_6 < 0.0)) {
    discard;
  };
  lowp vec4 c_7;
  c_7.xyz = ((c_2.xyz * _LightColor0.xyz) * ((max (0.0, dot (xlv_TEXCOORD1, _WorldSpaceLightPos0.xyz)) * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD3).x) * 2.0));
  c_7.w = tmpvar_5;
  c_1.xyz = (c_7.xyz + (c_2.xyz * xlv_TEXCOORD2));
  c_1.w = tmpvar_5;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "flash " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Vector 9 [_ProjectionParams]
Vector 10 [unity_SHAr]
Vector 11 [unity_SHAg]
Vector 12 [unity_SHAb]
Vector 13 [unity_SHBr]
Vector 14 [unity_SHBg]
Vector 15 [unity_SHBb]
Vector 16 [unity_SHC]
Matrix 4 [_Object2World]
Vector 17 [unity_Scale]
Vector 18 [unity_NPOTScale]
Float 19 [_WaveSpeed]
Float 20 [_Amplitude]
Vector 21 [_MainTex_ST]
"agal_vs
c22 -0.020833 -0.125 1.0 0.5
c23 -0.000002 -0.000022 0.002604 0.00026
c24 0.0 2.2 0.159155 0.5
c25 6.283185 -3.141593 3.12 0.9
c26 1.45 0.2 0.0 0.0
[bc]
abaaaaaaaaaaaiacaaaaaaaaaaaaaaaaaaaaaaffaaaaaaaa add r0.w, a0.x, a0.y
aaaaaaaaaaaaabacaiaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r0.x, c8
adaaaaaaaaaaabacbdaaaaoeabaaaaaaaaaaaaaaacaaaaaa mul r0.x, c19, r0.x
ckaaaaaaaaaaacacaaaaaaaaacaaaaaabiaaaaaaabaaaaaa slt r0.y, r0.x, c24.x
bfaaaaaaabaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r1.y, r0.y
ahaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa max r0.y, r1.y, r0.y
ckaaaaaaaaaaacacbiaaaaaaabaaaaaaaaaaaaffacaaaaaa slt r0.y, c24.x, r0.y
bfaaaaaaacaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r2.y, r0.y
abaaaaaaaaaaaeacacaaaaffacaaaaaabgaaaaoeabaaaaaa add r0.z, r2.y, c22
adaaaaaaaaaaaeacaaaaaaaaacaaaaaaaaaaaakkacaaaaaa mul r0.z, r0.x, r0.z
bfaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r1.x, r0.x
adaaaaaaabaaabacaaaaaaffacaaaaaaabaaaaaaacaaaaaa mul r1.x, r0.y, r1.x
abaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaakkacaaaaaa add r1.x, r1.x, r0.z
abaaaaaaabaaacacaaaaaappacaaaaaaaaaaaakkaaaaaaaa add r1.y, r0.w, a0.z
adaaaaaaaaaaabacabaaaaaaacaaaaaabiaaaaffabaaaaaa mul r0.x, r1.x, c24.y
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaffacaaaaaa add r0.x, r0.x, r1.y
adaaaaaaaaaaabacaaaaaaaaacaaaaaabiaaaakkabaaaaaa mul r0.x, r0.x, c24.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaabiaaaappabaaaaaa add r0.x, r0.x, c24.w
aiaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r0.x, r0.x
adaaaaaaabaaaeacaaaaaaaaacaaaaaabjaaaaaaabaaaaaa mul r1.z, r0.x, c25.x
abaaaaaaabaaaeacabaaaakkacaaaaaabjaaaaffabaaaaaa add r1.z, r1.z, c25.y
apaaaaaaaaaaabacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.z
baaaaaaaaaaaacacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.z
adaaaaaaaaaaabacaaaaaaffacaaaaaaadaaaaffaaaaaaaa mul r0.x, r0.y, a3.y
adaaaaaaaaaaacacabaaaaaaacaaaaaabkaaaaaaabaaaaaa mul r0.y, r1.x, c26.x
abaaaaaaaaaaacacaaaaaaffacaaaaaaabaaaaffacaaaaaa add r0.y, r0.y, r1.y
adaaaaaaaaaaabacaaaaaaaaacaaaaaabeaaaaoeabaaaaaa mul r0.x, r0.x, c20
bfaaaaaaadaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r3.x, r0.x
adaaaaaaabaaaeacadaaaaaaacaaaaaabkaaaaffabaaaaaa mul r1.z, r3.x, c26.y
abaaaaaaabaaaeacabaaaakkacaaaaaaaaaaaaoeaaaaaaaa add r1.z, r1.z, a0
adaaaaaaaaaaabacabaaaaaaacaaaaaabjaaaakkabaaaaaa mul r0.x, r1.x, c25.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaffacaaaaaa add r0.x, r0.x, r1.y
adaaaaaaaaaaabacaaaaaaaaacaaaaaabiaaaakkabaaaaaa mul r0.x, r0.x, c24.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaabiaaaappabaaaaaa add r0.x, r0.x, c24.w
adaaaaaaaaaaacacaaaaaaffacaaaaaabiaaaakkabaaaaaa mul r0.y, r0.y, c24.z
abaaaaaaaaaaacacaaaaaaffacaaaaaabiaaaappabaaaaaa add r0.y, r0.y, c24.w
aiaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa frc r0.y, r0.y
aaaaaaaaabaaaiacaaaaaaoeaaaaaaaaaaaaaaaaaaaaaaaa mov r1.w, a0
adaaaaaaabaaacacaaaaaaffacaaaaaabjaaaaaaabaaaaaa mul r1.y, r0.y, c25.x
abaaaaaaabaaacacabaaaaffacaaaaaabjaaaaoeabaaaaaa add r1.y, r1.y, c25
aiaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r1.x, r0.x
apaaaaaaaaaaabacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.y
baaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.y
adaaaaaaaaaaabacabaaaaaaacaaaaaabjaaaaoeabaaaaaa mul r0.x, r1.x, c25
abaaaaaaaaaaabacaaaaaaaaacaaaaaabjaaaaffabaaaaaa add r0.x, r0.x, c25.y
apaaaaaaacaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sin r2.x, r0.x
baaaaaaaacaaacacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa cos r2.y, r0.x
adaaaaaaaaaaabacadaaaaffaaaaaaaaacaaaaffacaaaaaa mul r0.x, a3.y, r2.y
adaaaaaaacaaahacabaaaaoeaaaaaaaabbaaaappabaaaaaa mul r2.xyz, a1, c17.w
bcaaaaaaaeaaaiacacaaaakeacaaaaaaafaaaaoeabaaaaaa dp3 r4.w, r2.xyzz, c5
adaaaaaaaaaaaeacadaaaaffaaaaaaaaaaaaaaffacaaaaaa mul r0.z, a3.y, r0.y
bcaaaaaaafaaabacacaaaakeacaaaaaaagaaaaoeabaaaaaa dp3 r5.x, r2.xyzz, c6
adaaaaaaaaaaacacadaaaaoeaaaaaaaaadaaaaaaaaaaaaaa mul r0.y, a3, a3.x
aaaaaaaaaaaaaiacbgaaaakkabaaaaaaaaaaaaaaaaaaaaaa mov r0.w, c22.z
bfaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r0.y, r0.y
adaaaaaaaaaaacacaaaaaaffacaaaaaabjaaaappabaaaaaa mul r0.y, r0.y, c25.w
adaaaaaaaaaaabacaaaaaaaaacaaaaaabeaaaaoeabaaaaaa mul r0.x, r0.x, c20
adaaaaaaabaaacacaaaaaaaaacaaaaaabgaaaappabaaaaaa mul r1.y, r0.x, c22.w
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa add r1.y, r1.y, r0.y
adaaaaaaaaaaabacaaaaaakkacaaaaaabeaaaaoeabaaaaaa mul r0.x, r0.z, c20
adaaaaaaabaaabacaaaaaaaaacaaaaaabgaaaappabaaaaaa mul r1.x, r0.x, c22.w
abaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaaoeaaaaaaaa add r1.x, r1.x, a0
bdaaaaaaadaaaiacabaaaaoeacaaaaaaadaaaaoeabaaaaaa dp4 r3.w, r1, c3
bdaaaaaaadaaabacabaaaaoeacaaaaaaaaaaaaoeabaaaaaa dp4 r3.x, r1, c0
bdaaaaaaadaaacacabaaaaoeacaaaaaaabaaaaoeabaaaaaa dp4 r3.y, r1, c1
adaaaaaaaaaaahacadaaaapeacaaaaaabgaaaappabaaaaaa mul r0.xyz, r3.xyww, c22.w
adaaaaaaaaaaacacaaaaaaffacaaaaaaajaaaaaaabaaaaaa mul r0.y, r0.y, c9.x
abaaaaaaaaaaadacaaaaaafeacaaaaaaaaaaaakkacaaaaaa add r0.xy, r0.xyyy, r0.z
adaaaaaaadaaadaeaaaaaafeacaaaaaabcaaaaoeabaaaaaa mul v3.xy, r0.xyyy, c18
bcaaaaaaaaaaabacacaaaakeacaaaaaaaeaaaaoeabaaaaaa dp3 r0.x, r2.xyzz, c4
aaaaaaaaaaaaacacaeaaaappacaaaaaaaaaaaaaaaaaaaaaa mov r0.y, r4.w
aaaaaaaaaaaaaeacafaaaaaaacaaaaaaaaaaaaaaaaaaaaaa mov r0.z, r5.x
adaaaaaaacaaapacaaaaaakeacaaaaaaaaaaaacjacaaaaaa mul r2, r0.xyzz, r0.yzzx
bdaaaaaaaeaaaeacaaaaaaoeacaaaaaaamaaaaoeabaaaaaa dp4 r4.z, r0, c12
bdaaaaaaaeaaacacaaaaaaoeacaaaaaaalaaaaoeabaaaaaa dp4 r4.y, r0, c11
bdaaaaaaaeaaabacaaaaaaoeacaaaaaaakaaaaoeabaaaaaa dp4 r4.x, r0, c10
bdaaaaaaaaaaaiacacaaaaoeacaaaaaaapaaaaoeabaaaaaa dp4 r0.w, r2, c15
bdaaaaaaaaaaaeacacaaaaoeacaaaaaaaoaaaaoeabaaaaaa dp4 r0.z, r2, c14
bdaaaaaaaaaaacacacaaaaoeacaaaaaaanaaaaoeabaaaaaa dp4 r0.y, r2, c13
adaaaaaaadaaaeacaeaaaappacaaaaaaaeaaaappacaaaaaa mul r3.z, r4.w, r4.w
adaaaaaaafaaacacaaaaaaaaacaaaaaaaaaaaaaaacaaaaaa mul r5.y, r0.x, r0.x
acaaaaaaacaaaiacafaaaaffacaaaaaaadaaaakkacaaaaaa sub r2.w, r5.y, r3.z
bdaaaaaaadaaaeacabaaaaoeacaaaaaaacaaaaoeabaaaaaa dp4 r3.z, r1, c2
abaaaaaaacaaahacaeaaaakeacaaaaaaaaaaaapjacaaaaaa add r2.xyz, r4.xyzz, r0.yzww
adaaaaaaaeaaahacacaaaappacaaaaaabaaaaaoeabaaaaaa mul r4.xyz, r2.w, c16
abaaaaaaacaaahaeacaaaakeacaaaaaaaeaaaakeacaaaaaa add v2.xyz, r2.xyzz, r4.xyzz
aaaaaaaaaaaaapadadaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r3
aaaaaaaaadaaamaeadaaaaopacaaaaaaaaaaaaaaaaaaaaaa mov v3.zw, r3.wwzw
aaaaaaaaabaaaeaeafaaaaaaacaaaaaaaaaaaaaaaaaaaaaa mov v1.z, r5.x
aaaaaaaaabaaacaeaeaaaappacaaaaaaaaaaaaaaaaaaaaaa mov v1.y, r4.w
aaaaaaaaabaaabaeaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa mov v1.x, r0.x
adaaaaaaaaaaadacadaaaaoeaaaaaaaabfaaaaoeabaaaaaa mul r0.xy, a3, c21
abaaaaaaaaaaadaeaaaaaafeacaaaaaabfaaaaooabaaaaaa add v0.xy, r0.xyyy, c21.zwzw
aaaaaaaaaaaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v0.zw, c0
aaaaaaaaabaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v1.w, c0
aaaaaaaaacaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v2.w, c0
"
}

SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 176 // 160 used size, 9 vars
Float 128 [_WaveSpeed]
Float 132 [_Amplitude]
Vector 144 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 0 [_Time] 4
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityLighting" 720 // 720 used size, 17 vars
Vector 608 [unity_SHAr] 4
Vector 624 [unity_SHAg] 4
Vector 640 [unity_SHAb] 4
Vector 656 [unity_SHBr] 4
Vector 672 [unity_SHBg] 4
Vector 688 [unity_SHBb] 4
Vector 704 [unity_SHC] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 42 instructions, 5 temp regs, 0 temp arrays:
// ALU 36 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecednanjimkjkbaakpddjlbchiokpkijbhcpabaaaaaafaamaaaaaeaaaaaa
daaaaaaaomaeaaaaoiakaaaalaalaaaaebgpgodjleaeaaaaleaeaaaaaaacpopp
diaeaaaahmaaaaaaahaaceaaaaaahiaaaaaahiaaaaaaceaaabaahiaaaaaaaiaa
acaaabaaaaaaaaaaabaaaaaaabaaadaaaaaaaaaaabaaafaaabaaaeaaaaaaaaaa
acaacgaaahaaafaaaaaaaaaaadaaaaaaaeaaamaaaaaaaaaaadaaamaaadaabaaa
aaaaaaaaadaabeaaabaabdaaaaaaaaaaaaaaaaaaaaacpoppfbaaaaafbeaaapka
jkjjljdpbekoeheamnmmameaggggggdpfbaaaaafbfaaapkaaaaaaaaaaaaaaama
idpjccdoaaaaaadpfbaaaaafbgaaapkanlapmjeanlapejmamnmmemdoaaaaiadp
fbaaaaafbhaaapkaabannalfgballglhklkkckdlijiiiidjfbaaaaafbiaaapka
klkkkklmaaaaaaloaaaaiadpaaaaaadpbpaaaaacafaaaaiaaaaaapjabpaaaaac
afaaaciaacaaapjabpaaaaacafaaadiaadaaapjaaeaaaaaeaaaaadoaadaaoeja
acaaoekaacaaookaafaaaaadaaaaahiaacaaoejabdaappkaafaaaaadabaaahia
aaaaffiabbaaoekaaeaaaaaeaaaaaliabaaakekaaaaaaaiaabaakeiaaeaaaaae
aaaaahiabcaaoekaaaaakkiaaaaapeiaabaaaaacaaaaaiiabgaappkaajaaaaad
abaaabiaafaaoekaaaaaoeiaajaaaaadabaaaciaagaaoekaaaaaoeiaajaaaaad
abaaaeiaahaaoekaaaaaoeiaafaaaaadacaaapiaaaaacjiaaaaakeiaajaaaaad
adaaabiaaiaaoekaacaaoeiaajaaaaadadaaaciaajaaoekaacaaoeiaajaaaaad
adaaaeiaakaaoekaacaaoeiaacaaaaadabaaahiaabaaoeiaadaaoeiaafaaaaad
aaaaaiiaaaaaffiaaaaaffiaaeaaaaaeaaaaaiiaaaaaaaiaaaaaaaiaaaaappib
abaaaaacabaaahoaaaaaoeiaaeaaaaaeacaaahoaalaaoekaaaaappiaabaaoeia
abaaaaacaaaaabiaabaaaakaafaaaaadaaaaabiaaaaaaaiaadaaaakaamaaaaad
aaaaaciaaaaaaaiabfaaaakaafaaaaadaaaaaciaaaaaffiaaaaaaaiaaeaaaaae
aaaaabiaaaaaffiabfaaffkaaaaaaaiaacaaaaadaaaaaciaaaaaffjaaaaaaaja
acaaaaadaaaaaciaaaaaffiaaaaakkjaaeaaaaaeaaaaahiaaaaaaaiabeaaoeka
aaaaffiaaeaaaaaeaaaaahiaaaaaoeiabfaakkkabfaappkabdaaaaacaaaaahia
aaaaoeiaaeaaaaaeaaaaahiaaaaaoeiabgaaaakabgaaffkacfaaaaaeabaaacia
aaaaffiabhaaoekabiaaoekaafaaaaadaaaaaciaabaaffiaadaaffjaafaaaaad
aaaaaciaaaaaffiaabaaffkaafaaaaadaaaaaiiaadaaaajaadaaffjaafaaaaad
aaaaaiiaaaaappiabeaappkaaeaaaaaeaaaaaciaaaaaffiabfaappkaaaaappib
afaaaaadabaaapiaaaaaffiaanaaoekacfaaaaaeacaaaciaaaaaaaiabhaaoeka
biaaoekacfaaaaaeadaaaciaaaaakkiabhaaoekabiaaoekaafaaaaadaaaaabia
adaaffiaadaaffjaafaaaaadaaaaabiaaaaaaaiaabaaffkaaeaaaaaeaaaaabia
aaaaaaiabgaakkkbaaaakkjaafaaaaadaaaaaciaacaaffiaadaaffjaafaaaaad
aaaaaciaaaaaffiaabaaffkaaeaaaaaeaaaaaciaaaaaffiabfaappkaaaaaaaja
aeaaaaaeabaaapiaamaaoekaaaaaffiaabaaoeiaaeaaaaaeaaaaapiaaoaaoeka
aaaaaaiaabaaoeiaaeaaaaaeaaaaapiaapaaoekaaaaappjaaaaaoeiaafaaaaad
abaaabiaaaaaffiaaeaaaakaafaaaaadabaaaiiaabaaaaiabfaappkaafaaaaad
abaaafiaaaaapeiabfaappkaacaaaaadadaaadoaabaakkiaabaaomiaaeaaaaae
aaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeiaabaaaaac
adaaamoaaaaaoeiappppaaaafdeieefcpeafaaaaeaaaabaahnabaaaafjaaaaae
egiocaaaaaaaaaaaakaaaaaafjaaaaaeegiocaaaabaaaaaaagaaaaaafjaaaaae
egiocaaaacaaaaaacnaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaa
ghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaad
hccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaadpccabaaaaeaaaaaa
giaaaaacafaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaaaiaaaaaa
akiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaa
abeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaia
ebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkbabaaa
aaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaa
ckbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaa
jkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaaghcaabaaa
aaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaa
fgifcaaaaaaaaaaaaiaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaa
abeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaabkbabaaa
adaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaa
ggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaa
egiocaaaadaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
abeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaackaabaia
ebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaakpcaabaaa
abaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaafgafbaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaa
pgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaa
ajaaaaaaogikcaaaaaaaaaaaajaaaaaadiaaaaaihcaabaaaabaaaaaaegbcbaaa
acaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaacaaaaaafgafbaaa
abaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaabaaaaaaegiicaaa
adaaaaaaamaaaaaaagaabaaaabaaaaaaegaibaaaacaaaaaadcaaaaakhcaabaaa
abaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaabaaaaaaegadbaaaabaaaaaa
dgaaaaafhccabaaaacaaaaaaegacbaaaabaaaaaadgaaaaaficaabaaaabaaaaaa
abeaaaaaaaaaiadpbbaaaaaibcaabaaaacaaaaaaegiocaaaacaaaaaacgaaaaaa
egaobaaaabaaaaaabbaaaaaiccaabaaaacaaaaaaegiocaaaacaaaaaachaaaaaa
egaobaaaabaaaaaabbaaaaaiecaabaaaacaaaaaaegiocaaaacaaaaaaciaaaaaa
egaobaaaabaaaaaadiaaaaahpcaabaaaadaaaaaajgacbaaaabaaaaaaegakbaaa
abaaaaaabbaaaaaibcaabaaaaeaaaaaaegiocaaaacaaaaaacjaaaaaaegaobaaa
adaaaaaabbaaaaaiccaabaaaaeaaaaaaegiocaaaacaaaaaackaaaaaaegaobaaa
adaaaaaabbaaaaaiecaabaaaaeaaaaaaegiocaaaacaaaaaaclaaaaaaegaobaaa
adaaaaaaaaaaaaahhcaabaaaacaaaaaaegacbaaaacaaaaaaegacbaaaaeaaaaaa
diaaaaahccaabaaaabaaaaaabkaabaaaabaaaaaabkaabaaaabaaaaaadcaaaaak
bcaabaaaabaaaaaaakaabaaaabaaaaaaakaabaaaabaaaaaabkaabaiaebaaaaaa
abaaaaaadcaaaaakhccabaaaadaaaaaaegiccaaaacaaaaaacmaaaaaaagaabaaa
abaaaaaaegacbaaaacaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaaaaaaaaaa
akiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaaaaaaaaaa
aceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaaaeaaaaaa
kgaobaaaaaaaaaaaaaaaaaahdccabaaaaeaaaaaakgakbaaaabaaaaaamgaabaaa
abaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
abaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaa
laaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaaabaaaaaa
aaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
afaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfcenebemaa
feeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaaaiaaaaaa
iaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaabaaaaaaadamaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaa
acaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahaiaaaa
imaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaafdfgfpfaepfdejfe
ejepeoaafeeffiedepepfceeaaklklkl"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 403
struct Input {
    highp vec2 uv_MainTex;
};
#line 425
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    lowp vec3 vlight;
    highp vec4 _ShadowCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _ShadowOffsets[4];
uniform sampler2D _ShadowMapTexture;
#line 393
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 401
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 408
#line 434
uniform highp vec4 _MainTex_ST;
uniform lowp float _Cutoff;
#line 137
mediump vec3 ShadeSH9( in mediump vec4 normal ) {
    mediump vec3 x1;
    mediump vec3 x2;
    mediump vec3 x3;
    x1.x = dot( unity_SHAr, normal);
    #line 141
    x1.y = dot( unity_SHAg, normal);
    x1.z = dot( unity_SHAb, normal);
    mediump vec4 vB = (normal.xyzz * normal.yzzx);
    x2.x = dot( unity_SHBr, vB);
    #line 145
    x2.y = dot( unity_SHBg, vB);
    x2.z = dot( unity_SHBb, vB);
    highp float vC = ((normal.x * normal.x) - (normal.y * normal.y));
    x3 = (unity_SHC.xyz * vC);
    #line 149
    return ((x1 + x2) + x3);
}
#line 408
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 412
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 416
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 435
v2f_surf vert_surf( in appdata_full v ) {
    v2f_surf o;
    #line 438
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec3 worldN = (mat3( _Object2World) * (v.normal * unity_Scale.w));
    #line 442
    o.normal = worldN;
    highp vec3 shlight = ShadeSH9( vec4( worldN, 1.0));
    o.vlight = shlight;
    o._ShadowCoord = (unity_World2Shadow[0] * (_Object2World * v.vertex));
    #line 447
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out lowp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec3(xl_retval.normal);
    xlv_TEXCOORD2 = vec3(xl_retval.vlight);
    xlv_TEXCOORD3 = vec4(xl_retval._ShadowCoord);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 403
struct Input {
    highp vec2 uv_MainTex;
};
#line 425
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    lowp vec3 vlight;
    highp vec4 _ShadowCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _ShadowOffsets[4];
uniform sampler2D _ShadowMapTexture;
#line 393
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 401
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 408
#line 434
uniform highp vec4 _MainTex_ST;
uniform lowp float _Cutoff;
#line 338
lowp vec4 LightingLambert( in SurfaceOutput s, in lowp vec3 lightDir, in lowp float atten ) {
    lowp float diff = max( 0.0, dot( s.Normal, lightDir));
    lowp vec4 c;
    #line 342
    c.xyz = ((s.Albedo * _LightColor0.xyz) * ((diff * atten) * 2.0));
    c.w = s.Alpha;
    return c;
}
#line 419
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 421
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 393
lowp float unitySampleShadow( in highp vec4 shadowCoord ) {
    highp float dist = textureProj( _ShadowMapTexture, shadowCoord).x;
    mediump float lightShadowDataX = _LightShadowData.x;
    #line 397
    return max( float((dist > (shadowCoord.z / shadowCoord.w))), lightShadowDataX);
}
#line 450
lowp vec4 frag_surf( in v2f_surf IN ) {
    #line 452
    Input surfIN;
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    #line 456
    o.Emission = vec3( 0.0);
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    #line 460
    o.Normal = IN.normal;
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    lowp float atten = unitySampleShadow( IN._ShadowCoord);
    #line 464
    lowp vec4 c = vec4( 0.0);
    c = LightingLambert( o, _WorldSpaceLightPos0.xyz, atten);
    c.xyz += (o.Albedo * IN.vlight);
    c.w = o.Alpha;
    #line 468
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in lowp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.normal = vec3(xlv_TEXCOORD1);
    xlt_IN.vlight = vec3(xlv_TEXCOORD2);
    xlt_IN._ShadowCoord = vec4(xlv_TEXCOORD3);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 9 [_Time]
Vector 10 [_ProjectionParams]
Float 11 [_WaveSpeed]
Float 12 [_Amplitude]
Vector 13 [unity_LightmapST]
Vector 14 [_MainTex_ST]
"!!ARBvp1.0
# 75 ALU
PARAM c[20] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.mvp,
		program.local[5..14],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[11];
MUL R0.x, R0, c[9];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[15];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[16].xyxw, c[16].zwzw;
MAD R1.xyz, R1, R0, c[17].xyxw;
MAD R1.xyz, R1, R0, c[17].zwzw;
MAD R1.xyz, R1, R0, c[18].xyxw;
MAD R0.xyz, R1, R0, c[15].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[18].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[15].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[19].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[12];
MAD R0.w, -R0.x, c[19].x, vertex.position.z;
MAD R0.x, R1.w, c[19].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[15];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[16].xyxw, c[16].zwzw;
MAD R3.xyz, R2, R0, c[17].xyxw;
MAD R3.xyz, R3, R0, c[17].zwzw;
MAD R3.xyz, R3, R0, c[18].xyxw;
ADD R1.xyz, -R1.w, c[15];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[16].xyxw, c[16].zwzw;
MAD R2.xyz, R2, R1, c[17].xyxw;
MAD R2.xyz, R2, R1, c[17].zwzw;
MAD R3.xyz, R3, R0, c[15].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[18].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[15].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[18].xyxw;
MAD R1.xyz, R0, R1, c[15].wzww;
SGE R0.yz, R1.w, c[18].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[15].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R0.x, R0, c[12];
MUL R0.y, -R0, c[19].z;
MAD R0.y, R0.x, c[15], R0;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R2.w, c[12];
MAD R0.x, R0, c[15].y, vertex.position;
DP4 R1.w, R0.xywz, c[4];
DP4 R1.z, R0.xywz, c[3];
DP4 R1.x, R0.xywz, c[1];
DP4 R1.y, R0.xywz, c[2];
MUL R2.xyz, R1.xyww, c[15].y;
MUL R2.y, R2, c[10].x;
ADD result.texcoord[2].xy, R2, R2.z;
MOV result.position, R1;
MOV result.texcoord[2].zw, R1;
MAD result.texcoord[0].xy, vertex.texcoord[0], c[14], c[14].zwzw;
MAD result.texcoord[1].xy, vertex.texcoord[1], c[13], c[13].zwzw;
END
# 75 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Vector 9 [_ProjectionParams]
Vector 10 [_ScreenParams]
Float 11 [_WaveSpeed]
Float 12 [_Amplitude]
Vector 13 [unity_LightmapST]
Vector 14 [_MainTex_ST]
"vs_2_0
; 75 ALU
def c15, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c16, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c17, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c18, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c19, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_texcoord0 v3
dcl_texcoord1 v4
add r0.w, v0.x, v0.y
mov r0.x, c8
mul r0.x, c11, r0
slt r0.y, r0.x, c17.x
max r0.y, -r0, r0
slt r0.y, c17.x, r0
add r0.z, -r0.y, c15
mul r0.z, r0.x, r0
mad r1.y, r0, -r0.x, r0.z
add r1.x, r0.w, v0.z
mad r0.x, r1.y, c17.y, r1
mad r0.x, r0, c17.z, c17.w
frc r0.x, r0
mad r1.z, r0.x, c18.x, c18.y
sincos r0.xy, r1.z, c16.xyzw, c15.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1, c19.x, r1.x
mul r0.x, r0, c12
mad r1.z, -r0.x, c19.y, v0
mad r0.x, r1.y, c18.z, r1
mad r0.x, r0, c17.z, c17.w
mad r0.y, r0, c17.z, c17.w
frc r0.y, r0
mov r1.w, v0
mad r1.y, r0, c18.x, c18
frc r1.x, r0
sincos r0.xy, r1.y, c16.xyzw, c15.xyzw
mad r0.x, r1, c18, c18.y
sincos r2.xy, r0.x, c16.xyzw, c15.xyzw
mul r0.z, v3.y, r0.y
mul r0.x, v3.y, r2.y
mul r0.y, v3, v3.x
mul r0.y, -r0, c18.w
mul r0.x, r0, c12
mad r1.y, r0.x, c15.w, r0
mul r0.x, r0.z, c12
mad r1.x, r0, c15.w, v0
dp4 r0.w, r1, c3
dp4 r0.z, r1, c2
dp4 r0.x, r1, c0
dp4 r0.y, r1, c1
mul r2.xyz, r0.xyww, c15.w
mul r2.y, r2, c9.x
mad oT2.xy, r2.z, c10.zwzw, r2
mov oPos, r0
mov oT2.zw, r0
mad oT0.xy, v3, c14, c14.zwzw
mad oT1.xy, v4, c13, c13.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Float 8 [_Amplitude]
Vector 10 [_MainTex_ST]
Vector 1 [_ProjectionParams]
Vector 2 [_ScreenParams]
Vector 0 [_Time]
Float 7 [_WaveSpeed]
Matrix 3 [glstate_matrix_mvp] 4
Vector 9 [unity_LightmapST]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 36.00-37.33 (27-28 instructions), vertex: 32, texture: 0,
//   sequencer: 16,  5 GPRs, 31 threads,
// Performance (if enough threads): ~36-37 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacamaaaaabpaaaaaaaaaaaaaaaceaaaaabjeaaaaablmaaaaaaaa
aaaaaaaaaaaaabgmaaaaaabmaaaaabgapppoadaaaaaaaaaiaaaaaabmaaaaaaaa
aaaaabfjaaaaaalmaaacaaaiaaabaaaaaaaaaamiaaaaaaaaaaaaaaniaaacaaak
aaabaaaaaaaaaaoeaaaaaaaaaaaaaapeaaacaaabaaabaaaaaaaaaaoeaaaaaaaa
aaaaabagaaacaaacaaabaaaaaaaaaaoeaaaaaaaaaaaaabbeaaacaaaaaaabaaaa
aaaaaaoeaaaaaaaaaaaaabbkaaacaaahaaabaaaaaaaaaamiaaaaaaaaaaaaabcf
aaacaaadaaaeaaaaaaaaabdiaaaaaaaaaaaaabeiaaacaaajaaabaaaaaaaaaaoe
aaaaaaaafpebgnhagmgjhehfgegfaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaa
fpengbgjgofegfhifpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpfahcgp
gkgfgdhegjgpgofagbhcgbgnhdaafpfdgdhcgfgfgofagbhcgbgnhdaafpfegjgn
gfaafpfhgbhggffdhagfgfgeaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaa
aaadaaadaaaeaaaeaaabaaaaaaaaaaaahfgogjhehjfpemgjghgihegngbhafdfe
aahghdfpddfpdaaadccodacodcdadddfddcodaaaaaaaaaaaaaaaaaabaaaaaaaa
aaaaaaaaaaaaaabeaapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaea
aaaaablaaacbaaaeaaaaaaaaaaaaaaaaaaaacagdaaaaaaabaaaaaaadaaaaaaae
aaaaacjaaabaaaaeaaaafaafaacbfaagaaaadafaaaabdbfbaaacpcfcaaaababp
aaaabacaaaaaaaboaaaabaccaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadoccpjid
lpiaaaaamaejapnldpiaaaaadpaaaaaadoemmmmndpggggggeamjapnldpljjjjk
eaehkobeeaammmmndpaaaaaahajfgaaebaakbaaafgaaaaaaaaaaaaaagaalmcaa
bcaaaaaaaaaagabbgabhbcaabcaaaaaaaaaaaaaagabnmeaaccaaaaaaafpicaaa
aaaaagiiaaaaaaaaafpibaaaaaaaacdpaaaaaaaaafpibaaaaaaaapmiaaaaaaaa
miacaaaaaagmlbaacbaapnaamiabaaaaaagmgmaacbaaahaaheaeaaaaabloblgm
laacpnaakibaaaaabiaaaaebmcaaaaahmiabaaadaablmgaaobababaamiahaaaa
aagmmamgklaappaamiahaaaaaamagmblilaapnppmiaoaaadaapmaaaaoiaaaaaa
miapaaadaanabkaakbadpoaamiahaaaaaamjmgaakaadpnaamabaaaaaaaaaaagm
ocaaaaaamacaaaaaaaaaaalbocaaaaaamaedaaaeaabllamgkbabpoaamiahaaaa
aalmmaaaobaeaaaamiaoaaadaapmgmaakbaaaiaamiabaaacaalbgmaaoaadacaa
beapaaaaaablaamgkbacagadaeceacacafblmggmoaadacadmiapaaaaaamgnana
klacafaamiapaaaaaalbdepiklacaeaamiapaaacaagmnajeklacadaamiapiado
aananaaaocacacaamiahaaaaaamablaakbacppaamiamiaacaanlnlaaocacacaa
miadiaaaaabklabkilabakakmiadiaabaalalabkilabajajkiiaaaaaaaaaaaeb
mcaaaaabmiadiaacaamgbkbiklaaacaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 467 [_Time]
Vector 466 [_ProjectionParams]
Float 465 [_WaveSpeed]
Float 464 [_Amplitude]
Vector 463 [unity_LightmapST]
Vector 462 [_MainTex_ST]
"sce_vp_rsx // 32 instructions using 3 registers
[Configuration]
8
0000002003010300
[Defaults]
2
461 4
400ccccd3e4ccccd4047ae143f000000
460 2
3f6666663fb9999a
[Microcode]
512
401f9c6c011ce808010400d740619f9c00001c6c00c000000106c08aa0409ffc
00001c6c005d10000186c08360411ffc00001c6c009d3000008000c360411ffc
201fdc6c004000000086c08360411ffc00001c6c00c000550106c08aa0203ffc
00001c6c004000000086c08360405ffc00002400004000800086c08360405ffc
00001c6c011cd055008800dfe0219ffc00001c6c011cc055009540dfe0205ffc
00009c6c7880082a8100008aa029007c00009c6c789cc080028000c00031007c
00011c6c7880082a81154055402900fc00001c6c008008000095408360409ffc
00001c6c0080082a8115414360411ffc00001c6c009d0000008000c360411ffc
00001c6c009d002a808000c360409ffc00001c6c009d0000048000c360405ffc
00009c6c011cd05500bfc0c000a09ffc00009c6c011cd0aa809540d540405ffc
00009c6c011cd00000bfc0c000411ffc00009c6c0040007f8106c08360403ffc
00001c6c01d0300d8286c0c360403ffc00001c6c01d0200d8286c0c360405ffc
00001c6c01d0100d8286c0c360409ffc00001c6c01d0000d8286c0c360411ffc
401f9c6c011cf908010400d740619fa0401f9c6c0040000d8086c0836041ff80
401f9c6c004000558086c08360407fa400001c6c009cd00e00bfc0c36041dffc
00001c6c009d202a808000c360409ffc401f9c6c00c000080086c09540219fa5
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "color" Color
ConstBuffer "$Globals" 192 // 176 used size, 10 vars
Float 128 [_WaveSpeed]
Float 132 [_Amplitude]
Vector 144 [unity_LightmapST] 4
Vector 160 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 0 [_Time] 4
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityPerDraw" 336 // 64 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityPerDraw" 2
// 26 instructions, 2 temp regs, 0 temp arrays:
// ALU 22 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedcelebahlphllbohhleaigojepaniclmgabaaaaaagmafaaaaadaaaaaa
cmaaaaaapeaaaaaahmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaa
aiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaheaaaaaaabaaaaaaaaaaaaaa
adaaaaaaabaaaaaaamadaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apaaaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefc
oiadaaaaeaaaabaapkaaaaaafjaaaaaeegiocaaaaaaaaaaaalaaaaaafjaaaaae
egiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaaaeaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaaddcbabaaaadaaaaaafpaaaaaddcbabaaaaeaaaaaa
ghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaad
mccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagiaaaaacacaaaaaadiaaaaaj
bcaabaaaaaaaaaaaakiacaaaaaaaaaaaaiaaaaaaakiacaaaabaaaaaaaaaaaaaa
dbaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaak
bcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaa
aaaaaaaaaaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaa
aaaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaam
hcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdpbekoeheamnmmamea
aaaaaaaafgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaa
aaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaa
diaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaaaaaaaaaaaiaaaaaa
diaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaah
icaabaaaaaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaa
aaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaa
diaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaa
dcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaa
aaaaaaaadcaaaaakccaabaaaaaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaa
mnmmemdockbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaacaaaaaa
aaaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaacaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaa
aaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaa
abaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaakaaaaaaogikcaaaaaaaaaaa
akaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaaeaaaaaaagiecaaaaaaaaaaa
ajaaaaaakgiocaaaaaaaaaaaajaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaa
aaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaa
aaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaa
acaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaacaaaaaakgakbaaaabaaaaaa
mgaabaaaabaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLES


#ifdef VERTEX

varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp float t_2;
  highp float tmpvar_3;
  tmpvar_3 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_4;
  tmpvar_4 = (_Time * _WaveSpeed).x;
  t_2 = tmpvar_4;
  if ((tmpvar_4 < 0.0)) {
    t_2 = (tmpvar_4 * -1.0);
  };
  tmpvar_1.x = (_glesVertex.x + (((sin(((t_2 * 1.45) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_1.y = ((((sin(((t_2 * 3.12) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_1.z = (_glesVertex.z - (((sin(((t_2 * 2.2) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  gl_Position = (glstate_matrix_mvp * tmpvar_1);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (unity_World2Shadow[0] * (_Object2World * tmpvar_1));
}



#endif
#ifdef FRAGMENT

varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D unity_Lightmap;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _LightShadowData;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float x_5;
  x_5 = (c_2.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  lowp float tmpvar_6;
  mediump float lightShadowDataX_7;
  highp float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD2).x;
  dist_8 = tmpvar_9;
  highp float tmpvar_10;
  tmpvar_10 = _LightShadowData.x;
  lightShadowDataX_7 = tmpvar_10;
  highp float tmpvar_11;
  tmpvar_11 = max (float((dist_8 > (xlv_TEXCOORD2.z / xlv_TEXCOORD2.w))), lightShadowDataX_7);
  tmpvar_6 = tmpvar_11;
  c_1.xyz = (c_2.xyz * min ((2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz), vec3((tmpvar_6 * 2.0))));
  c_1.w = c_2.w;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLES


#ifdef VERTEX

varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp float t_2;
  highp float tmpvar_3;
  tmpvar_3 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_4;
  tmpvar_4 = (_Time * _WaveSpeed).x;
  t_2 = tmpvar_4;
  if ((tmpvar_4 < 0.0)) {
    t_2 = (tmpvar_4 * -1.0);
  };
  tmpvar_1.x = (_glesVertex.x + (((sin(((t_2 * 1.45) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_1.y = ((((sin(((t_2 * 3.12) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_1.z = (_glesVertex.z - (((sin(((t_2 * 2.2) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_mvp * tmpvar_1);
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_5.zw;
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = o_6;
}



#endif
#ifdef FRAGMENT

varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D unity_Lightmap;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform sampler2D _ShadowMapTexture;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float x_5;
  x_5 = (c_2.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD2);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (unity_Lightmap, xlv_TEXCOORD1);
  lowp vec3 tmpvar_8;
  tmpvar_8 = ((8.0 * tmpvar_7.w) * tmpvar_7.xyz);
  c_1.xyz = (c_2.xyz * max (min (tmpvar_8, ((tmpvar_6.x * 2.0) * tmpvar_7.xyz)), (tmpvar_8 * tmpvar_6.x)));
  c_1.w = c_2.w;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "flash " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Vector 9 [_ProjectionParams]
Vector 10 [unity_NPOTScale]
Float 11 [_WaveSpeed]
Float 12 [_Amplitude]
Vector 13 [unity_LightmapST]
Vector 14 [_MainTex_ST]
"agal_vs
c15 -0.020833 -0.125 1.0 0.5
c16 -0.000002 -0.000022 0.002604 0.00026
c17 0.0 2.2 0.159155 0.5
c18 6.283185 -3.141593 3.12 0.9
c19 1.45 0.2 0.0 0.0
[bc]
abaaaaaaaaaaaiacaaaaaaaaaaaaaaaaaaaaaaffaaaaaaaa add r0.w, a0.x, a0.y
aaaaaaaaaaaaabacaiaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r0.x, c8
adaaaaaaaaaaabacalaaaaoeabaaaaaaaaaaaaaaacaaaaaa mul r0.x, c11, r0.x
ckaaaaaaaaaaacacaaaaaaaaacaaaaaabbaaaaaaabaaaaaa slt r0.y, r0.x, c17.x
bfaaaaaaabaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r1.y, r0.y
ahaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa max r0.y, r1.y, r0.y
ckaaaaaaaaaaacacbbaaaaaaabaaaaaaaaaaaaffacaaaaaa slt r0.y, c17.x, r0.y
bfaaaaaaacaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r2.y, r0.y
abaaaaaaaaaaaeacacaaaaffacaaaaaaapaaaaoeabaaaaaa add r0.z, r2.y, c15
adaaaaaaaaaaaeacaaaaaaaaacaaaaaaaaaaaakkacaaaaaa mul r0.z, r0.x, r0.z
bfaaaaaaacaaaiacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r2.w, r0.x
adaaaaaaabaaacacaaaaaaffacaaaaaaacaaaappacaaaaaa mul r1.y, r0.y, r2.w
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaakkacaaaaaa add r1.y, r1.y, r0.z
abaaaaaaabaaabacaaaaaappacaaaaaaaaaaaakkaaaaaaaa add r1.x, r0.w, a0.z
adaaaaaaaaaaabacabaaaaffacaaaaaabbaaaaffabaaaaaa mul r0.x, r1.y, c17.y
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaabbaaaakkabaaaaaa mul r0.x, r0.x, c17.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaabbaaaappabaaaaaa add r0.x, r0.x, c17.w
aiaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r0.x, r0.x
adaaaaaaabaaaeacaaaaaaaaacaaaaaabcaaaaaaabaaaaaa mul r1.z, r0.x, c18.x
abaaaaaaabaaaeacabaaaakkacaaaaaabcaaaaffabaaaaaa add r1.z, r1.z, c18.y
apaaaaaaaaaaabacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.z
baaaaaaaaaaaacacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.z
adaaaaaaaaaaabacaaaaaaffacaaaaaaadaaaaffaaaaaaaa mul r0.x, r0.y, a3.y
adaaaaaaaaaaacacabaaaaffacaaaaaabdaaaaaaabaaaaaa mul r0.y, r1.y, c19.x
abaaaaaaaaaaacacaaaaaaffacaaaaaaabaaaaaaacaaaaaa add r0.y, r0.y, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaamaaaaoeabaaaaaa mul r0.x, r0.x, c12
bfaaaaaaadaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r3.x, r0.x
adaaaaaaabaaaeacadaaaaaaacaaaaaabdaaaaffabaaaaaa mul r1.z, r3.x, c19.y
abaaaaaaabaaaeacabaaaakkacaaaaaaaaaaaaoeaaaaaaaa add r1.z, r1.z, a0
adaaaaaaaaaaabacabaaaaffacaaaaaabcaaaakkabaaaaaa mul r0.x, r1.y, c18.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaabbaaaakkabaaaaaa mul r0.x, r0.x, c17.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaabbaaaappabaaaaaa add r0.x, r0.x, c17.w
adaaaaaaaaaaacacaaaaaaffacaaaaaabbaaaakkabaaaaaa mul r0.y, r0.y, c17.z
abaaaaaaaaaaacacaaaaaaffacaaaaaabbaaaappabaaaaaa add r0.y, r0.y, c17.w
aiaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa frc r0.y, r0.y
aaaaaaaaabaaaiacaaaaaaoeaaaaaaaaaaaaaaaaaaaaaaaa mov r1.w, a0
adaaaaaaabaaacacaaaaaaffacaaaaaabcaaaaaaabaaaaaa mul r1.y, r0.y, c18.x
abaaaaaaabaaacacabaaaaffacaaaaaabcaaaaoeabaaaaaa add r1.y, r1.y, c18
aiaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r1.x, r0.x
apaaaaaaaaaaabacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.y
baaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.y
adaaaaaaaaaaabacabaaaaaaacaaaaaabcaaaaoeabaaaaaa mul r0.x, r1.x, c18
abaaaaaaaaaaabacaaaaaaaaacaaaaaabcaaaaffabaaaaaa add r0.x, r0.x, c18.y
apaaaaaaacaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sin r2.x, r0.x
baaaaaaaacaaacacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa cos r2.y, r0.x
adaaaaaaaaaaaeacadaaaaffaaaaaaaaaaaaaaffacaaaaaa mul r0.z, a3.y, r0.y
adaaaaaaaaaaabacadaaaaffaaaaaaaaacaaaaffacaaaaaa mul r0.x, a3.y, r2.y
adaaaaaaaaaaacacadaaaaoeaaaaaaaaadaaaaaaaaaaaaaa mul r0.y, a3, a3.x
bfaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r0.y, r0.y
adaaaaaaaaaaacacaaaaaaffacaaaaaabcaaaappabaaaaaa mul r0.y, r0.y, c18.w
adaaaaaaaaaaabacaaaaaaaaacaaaaaaamaaaaoeabaaaaaa mul r0.x, r0.x, c12
adaaaaaaabaaacacaaaaaaaaacaaaaaaapaaaappabaaaaaa mul r1.y, r0.x, c15.w
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa add r1.y, r1.y, r0.y
adaaaaaaaaaaabacaaaaaakkacaaaaaaamaaaaoeabaaaaaa mul r0.x, r0.z, c12
adaaaaaaabaaabacaaaaaaaaacaaaaaaapaaaappabaaaaaa mul r1.x, r0.x, c15.w
abaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaaoeaaaaaaaa add r1.x, r1.x, a0
bdaaaaaaaaaaaiacabaaaaoeacaaaaaaadaaaaoeabaaaaaa dp4 r0.w, r1, c3
bdaaaaaaaaaaaeacabaaaaoeacaaaaaaacaaaaoeabaaaaaa dp4 r0.z, r1, c2
bdaaaaaaaaaaabacabaaaaoeacaaaaaaaaaaaaoeabaaaaaa dp4 r0.x, r1, c0
bdaaaaaaaaaaacacabaaaaoeacaaaaaaabaaaaoeabaaaaaa dp4 r0.y, r1, c1
adaaaaaaacaaahacaaaaaapeacaaaaaaapaaaappabaaaaaa mul r2.xyz, r0.xyww, c15.w
adaaaaaaacaaacacacaaaaffacaaaaaaajaaaaaaabaaaaaa mul r2.y, r2.y, c9.x
abaaaaaaacaaadacacaaaafeacaaaaaaacaaaakkacaaaaaa add r2.xy, r2.xyyy, r2.z
adaaaaaaacaaadaeacaaaafeacaaaaaaakaaaaoeabaaaaaa mul v2.xy, r2.xyyy, c10
aaaaaaaaaaaaapadaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r0
aaaaaaaaacaaamaeaaaaaaopacaaaaaaaaaaaaaaaaaaaaaa mov v2.zw, r0.wwzw
adaaaaaaadaaadacadaaaaoeaaaaaaaaaoaaaaoeabaaaaaa mul r3.xy, a3, c14
abaaaaaaaaaaadaeadaaaafeacaaaaaaaoaaaaooabaaaaaa add v0.xy, r3.xyyy, c14.zwzw
adaaaaaaadaaadacaeaaaaoeaaaaaaaaanaaaaoeabaaaaaa mul r3.xy, a4, c13
abaaaaaaabaaadaeadaaaafeacaaaaaaanaaaaooabaaaaaa add v1.xy, r3.xyyy, c13.zwzw
aaaaaaaaaaaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v0.zw, c0
aaaaaaaaabaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v1.zw, c0
"
}

SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "color" Color
ConstBuffer "$Globals" 192 // 176 used size, 10 vars
Float 128 [_WaveSpeed]
Float 132 [_Amplitude]
Vector 144 [unity_LightmapST] 4
Vector 160 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 0 [_Time] 4
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityPerDraw" 336 // 64 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityPerDraw" 2
// 26 instructions, 2 temp regs, 0 temp arrays:
// ALU 22 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecedjnicbcadldbmnlhmdlhffimflmfpmnbgabaaaaaaaeajaaaaaeaaaaaa
daaaaaaameadaaaaleahaaaahmaiaaaaebgpgodjimadaaaaimadaaaaaaacpopp
deadaaaafiaaaaaaaeaaceaaaaaafeaaaaaafeaaaaaaceaaabaafeaaaaaaaiaa
adaaabaaaaaaaaaaabaaaaaaabaaaeaaaaaaaaaaabaaafaaabaaafaaaaaaaaaa
acaaaaaaaeaaagaaaaaaaaaaaaaaaaaaaaacpoppfbaaaaafakaaapkajkjjljdp
bekoeheamnmmameaggggggdpfbaaaaafalaaapkaaaaaaaaaaaaaaamaidpjccdo
aaaaaadpfbaaaaafamaaapkanlapmjeanlapejmamnmmemdoaaaaaaaafbaaaaaf
anaaapkaabannalfgballglhklkkckdlijiiiidjfbaaaaafaoaaapkaklkkkklm
aaaaaaloaaaaiadpaaaaaadpbpaaaaacafaaaaiaaaaaapjabpaaaaacafaaadia
adaaapjabpaaaaacafaaaeiaaeaaapjaaeaaaaaeaaaaadoaadaaoejaadaaoeka
adaaookaaeaaaaaeaaaaamoaaeaabejaacaabekaacaalekaabaaaaacaaaaabia
abaaaakaafaaaaadaaaaabiaaaaaaaiaaeaaaakaamaaaaadaaaaaciaaaaaaaia
alaaaakaafaaaaadaaaaaciaaaaaffiaaaaaaaiaaeaaaaaeaaaaabiaaaaaffia
alaaffkaaaaaaaiaacaaaaadaaaaaciaaaaaffjaaaaaaajaacaaaaadaaaaacia
aaaaffiaaaaakkjaaeaaaaaeaaaaahiaaaaaaaiaakaaoekaaaaaffiaaeaaaaae
aaaaahiaaaaaoeiaalaakkkaalaappkabdaaaaacaaaaahiaaaaaoeiaaeaaaaae
aaaaahiaaaaaoeiaamaaaakaamaaffkacfaaaaaeabaaaciaaaaaffiaanaaoeka
aoaaoekaafaaaaadaaaaaciaabaaffiaadaaffjaafaaaaadaaaaaciaaaaaffia
abaaffkaafaaaaadaaaaaiiaadaaaajaadaaffjaafaaaaadaaaaaiiaaaaappia
akaappkaaeaaaaaeaaaaaciaaaaaffiaalaappkaaaaappibafaaaaadabaaapia
aaaaffiaahaaoekacfaaaaaeacaaaciaaaaaaaiaanaaoekaaoaaoekacfaaaaae
adaaaciaaaaakkiaanaaoekaaoaaoekaafaaaaadaaaaabiaadaaffiaadaaffja
afaaaaadaaaaabiaaaaaaaiaabaaffkaaeaaaaaeaaaaabiaaaaaaaiaamaakkkb
aaaakkjaafaaaaadaaaaaciaacaaffiaadaaffjaafaaaaadaaaaaciaaaaaffia
abaaffkaaeaaaaaeaaaaaciaaaaaffiaalaappkaaaaaaajaaeaaaaaeabaaapia
agaaoekaaaaaffiaabaaoeiaaeaaaaaeaaaaapiaaiaaoekaaaaaaaiaabaaoeia
aeaaaaaeaaaaapiaajaaoekaaaaappjaaaaaoeiaafaaaaadabaaabiaaaaaffia
afaaaakaafaaaaadabaaaiiaabaaaaiaalaappkaafaaaaadabaaafiaaaaapeia
alaappkaacaaaaadabaaadoaabaakkiaabaaomiaaeaaaaaeaaaaadmaaaaappia
aaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeiaabaaaaacabaaamoaaaaaoeia
ppppaaaafdeieefcoiadaaaaeaaaabaapkaaaaaafjaaaaaeegiocaaaaaaaaaaa
alaaaaaafjaaaaaeegiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaa
aeaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaaddcbabaaaadaaaaaafpaaaaad
dcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadmccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagiaaaaac
acaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaaaiaaaaaaakiacaaa
abaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaa
aaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaa
aaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaa
akbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaa
aaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdp
bekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaa
aanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaa
fgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaa
aaaaaaaaaiaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaa
aaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaa
dcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdp
bkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaa
acaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaa
aaaaaadpakbabaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaackaabaiaebaaaaaa
aaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaa
egiocaaaacaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaapgbpbaaa
aaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaakaaaaaa
ogikcaaaaaaaaaaaakaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaaeaaaaaa
agiecaaaaaaaaaaaajaaaaaakgiocaaaaaaaaaaaajaaaaaadiaaaaaiccaabaaa
aaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaa
abaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadp
dgaaaaafmccabaaaacaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaacaaaaaa
kgakbaaaabaaaaaamgaabaaaabaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaa
apadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeo
ehefeofeaaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheo
iaaaaaaaaeaaaaaaaiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaa
apaaaaaaheaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaheaaaaaa
abaaaaaaaaaaaaaaadaaaaaaabaaaaaaamadaaaaheaaaaaaacaaaaaaaaaaaaaa
adaaaaaaacaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklkl"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 403
struct Input {
    highp vec2 uv_MainTex;
};
#line 425
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec2 lmap;
    highp vec4 _ShadowCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _ShadowOffsets[4];
uniform sampler2D _ShadowMapTexture;
#line 393
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 401
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 408
#line 433
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform sampler2D unity_Lightmap;
uniform lowp float _Cutoff;
#line 449
#line 408
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 412
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 416
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 435
v2f_surf vert_surf( in appdata_full v ) {
    #line 437
    v2f_surf o;
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    #line 441
    o.lmap.xy = ((v.texcoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp vec3 worldN = (mat3( _Object2World) * (v.normal * unity_Scale.w));
    o._ShadowCoord = (unity_World2Shadow[0] * (_Object2World * v.vertex));
    #line 445
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec2(xl_retval.lmap);
    xlv_TEXCOORD2 = vec4(xl_retval._ShadowCoord);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 403
struct Input {
    highp vec2 uv_MainTex;
};
#line 425
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec2 lmap;
    highp vec4 _ShadowCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _ShadowOffsets[4];
uniform sampler2D _ShadowMapTexture;
#line 393
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 401
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 408
#line 433
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform sampler2D unity_Lightmap;
uniform lowp float _Cutoff;
#line 449
#line 177
lowp vec3 DecodeLightmap( in lowp vec4 color ) {
    #line 179
    return (2.0 * color.xyz);
}
#line 419
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 421
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 393
lowp float unitySampleShadow( in highp vec4 shadowCoord ) {
    highp float dist = textureProj( _ShadowMapTexture, shadowCoord).x;
    mediump float lightShadowDataX = _LightShadowData.x;
    #line 397
    return max( float((dist > (shadowCoord.z / shadowCoord.w))), lightShadowDataX);
}
#line 449
lowp vec4 frag_surf( in v2f_surf IN ) {
    Input surfIN;
    surfIN.uv_MainTex = IN.pack0.xy;
    #line 453
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    o.Emission = vec3( 0.0);
    o.Specular = 0.0;
    #line 457
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    #line 461
    lowp float atten = unitySampleShadow( IN._ShadowCoord);
    lowp vec4 c = vec4( 0.0);
    lowp vec4 lmtex = texture( unity_Lightmap, IN.lmap.xy);
    lowp vec3 lm = DecodeLightmap( lmtex);
    #line 465
    c.xyz += (o.Albedo * min( lm, vec3( (atten * 2.0))));
    c.w = o.Alpha;
    c.w = o.Alpha;
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.lmap = vec2(xlv_TEXCOORD1);
    xlt_IN._ShadowCoord = vec4(xlv_TEXCOORD2);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 9 [_Time]
Vector 10 [_ProjectionParams]
Float 11 [_WaveSpeed]
Float 12 [_Amplitude]
Vector 13 [unity_LightmapST]
Vector 14 [_MainTex_ST]
"!!ARBvp1.0
# 75 ALU
PARAM c[20] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.mvp,
		program.local[5..14],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[11];
MUL R0.x, R0, c[9];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[15];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[16].xyxw, c[16].zwzw;
MAD R1.xyz, R1, R0, c[17].xyxw;
MAD R1.xyz, R1, R0, c[17].zwzw;
MAD R1.xyz, R1, R0, c[18].xyxw;
MAD R0.xyz, R1, R0, c[15].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[18].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[15].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[19].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[12];
MAD R0.w, -R0.x, c[19].x, vertex.position.z;
MAD R0.x, R1.w, c[19].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[15];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[16].xyxw, c[16].zwzw;
MAD R3.xyz, R2, R0, c[17].xyxw;
MAD R3.xyz, R3, R0, c[17].zwzw;
MAD R3.xyz, R3, R0, c[18].xyxw;
ADD R1.xyz, -R1.w, c[15];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[16].xyxw, c[16].zwzw;
MAD R2.xyz, R2, R1, c[17].xyxw;
MAD R2.xyz, R2, R1, c[17].zwzw;
MAD R3.xyz, R3, R0, c[15].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[18].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[15].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[18].xyxw;
MAD R1.xyz, R0, R1, c[15].wzww;
SGE R0.yz, R1.w, c[18].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[15].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R0.x, R0, c[12];
MUL R0.y, -R0, c[19].z;
MAD R0.y, R0.x, c[15], R0;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R2.w, c[12];
MAD R0.x, R0, c[15].y, vertex.position;
DP4 R1.w, R0.xywz, c[4];
DP4 R1.z, R0.xywz, c[3];
DP4 R1.x, R0.xywz, c[1];
DP4 R1.y, R0.xywz, c[2];
MUL R2.xyz, R1.xyww, c[15].y;
MUL R2.y, R2, c[10].x;
ADD result.texcoord[2].xy, R2, R2.z;
MOV result.position, R1;
MOV result.texcoord[2].zw, R1;
MAD result.texcoord[0].xy, vertex.texcoord[0], c[14], c[14].zwzw;
MAD result.texcoord[1].xy, vertex.texcoord[1], c[13], c[13].zwzw;
END
# 75 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Vector 9 [_ProjectionParams]
Vector 10 [_ScreenParams]
Float 11 [_WaveSpeed]
Float 12 [_Amplitude]
Vector 13 [unity_LightmapST]
Vector 14 [_MainTex_ST]
"vs_2_0
; 75 ALU
def c15, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c16, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c17, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c18, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c19, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_texcoord0 v3
dcl_texcoord1 v4
add r0.w, v0.x, v0.y
mov r0.x, c8
mul r0.x, c11, r0
slt r0.y, r0.x, c17.x
max r0.y, -r0, r0
slt r0.y, c17.x, r0
add r0.z, -r0.y, c15
mul r0.z, r0.x, r0
mad r1.y, r0, -r0.x, r0.z
add r1.x, r0.w, v0.z
mad r0.x, r1.y, c17.y, r1
mad r0.x, r0, c17.z, c17.w
frc r0.x, r0
mad r1.z, r0.x, c18.x, c18.y
sincos r0.xy, r1.z, c16.xyzw, c15.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1, c19.x, r1.x
mul r0.x, r0, c12
mad r1.z, -r0.x, c19.y, v0
mad r0.x, r1.y, c18.z, r1
mad r0.x, r0, c17.z, c17.w
mad r0.y, r0, c17.z, c17.w
frc r0.y, r0
mov r1.w, v0
mad r1.y, r0, c18.x, c18
frc r1.x, r0
sincos r0.xy, r1.y, c16.xyzw, c15.xyzw
mad r0.x, r1, c18, c18.y
sincos r2.xy, r0.x, c16.xyzw, c15.xyzw
mul r0.z, v3.y, r0.y
mul r0.x, v3.y, r2.y
mul r0.y, v3, v3.x
mul r0.y, -r0, c18.w
mul r0.x, r0, c12
mad r1.y, r0.x, c15.w, r0
mul r0.x, r0.z, c12
mad r1.x, r0, c15.w, v0
dp4 r0.w, r1, c3
dp4 r0.z, r1, c2
dp4 r0.x, r1, c0
dp4 r0.y, r1, c1
mul r2.xyz, r0.xyww, c15.w
mul r2.y, r2, c9.x
mad oT2.xy, r2.z, c10.zwzw, r2
mov oPos, r0
mov oT2.zw, r0
mad oT0.xy, v3, c14, c14.zwzw
mad oT1.xy, v4, c13, c13.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Float 8 [_Amplitude]
Vector 10 [_MainTex_ST]
Vector 1 [_ProjectionParams]
Vector 2 [_ScreenParams]
Vector 0 [_Time]
Float 7 [_WaveSpeed]
Matrix 3 [glstate_matrix_mvp] 4
Vector 9 [unity_LightmapST]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 36.00-37.33 (27-28 instructions), vertex: 32, texture: 0,
//   sequencer: 16,  5 GPRs, 31 threads,
// Performance (if enough threads): ~36-37 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacamaaaaabpaaaaaaaaaaaaaaaceaaaaabjeaaaaablmaaaaaaaa
aaaaaaaaaaaaabgmaaaaaabmaaaaabgapppoadaaaaaaaaaiaaaaaabmaaaaaaaa
aaaaabfjaaaaaalmaaacaaaiaaabaaaaaaaaaamiaaaaaaaaaaaaaaniaaacaaak
aaabaaaaaaaaaaoeaaaaaaaaaaaaaapeaaacaaabaaabaaaaaaaaaaoeaaaaaaaa
aaaaabagaaacaaacaaabaaaaaaaaaaoeaaaaaaaaaaaaabbeaaacaaaaaaabaaaa
aaaaaaoeaaaaaaaaaaaaabbkaaacaaahaaabaaaaaaaaaamiaaaaaaaaaaaaabcf
aaacaaadaaaeaaaaaaaaabdiaaaaaaaaaaaaabeiaaacaaajaaabaaaaaaaaaaoe
aaaaaaaafpebgnhagmgjhehfgegfaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaa
fpengbgjgofegfhifpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpfahcgp
gkgfgdhegjgpgofagbhcgbgnhdaafpfdgdhcgfgfgofagbhcgbgnhdaafpfegjgn
gfaafpfhgbhggffdhagfgfgeaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaa
aaadaaadaaaeaaaeaaabaaaaaaaaaaaahfgogjhehjfpemgjghgihegngbhafdfe
aahghdfpddfpdaaadccodacodcdadddfddcodaaaaaaaaaaaaaaaaaabaaaaaaaa
aaaaaaaaaaaaaabeaapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaea
aaaaablaaacbaaaeaaaaaaaaaaaaaaaaaaaacagdaaaaaaabaaaaaaadaaaaaaae
aaaaacjaaabaaaaeaaaafaafaacbfaagaaaadafaaaabdbfbaaacpcfcaaaababp
aaaabacaaaaaaaboaaaabaccaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadoccpjid
lpiaaaaamaejapnldpiaaaaadpaaaaaadoemmmmndpggggggeamjapnldpljjjjk
eaehkobeeaammmmndpaaaaaahajfgaaebaakbaaafgaaaaaaaaaaaaaagaalmcaa
bcaaaaaaaaaagabbgabhbcaabcaaaaaaaaaaaaaagabnmeaaccaaaaaaafpicaaa
aaaaagiiaaaaaaaaafpibaaaaaaaacdpaaaaaaaaafpibaaaaaaaapmiaaaaaaaa
miacaaaaaagmlbaacbaapnaamiabaaaaaagmgmaacbaaahaaheaeaaaaabloblgm
laacpnaakibaaaaabiaaaaebmcaaaaahmiabaaadaablmgaaobababaamiahaaaa
aagmmamgklaappaamiahaaaaaamagmblilaapnppmiaoaaadaapmaaaaoiaaaaaa
miapaaadaanabkaakbadpoaamiahaaaaaamjmgaakaadpnaamabaaaaaaaaaaagm
ocaaaaaamacaaaaaaaaaaalbocaaaaaamaedaaaeaabllamgkbabpoaamiahaaaa
aalmmaaaobaeaaaamiaoaaadaapmgmaakbaaaiaamiabaaacaalbgmaaoaadacaa
beapaaaaaablaamgkbacagadaeceacacafblmggmoaadacadmiapaaaaaamgnana
klacafaamiapaaaaaalbdepiklacaeaamiapaaacaagmnajeklacadaamiapiado
aananaaaocacacaamiahaaaaaamablaakbacppaamiamiaacaanlnlaaocacacaa
miadiaaaaabklabkilabakakmiadiaabaalalabkilabajajkiiaaaaaaaaaaaeb
mcaaaaabmiadiaacaamgbkbiklaaacaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 467 [_Time]
Vector 466 [_ProjectionParams]
Float 465 [_WaveSpeed]
Float 464 [_Amplitude]
Vector 463 [unity_LightmapST]
Vector 462 [_MainTex_ST]
"sce_vp_rsx // 32 instructions using 3 registers
[Configuration]
8
0000002003010300
[Defaults]
2
461 4
400ccccd3e4ccccd4047ae143f000000
460 2
3f6666663fb9999a
[Microcode]
512
401f9c6c011ce808010400d740619f9c00001c6c00c000000106c08aa0409ffc
00001c6c005d10000186c08360411ffc00001c6c009d3000008000c360411ffc
201fdc6c004000000086c08360411ffc00001c6c00c000550106c08aa0203ffc
00001c6c004000000086c08360405ffc00002400004000800086c08360405ffc
00001c6c011cd055008800dfe0219ffc00001c6c011cc055009540dfe0205ffc
00009c6c7880082a8100008aa029007c00009c6c789cc080028000c00031007c
00011c6c7880082a81154055402900fc00001c6c008008000095408360409ffc
00001c6c0080082a8115414360411ffc00001c6c009d0000008000c360411ffc
00001c6c009d002a808000c360409ffc00001c6c009d0000048000c360405ffc
00009c6c011cd05500bfc0c000a09ffc00009c6c011cd0aa809540d540405ffc
00009c6c011cd00000bfc0c000411ffc00009c6c0040007f8106c08360403ffc
00001c6c01d0300d8286c0c360403ffc00001c6c01d0200d8286c0c360405ffc
00001c6c01d0100d8286c0c360409ffc00001c6c01d0000d8286c0c360411ffc
401f9c6c011cf908010400d740619fa0401f9c6c0040000d8086c0836041ff80
401f9c6c004000558086c08360407fa400001c6c009cd00e00bfc0c36041dffc
00001c6c009d202a808000c360409ffc401f9c6c00c000080086c09540219fa5
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "color" Color
ConstBuffer "$Globals" 192 // 176 used size, 10 vars
Float 128 [_WaveSpeed]
Float 132 [_Amplitude]
Vector 144 [unity_LightmapST] 4
Vector 160 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 0 [_Time] 4
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityPerDraw" 336 // 64 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityPerDraw" 2
// 26 instructions, 2 temp regs, 0 temp arrays:
// ALU 22 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedcelebahlphllbohhleaigojepaniclmgabaaaaaagmafaaaaadaaaaaa
cmaaaaaapeaaaaaahmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaa
aiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaheaaaaaaabaaaaaaaaaaaaaa
adaaaaaaabaaaaaaamadaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apaaaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefc
oiadaaaaeaaaabaapkaaaaaafjaaaaaeegiocaaaaaaaaaaaalaaaaaafjaaaaae
egiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaaaeaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaaddcbabaaaadaaaaaafpaaaaaddcbabaaaaeaaaaaa
ghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaad
mccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagiaaaaacacaaaaaadiaaaaaj
bcaabaaaaaaaaaaaakiacaaaaaaaaaaaaiaaaaaaakiacaaaabaaaaaaaaaaaaaa
dbaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaak
bcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaa
aaaaaaaaaaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaa
aaaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaam
hcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdpbekoeheamnmmamea
aaaaaaaafgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaa
aaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaa
diaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaaaaaaaaaaaiaaaaaa
diaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaah
icaabaaaaaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaa
aaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaa
diaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaa
dcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaa
aaaaaaaadcaaaaakccaabaaaaaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaa
mnmmemdockbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaacaaaaaa
aaaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaacaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaa
aaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaa
abaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaakaaaaaaogikcaaaaaaaaaaa
akaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaaeaaaaaaagiecaaaaaaaaaaa
ajaaaaaakgiocaaaaaaaaaaaajaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaa
aaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaa
aaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaa
acaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaacaaaaaakgakbaaaabaaaaaa
mgaabaaaabaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" }
"!!GLES


#ifdef VERTEX

varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp float t_2;
  highp float tmpvar_3;
  tmpvar_3 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_4;
  tmpvar_4 = (_Time * _WaveSpeed).x;
  t_2 = tmpvar_4;
  if ((tmpvar_4 < 0.0)) {
    t_2 = (tmpvar_4 * -1.0);
  };
  tmpvar_1.x = (_glesVertex.x + (((sin(((t_2 * 1.45) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_1.y = ((((sin(((t_2 * 3.12) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_1.z = (_glesVertex.z - (((sin(((t_2 * 2.2) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  gl_Position = (glstate_matrix_mvp * tmpvar_1);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (unity_World2Shadow[0] * (_Object2World * tmpvar_1));
}



#endif
#ifdef FRAGMENT

varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D unity_Lightmap;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _LightShadowData;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float x_5;
  x_5 = (c_2.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  lowp float tmpvar_6;
  mediump float lightShadowDataX_7;
  highp float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD2).x;
  dist_8 = tmpvar_9;
  highp float tmpvar_10;
  tmpvar_10 = _LightShadowData.x;
  lightShadowDataX_7 = tmpvar_10;
  highp float tmpvar_11;
  tmpvar_11 = max (float((dist_8 > (xlv_TEXCOORD2.z / xlv_TEXCOORD2.w))), lightShadowDataX_7);
  tmpvar_6 = tmpvar_11;
  mediump vec3 lm_12;
  lowp vec3 tmpvar_13;
  tmpvar_13 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz);
  lm_12 = tmpvar_13;
  lowp vec3 tmpvar_14;
  tmpvar_14 = vec3((tmpvar_6 * 2.0));
  mediump vec3 tmpvar_15;
  tmpvar_15 = (c_2.xyz * min (lm_12, tmpvar_14));
  c_1.xyz = tmpvar_15;
  c_1.w = c_2.w;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" }
"!!GLES


#ifdef VERTEX

varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp float t_2;
  highp float tmpvar_3;
  tmpvar_3 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_4;
  tmpvar_4 = (_Time * _WaveSpeed).x;
  t_2 = tmpvar_4;
  if ((tmpvar_4 < 0.0)) {
    t_2 = (tmpvar_4 * -1.0);
  };
  tmpvar_1.x = (_glesVertex.x + (((sin(((t_2 * 1.45) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_1.y = ((((sin(((t_2 * 3.12) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_1.z = (_glesVertex.z - (((sin(((t_2 * 2.2) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_mvp * tmpvar_1);
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_5.zw;
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = o_6;
}



#endif
#ifdef FRAGMENT

varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D unity_Lightmap;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform sampler2D _ShadowMapTexture;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float x_5;
  x_5 = (c_2.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD2);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (unity_Lightmap, xlv_TEXCOORD1);
  mediump vec3 lm_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = ((8.0 * tmpvar_7.w) * tmpvar_7.xyz);
  lm_8 = tmpvar_9;
  lowp vec3 arg1_10;
  arg1_10 = ((tmpvar_6.x * 2.0) * tmpvar_7.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (c_2.xyz * max (min (lm_8, arg1_10), (lm_8 * tmpvar_6.x)));
  c_1.xyz = tmpvar_11;
  c_1.w = c_2.w;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "flash " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Vector 9 [_ProjectionParams]
Vector 10 [unity_NPOTScale]
Float 11 [_WaveSpeed]
Float 12 [_Amplitude]
Vector 13 [unity_LightmapST]
Vector 14 [_MainTex_ST]
"agal_vs
c15 -0.020833 -0.125 1.0 0.5
c16 -0.000002 -0.000022 0.002604 0.00026
c17 0.0 2.2 0.159155 0.5
c18 6.283185 -3.141593 3.12 0.9
c19 1.45 0.2 0.0 0.0
[bc]
abaaaaaaaaaaaiacaaaaaaaaaaaaaaaaaaaaaaffaaaaaaaa add r0.w, a0.x, a0.y
aaaaaaaaaaaaabacaiaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r0.x, c8
adaaaaaaaaaaabacalaaaaoeabaaaaaaaaaaaaaaacaaaaaa mul r0.x, c11, r0.x
ckaaaaaaaaaaacacaaaaaaaaacaaaaaabbaaaaaaabaaaaaa slt r0.y, r0.x, c17.x
bfaaaaaaabaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r1.y, r0.y
ahaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa max r0.y, r1.y, r0.y
ckaaaaaaaaaaacacbbaaaaaaabaaaaaaaaaaaaffacaaaaaa slt r0.y, c17.x, r0.y
bfaaaaaaacaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r2.y, r0.y
abaaaaaaaaaaaeacacaaaaffacaaaaaaapaaaaoeabaaaaaa add r0.z, r2.y, c15
adaaaaaaaaaaaeacaaaaaaaaacaaaaaaaaaaaakkacaaaaaa mul r0.z, r0.x, r0.z
bfaaaaaaacaaaiacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r2.w, r0.x
adaaaaaaabaaacacaaaaaaffacaaaaaaacaaaappacaaaaaa mul r1.y, r0.y, r2.w
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaakkacaaaaaa add r1.y, r1.y, r0.z
abaaaaaaabaaabacaaaaaappacaaaaaaaaaaaakkaaaaaaaa add r1.x, r0.w, a0.z
adaaaaaaaaaaabacabaaaaffacaaaaaabbaaaaffabaaaaaa mul r0.x, r1.y, c17.y
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaabbaaaakkabaaaaaa mul r0.x, r0.x, c17.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaabbaaaappabaaaaaa add r0.x, r0.x, c17.w
aiaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r0.x, r0.x
adaaaaaaabaaaeacaaaaaaaaacaaaaaabcaaaaaaabaaaaaa mul r1.z, r0.x, c18.x
abaaaaaaabaaaeacabaaaakkacaaaaaabcaaaaffabaaaaaa add r1.z, r1.z, c18.y
apaaaaaaaaaaabacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.z
baaaaaaaaaaaacacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.z
adaaaaaaaaaaabacaaaaaaffacaaaaaaadaaaaffaaaaaaaa mul r0.x, r0.y, a3.y
adaaaaaaaaaaacacabaaaaffacaaaaaabdaaaaaaabaaaaaa mul r0.y, r1.y, c19.x
abaaaaaaaaaaacacaaaaaaffacaaaaaaabaaaaaaacaaaaaa add r0.y, r0.y, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaamaaaaoeabaaaaaa mul r0.x, r0.x, c12
bfaaaaaaadaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r3.x, r0.x
adaaaaaaabaaaeacadaaaaaaacaaaaaabdaaaaffabaaaaaa mul r1.z, r3.x, c19.y
abaaaaaaabaaaeacabaaaakkacaaaaaaaaaaaaoeaaaaaaaa add r1.z, r1.z, a0
adaaaaaaaaaaabacabaaaaffacaaaaaabcaaaakkabaaaaaa mul r0.x, r1.y, c18.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaabbaaaakkabaaaaaa mul r0.x, r0.x, c17.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaabbaaaappabaaaaaa add r0.x, r0.x, c17.w
adaaaaaaaaaaacacaaaaaaffacaaaaaabbaaaakkabaaaaaa mul r0.y, r0.y, c17.z
abaaaaaaaaaaacacaaaaaaffacaaaaaabbaaaappabaaaaaa add r0.y, r0.y, c17.w
aiaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa frc r0.y, r0.y
aaaaaaaaabaaaiacaaaaaaoeaaaaaaaaaaaaaaaaaaaaaaaa mov r1.w, a0
adaaaaaaabaaacacaaaaaaffacaaaaaabcaaaaaaabaaaaaa mul r1.y, r0.y, c18.x
abaaaaaaabaaacacabaaaaffacaaaaaabcaaaaoeabaaaaaa add r1.y, r1.y, c18
aiaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r1.x, r0.x
apaaaaaaaaaaabacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.y
baaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.y
adaaaaaaaaaaabacabaaaaaaacaaaaaabcaaaaoeabaaaaaa mul r0.x, r1.x, c18
abaaaaaaaaaaabacaaaaaaaaacaaaaaabcaaaaffabaaaaaa add r0.x, r0.x, c18.y
apaaaaaaacaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sin r2.x, r0.x
baaaaaaaacaaacacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa cos r2.y, r0.x
adaaaaaaaaaaaeacadaaaaffaaaaaaaaaaaaaaffacaaaaaa mul r0.z, a3.y, r0.y
adaaaaaaaaaaabacadaaaaffaaaaaaaaacaaaaffacaaaaaa mul r0.x, a3.y, r2.y
adaaaaaaaaaaacacadaaaaoeaaaaaaaaadaaaaaaaaaaaaaa mul r0.y, a3, a3.x
bfaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r0.y, r0.y
adaaaaaaaaaaacacaaaaaaffacaaaaaabcaaaappabaaaaaa mul r0.y, r0.y, c18.w
adaaaaaaaaaaabacaaaaaaaaacaaaaaaamaaaaoeabaaaaaa mul r0.x, r0.x, c12
adaaaaaaabaaacacaaaaaaaaacaaaaaaapaaaappabaaaaaa mul r1.y, r0.x, c15.w
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa add r1.y, r1.y, r0.y
adaaaaaaaaaaabacaaaaaakkacaaaaaaamaaaaoeabaaaaaa mul r0.x, r0.z, c12
adaaaaaaabaaabacaaaaaaaaacaaaaaaapaaaappabaaaaaa mul r1.x, r0.x, c15.w
abaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaaoeaaaaaaaa add r1.x, r1.x, a0
bdaaaaaaaaaaaiacabaaaaoeacaaaaaaadaaaaoeabaaaaaa dp4 r0.w, r1, c3
bdaaaaaaaaaaaeacabaaaaoeacaaaaaaacaaaaoeabaaaaaa dp4 r0.z, r1, c2
bdaaaaaaaaaaabacabaaaaoeacaaaaaaaaaaaaoeabaaaaaa dp4 r0.x, r1, c0
bdaaaaaaaaaaacacabaaaaoeacaaaaaaabaaaaoeabaaaaaa dp4 r0.y, r1, c1
adaaaaaaacaaahacaaaaaapeacaaaaaaapaaaappabaaaaaa mul r2.xyz, r0.xyww, c15.w
adaaaaaaacaaacacacaaaaffacaaaaaaajaaaaaaabaaaaaa mul r2.y, r2.y, c9.x
abaaaaaaacaaadacacaaaafeacaaaaaaacaaaakkacaaaaaa add r2.xy, r2.xyyy, r2.z
adaaaaaaacaaadaeacaaaafeacaaaaaaakaaaaoeabaaaaaa mul v2.xy, r2.xyyy, c10
aaaaaaaaaaaaapadaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r0
aaaaaaaaacaaamaeaaaaaaopacaaaaaaaaaaaaaaaaaaaaaa mov v2.zw, r0.wwzw
adaaaaaaadaaadacadaaaaoeaaaaaaaaaoaaaaoeabaaaaaa mul r3.xy, a3, c14
abaaaaaaaaaaadaeadaaaafeacaaaaaaaoaaaaooabaaaaaa add v0.xy, r3.xyyy, c14.zwzw
adaaaaaaadaaadacaeaaaaoeaaaaaaaaanaaaaoeabaaaaaa mul r3.xy, a4, c13
abaaaaaaabaaadaeadaaaafeacaaaaaaanaaaaooabaaaaaa add v1.xy, r3.xyyy, c13.zwzw
aaaaaaaaaaaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v0.zw, c0
aaaaaaaaabaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v1.zw, c0
"
}

SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "color" Color
ConstBuffer "$Globals" 192 // 176 used size, 10 vars
Float 128 [_WaveSpeed]
Float 132 [_Amplitude]
Vector 144 [unity_LightmapST] 4
Vector 160 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 0 [_Time] 4
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityPerDraw" 336 // 64 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityPerDraw" 2
// 26 instructions, 2 temp regs, 0 temp arrays:
// ALU 22 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecedjnicbcadldbmnlhmdlhffimflmfpmnbgabaaaaaaaeajaaaaaeaaaaaa
daaaaaaameadaaaaleahaaaahmaiaaaaebgpgodjimadaaaaimadaaaaaaacpopp
deadaaaafiaaaaaaaeaaceaaaaaafeaaaaaafeaaaaaaceaaabaafeaaaaaaaiaa
adaaabaaaaaaaaaaabaaaaaaabaaaeaaaaaaaaaaabaaafaaabaaafaaaaaaaaaa
acaaaaaaaeaaagaaaaaaaaaaaaaaaaaaaaacpoppfbaaaaafakaaapkajkjjljdp
bekoeheamnmmameaggggggdpfbaaaaafalaaapkaaaaaaaaaaaaaaamaidpjccdo
aaaaaadpfbaaaaafamaaapkanlapmjeanlapejmamnmmemdoaaaaaaaafbaaaaaf
anaaapkaabannalfgballglhklkkckdlijiiiidjfbaaaaafaoaaapkaklkkkklm
aaaaaaloaaaaiadpaaaaaadpbpaaaaacafaaaaiaaaaaapjabpaaaaacafaaadia
adaaapjabpaaaaacafaaaeiaaeaaapjaaeaaaaaeaaaaadoaadaaoejaadaaoeka
adaaookaaeaaaaaeaaaaamoaaeaabejaacaabekaacaalekaabaaaaacaaaaabia
abaaaakaafaaaaadaaaaabiaaaaaaaiaaeaaaakaamaaaaadaaaaaciaaaaaaaia
alaaaakaafaaaaadaaaaaciaaaaaffiaaaaaaaiaaeaaaaaeaaaaabiaaaaaffia
alaaffkaaaaaaaiaacaaaaadaaaaaciaaaaaffjaaaaaaajaacaaaaadaaaaacia
aaaaffiaaaaakkjaaeaaaaaeaaaaahiaaaaaaaiaakaaoekaaaaaffiaaeaaaaae
aaaaahiaaaaaoeiaalaakkkaalaappkabdaaaaacaaaaahiaaaaaoeiaaeaaaaae
aaaaahiaaaaaoeiaamaaaakaamaaffkacfaaaaaeabaaaciaaaaaffiaanaaoeka
aoaaoekaafaaaaadaaaaaciaabaaffiaadaaffjaafaaaaadaaaaaciaaaaaffia
abaaffkaafaaaaadaaaaaiiaadaaaajaadaaffjaafaaaaadaaaaaiiaaaaappia
akaappkaaeaaaaaeaaaaaciaaaaaffiaalaappkaaaaappibafaaaaadabaaapia
aaaaffiaahaaoekacfaaaaaeacaaaciaaaaaaaiaanaaoekaaoaaoekacfaaaaae
adaaaciaaaaakkiaanaaoekaaoaaoekaafaaaaadaaaaabiaadaaffiaadaaffja
afaaaaadaaaaabiaaaaaaaiaabaaffkaaeaaaaaeaaaaabiaaaaaaaiaamaakkkb
aaaakkjaafaaaaadaaaaaciaacaaffiaadaaffjaafaaaaadaaaaaciaaaaaffia
abaaffkaaeaaaaaeaaaaaciaaaaaffiaalaappkaaaaaaajaaeaaaaaeabaaapia
agaaoekaaaaaffiaabaaoeiaaeaaaaaeaaaaapiaaiaaoekaaaaaaaiaabaaoeia
aeaaaaaeaaaaapiaajaaoekaaaaappjaaaaaoeiaafaaaaadabaaabiaaaaaffia
afaaaakaafaaaaadabaaaiiaabaaaaiaalaappkaafaaaaadabaaafiaaaaapeia
alaappkaacaaaaadabaaadoaabaakkiaabaaomiaaeaaaaaeaaaaadmaaaaappia
aaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeiaabaaaaacabaaamoaaaaaoeia
ppppaaaafdeieefcoiadaaaaeaaaabaapkaaaaaafjaaaaaeegiocaaaaaaaaaaa
alaaaaaafjaaaaaeegiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaa
aeaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaaddcbabaaaadaaaaaafpaaaaad
dcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadmccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagiaaaaac
acaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaaaiaaaaaaakiacaaa
abaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaa
aaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaa
aaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaa
akbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaa
aaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdp
bekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaa
aanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaa
fgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaa
aaaaaaaaaiaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaa
aaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaa
dcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdp
bkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaa
acaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaa
aaaaaadpakbabaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaackaabaiaebaaaaaa
aaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaa
egiocaaaacaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaapgbpbaaa
aaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaakaaaaaa
ogikcaaaaaaaaaaaakaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaaeaaaaaa
agiecaaaaaaaaaaaajaaaaaakgiocaaaaaaaaaaaajaaaaaadiaaaaaiccaabaaa
aaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaa
abaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadp
dgaaaaafmccabaaaacaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaacaaaaaa
kgakbaaaabaaaaaamgaabaaaabaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaa
apadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeo
ehefeofeaaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheo
iaaaaaaaaeaaaaaaaiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaa
apaaaaaaheaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaheaaaaaa
abaaaaaaaaaaaaaaadaaaaaaabaaaaaaamadaaaaheaaaaaaacaaaaaaaaaaaaaa
adaaaaaaacaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklkl"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 403
struct Input {
    highp vec2 uv_MainTex;
};
#line 425
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec2 lmap;
    highp vec4 _ShadowCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _ShadowOffsets[4];
uniform sampler2D _ShadowMapTexture;
#line 393
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 401
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 408
#line 433
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
#line 449
uniform lowp float _Cutoff;
#line 408
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 412
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 416
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 435
v2f_surf vert_surf( in appdata_full v ) {
    #line 437
    v2f_surf o;
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    #line 441
    o.lmap.xy = ((v.texcoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp vec3 worldN = (mat3( _Object2World) * (v.normal * unity_Scale.w));
    o._ShadowCoord = (unity_World2Shadow[0] * (_Object2World * v.vertex));
    #line 445
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec2(xl_retval.lmap);
    xlv_TEXCOORD2 = vec4(xl_retval._ShadowCoord);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
mat2 xll_transpose_mf2x2(mat2 m) {
  return mat2( m[0][0], m[1][0], m[0][1], m[1][1]);
}
mat3 xll_transpose_mf3x3(mat3 m) {
  return mat3( m[0][0], m[1][0], m[2][0],
               m[0][1], m[1][1], m[2][1],
               m[0][2], m[1][2], m[2][2]);
}
mat4 xll_transpose_mf4x4(mat4 m) {
  return mat4( m[0][0], m[1][0], m[2][0], m[3][0],
               m[0][1], m[1][1], m[2][1], m[3][1],
               m[0][2], m[1][2], m[2][2], m[3][2],
               m[0][3], m[1][3], m[2][3], m[3][3]);
}
float xll_saturate_f( float x) {
  return clamp( x, 0.0, 1.0);
}
vec2 xll_saturate_vf2( vec2 x) {
  return clamp( x, 0.0, 1.0);
}
vec3 xll_saturate_vf3( vec3 x) {
  return clamp( x, 0.0, 1.0);
}
vec4 xll_saturate_vf4( vec4 x) {
  return clamp( x, 0.0, 1.0);
}
mat2 xll_saturate_mf2x2(mat2 m) {
  return mat2( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0));
}
mat3 xll_saturate_mf3x3(mat3 m) {
  return mat3( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0));
}
mat4 xll_saturate_mf4x4(mat4 m) {
  return mat4( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0), clamp(m[3], 0.0, 1.0));
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 403
struct Input {
    highp vec2 uv_MainTex;
};
#line 425
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec2 lmap;
    highp vec4 _ShadowCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _ShadowOffsets[4];
uniform sampler2D _ShadowMapTexture;
#line 393
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 401
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 408
#line 433
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
#line 449
uniform lowp float _Cutoff;
#line 177
lowp vec3 DecodeLightmap( in lowp vec4 color ) {
    #line 179
    return (2.0 * color.xyz);
}
#line 325
mediump vec3 DirLightmapDiffuse( in mediump mat3 dirBasis, in lowp vec4 color, in lowp vec4 scale, in mediump vec3 normal, in bool surfFuncWritesNormal, out mediump vec3 scalePerBasisVector ) {
    mediump vec3 lm = DecodeLightmap( color);
    scalePerBasisVector = DecodeLightmap( scale);
    #line 329
    if (surfFuncWritesNormal){
        mediump vec3 normalInRnmBasis = xll_saturate_vf3((dirBasis * normal));
        lm *= dot( normalInRnmBasis, scalePerBasisVector);
    }
    #line 334
    return lm;
}
#line 353
mediump vec4 LightingLambert_DirLightmap( in SurfaceOutput s, in lowp vec4 color, in lowp vec4 scale, in bool surfFuncWritesNormal ) {
    #line 355
    highp mat3 unity_DirBasis = xll_transpose_mf3x3(mat3( vec3( 0.816497, 0.0, 0.57735), vec3( -0.408248, 0.707107, 0.57735), vec3( -0.408248, -0.707107, 0.57735)));
    mediump vec3 scalePerBasisVector;
    mediump vec3 lm = DirLightmapDiffuse( unity_DirBasis, color, scale, s.Normal, surfFuncWritesNormal, scalePerBasisVector);
    return vec4( lm, 0.0);
}
#line 419
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 421
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 393
lowp float unitySampleShadow( in highp vec4 shadowCoord ) {
    highp float dist = textureProj( _ShadowMapTexture, shadowCoord).x;
    mediump float lightShadowDataX = _LightShadowData.x;
    #line 397
    return max( float((dist > (shadowCoord.z / shadowCoord.w))), lightShadowDataX);
}
#line 450
lowp vec4 frag_surf( in v2f_surf IN ) {
    Input surfIN;
    #line 453
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    o.Emission = vec3( 0.0);
    #line 457
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    surf( surfIN, o);
    #line 461
    xll_clip_f((o.Alpha - _Cutoff));
    lowp float atten = unitySampleShadow( IN._ShadowCoord);
    lowp vec4 c = vec4( 0.0);
    lowp vec4 lmtex = texture( unity_Lightmap, IN.lmap.xy);
    #line 465
    lowp vec4 lmIndTex = texture( unity_LightmapInd, IN.lmap.xy);
    mediump vec3 lm = LightingLambert_DirLightmap( o, lmtex, lmIndTex, false).xyz;
    c.xyz += (o.Albedo * min( lm, vec3( (atten * 2.0))));
    c.w = o.Alpha;
    #line 469
    c.w = o.Alpha;
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.lmap = vec2(xlv_TEXCOORD1);
    xlt_IN._ShadowCoord = vec4(xlv_TEXCOORD2);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 9 [_Time]
Vector 10 [unity_4LightPosX0]
Vector 11 [unity_4LightPosY0]
Vector 12 [unity_4LightPosZ0]
Vector 13 [unity_4LightAtten0]
Vector 14 [unity_LightColor0]
Vector 15 [unity_LightColor1]
Vector 16 [unity_LightColor2]
Vector 17 [unity_LightColor3]
Vector 18 [unity_SHAr]
Vector 19 [unity_SHAg]
Vector 20 [unity_SHAb]
Vector 21 [unity_SHBr]
Vector 22 [unity_SHBg]
Vector 23 [unity_SHBb]
Vector 24 [unity_SHC]
Matrix 5 [_Object2World]
Vector 25 [unity_Scale]
Float 26 [_WaveSpeed]
Float 27 [_Amplitude]
Vector 28 [_MainTex_ST]
"!!ARBvp1.0
# 121 ALU
PARAM c[34] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.mvp,
		program.local[5..28],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
MUL R6.xyz, vertex.normal, c[25].w;
DP3 R6.w, R6, c[6];
DP3 R7.x, R6, c[5];
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[26];
MUL R0.x, R0, c[9];
ADD R0.w, R0.y, vertex.position.z;
MOV R1.w, vertex.position;
MOV R7.y, R6.w;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.x, R0.y, R0.z, R0;
MAD R0.x, R1, c[0].y, R0.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.y, R0.x;
ADD R0.xyz, -R1.y, c[29];
MUL R0.xyz, R0, R0;
MAD R2.xyz, R0, c[30].xyxw, c[30].zwzw;
MAD R2.xyz, R2, R0, c[31].xyxw;
MAD R2.xyz, R2, R0, c[31].zwzw;
MAD R2.xyz, R2, R0, c[32].xyxw;
MAD R3.xyz, R2, R0, c[29].wzww;
SLT R2.x, R1.y, c[0].w;
SGE R2.yz, R1.y, c[32].xzww;
MOV R0.xz, R2;
DP3 R0.y, R2, c[29].wzww;
DP3 R0.x, R3, -R0;
MAD R0.y, R1.x, c[33].w, R0.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[27];
MAD R1.z, -R0.x, c[33].x, vertex.position;
MAD R0.x, R1, c[33].y, R0.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R1.x, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R2.xyz, -R1.x, c[29];
MUL R0.xyz, R2, R2;
MAD R3.xyz, R0, c[30].xyxw, c[30].zwzw;
MAD R4.xyz, R3, R0, c[31].xyxw;
MAD R4.xyz, R4, R0, c[31].zwzw;
MAD R4.xyz, R4, R0, c[32].xyxw;
ADD R2.xyz, -R0.w, c[29];
MUL R2.xyz, R2, R2;
MAD R3.xyz, R2, c[30].xyxw, c[30].zwzw;
MAD R3.xyz, R3, R2, c[31].xyxw;
MAD R3.xyz, R3, R2, c[31].zwzw;
MAD R4.xyz, R4, R0, c[29].wzww;
SLT R5.x, R1, c[0].w;
SGE R5.yz, R1.x, c[32].xzww;
MOV R0.xz, R5;
DP3 R0.y, R5, c[29].wzww;
DP3 R1.x, R4, -R0;
MAD R0.xyz, R3, R2, c[32].xyxw;
MAD R3.xyz, R0, R2, c[29].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[32].xzww;
MOV R0.xz, R2;
DP3 R0.y, R2, c[29].wzww;
DP3 R0.x, R3, -R0;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R7.w, c[29].z;
MUL R1.x, vertex.texcoord[0].y, R1;
MUL R0.y, -R0, c[33].z;
MUL R0.x, R0, c[27];
MAD R1.y, R0.x, c[29], R0;
MUL R0.x, R1, c[27];
MAD R1.x, R0, c[29].y, vertex.position;
DP4 R0.x, R1, c[6];
ADD R3, -R0.x, c[11];
MUL R0, R3, R3;
DP4 R2.x, R1, c[5];
ADD R2, -R2.x, c[10];
MAD R4, R2, R2, R0;
DP4 R5.x, R1, c[7];
ADD R0, -R5.x, c[12];
MAD R4, R0, R0, R4;
MUL R3, R6.w, R3;
MAD R2, R7.x, R2, R3;
DP3 R3.x, R6, c[7];
MAD R0, R3.x, R0, R2;
MUL R5, R4, c[13];
MOV R7.z, R3.x;
RSQ R2.x, R4.x;
RSQ R2.y, R4.y;
RSQ R2.z, R4.z;
RSQ R2.w, R4.w;
MUL R0, R0, R2;
ADD R2, R5, c[29].z;
RCP R2.x, R2.x;
RCP R2.y, R2.y;
RCP R2.w, R2.w;
RCP R2.z, R2.z;
MAX R0, R0, c[0].x;
MUL R0, R0, R2;
MUL R2.xyz, R0.y, c[15];
MAD R2.xyz, R0.x, c[14], R2;
MAD R0.xyz, R0.z, c[16], R2;
MAD R2.xyz, R0.w, c[17], R0;
MUL R0, R7.xyzz, R7.yzzx;
MUL R2.w, R6, R6;
DP4 R5.z, R0, c[23];
DP4 R5.y, R0, c[22];
DP4 R5.x, R0, c[21];
MAD R2.w, R7.x, R7.x, -R2;
DP4 R4.z, R7, c[20];
DP4 R4.y, R7, c[19];
DP4 R4.x, R7, c[18];
MUL R0.xyz, R2.w, c[24];
ADD R4.xyz, R4, R5;
ADD R0.xyz, R4, R0;
ADD result.texcoord[2].xyz, R0, R2;
DP4 result.position.w, R1, c[4];
DP4 result.position.z, R1, c[3];
DP4 result.position.y, R1, c[2];
DP4 result.position.x, R1, c[1];
MOV result.texcoord[1].z, R3.x;
MOV result.texcoord[1].y, R6.w;
MOV result.texcoord[1].x, R7;
MAD result.texcoord[0].xy, vertex.texcoord[0], c[28], c[28].zwzw;
END
# 121 instructions, 8 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Vector 9 [unity_4LightPosX0]
Vector 10 [unity_4LightPosY0]
Vector 11 [unity_4LightPosZ0]
Vector 12 [unity_4LightAtten0]
Vector 13 [unity_LightColor0]
Vector 14 [unity_LightColor1]
Vector 15 [unity_LightColor2]
Vector 16 [unity_LightColor3]
Vector 17 [unity_SHAr]
Vector 18 [unity_SHAg]
Vector 19 [unity_SHAb]
Vector 20 [unity_SHBr]
Vector 21 [unity_SHBg]
Vector 22 [unity_SHBb]
Vector 23 [unity_SHC]
Matrix 4 [_Object2World]
Vector 24 [unity_Scale]
Float 25 [_WaveSpeed]
Float 26 [_Amplitude]
Vector 27 [_MainTex_ST]
"vs_2_0
; 121 ALU
def c28, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c29, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c30, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c31, 6.28318501, -3.14159298, 0.20000000, 3.11999989
def c32, 0.89999998, 1.45000005, 0, 0
dcl_position0 v0
dcl_normal0 v2
dcl_texcoord0 v3
mul r4.xyz, v2, c24.w
dp3 r5.x, r4, c4
dp3 r4.w, r4, c5
dp3 r4.x, r4, c6
add r0.w, v0.x, v0.y
mov r0.x, c8
mul r0.x, c25, r0
slt r0.y, r0.x, c30.x
max r0.y, -r0, r0
slt r0.y, c30.x, r0
add r0.z, -r0.y, c28
mul r0.z, r0.x, r0
mad r1.x, r0.y, -r0, r0.z
add r1.y, r0.w, v0.z
mad r0.x, r1, c30.y, r1.y
mad r0.x, r0, c30.z, c30.w
frc r0.x, r0
mad r1.z, r0.x, c31.x, c31.y
sincos r0.xy, r1.z, c29.xyzw, c28.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1.x, c32, r1
mul r0.x, r0, c26
mad r1.z, -r0.x, c31, v0
mad r0.x, r1, c31.w, r1.y
mad r0.x, r0, c30.z, c30.w
mad r0.y, r0, c30.z, c30.w
frc r0.y, r0
mov r1.w, v0
mov r5.z, r4.x
mov r5.w, c28.z
mad r1.y, r0, c31.x, c31
frc r1.x, r0
sincos r0.xy, r1.y, c29.xyzw, c28.xyzw
mad r0.x, r1, c31, c31.y
sincos r2.xy, r0.x, c29.xyzw, c28.xyzw
mul r0.z, v3.y, r0.y
mul r0.x, v3.y, r2.y
mul r0.y, v3, v3.x
mul r0.y, -r0, c32.x
mul r0.x, r0, c26
mad r1.y, r0.x, c28.w, r0
mul r0.x, r0.z, c26
mad r1.x, r0, c28.w, v0
dp4 r0.y, r1, c5
add r2, -r0.y, c10
mul r3, r4.w, r2
dp4 r0.x, r1, c4
add r0, -r0.x, c9
mul r2, r2, r2
mad r3, r5.x, r0, r3
dp4 r5.y, r1, c6
mad r2, r0, r0, r2
add r0, -r5.y, c11
mad r2, r0, r0, r2
mad r0, r4.x, r0, r3
mul r3, r2, c12
mov r5.y, r4.w
rsq r2.x, r2.x
rsq r2.y, r2.y
rsq r2.w, r2.w
rsq r2.z, r2.z
mul r0, r0, r2
add r2, r3, c28.z
dp4 r3.z, r5, c19
dp4 r3.y, r5, c18
dp4 r3.x, r5, c17
rcp r2.x, r2.x
rcp r2.y, r2.y
rcp r2.w, r2.w
rcp r2.z, r2.z
max r0, r0, c30.x
mul r0, r0, r2
mul r2.xyz, r0.y, c14
mad r2.xyz, r0.x, c13, r2
mad r0.xyz, r0.z, c15, r2
mad r2.xyz, r0.w, c16, r0
mul r0, r5.xyzz, r5.yzzx
mul r2.w, r4, r4
dp4 r5.w, r0, c22
dp4 r5.z, r0, c21
dp4 r5.y, r0, c20
mad r2.w, r5.x, r5.x, -r2
mul r0.xyz, r2.w, c23
add r3.xyz, r3, r5.yzww
add r0.xyz, r3, r0
add oT2.xyz, r0, r2
dp4 oPos.w, r1, c3
dp4 oPos.z, r1, c2
dp4 oPos.y, r1, c1
dp4 oPos.x, r1, c0
mov oT1.z, r4.x
mov oT1.y, r4.w
mov oT1.x, r5
mad oT0.xy, v3, c27, c27.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Float 26 [_Amplitude]
Vector 27 [_MainTex_ST]
Matrix 20 [_Object2World] 4
Vector 0 [_Time]
Float 25 [_WaveSpeed]
Matrix 16 [glstate_matrix_mvp] 4
Vector 4 [unity_4LightAtten0]
Vector 1 [unity_4LightPosX0]
Vector 2 [unity_4LightPosY0]
Vector 3 [unity_4LightPosZ0]
Vector 5 [unity_LightColor0]
Vector 6 [unity_LightColor1]
Vector 7 [unity_LightColor2]
Vector 8 [unity_LightColor3]
Vector 11 [unity_SHAb]
Vector 10 [unity_SHAg]
Vector 9 [unity_SHAr]
Vector 14 [unity_SHBb]
Vector 13 [unity_SHBg]
Vector 12 [unity_SHBr]
Vector 15 [unity_SHC]
Vector 24 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 89.33-90.67 (67-68 instructions), vertex: 32, texture: 0,
//   sequencer: 30,  7 GPRs, 27 threads,
// Performance (if enough threads): ~89-90 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaadiiaaaaaeaaaaaaaaaaaaaaaaceaaaaadbeaaaaaddmaaaaaaaa
aaaaaaaaaaaaacomaaaaaabmaaaaacnppppoadaaaaaaaabdaaaaaabmaaaaaaaa
aaaaacniaaaaabjiaaacaabkaaabaaaaaaaaabkeaaaaaaaaaaaaableaaacaabl
aaabaaaaaaaaabmaaaaaaaaaaaaaabnaaaacaabeaaaeaaaaaaaaaboaaaaaaaaa
aaaaabpaaaacaaaaaaabaaaaaaaaabmaaaaaaaaaaaaaabpgaaacaabjaaabaaaa
aaaaabkeaaaaaaaaaaaaacabaaacaabaaaaeaaaaaaaaaboaaaaaaaaaaaaaacbe
aaacaaaeaaabaaaaaaaaabmaaaaaaaaaaaaaacchaaacaaabaaabaaaaaaaaabma
aaaaaaaaaaaaacdjaaacaaacaaabaaaaaaaaabmaaaaaaaaaaaaaacelaaacaaad
aaabaaaaaaaaabmaaaaaaaaaaaaaacfnaaacaaafaaaeaaaaaaaaachaaaaaaaaa
aaaaaciaaaacaaalaaabaaaaaaaaabmaaaaaaaaaaaaaacilaaacaaakaaabaaaa
aaaaabmaaaaaaaaaaaaaacjgaaacaaajaaabaaaaaaaaabmaaaaaaaaaaaaaackb
aaacaaaoaaabaaaaaaaaabmaaaaaaaaaaaaaackmaaacaaanaaabaaaaaaaaabma
aaaaaaaaaaaaaclhaaacaaamaaabaaaaaaaaabmaaaaaaaaaaaaaacmcaaacaaap
aaabaaaaaaaaabmaaaaaaaaaaaaaacmmaaacaabiaaabaaaaaaaaabmaaaaaaaaa
fpebgnhagmgjhehfgegfaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaafpengbgj
gofegfhifpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpepgcgkgfgdhedc
fhgphcgmgeaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpfegjgngfaafpfh
gbhggffdhagfgfgeaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaahfgogjhe
hjfpdeemgjghgiheebhehegfgodaaahfgogjhehjfpdeemgjghgihefagphdfida
aahfgogjhehjfpdeemgjghgihefagphdfjdaaahfgogjhehjfpdeemgjghgihefa
gphdfkdaaahfgogjhehjfpemgjghgiheedgpgmgphcaaklklaaabaaadaaabaaae
aaaiaaaaaaaaaaaahfgogjhehjfpfdeiebgcaahfgogjhehjfpfdeiebghaahfgo
gjhehjfpfdeiebhcaahfgogjhehjfpfdeiecgcaahfgogjhehjfpfdeiecghaahf
gogjhehjfpfdeiechcaahfgogjhehjfpfdeiedaahfgogjhehjfpfdgdgbgmgfaa
hghdfpddfpdaaadccodacodcdadddfddcodaaaklaaaaaaaaaaaaaaabaaaaaaaa
aaaaaaaaaaaaaabeaapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaea
aaaaadmaaacbaaagaaaaaaaaaaaaaaaaaaaacagdaaaaaaabaaaaaaadaaaaaaad
aaaaacjaaabaaaaiaaaadaajaadafaakaaaadafaaaabhbfbaaachcfcaaaabadb
aaaabadaaaaabaeoaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeamjapnldpiaaaaa
maejapnlaaaaaaaadpaaaaaadoemmmmndoccpjiddpggggggdpljjjjkeaehkobe
eaammmmnlpiaaaaahajfgaaibaaobaaafgaaaaaaaaaaaaaagaapmcaabcaaaaaa
aaaagabffablbcaabcaaaaaaaaaaaaaagacameaabcaaaaaaaaaagacggacmbcaa
bcaaaaaaaaaagadcgadibcaabcaaaaaaaaaagadogaeebcaabcaaaaaaaaaafaek
aaaaccaaaaaaaaaaafpibaaaaaaaagiiaaaaaaaaafpicaaaaaaaaoiiaaaaaaaa
afpiaaaaaaaaaohiaaaaaaaamiacaaaaaagmblaacbaappaamiaiaaaaaagmgmaa
cbaabjaaheacaaabablolbbllaabpnaakiiaaaaabiaaaaebmcaaaabjmiaiaaad
aamggmaaobaaaaaamiahaaadaablmalbklaappabmiapaaaeaaaaagaakbadpoaa
miahaaadaamagmaakaaepoaamiahaaadaamaaaaaoiadaaaamiahaaadaamagmmg
iladpnpnmabaadaaaaaaaagmocaaaaadmacaadaaaaaaaalbocaaaaadmaekadaa
aamglmmgkbaapoadmiahaaadaabbmaaaobaaadaamiahaaaeaamagmaakbadbkaa
miacaaaaaagmgmaaoaaeabaabeapaaadaablaalbkbabbdaeaeiiaaacafmgmgbl
oaaeabaemiapaaadaabliiiiklacbcadmiapaaadaabldejeklaabbadmiapiado
aalbaadeklaabaadmiahaaacaamablaakbacbiaaceihaeabaamglegmkbacbgia
miahaaabaalblemaklacbfabmiahaaaeaagmlemaklacbeabaibhagacaablmagg
kbabbhaeaicbagafaadoanmbgpajaeaeaiecagafaadoanlbgpakaeaeaiieagaf
aadoanlmgpalaeaemiabaaabaakhkhaakpagamaaaibcadabaakhkhgmkpaganae
aiceadabaakhkhmgkpagaoaegeihababaalologboaafabadmiahaaabaabllemn
klabapabmiahaaacaablmamaklacbgacmiahaaacaablleleklaabfacmiahaaac
aalbmaleklaabeacmiahiaabaaleleaaocaeaeaamiadiaaaaamelabkilaablbl
miapaaadaegmaaaakaacabaamiapaaafaelbaaaakaacacaamiapaaacaemgaaaa
kaacadaamiapaaaaaapipiaaobacacaamiapaaacaapilbaaobacaeaamiapaaaa
aajejepiolafafaamiapaaacaajemgpiolafaeacmiapaaacaajegmaaoladaeac
miapaaaaaaaaaapioladadaamiapaaaeaapipilbilaaaepnfibaaaaaaaaaaagm
ocaaaaiaficaaaaaaaaaaalbocaaaaiafieaaaaaaaaaaamgocaaaaiafiiaaaaa
aaaaaablocaaaaiamiapaaaaaapiaaaaobacaaaaemipaaadaapiblmgkcaapnae
emecacaaaamgblgmobadaaaeemciacacaagmmgblobadacaeembbaaacaabllblb
obadacaemiaeaaaaaalbgmaaobadaaaakibhacaeaalmmaecibacahaikiciacae
aamgblicmbaeadaikieoacafaabgpmmaibacafaibeahaaaaaabbmalbkbaaagaf
ambiafaaaamgmggmobaaadadbeahaaaaaabebamgoaafaaacamihacaaaamabalb
oaaaaeadmiahaaaaaamabaaaoaaaacaamiahiaacaalemaaaoaabaaaaaaaaaaaa
aaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_Time]
Vector 466 [unity_4LightPosX0]
Vector 465 [unity_4LightPosY0]
Vector 464 [unity_4LightPosZ0]
Vector 463 [unity_4LightAtten0]
Vector 462 [unity_LightColor0]
Vector 461 [unity_LightColor1]
Vector 460 [unity_LightColor2]
Vector 459 [unity_LightColor3]
Vector 458 [unity_SHAr]
Vector 457 [unity_SHAg]
Vector 456 [unity_SHAb]
Vector 455 [unity_SHBr]
Vector 454 [unity_SHBg]
Vector 453 [unity_SHBb]
Vector 452 [unity_SHC]
Matrix 260 [_Object2World]
Vector 451 [unity_Scale]
Float 450 [_WaveSpeed]
Float 449 [_Amplitude]
Vector 448 [_MainTex_ST]
"sce_vp_rsx // 69 instructions using 7 registers
[Configuration]
8
0000004501050700
[Defaults]
2
447 4
400ccccd3e4ccccd4047ae143f000000
446 4
3f6666663fb9999a000000003f800000
[Microcode]
1104
00001c6c009c320c013fc0c36041dffc401f9c6c011c0808010400d740619f9c
00001c6c0040007f8106c08360403ffc00009c6c005c20000186c08360411ffc
00009c6c00c000000106c08aa0409ffc00009c6c0080082a8100008360405ffc
00031c6c0150400c008600c360411ffc00031c6c0150600c008600c360403ffc
00029c6c0150500c008600c360403ffc00011c6c009be0d5028000c360403ffc
00019c6c00c000550106c08aa0a09ffc00019c6c009d3000028000c360403ffc
201fdc6c0040007f8686c08360411ffc00019c6c0040007f8686c08360411ffc
00011c6c0080007f8abfc54360411ffc00031c6c0040007f8a86c08360409ffc
00031c6c0040007f8c86c08360405ffc00001c6c019c800c0c86c0c360405ffc
00001c6c019c900c0c86c0c360409ffc00001c6c019ca00c0c86c0c360411ffc
00009c6c0080000d0c9a06436041fffc00019c6c010000000c80066001205ffc
00011c6c01dc500d8286c0c360405ffc00011c6c01dc600d8286c0c360409ffc
00011c6c01dc700d8286c0c360411ffc0001a46c004000ff8686c08360411ffc
00009c6c00c0000c0086c0830121dffc00001c6c011bf000068800caa1a19ffc
00001c6c011be000069540caa1a05ffc401f9c6c7840007f8c86c08aa0284020
00011c6c789c4055068600c00031c07c00019c6c7880082a81154055402300fc
00001c6c008008000095408360409ffc00001c6c0080082a813fc14360411ffc
00001c6c009c1000008000c360411ffc00001c6c009c102a808000c360405ffc
00001c6c009c1000068000c360409ffc00001c6c011bf02a80bfc0dfe1209ffc
00001c6c011bf0d5009540d540405ffc00001c6c011bf00000bfc0c000411ffc
00029c6c00c0000c0486c08300a1dffc00011c6c01d0400d8086c0c360411ffc
00011c6c01d0500d8086c0c360409ffc00009c6c01d0600d8086c0c360411ffc
00009c6c00dd000d8186c0a000a1fffc00019c6c00dd100d8186c0aaa121fffc
00011c6c00dd200d8186c0a00121fffc00021c6c0080007f8a86c3436041fffc
00019c6c0080000d8686c3436041fffc00021c6c010000000c86c2436221fffc
00011c6c0100000d8486c24361a1fffc00011c6c0100000d8286c1436121fffc
00009c6c0100007f8c86c1436221fffc401f9c6c2040007f8a86c080013081a0
401f9c6c204000000c86c08aa12901a000021c6c209cf00d8486c0d54125e1fc
00021c6c00dbe07f8186c0836221fffc401f9c6c21d0300d8086c0dfe1222180
401f9c6c11d0200d8086c0c002304100401f9c6c11d0100d8086c0caa2288100
401f9c6c11d0000d8086c0d54225010000001c6c1080000d8286c35fe223e17c
00001c6c029be00d80aa80c36041fffc00001c6c0080000d8086c2436041fffc
00009c6c009cd02a808600c36041dffc00009c6c011ce000008600c300a1dffc
00001c6c011cc055008600c300a1dffc00001c6c011cb07f808600c30021dffc
401f9c6c00c0000c0a86c0830021dfa5
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 112 // 96 used size, 8 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityLighting" 720 // 720 used size, 17 vars
Vector 32 [unity_4LightPosX0] 4
Vector 48 [unity_4LightPosY0] 4
Vector 64 [unity_4LightPosZ0] 4
Vector 80 [unity_4LightAtten0] 4
Vector 96 [unity_LightColor0] 4
Vector 112 [unity_LightColor1] 4
Vector 128 [unity_LightColor2] 4
Vector 144 [unity_LightColor3] 4
Vector 160 [unity_LightColor4] 4
Vector 176 [unity_LightColor5] 4
Vector 192 [unity_LightColor6] 4
Vector 208 [unity_LightColor7] 4
Vector 608 [unity_SHAr] 4
Vector 624 [unity_SHAg] 4
Vector 640 [unity_SHAb] 4
Vector 656 [unity_SHBr] 4
Vector 672 [unity_SHBg] 4
Vector 688 [unity_SHBb] 4
Vector 704 [unity_SHC] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 61 instructions, 6 temp regs, 0 temp arrays:
// ALU 57 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefieceddhlhifnmcbkelamohclggbmhgafahnpnabaaaaaadaakaaaaadaaaaaa
cmaaaaaapeaaaaaahmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaa
aiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaheaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefc
kmaiaaaaeaaaabaaclacaaaafjaaaaaeegiocaaaaaaaaaaaagaaaaaafjaaaaae
egiocaaaabaaaaaaabaaaaaafjaaaaaeegiocaaaacaaaaaacnaaaaaafjaaaaae
egiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaa
acaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaaddccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaa
adaaaaaagiaaaaacagaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaa
aeaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaa
aceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaag
hcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaa
aaaaaaaafgifcaaaaaaaaaaaaeaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaa
bkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaa
abeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaa
aaaaaaaaegiocaaaadaaaaaaabaaaaaadiaaaaaihcaabaaaacaaaaaafgafbaaa
aaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaa
ckaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakncaabaaaaaaaaaaaagijcaaaadaaaaaaamaaaaaaagaabaaa
aaaaaaaaagajbaaaacaaaaaadcaaaaakncaabaaaaaaaaaaaagijcaaaadaaaaaa
aoaaaaaafgafbaaaaaaaaaaaagaobaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaa
egiocaaaadaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
pccabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaaapaaaaaapgbpbaaa
aaaaaaaaigadbaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaa
egiacaaaaaaaaaaaafaaaaaaogikcaaaaaaaaaaaafaaaaaadiaaaaaihcaabaaa
abaaaaaaegbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaa
acaaaaaafgafbaaaabaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaa
abaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaaabaaaaaaegaibaaaacaaaaaa
dcaaaaakhcaabaaaabaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaabaaaaaa
egadbaaaabaaaaaadgaaaaafhccabaaaacaaaaaaegacbaaaabaaaaaadgaaaaaf
icaabaaaabaaaaaaabeaaaaaaaaaiadpbbaaaaaibcaabaaaacaaaaaaegiocaaa
acaaaaaacgaaaaaaegaobaaaabaaaaaabbaaaaaiccaabaaaacaaaaaaegiocaaa
acaaaaaachaaaaaaegaobaaaabaaaaaabbaaaaaiecaabaaaacaaaaaaegiocaaa
acaaaaaaciaaaaaaegaobaaaabaaaaaadiaaaaahpcaabaaaadaaaaaajgacbaaa
abaaaaaaegakbaaaabaaaaaabbaaaaaibcaabaaaaeaaaaaaegiocaaaacaaaaaa
cjaaaaaaegaobaaaadaaaaaabbaaaaaiccaabaaaaeaaaaaaegiocaaaacaaaaaa
ckaaaaaaegaobaaaadaaaaaabbaaaaaiecaabaaaaeaaaaaaegiocaaaacaaaaaa
claaaaaaegaobaaaadaaaaaaaaaaaaahhcaabaaaacaaaaaaegacbaaaacaaaaaa
egacbaaaaeaaaaaadiaaaaahicaabaaaaaaaaaaabkaabaaaabaaaaaabkaabaaa
abaaaaaadcaaaaakicaabaaaaaaaaaaaakaabaaaabaaaaaaakaabaaaabaaaaaa
dkaabaiaebaaaaaaaaaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaacaaaaaa
cmaaaaaapgapbaaaaaaaaaaaegacbaaaacaaaaaaaaaaaaajpcaabaaaadaaaaaa
agaabaiaebaaaaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaaaaaaaaajpcaabaaa
aeaaaaaafgafbaiaebaaaaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaaaaaaaaaj
pcaabaaaaaaaaaaakgakbaiaebaaaaaaaaaaaaaaegiocaaaacaaaaaaaeaaaaaa
diaaaaahpcaabaaaafaaaaaafgafbaaaabaaaaaaegaobaaaaeaaaaaadiaaaaah
pcaabaaaaeaaaaaaegaobaaaaeaaaaaaegaobaaaaeaaaaaadcaaaaajpcaabaaa
aeaaaaaaegaobaaaadaaaaaaegaobaaaadaaaaaaegaobaaaaeaaaaaadcaaaaaj
pcaabaaaadaaaaaaegaobaaaadaaaaaaagaabaaaabaaaaaaegaobaaaafaaaaaa
dcaaaaajpcaabaaaabaaaaaaegaobaaaaaaaaaaakgakbaaaabaaaaaaegaobaaa
adaaaaaadcaaaaajpcaabaaaaaaaaaaaegaobaaaaaaaaaaaegaobaaaaaaaaaaa
egaobaaaaeaaaaaaeeaaaaafpcaabaaaadaaaaaaegaobaaaaaaaaaaadcaaaaan
pcaabaaaaaaaaaaaegaobaaaaaaaaaaaegiocaaaacaaaaaaafaaaaaaaceaaaaa
aaaaiadpaaaaiadpaaaaiadpaaaaiadpaoaaaaakpcaabaaaaaaaaaaaaceaaaaa
aaaaiadpaaaaiadpaaaaiadpaaaaiadpegaobaaaaaaaaaaadiaaaaahpcaabaaa
abaaaaaaegaobaaaabaaaaaaegaobaaaadaaaaaadeaaaaakpcaabaaaabaaaaaa
egaobaaaabaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadiaaaaah
pcaabaaaaaaaaaaaegaobaaaaaaaaaaaegaobaaaabaaaaaadiaaaaaihcaabaaa
abaaaaaafgafbaaaaaaaaaaaegiccaaaacaaaaaaahaaaaaadcaaaaakhcaabaaa
abaaaaaaegiccaaaacaaaaaaagaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaa
dcaaaaakhcaabaaaaaaaaaaaegiccaaaacaaaaaaaiaaaaaakgakbaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaacaaaaaaajaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaaaaaaaaahhccabaaaadaaaaaaegacbaaa
aaaaaaaaegacbaaaacaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  highp vec3 shlight_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = _glesVertex;
  highp float t_6;
  highp float tmpvar_7;
  tmpvar_7 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_8;
  tmpvar_8 = (_Time * _WaveSpeed).x;
  t_6 = tmpvar_8;
  if ((tmpvar_8 < 0.0)) {
    t_6 = (tmpvar_8 * -1.0);
  };
  tmpvar_5.x = (_glesVertex.x + (((sin(((t_6 * 1.45) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_5.y = ((((sin(((t_6 * 3.12) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_5.z = (_glesVertex.z - (((sin(((t_6 * 2.2) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_9 * (tmpvar_1 * unity_Scale.w));
  tmpvar_3 = tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_10;
  mediump vec3 tmpvar_12;
  mediump vec4 normal_13;
  normal_13 = tmpvar_11;
  highp float vC_14;
  mediump vec3 x3_15;
  mediump vec3 x2_16;
  mediump vec3 x1_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAr, normal_13);
  x1_17.x = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAg, normal_13);
  x1_17.y = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAb, normal_13);
  x1_17.z = tmpvar_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normal_13.xyzz * normal_13.yzzx);
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBr, tmpvar_21);
  x2_16.x = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBg, tmpvar_21);
  x2_16.y = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBb, tmpvar_21);
  x2_16.z = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y));
  vC_14 = tmpvar_25;
  highp vec3 tmpvar_26;
  tmpvar_26 = (unity_SHC.xyz * vC_14);
  x3_15 = tmpvar_26;
  tmpvar_12 = ((x1_17 + x2_16) + x3_15);
  shlight_2 = tmpvar_12;
  tmpvar_4 = shlight_2;
  highp vec3 tmpvar_27;
  tmpvar_27 = (_Object2World * tmpvar_5).xyz;
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosX0 - tmpvar_27.x);
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_4LightPosY0 - tmpvar_27.y);
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosZ0 - tmpvar_27.z);
  highp vec4 tmpvar_31;
  tmpvar_31 = (((tmpvar_28 * tmpvar_28) + (tmpvar_29 * tmpvar_29)) + (tmpvar_30 * tmpvar_30));
  highp vec4 tmpvar_32;
  tmpvar_32 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_28 * tmpvar_10.x) + (tmpvar_29 * tmpvar_10.y)) + (tmpvar_30 * tmpvar_10.z)) * inversesqrt(tmpvar_31))) * (1.0/((1.0 + (tmpvar_31 * unity_4LightAtten0)))));
  highp vec3 tmpvar_33;
  tmpvar_33 = (tmpvar_4 + ((((unity_LightColor[0].xyz * tmpvar_32.x) + (unity_LightColor[1].xyz * tmpvar_32.y)) + (unity_LightColor[2].xyz * tmpvar_32.z)) + (unity_LightColor[3].xyz * tmpvar_32.w)));
  tmpvar_4 = tmpvar_33;
  gl_Position = (glstate_matrix_mvp * tmpvar_5);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _WorldSpaceLightPos0;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float tmpvar_5;
  tmpvar_5 = c_2.w;
  lowp float x_6;
  x_6 = (c_2.w - _Cutoff);
  if ((x_6 < 0.0)) {
    discard;
  };
  lowp vec4 c_7;
  c_7.xyz = ((c_2.xyz * _LightColor0.xyz) * (max (0.0, dot (xlv_TEXCOORD1, _WorldSpaceLightPos0.xyz)) * 2.0));
  c_7.w = tmpvar_5;
  c_1.xyz = (c_7.xyz + (c_2.xyz * xlv_TEXCOORD2));
  c_1.w = tmpvar_5;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  highp vec3 shlight_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = _glesVertex;
  highp float t_6;
  highp float tmpvar_7;
  tmpvar_7 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_8;
  tmpvar_8 = (_Time * _WaveSpeed).x;
  t_6 = tmpvar_8;
  if ((tmpvar_8 < 0.0)) {
    t_6 = (tmpvar_8 * -1.0);
  };
  tmpvar_5.x = (_glesVertex.x + (((sin(((t_6 * 1.45) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_5.y = ((((sin(((t_6 * 3.12) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_5.z = (_glesVertex.z - (((sin(((t_6 * 2.2) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_9 * (tmpvar_1 * unity_Scale.w));
  tmpvar_3 = tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_10;
  mediump vec3 tmpvar_12;
  mediump vec4 normal_13;
  normal_13 = tmpvar_11;
  highp float vC_14;
  mediump vec3 x3_15;
  mediump vec3 x2_16;
  mediump vec3 x1_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAr, normal_13);
  x1_17.x = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAg, normal_13);
  x1_17.y = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAb, normal_13);
  x1_17.z = tmpvar_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normal_13.xyzz * normal_13.yzzx);
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBr, tmpvar_21);
  x2_16.x = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBg, tmpvar_21);
  x2_16.y = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBb, tmpvar_21);
  x2_16.z = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y));
  vC_14 = tmpvar_25;
  highp vec3 tmpvar_26;
  tmpvar_26 = (unity_SHC.xyz * vC_14);
  x3_15 = tmpvar_26;
  tmpvar_12 = ((x1_17 + x2_16) + x3_15);
  shlight_2 = tmpvar_12;
  tmpvar_4 = shlight_2;
  highp vec3 tmpvar_27;
  tmpvar_27 = (_Object2World * tmpvar_5).xyz;
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosX0 - tmpvar_27.x);
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_4LightPosY0 - tmpvar_27.y);
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosZ0 - tmpvar_27.z);
  highp vec4 tmpvar_31;
  tmpvar_31 = (((tmpvar_28 * tmpvar_28) + (tmpvar_29 * tmpvar_29)) + (tmpvar_30 * tmpvar_30));
  highp vec4 tmpvar_32;
  tmpvar_32 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_28 * tmpvar_10.x) + (tmpvar_29 * tmpvar_10.y)) + (tmpvar_30 * tmpvar_10.z)) * inversesqrt(tmpvar_31))) * (1.0/((1.0 + (tmpvar_31 * unity_4LightAtten0)))));
  highp vec3 tmpvar_33;
  tmpvar_33 = (tmpvar_4 + ((((unity_LightColor[0].xyz * tmpvar_32.x) + (unity_LightColor[1].xyz * tmpvar_32.y)) + (unity_LightColor[2].xyz * tmpvar_32.z)) + (unity_LightColor[3].xyz * tmpvar_32.w)));
  tmpvar_4 = tmpvar_33;
  gl_Position = (glstate_matrix_mvp * tmpvar_5);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _WorldSpaceLightPos0;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float tmpvar_5;
  tmpvar_5 = c_2.w;
  lowp float x_6;
  x_6 = (c_2.w - _Cutoff);
  if ((x_6 < 0.0)) {
    discard;
  };
  lowp vec4 c_7;
  c_7.xyz = ((c_2.xyz * _LightColor0.xyz) * (max (0.0, dot (xlv_TEXCOORD1, _WorldSpaceLightPos0.xyz)) * 2.0));
  c_7.w = tmpvar_5;
  c_1.xyz = (c_7.xyz + (c_2.xyz * xlv_TEXCOORD2));
  c_1.w = tmpvar_5;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "flash " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Vector 9 [unity_4LightPosX0]
Vector 10 [unity_4LightPosY0]
Vector 11 [unity_4LightPosZ0]
Vector 12 [unity_4LightAtten0]
Vector 13 [unity_LightColor0]
Vector 14 [unity_LightColor1]
Vector 15 [unity_LightColor2]
Vector 16 [unity_LightColor3]
Vector 17 [unity_SHAr]
Vector 18 [unity_SHAg]
Vector 19 [unity_SHAb]
Vector 20 [unity_SHBr]
Vector 21 [unity_SHBg]
Vector 22 [unity_SHBb]
Vector 23 [unity_SHC]
Matrix 4 [_Object2World]
Vector 24 [unity_Scale]
Float 25 [_WaveSpeed]
Float 26 [_Amplitude]
Vector 27 [_MainTex_ST]
"agal_vs
c28 -0.020833 -0.125 1.0 0.5
c29 -0.000002 -0.000022 0.002604 0.00026
c30 0.0 2.2 0.159155 0.5
c31 6.283185 -3.141593 0.2 3.12
c32 0.9 1.45 0.0 0.0
[bc]
adaaaaaaaeaaahacabaaaaoeaaaaaaaabiaaaappabaaaaaa mul r4.xyz, a1, c24.w
bcaaaaaaafaaabacaeaaaakeacaaaaaaaeaaaaoeabaaaaaa dp3 r5.x, r4.xyzz, c4
bcaaaaaaaeaaaiacaeaaaakeacaaaaaaafaaaaoeabaaaaaa dp3 r4.w, r4.xyzz, c5
bcaaaaaaaeaaabacaeaaaakeacaaaaaaagaaaaoeabaaaaaa dp3 r4.x, r4.xyzz, c6
abaaaaaaaaaaaiacaaaaaaaaaaaaaaaaaaaaaaffaaaaaaaa add r0.w, a0.x, a0.y
aaaaaaaaaaaaabacaiaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r0.x, c8
adaaaaaaaaaaabacbjaaaaoeabaaaaaaaaaaaaaaacaaaaaa mul r0.x, c25, r0.x
ckaaaaaaaaaaacacaaaaaaaaacaaaaaaboaaaaaaabaaaaaa slt r0.y, r0.x, c30.x
bfaaaaaaabaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r1.y, r0.y
ahaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa max r0.y, r1.y, r0.y
ckaaaaaaaaaaacacboaaaaaaabaaaaaaaaaaaaffacaaaaaa slt r0.y, c30.x, r0.y
bfaaaaaaacaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r2.y, r0.y
abaaaaaaaaaaaeacacaaaaffacaaaaaabmaaaaoeabaaaaaa add r0.z, r2.y, c28
adaaaaaaaaaaaeacaaaaaaaaacaaaaaaaaaaaakkacaaaaaa mul r0.z, r0.x, r0.z
bfaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r1.x, r0.x
adaaaaaaabaaabacaaaaaaffacaaaaaaabaaaaaaacaaaaaa mul r1.x, r0.y, r1.x
abaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaakkacaaaaaa add r1.x, r1.x, r0.z
abaaaaaaabaaacacaaaaaappacaaaaaaaaaaaakkaaaaaaaa add r1.y, r0.w, a0.z
adaaaaaaaaaaabacabaaaaaaacaaaaaaboaaaaffabaaaaaa mul r0.x, r1.x, c30.y
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaffacaaaaaa add r0.x, r0.x, r1.y
adaaaaaaaaaaabacaaaaaaaaacaaaaaaboaaaakkabaaaaaa mul r0.x, r0.x, c30.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaboaaaappabaaaaaa add r0.x, r0.x, c30.w
aiaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r0.x, r0.x
adaaaaaaabaaaeacaaaaaaaaacaaaaaabpaaaaaaabaaaaaa mul r1.z, r0.x, c31.x
abaaaaaaabaaaeacabaaaakkacaaaaaabpaaaaffabaaaaaa add r1.z, r1.z, c31.y
apaaaaaaaaaaabacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.z
baaaaaaaaaaaacacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.z
adaaaaaaaaaaabacaaaaaaffacaaaaaaadaaaaffaaaaaaaa mul r0.x, r0.y, a3.y
adaaaaaaaaaaacacabaaaaaaacaaaaaacaaaaaoeabaaaaaa mul r0.y, r1.x, c32
abaaaaaaaaaaacacaaaaaaffacaaaaaaabaaaaffacaaaaaa add r0.y, r0.y, r1.y
adaaaaaaaaaaabacaaaaaaaaacaaaaaabkaaaaoeabaaaaaa mul r0.x, r0.x, c26
bfaaaaaaadaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r3.x, r0.x
adaaaaaaabaaaeacadaaaaaaacaaaaaabpaaaaoeabaaaaaa mul r1.z, r3.x, c31
abaaaaaaabaaaeacabaaaakkacaaaaaaaaaaaaoeaaaaaaaa add r1.z, r1.z, a0
adaaaaaaaaaaabacabaaaaaaacaaaaaabpaaaappabaaaaaa mul r0.x, r1.x, c31.w
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaffacaaaaaa add r0.x, r0.x, r1.y
adaaaaaaaaaaabacaaaaaaaaacaaaaaaboaaaakkabaaaaaa mul r0.x, r0.x, c30.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaboaaaappabaaaaaa add r0.x, r0.x, c30.w
adaaaaaaaaaaacacaaaaaaffacaaaaaaboaaaakkabaaaaaa mul r0.y, r0.y, c30.z
abaaaaaaaaaaacacaaaaaaffacaaaaaaboaaaappabaaaaaa add r0.y, r0.y, c30.w
aiaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa frc r0.y, r0.y
aaaaaaaaabaaaiacaaaaaaoeaaaaaaaaaaaaaaaaaaaaaaaa mov r1.w, a0
aaaaaaaaafaaaeacaeaaaaaaacaaaaaaaaaaaaaaaaaaaaaa mov r5.z, r4.x
aaaaaaaaafaaaiacbmaaaakkabaaaaaaaaaaaaaaaaaaaaaa mov r5.w, c28.z
adaaaaaaabaaacacaaaaaaffacaaaaaabpaaaaaaabaaaaaa mul r1.y, r0.y, c31.x
abaaaaaaabaaacacabaaaaffacaaaaaabpaaaaoeabaaaaaa add r1.y, r1.y, c31
aiaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r1.x, r0.x
apaaaaaaaaaaabacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.y
baaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.y
adaaaaaaaaaaabacabaaaaaaacaaaaaabpaaaaoeabaaaaaa mul r0.x, r1.x, c31
abaaaaaaaaaaabacaaaaaaaaacaaaaaabpaaaaffabaaaaaa add r0.x, r0.x, c31.y
apaaaaaaacaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sin r2.x, r0.x
baaaaaaaacaaacacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa cos r2.y, r0.x
adaaaaaaaaaaaeacadaaaaffaaaaaaaaaaaaaaffacaaaaaa mul r0.z, a3.y, r0.y
adaaaaaaaaaaabacadaaaaffaaaaaaaaacaaaaffacaaaaaa mul r0.x, a3.y, r2.y
adaaaaaaaaaaacacadaaaaoeaaaaaaaaadaaaaaaaaaaaaaa mul r0.y, a3, a3.x
bfaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r0.y, r0.y
adaaaaaaaaaaacacaaaaaaffacaaaaaacaaaaaaaabaaaaaa mul r0.y, r0.y, c32.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaabkaaaaoeabaaaaaa mul r0.x, r0.x, c26
adaaaaaaabaaacacaaaaaaaaacaaaaaabmaaaappabaaaaaa mul r1.y, r0.x, c28.w
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa add r1.y, r1.y, r0.y
adaaaaaaaaaaabacaaaaaakkacaaaaaabkaaaaoeabaaaaaa mul r0.x, r0.z, c26
adaaaaaaabaaabacaaaaaaaaacaaaaaabmaaaappabaaaaaa mul r1.x, r0.x, c28.w
abaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaaoeaaaaaaaa add r1.x, r1.x, a0
bdaaaaaaaaaaacacabaaaaoeacaaaaaaafaaaaoeabaaaaaa dp4 r0.y, r1, c5
bfaaaaaaacaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r2.y, r0.y
abaaaaaaacaaapacacaaaaffacaaaaaaakaaaaoeabaaaaaa add r2, r2.y, c10
adaaaaaaadaaapacaeaaaappacaaaaaaacaaaaoeacaaaaaa mul r3, r4.w, r2
bdaaaaaaaaaaabacabaaaaoeacaaaaaaaeaaaaoeabaaaaaa dp4 r0.x, r1, c4
bfaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r0.x, r0.x
abaaaaaaaaaaapacaaaaaaaaacaaaaaaajaaaaoeabaaaaaa add r0, r0.x, c9
adaaaaaaacaaapacacaaaaoeacaaaaaaacaaaaoeacaaaaaa mul r2, r2, r2
adaaaaaaagaaapacafaaaaaaacaaaaaaaaaaaaoeacaaaaaa mul r6, r5.x, r0
abaaaaaaadaaapacagaaaaoeacaaaaaaadaaaaoeacaaaaaa add r3, r6, r3
bdaaaaaaafaaacacabaaaaoeacaaaaaaagaaaaoeabaaaaaa dp4 r5.y, r1, c6
adaaaaaaagaaapacaaaaaaoeacaaaaaaaaaaaaoeacaaaaaa mul r6, r0, r0
abaaaaaaacaaapacagaaaaoeacaaaaaaacaaaaoeacaaaaaa add r2, r6, r2
bfaaaaaaaaaaacacafaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r0.y, r5.y
abaaaaaaaaaaapacaaaaaaffacaaaaaaalaaaaoeabaaaaaa add r0, r0.y, c11
adaaaaaaagaaapacaaaaaaoeacaaaaaaaaaaaaoeacaaaaaa mul r6, r0, r0
abaaaaaaacaaapacagaaaaoeacaaaaaaacaaaaoeacaaaaaa add r2, r6, r2
adaaaaaaaaaaapacaeaaaaaaacaaaaaaaaaaaaoeacaaaaaa mul r0, r4.x, r0
abaaaaaaaaaaapacaaaaaaoeacaaaaaaadaaaaoeacaaaaaa add r0, r0, r3
adaaaaaaadaaapacacaaaaoeacaaaaaaamaaaaoeabaaaaaa mul r3, r2, c12
aaaaaaaaafaaacacaeaaaappacaaaaaaaaaaaaaaaaaaaaaa mov r5.y, r4.w
akaaaaaaacaaabacacaaaaaaacaaaaaaaaaaaaaaaaaaaaaa rsq r2.x, r2.x
akaaaaaaacaaacacacaaaaffacaaaaaaaaaaaaaaaaaaaaaa rsq r2.y, r2.y
akaaaaaaacaaaiacacaaaappacaaaaaaaaaaaaaaaaaaaaaa rsq r2.w, r2.w
akaaaaaaacaaaeacacaaaakkacaaaaaaaaaaaaaaaaaaaaaa rsq r2.z, r2.z
adaaaaaaaaaaapacaaaaaaoeacaaaaaaacaaaaoeacaaaaaa mul r0, r0, r2
abaaaaaaacaaapacadaaaaoeacaaaaaabmaaaakkabaaaaaa add r2, r3, c28.z
bdaaaaaaadaaaeacafaaaaoeacaaaaaabdaaaaoeabaaaaaa dp4 r3.z, r5, c19
bdaaaaaaadaaacacafaaaaoeacaaaaaabcaaaaoeabaaaaaa dp4 r3.y, r5, c18
bdaaaaaaadaaabacafaaaaoeacaaaaaabbaaaaoeabaaaaaa dp4 r3.x, r5, c17
afaaaaaaacaaabacacaaaaaaacaaaaaaaaaaaaaaaaaaaaaa rcp r2.x, r2.x
afaaaaaaacaaacacacaaaaffacaaaaaaaaaaaaaaaaaaaaaa rcp r2.y, r2.y
afaaaaaaacaaaiacacaaaappacaaaaaaaaaaaaaaaaaaaaaa rcp r2.w, r2.w
afaaaaaaacaaaeacacaaaakkacaaaaaaaaaaaaaaaaaaaaaa rcp r2.z, r2.z
ahaaaaaaaaaaapacaaaaaaoeacaaaaaaboaaaaaaabaaaaaa max r0, r0, c30.x
adaaaaaaaaaaapacaaaaaaoeacaaaaaaacaaaaoeacaaaaaa mul r0, r0, r2
adaaaaaaacaaahacaaaaaaffacaaaaaaaoaaaaoeabaaaaaa mul r2.xyz, r0.y, c14
adaaaaaaagaaahacaaaaaaaaacaaaaaaanaaaaoeabaaaaaa mul r6.xyz, r0.x, c13
abaaaaaaacaaahacagaaaakeacaaaaaaacaaaakeacaaaaaa add r2.xyz, r6.xyzz, r2.xyzz
adaaaaaaaaaaahacaaaaaakkacaaaaaaapaaaaoeabaaaaaa mul r0.xyz, r0.z, c15
abaaaaaaaaaaahacaaaaaakeacaaaaaaacaaaakeacaaaaaa add r0.xyz, r0.xyzz, r2.xyzz
adaaaaaaacaaahacaaaaaappacaaaaaabaaaaaoeabaaaaaa mul r2.xyz, r0.w, c16
abaaaaaaacaaahacacaaaakeacaaaaaaaaaaaakeacaaaaaa add r2.xyz, r2.xyzz, r0.xyzz
adaaaaaaaaaaapacafaaaakeacaaaaaaafaaaacjacaaaaaa mul r0, r5.xyzz, r5.yzzx
adaaaaaaacaaaiacaeaaaappacaaaaaaaeaaaappacaaaaaa mul r2.w, r4.w, r4.w
bdaaaaaaafaaaiacaaaaaaoeacaaaaaabgaaaaoeabaaaaaa dp4 r5.w, r0, c22
bdaaaaaaafaaaeacaaaaaaoeacaaaaaabfaaaaoeabaaaaaa dp4 r5.z, r0, c21
bdaaaaaaafaaacacaaaaaaoeacaaaaaabeaaaaoeabaaaaaa dp4 r5.y, r0, c20
adaaaaaaagaaaiacafaaaaaaacaaaaaaafaaaaaaacaaaaaa mul r6.w, r5.x, r5.x
acaaaaaaacaaaiacagaaaappacaaaaaaacaaaappacaaaaaa sub r2.w, r6.w, r2.w
adaaaaaaaaaaahacacaaaappacaaaaaabhaaaaoeabaaaaaa mul r0.xyz, r2.w, c23
abaaaaaaadaaahacadaaaakeacaaaaaaafaaaapjacaaaaaa add r3.xyz, r3.xyzz, r5.yzww
abaaaaaaaaaaahacadaaaakeacaaaaaaaaaaaakeacaaaaaa add r0.xyz, r3.xyzz, r0.xyzz
abaaaaaaacaaahaeaaaaaakeacaaaaaaacaaaakeacaaaaaa add v2.xyz, r0.xyzz, r2.xyzz
bdaaaaaaaaaaaiadabaaaaoeacaaaaaaadaaaaoeabaaaaaa dp4 o0.w, r1, c3
bdaaaaaaaaaaaeadabaaaaoeacaaaaaaacaaaaoeabaaaaaa dp4 o0.z, r1, c2
bdaaaaaaaaaaacadabaaaaoeacaaaaaaabaaaaoeabaaaaaa dp4 o0.y, r1, c1
bdaaaaaaaaaaabadabaaaaoeacaaaaaaaaaaaaoeabaaaaaa dp4 o0.x, r1, c0
aaaaaaaaabaaaeaeaeaaaaaaacaaaaaaaaaaaaaaaaaaaaaa mov v1.z, r4.x
aaaaaaaaabaaacaeaeaaaappacaaaaaaaaaaaaaaaaaaaaaa mov v1.y, r4.w
aaaaaaaaabaaabaeafaaaaaaacaaaaaaaaaaaaaaaaaaaaaa mov v1.x, r5.x
adaaaaaaagaaadacadaaaaoeaaaaaaaablaaaaoeabaaaaaa mul r6.xy, a3, c27
abaaaaaaaaaaadaeagaaaafeacaaaaaablaaaaooabaaaaaa add v0.xy, r6.xyyy, c27.zwzw
aaaaaaaaaaaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v0.zw, c0
aaaaaaaaabaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v1.w, c0
aaaaaaaaacaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v2.w, c0
"
}

SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 112 // 96 used size, 8 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityLighting" 720 // 720 used size, 17 vars
Vector 32 [unity_4LightPosX0] 4
Vector 48 [unity_4LightPosY0] 4
Vector 64 [unity_4LightPosZ0] 4
Vector 80 [unity_4LightAtten0] 4
Vector 96 [unity_LightColor0] 4
Vector 112 [unity_LightColor1] 4
Vector 128 [unity_LightColor2] 4
Vector 144 [unity_LightColor3] 4
Vector 160 [unity_LightColor4] 4
Vector 176 [unity_LightColor5] 4
Vector 192 [unity_LightColor6] 4
Vector 208 [unity_LightColor7] 4
Vector 608 [unity_SHAr] 4
Vector 624 [unity_SHAg] 4
Vector 640 [unity_SHAb] 4
Vector 656 [unity_SHBr] 4
Vector 672 [unity_SHBg] 4
Vector 688 [unity_SHBb] 4
Vector 704 [unity_SHC] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 61 instructions, 6 temp regs, 0 temp arrays:
// ALU 57 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecedldbnbmfjehfoakhbhihakbhanjgikpafabaaaaaajmbaaaaaaeaaaaaa
daaaaaaajiagaaaaemapaaaabebaaaaaebgpgodjgaagaaaagaagaaaaaaacpopp
oeafaaaahmaaaaaaahaaceaaaaaahiaaaaaahiaaaaaaceaaabaahiaaaaaaaeaa
acaaabaaaaaaaaaaabaaaaaaabaaadaaaaaaaaaaacaaacaaaiaaaeaaaaaaaaaa
acaacgaaahaaamaaaaaaaaaaadaaaaaaaeaabdaaaaaaaaaaadaaamaaaeaabhaa
aaaaaaaaadaabeaaabaablaaaaaaaaaaaaaaaaaaaaacpoppfbaaaaafbmaaapka
jkjjljdpbekoeheamnmmameaggggggdpfbaaaaafbnaaapkanlapmjeanlapejma
mnmmemdoaaaaiadpfbaaaaafboaaapkaaaaaaaaaaaaaaamaidpjccdoaaaaaadp
fbaaaaafbpaaapkaabannalfgballglhklkkckdlijiiiidjfbaaaaafcaaaapka
klkkkklmaaaaaaloaaaaiadpaaaaaadpbpaaaaacafaaaaiaaaaaapjabpaaaaac
afaaaciaacaaapjabpaaaaacafaaadiaadaaapjaaeaaaaaeaaaaadoaadaaoeja
acaaoekaacaaookaabaaaaacaaaaabiaabaaaakaafaaaaadaaaaabiaaaaaaaia
adaaaakaamaaaaadaaaaaciaaaaaaaiaboaaaakaafaaaaadaaaaaciaaaaaffia
aaaaaaiaaeaaaaaeaaaaabiaaaaaffiaboaaffkaaaaaaaiaacaaaaadaaaaacia
aaaaffjaaaaaaajaacaaaaadaaaaaciaaaaaffiaaaaakkjaaeaaaaaeaaaaahia
aaaaaaiabmaaoekaaaaaffiaaeaaaaaeaaaaahiaaaaaoeiaboaakkkaboaappka
bdaaaaacaaaaahiaaaaaoeiaaeaaaaaeaaaaahiaaaaaoeiabnaaaakabnaaffka
cfaaaaaeabaaaciaaaaaffiabpaaoekacaaaoekaafaaaaadaaaaaciaabaaffia
adaaffjaafaaaaadaaaaaciaaaaaffiaabaaffkaafaaaaadaaaaaiiaadaaaaja
adaaffjaafaaaaadaaaaaiiaaaaappiabmaappkaaeaaaaaeaaaaaciaaaaaffia
boaappkaaaaappibafaaaaadabaaahiaaaaaffiabiaaoekaafaaaaadacaaapia
aaaaffiabeaaoekacfaaaaaeadaaaciaaaaaaaiabpaaoekacaaaoekacfaaaaae
aeaaaciaaaaakkiabpaaoekacaaaoekaafaaaaadaaaaabiaaeaaffiaadaaffja
afaaaaadaaaaabiaaaaaaaiaabaaffkaaeaaaaaeaaaaabiaaaaaaaiabnaakkkb
aaaakkjaafaaaaadaaaaaciaadaaffiaadaaffjaafaaaaadaaaaaciaaaaaffia
abaaffkaaeaaaaaeaaaaaciaaaaaffiaboaappkaaaaaaajaaeaaaaaeabaaahia
bhaaoekaaaaaffiaabaaoeiaaeaaaaaeacaaapiabdaaoekaaaaaffiaacaaoeia
aeaaaaaeacaaapiabfaaoekaaaaaaaiaacaaoeiaaeaaaaaeaaaaahiabjaaoeka
aaaaaaiaabaaoeiaaeaaaaaeaaaaahiabkaaoekaaaaappjaaaaaoeiaaeaaaaae
abaaapiabgaaoekaaaaappjaacaaoeiaacaaaaadacaaapiaaaaaffibafaaoeka
afaaaaadadaaapiaacaaoeiaacaaoeiaacaaaaadaeaaapiaaaaaaaibaeaaoeka
acaaaaadaaaaapiaaaaakkibagaaoekaaeaaaaaeadaaapiaaeaaoeiaaeaaoeia
adaaoeiaaeaaaaaeadaaapiaaaaaoeiaaaaaoeiaadaaoeiaahaaaaacafaaabia
adaaaaiaahaaaaacafaaaciaadaaffiaahaaaaacafaaaeiaadaakkiaahaaaaac
afaaaiiaadaappiaabaaaaacagaaaiiabnaappkaaeaaaaaeadaaapiaadaaoeia
ahaaoekaagaappiaafaaaaadagaaahiaacaaoejablaappkaafaaaaadahaaahia
agaaffiabiaaoekaaeaaaaaeagaaaliabhaakekaagaaaaiaahaakeiaaeaaaaae
agaaahiabjaaoekaagaakkiaagaapeiaafaaaaadacaaapiaacaaoeiaagaaffia
aeaaaaaeacaaapiaaeaaoeiaagaaaaiaacaaoeiaaeaaaaaeaaaaapiaaaaaoeia
agaakkiaacaaoeiaafaaaaadaaaaapiaafaaoeiaaaaaoeiaalaaaaadaaaaapia
aaaaoeiaboaaaakaagaaaaacacaaabiaadaaaaiaagaaaaacacaaaciaadaaffia
agaaaaacacaaaeiaadaakkiaagaaaaacacaaaiiaadaappiaafaaaaadaaaaapia
aaaaoeiaacaaoeiaafaaaaadacaaahiaaaaaffiaajaaoekaaeaaaaaeacaaahia
aiaaoekaaaaaaaiaacaaoeiaaeaaaaaeaaaaahiaakaaoekaaaaakkiaacaaoeia
aeaaaaaeaaaaahiaalaaoekaaaaappiaaaaaoeiaabaaaaacagaaaiiabnaappka
ajaaaaadacaaabiaamaaoekaagaaoeiaajaaaaadacaaaciaanaaoekaagaaoeia
ajaaaaadacaaaeiaaoaaoekaagaaoeiaafaaaaadadaaapiaagaacjiaagaakeia
ajaaaaadaeaaabiaapaaoekaadaaoeiaajaaaaadaeaaaciabaaaoekaadaaoeia
ajaaaaadaeaaaeiabbaaoekaadaaoeiaacaaaaadacaaahiaacaaoeiaaeaaoeia
afaaaaadaaaaaiiaagaaffiaagaaffiaaeaaaaaeaaaaaiiaagaaaaiaagaaaaia
aaaappibabaaaaacabaaahoaagaaoeiaaeaaaaaeacaaahiabcaaoekaaaaappia
acaaoeiaacaaaaadacaaahoaaaaaoeiaacaaoeiaaeaaaaaeaaaaadmaabaappia
aaaaoekaabaaoeiaabaaaaacaaaaammaabaaoeiappppaaaafdeieefckmaiaaaa
eaaaabaaclacaaaafjaaaaaeegiocaaaaaaaaaaaagaaaaaafjaaaaaeegiocaaa
abaaaaaaabaaaaaafjaaaaaeegiocaaaacaaaaaacnaaaaaafjaaaaaeegiocaaa
adaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaacaaaaaa
fpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaad
dccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaa
giaaaaacagaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaa
akiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaa
abeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaia
ebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkbabaaa
aaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaa
ckbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaa
jkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaaghcaabaaa
aaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaa
fgifcaaaaaaaaaaaaeaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaa
abeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaabkbabaaa
adaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaa
ggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaa
egiocaaaadaaaaaaabaaaaaadiaaaaaihcaabaaaacaaaaaafgafbaaaaaaaaaaa
egiccaaaadaaaaaaanaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
abeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaackaabaia
ebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaakpcaabaaa
abaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaa
dcaaaaakncaabaaaaaaaaaaaagijcaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaa
agajbaaaacaaaaaadcaaaaakncaabaaaaaaaaaaaagijcaaaadaaaaaaaoaaaaaa
fgafbaaaaaaaaaaaagaobaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
adaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaa
aaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaabaaaaaa
dcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaa
igadbaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaafaaaaaaogikcaaaaaaaaaaaafaaaaaadiaaaaaihcaabaaaabaaaaaa
egbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaacaaaaaa
fgafbaaaabaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaabaaaaaa
egiicaaaadaaaaaaamaaaaaaagaabaaaabaaaaaaegaibaaaacaaaaaadcaaaaak
hcaabaaaabaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaabaaaaaaegadbaaa
abaaaaaadgaaaaafhccabaaaacaaaaaaegacbaaaabaaaaaadgaaaaaficaabaaa
abaaaaaaabeaaaaaaaaaiadpbbaaaaaibcaabaaaacaaaaaaegiocaaaacaaaaaa
cgaaaaaaegaobaaaabaaaaaabbaaaaaiccaabaaaacaaaaaaegiocaaaacaaaaaa
chaaaaaaegaobaaaabaaaaaabbaaaaaiecaabaaaacaaaaaaegiocaaaacaaaaaa
ciaaaaaaegaobaaaabaaaaaadiaaaaahpcaabaaaadaaaaaajgacbaaaabaaaaaa
egakbaaaabaaaaaabbaaaaaibcaabaaaaeaaaaaaegiocaaaacaaaaaacjaaaaaa
egaobaaaadaaaaaabbaaaaaiccaabaaaaeaaaaaaegiocaaaacaaaaaackaaaaaa
egaobaaaadaaaaaabbaaaaaiecaabaaaaeaaaaaaegiocaaaacaaaaaaclaaaaaa
egaobaaaadaaaaaaaaaaaaahhcaabaaaacaaaaaaegacbaaaacaaaaaaegacbaaa
aeaaaaaadiaaaaahicaabaaaaaaaaaaabkaabaaaabaaaaaabkaabaaaabaaaaaa
dcaaaaakicaabaaaaaaaaaaaakaabaaaabaaaaaaakaabaaaabaaaaaadkaabaia
ebaaaaaaaaaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaacaaaaaacmaaaaaa
pgapbaaaaaaaaaaaegacbaaaacaaaaaaaaaaaaajpcaabaaaadaaaaaaagaabaia
ebaaaaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaaaaaaaaajpcaabaaaaeaaaaaa
fgafbaiaebaaaaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaaaaaaaaajpcaabaaa
aaaaaaaakgakbaiaebaaaaaaaaaaaaaaegiocaaaacaaaaaaaeaaaaaadiaaaaah
pcaabaaaafaaaaaafgafbaaaabaaaaaaegaobaaaaeaaaaaadiaaaaahpcaabaaa
aeaaaaaaegaobaaaaeaaaaaaegaobaaaaeaaaaaadcaaaaajpcaabaaaaeaaaaaa
egaobaaaadaaaaaaegaobaaaadaaaaaaegaobaaaaeaaaaaadcaaaaajpcaabaaa
adaaaaaaegaobaaaadaaaaaaagaabaaaabaaaaaaegaobaaaafaaaaaadcaaaaaj
pcaabaaaabaaaaaaegaobaaaaaaaaaaakgakbaaaabaaaaaaegaobaaaadaaaaaa
dcaaaaajpcaabaaaaaaaaaaaegaobaaaaaaaaaaaegaobaaaaaaaaaaaegaobaaa
aeaaaaaaeeaaaaafpcaabaaaadaaaaaaegaobaaaaaaaaaaadcaaaaanpcaabaaa
aaaaaaaaegaobaaaaaaaaaaaegiocaaaacaaaaaaafaaaaaaaceaaaaaaaaaiadp
aaaaiadpaaaaiadpaaaaiadpaoaaaaakpcaabaaaaaaaaaaaaceaaaaaaaaaiadp
aaaaiadpaaaaiadpaaaaiadpegaobaaaaaaaaaaadiaaaaahpcaabaaaabaaaaaa
egaobaaaabaaaaaaegaobaaaadaaaaaadeaaaaakpcaabaaaabaaaaaaegaobaaa
abaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadiaaaaahpcaabaaa
aaaaaaaaegaobaaaaaaaaaaaegaobaaaabaaaaaadiaaaaaihcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiccaaaacaaaaaaahaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaacaaaaaaagaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaak
hcaabaaaaaaaaaaaegiccaaaacaaaaaaaiaaaaaakgakbaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaacaaaaaaajaaaaaapgapbaaa
aaaaaaaaegacbaaaaaaaaaaaaaaaaaahhccabaaaadaaaaaaegacbaaaaaaaaaaa
egacbaaaacaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaa
aiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaheaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    lowp vec3 vlight;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 425
uniform highp vec4 _MainTex_ST;
#line 441
uniform lowp float _Cutoff;
#line 96
highp vec3 Shade4PointLights( in highp vec4 lightPosX, in highp vec4 lightPosY, in highp vec4 lightPosZ, in highp vec3 lightColor0, in highp vec3 lightColor1, in highp vec3 lightColor2, in highp vec3 lightColor3, in highp vec4 lightAttenSq, in highp vec3 pos, in highp vec3 normal ) {
    highp vec4 toLightX = (lightPosX - pos.x);
    highp vec4 toLightY = (lightPosY - pos.y);
    #line 100
    highp vec4 toLightZ = (lightPosZ - pos.z);
    highp vec4 lengthSq = vec4( 0.0);
    lengthSq += (toLightX * toLightX);
    lengthSq += (toLightY * toLightY);
    #line 104
    lengthSq += (toLightZ * toLightZ);
    highp vec4 ndotl = vec4( 0.0);
    ndotl += (toLightX * normal.x);
    ndotl += (toLightY * normal.y);
    #line 108
    ndotl += (toLightZ * normal.z);
    highp vec4 corr = inversesqrt(lengthSq);
    ndotl = max( vec4( 0.0, 0.0, 0.0, 0.0), (ndotl * corr));
    highp vec4 atten = (1.0 / (1.0 + (lengthSq * lightAttenSq)));
    #line 112
    highp vec4 diff = (ndotl * atten);
    highp vec3 col = vec3( 0.0);
    col += (lightColor0 * diff.x);
    col += (lightColor1 * diff.y);
    #line 116
    col += (lightColor2 * diff.z);
    col += (lightColor3 * diff.w);
    return col;
}
#line 137
mediump vec3 ShadeSH9( in mediump vec4 normal ) {
    mediump vec3 x1;
    mediump vec3 x2;
    mediump vec3 x3;
    x1.x = dot( unity_SHAr, normal);
    #line 141
    x1.y = dot( unity_SHAg, normal);
    x1.z = dot( unity_SHAb, normal);
    mediump vec4 vB = (normal.xyzz * normal.yzzx);
    x2.x = dot( unity_SHBr, vB);
    #line 145
    x2.y = dot( unity_SHBg, vB);
    x2.z = dot( unity_SHBb, vB);
    highp float vC = ((normal.x * normal.x) - (normal.y * normal.y));
    x3 = (unity_SHC.xyz * vC);
    #line 149
    return ((x1 + x2) + x3);
}
#line 400
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 404
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 408
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 426
v2f_surf vert_surf( in appdata_full v ) {
    v2f_surf o;
    #line 429
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec3 worldN = (mat3( _Object2World) * (v.normal * unity_Scale.w));
    #line 433
    o.normal = worldN;
    highp vec3 shlight = ShadeSH9( vec4( worldN, 1.0));
    o.vlight = shlight;
    highp vec3 worldPos = (_Object2World * v.vertex).xyz;
    #line 437
    o.vlight += Shade4PointLights( unity_4LightPosX0, unity_4LightPosY0, unity_4LightPosZ0, unity_LightColor[0].xyz, unity_LightColor[1].xyz, unity_LightColor[2].xyz, unity_LightColor[3].xyz, unity_4LightAtten0, worldPos, worldN);
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out lowp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec3(xl_retval.normal);
    xlv_TEXCOORD2 = vec3(xl_retval.vlight);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    lowp vec3 vlight;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 425
uniform highp vec4 _MainTex_ST;
#line 441
uniform lowp float _Cutoff;
#line 338
lowp vec4 LightingLambert( in SurfaceOutput s, in lowp vec3 lightDir, in lowp float atten ) {
    lowp float diff = max( 0.0, dot( s.Normal, lightDir));
    lowp vec4 c;
    #line 342
    c.xyz = ((s.Albedo * _LightColor0.xyz) * ((diff * atten) * 2.0));
    c.w = s.Alpha;
    return c;
}
#line 411
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 413
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 442
lowp vec4 frag_surf( in v2f_surf IN ) {
    Input surfIN;
    #line 445
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    o.Emission = vec3( 0.0);
    #line 449
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    o.Normal = IN.normal;
    #line 453
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    lowp float atten = 1.0;
    lowp vec4 c = vec4( 0.0);
    #line 457
    c = LightingLambert( o, _WorldSpaceLightPos0.xyz, atten);
    c.xyz += (o.Albedo * IN.vlight);
    c.w = o.Alpha;
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in lowp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.normal = vec3(xlv_TEXCOORD1);
    xlt_IN.vlight = vec3(xlv_TEXCOORD2);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 9 [_Time]
Vector 10 [_ProjectionParams]
Vector 11 [unity_4LightPosX0]
Vector 12 [unity_4LightPosY0]
Vector 13 [unity_4LightPosZ0]
Vector 14 [unity_4LightAtten0]
Vector 15 [unity_LightColor0]
Vector 16 [unity_LightColor1]
Vector 17 [unity_LightColor2]
Vector 18 [unity_LightColor3]
Vector 19 [unity_SHAr]
Vector 20 [unity_SHAg]
Vector 21 [unity_SHAb]
Vector 22 [unity_SHBr]
Vector 23 [unity_SHBg]
Vector 24 [unity_SHBb]
Vector 25 [unity_SHC]
Matrix 5 [_Object2World]
Vector 26 [unity_Scale]
Float 27 [_WaveSpeed]
Float 28 [_Amplitude]
Vector 29 [_MainTex_ST]
"!!ARBvp1.0
# 127 ALU
PARAM c[35] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.mvp,
		program.local[5..29],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
MUL R6.xyz, vertex.normal, c[26].w;
DP3 R6.w, R6, c[6];
DP3 R7.x, R6, c[5];
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[27];
MUL R0.x, R0, c[9];
ADD R0.w, R0.y, vertex.position.z;
MOV R1.w, vertex.position;
MOV R7.y, R6.w;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.x, R0.y, R0.z, R0;
MAD R0.x, R1, c[0].y, R0.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.y, R0.x;
ADD R0.xyz, -R1.y, c[30];
MUL R0.xyz, R0, R0;
MAD R2.xyz, R0, c[31].xyxw, c[31].zwzw;
MAD R2.xyz, R2, R0, c[32].xyxw;
MAD R2.xyz, R2, R0, c[32].zwzw;
MAD R2.xyz, R2, R0, c[33].xyxw;
MAD R3.xyz, R2, R0, c[30].wzww;
SLT R2.x, R1.y, c[0].w;
SGE R2.yz, R1.y, c[33].xzww;
MOV R0.xz, R2;
DP3 R0.y, R2, c[30].wzww;
DP3 R0.x, R3, -R0;
MAD R0.y, R1.x, c[34].w, R0.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[28];
MAD R1.z, -R0.x, c[34].x, vertex.position;
MAD R0.x, R1, c[34].y, R0.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R1.x, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R2.xyz, -R1.x, c[30];
MUL R0.xyz, R2, R2;
MAD R3.xyz, R0, c[31].xyxw, c[31].zwzw;
MAD R4.xyz, R3, R0, c[32].xyxw;
MAD R4.xyz, R4, R0, c[32].zwzw;
MAD R4.xyz, R4, R0, c[33].xyxw;
ADD R2.xyz, -R0.w, c[30];
MUL R2.xyz, R2, R2;
MAD R3.xyz, R2, c[31].xyxw, c[31].zwzw;
MAD R3.xyz, R3, R2, c[32].xyxw;
MAD R3.xyz, R3, R2, c[32].zwzw;
MAD R4.xyz, R4, R0, c[30].wzww;
SLT R5.x, R1, c[0].w;
SGE R5.yz, R1.x, c[33].xzww;
MOV R0.xz, R5;
DP3 R0.y, R5, c[30].wzww;
DP3 R1.x, R4, -R0;
MAD R0.xyz, R3, R2, c[33].xyxw;
MAD R3.xyz, R0, R2, c[30].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[33].xzww;
MOV R0.xz, R2;
DP3 R0.y, R2, c[30].wzww;
DP3 R0.x, R3, -R0;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R7.w, c[30].z;
MUL R1.x, vertex.texcoord[0].y, R1;
MUL R0.y, -R0, c[34].z;
MUL R0.x, R0, c[28];
MAD R1.y, R0.x, c[30], R0;
MUL R0.x, R1, c[28];
MAD R1.x, R0, c[30].y, vertex.position;
DP4 R0.x, R1, c[6];
ADD R3, -R0.x, c[12];
MUL R0, R3, R3;
DP4 R2.x, R1, c[5];
ADD R2, -R2.x, c[11];
MUL R3, R6.w, R3;
MAD R4, R2, R2, R0;
MAD R2, R7.x, R2, R3;
DP3 R3.w, R6, c[7];
DP4 R5.x, R1, c[7];
ADD R0, -R5.x, c[13];
MAD R4, R0, R0, R4;
MAD R0, R3.w, R0, R2;
MUL R5, R4, c[14];
MOV R7.z, R3.w;
RSQ R2.x, R4.x;
RSQ R2.y, R4.y;
RSQ R2.z, R4.z;
RSQ R2.w, R4.w;
MUL R0, R0, R2;
ADD R2, R5, c[30].z;
RCP R2.x, R2.x;
RCP R2.y, R2.y;
RCP R2.w, R2.w;
RCP R2.z, R2.z;
MAX R0, R0, c[0].x;
MUL R0, R0, R2;
MUL R2.xyz, R0.y, c[16];
MAD R2.xyz, R0.x, c[15], R2;
MAD R0.xyz, R0.z, c[17], R2;
MAD R4.xyz, R0.w, c[18], R0;
MUL R0, R7.xyzz, R7.yzzx;
MUL R2.z, R6.w, R6.w;
DP4 R2.w, R1, c[4];
DP4 R2.x, R1, c[1];
DP4 R2.y, R1, c[2];
MUL R3.xyz, R2.xyww, c[30].y;
DP4 R6.z, R0, c[24];
DP4 R6.y, R0, c[23];
MAD R2.z, R7.x, R7.x, -R2;
DP4 R6.x, R0, c[22];
MUL R0.xyz, R2.z, c[25];
DP4 R2.z, R1, c[3];
DP4 R5.z, R7, c[21];
DP4 R5.y, R7, c[20];
DP4 R5.x, R7, c[19];
ADD R5.xyz, R5, R6;
ADD R0.xyz, R5, R0;
ADD result.texcoord[2].xyz, R0, R4;
MOV R0.x, R3;
MUL R0.y, R3, c[10].x;
ADD result.texcoord[3].xy, R0, R3.z;
MOV result.position, R2;
MOV result.texcoord[3].zw, R2;
MOV result.texcoord[1].z, R3.w;
MOV result.texcoord[1].y, R6.w;
MOV result.texcoord[1].x, R7;
MAD result.texcoord[0].xy, vertex.texcoord[0], c[29], c[29].zwzw;
END
# 127 instructions, 8 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Vector 9 [_ProjectionParams]
Vector 10 [_ScreenParams]
Vector 11 [unity_4LightPosX0]
Vector 12 [unity_4LightPosY0]
Vector 13 [unity_4LightPosZ0]
Vector 14 [unity_4LightAtten0]
Vector 15 [unity_LightColor0]
Vector 16 [unity_LightColor1]
Vector 17 [unity_LightColor2]
Vector 18 [unity_LightColor3]
Vector 19 [unity_SHAr]
Vector 20 [unity_SHAg]
Vector 21 [unity_SHAb]
Vector 22 [unity_SHBr]
Vector 23 [unity_SHBg]
Vector 24 [unity_SHBb]
Vector 25 [unity_SHC]
Matrix 4 [_Object2World]
Vector 26 [unity_Scale]
Float 27 [_WaveSpeed]
Float 28 [_Amplitude]
Vector 29 [_MainTex_ST]
"vs_2_0
; 127 ALU
def c30, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c31, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c32, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c33, 6.28318501, -3.14159298, 0.20000000, 3.11999989
def c34, 0.89999998, 1.45000005, 0, 0
dcl_position0 v0
dcl_normal0 v2
dcl_texcoord0 v3
mul r4.xyz, v2, c26.w
dp3 r5.x, r4, c4
dp3 r4.w, r4, c5
dp3 r4.x, r4, c6
add r0.w, v0.x, v0.y
mov r0.x, c8
mul r0.x, c27, r0
slt r0.y, r0.x, c32.x
max r0.y, -r0, r0
slt r0.y, c32.x, r0
add r0.z, -r0.y, c30
mul r0.z, r0.x, r0
mad r1.x, r0.y, -r0, r0.z
add r1.y, r0.w, v0.z
mad r0.x, r1, c32.y, r1.y
mad r0.x, r0, c32.z, c32.w
frc r0.x, r0
mad r1.z, r0.x, c33.x, c33.y
sincos r0.xy, r1.z, c31.xyzw, c30.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1.x, c34, r1
mul r0.x, r0, c28
mad r1.z, -r0.x, c33, v0
mad r0.x, r1, c33.w, r1.y
mad r0.x, r0, c32.z, c32.w
mad r0.y, r0, c32.z, c32.w
frc r0.y, r0
mov r1.w, v0
mov r5.z, r4.x
mov r5.w, c30.z
mad r1.y, r0, c33.x, c33
frc r1.x, r0
sincos r0.xy, r1.y, c31.xyzw, c30.xyzw
mad r0.x, r1, c33, c33.y
sincos r2.xy, r0.x, c31.xyzw, c30.xyzw
mul r0.z, v3.y, r0.y
mul r0.x, v3.y, r2.y
mul r0.y, v3, v3.x
mul r0.y, -r0, c34.x
mul r0.x, r0, c28
mad r1.y, r0.x, c30.w, r0
mul r0.x, r0.z, c28
mad r1.x, r0, c30.w, v0
dp4 r0.y, r1, c5
add r2, -r0.y, c12
mul r3, r4.w, r2
dp4 r0.x, r1, c4
add r0, -r0.x, c11
mul r2, r2, r2
mad r3, r5.x, r0, r3
dp4 r5.y, r1, c6
mad r2, r0, r0, r2
add r0, -r5.y, c13
mad r2, r0, r0, r2
mad r0, r4.x, r0, r3
mul r3, r2, c14
mov r5.y, r4.w
rsq r2.x, r2.x
rsq r2.y, r2.y
rsq r2.w, r2.w
rsq r2.z, r2.z
mul r0, r0, r2
add r2, r3, c30.z
dp4 r3.z, r5, c21
dp4 r3.y, r5, c20
dp4 r3.x, r5, c19
rcp r2.x, r2.x
rcp r2.y, r2.y
rcp r2.w, r2.w
rcp r2.z, r2.z
max r0, r0, c32.x
mul r0, r0, r2
mul r2.xyz, r0.y, c16
mad r2.xyz, r0.x, c15, r2
mad r0.xyz, r0.z, c17, r2
mad r2.xyz, r0.w, c18, r0
mul r0, r5.xyzz, r5.yzzx
mul r2.w, r4, r4
dp4 r5.w, r0, c24
dp4 r5.z, r0, c23
dp4 r5.y, r0, c22
mad r2.w, r5.x, r5.x, -r2
mul r0.xyz, r2.w, c25
add r3.xyz, r3, r5.yzww
add r5.yzw, r3.xxyz, r0.xxyz
dp4 r0.w, r1, c3
dp4 r0.z, r1, c2
dp4 r0.x, r1, c0
dp4 r0.y, r1, c1
mul r3.xyz, r0.xyww, c30.w
add oT2.xyz, r5.yzww, r2
mov r2.x, r3
mul r2.y, r3, c9.x
mad oT3.xy, r3.z, c10.zwzw, r2
mov oPos, r0
mov oT3.zw, r0
mov oT1.z, r4.x
mov oT1.y, r4.w
mov oT1.x, r5
mad oT0.xy, v3, c29, c29.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Float 28 [_Amplitude]
Vector 29 [_MainTex_ST]
Matrix 22 [_Object2World] 4
Vector 1 [_ProjectionParams]
Vector 2 [_ScreenParams]
Vector 0 [_Time]
Float 27 [_WaveSpeed]
Matrix 18 [glstate_matrix_mvp] 4
Vector 6 [unity_4LightAtten0]
Vector 3 [unity_4LightPosX0]
Vector 4 [unity_4LightPosY0]
Vector 5 [unity_4LightPosZ0]
Vector 7 [unity_LightColor0]
Vector 8 [unity_LightColor1]
Vector 9 [unity_LightColor2]
Vector 10 [unity_LightColor3]
Vector 13 [unity_SHAb]
Vector 12 [unity_SHAg]
Vector 11 [unity_SHAr]
Vector 16 [unity_SHBb]
Vector 15 [unity_SHBg]
Vector 14 [unity_SHBr]
Vector 17 [unity_SHC]
Vector 26 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 93.33-94.67 (70-71 instructions), vertex: 32, texture: 0,
//   sequencer: 32,  8 GPRs, 24 threads,
// Performance (if enough threads): ~93-94 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaadnmaaaaaeceaaaaaaaaaaaaaaceaaaaadfmaaaaadieaaaaaaaa
aaaaaaaaaaaaaddeaaaaaabmaaaaadchpppoadaaaaaaaabfaaaaaabmaaaaaaaa
aaaaadcaaaaaabmaaaacaabmaaabaaaaaaaaabmmaaaaaaaaaaaaabnmaaacaabn
aaabaaaaaaaaaboiaaaaaaaaaaaaabpiaaacaabgaaaeaaaaaaaaacaiaaaaaaaa
aaaaacbiaaacaaabaaabaaaaaaaaaboiaaaaaaaaaaaaacckaaacaaacaaabaaaa
aaaaaboiaaaaaaaaaaaaacdiaaacaaaaaaabaaaaaaaaaboiaaaaaaaaaaaaacdo
aaacaablaaabaaaaaaaaabmmaaaaaaaaaaaaacejaaacaabcaaaeaaaaaaaaacai
aaaaaaaaaaaaacfmaaacaaagaaabaaaaaaaaaboiaaaaaaaaaaaaacgpaaacaaad
aaabaaaaaaaaaboiaaaaaaaaaaaaacibaaacaaaeaaabaaaaaaaaaboiaaaaaaaa
aaaaacjdaaacaaafaaabaaaaaaaaaboiaaaaaaaaaaaaackfaaacaaahaaaeaaaa
aaaaacliaaaaaaaaaaaaacmiaaacaaanaaabaaaaaaaaaboiaaaaaaaaaaaaacnd
aaacaaamaaabaaaaaaaaaboiaaaaaaaaaaaaacnoaaacaaalaaabaaaaaaaaaboi
aaaaaaaaaaaaacojaaacaabaaaabaaaaaaaaaboiaaaaaaaaaaaaacpeaaacaaap
aaabaaaaaaaaaboiaaaaaaaaaaaaacppaaacaaaoaaabaaaaaaaaaboiaaaaaaaa
aaaaadakaaacaabbaaabaaaaaaaaaboiaaaaaaaaaaaaadbeaaacaabkaaabaaaa
aaaaaboiaaaaaaaafpebgnhagmgjhehfgegfaaklaaaaaaadaaabaaabaaabaaaa
aaaaaaaafpengbgjgofegfhifpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaa
fpepgcgkgfgdhedcfhgphcgmgeaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaa
fpfahcgpgkgfgdhegjgpgofagbhcgbgnhdaafpfdgdhcgfgfgofagbhcgbgnhdaa
fpfegjgngfaafpfhgbhggffdhagfgfgeaaghgmhdhegbhegffpgngbhehcgjhifp
gnhghaaahfgogjhehjfpdeemgjghgiheebhehegfgodaaahfgogjhehjfpdeemgj
ghgihefagphdfidaaahfgogjhehjfpdeemgjghgihefagphdfjdaaahfgogjhehj
fpdeemgjghgihefagphdfkdaaahfgogjhehjfpemgjghgiheedgpgmgphcaaklkl
aaabaaadaaabaaaeaaaiaaaaaaaaaaaahfgogjhehjfpfdeiebgcaahfgogjhehj
fpfdeiebghaahfgogjhehjfpfdeiebhcaahfgogjhehjfpfdeiecgcaahfgogjhe
hjfpfdeiecghaahfgogjhehjfpfdeiechcaahfgogjhehjfpfdeiedaahfgogjhe
hjfpfdgdgbgmgfaahghdfpddfpdaaadccodacodcdadddfddcodaaaklaaaaaaaa
aaaaaaabaaaaaaaaaaaaaaaaaaaaaabeaapmaabaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaeaaaaaadoeaadbaaahaaaaaaaaaaaaaaaaaaaadaieaaaaaaab
aaaaaaadaaaaaaafaaaaacjaaabaaaaiaaaadaajaacafaakaaaadafaaaabhbfb
aaachcfcaaadpdfdaaaabadgaaaabadfaaaabafbaaaaaadeaaaabadlaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaamaejapnldpiaaaaaaaaaaaaadoccpjiddpaaaaaa
doemmmmneamjapnldpggggggdpljjjjkeaehkobeeaammmmnlpiaaaaahajfgaai
baaobaaafgaaaaaaaaaaaaaagaapmcaabcaaaaaaaaaagabfgablbcaabcaaaaaa
aaaaaaaagacbmeaabcaaaaaaaaaagachgacnbcaabcaaaaaaaaaagaddgadjbcaa
bcaaaaaaaaaagadpgaefbcaabcaaaaaaaaaagaelbafbbcaaccaaaaaaafpicaaa
aaaaagiiaaaaaaaaafpidaaaaaaaaoiiaaaaaaaaafpibaaaaaaaapmiaaaaaaaa
miacaaaaaagmblaacbaappaamiaeaaaaaagmgmaacbaablaaheabaaaaablolbmg
laacpnaakieaaaaabiaaaaebmcaaaablmiaiaaaeaalbgmaaobababaamiahaaaa
aamgmagmklaappaamiahaaaaaamablgmilaapnpomiahaaaeaamaaaaaoiaaaaaa
miapaaaeaadeagaakbaepoaamiahaaaaaalegmaakaaepnaamabaaaaaaaaaaagm
ocaaaaaamacaaaaaaaaaaalbocaaaaaamaemaaabaalbkmmgkbabpoaamiahaaaa
aabgmaaaobabaaaamiahaaaeaamagmaakbaabmaamiaeaaabaagmgmaaoaaeacaa
beapaaaaaablaalbkbacbfaeaeiiabadafmgmgbloaaeacaemiapaaaaaablnana
kladbeaamiapaaaaaabldepiklabbdaamiapaaaaaamgdoanklabbcaamiapiado
aacfcfaaocaaaaaamiahaaadaamablaakbadbkaaceihafacaamglegmkbadbiia
miahaaacaalblemakladbhacmiahaaafaagmlemakladbgacaibhahadaablmagg
kbacbjafaicbahagaadoanmbgpalafafaiecahagaadoanlbgpamafafaiieahag
aadoanlmgpanafafmiabaaacaakhkhaakpahaoaaaibcaeacaakhkhgmkpahapaf
aiceaeacaakhkhmgkpahbaafgeihacacaalologboaagacaemiahaaacaabllemn
klacbbacmiahaaadaablmamakladbiadmiahaaadaablleleklabbhadmiahaaad
aamgmaleklabbgadbecpaaaeaegmaalbkaadadaakicpaaagaelbaaebiaadaepo
kiepaaahaemgaaeciaadafpomiamiaadaacmcmaaocaaaaaamiahiaabaaleleaa
ocafafaamiadiaaaaalalabkilabbnbnkibpaaadaapipiedmbahahpokiipaaab
aapilbecmbahafabmiapaaadaajejepiolagagadmiapaaabaajemgpiolagafab
miadiaadaagmbkbjklaaacaamiapaaabaajegmaaolaeafabmiapaaaaaaaaaapi
olaeaeadmiapaaaeaapipilbilaaagpnfibaaaaaaaaaaagmocaaaaiaficaaaaa
aaaaaalbocaaaaiafieaaaaaaaaaaamgocaaaaiafiiaaaaaaaaaaablocaaaaia
miapaaaaaapiaaaaobabaaaaemipaaadaapimgmgkcaapnaeemecabaaaamgblgm
obadaaaeemciababaagmmgblobadabaeembbaaabaabllblbobadabaemiaeaaaa
aalbgmaaobadaaaakibhabaeaalmmaecibabajakkiciabaeaamgblicmbaeadak
kieoabafaabgpmmaibabahakbeahaaaaaabbmalbkbaaaiafambiafaaaamgmggm
obaaadadbeahaaaaaabebamgoaafaaabamihabaaaamabalboaaaaeadmiahaaaa
aamabaaaoaaaabaamiahiaacaalemaaaoaacaaaaaaaaaaaaaaaaaaaaaaaaaaaa
"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_Time]
Vector 466 [_ProjectionParams]
Vector 465 [unity_4LightPosX0]
Vector 464 [unity_4LightPosY0]
Vector 463 [unity_4LightPosZ0]
Vector 462 [unity_4LightAtten0]
Vector 461 [unity_LightColor0]
Vector 460 [unity_LightColor1]
Vector 459 [unity_LightColor2]
Vector 458 [unity_LightColor3]
Vector 457 [unity_SHAr]
Vector 456 [unity_SHAg]
Vector 455 [unity_SHAb]
Vector 454 [unity_SHBr]
Vector 453 [unity_SHBg]
Vector 452 [unity_SHBb]
Vector 451 [unity_SHC]
Matrix 260 [_Object2World]
Vector 450 [unity_Scale]
Float 449 [_WaveSpeed]
Float 448 [_Amplitude]
Vector 447 [_MainTex_ST]
"sce_vp_rsx // 74 instructions using 9 registers
[Configuration]
8
0000004a01050900
[Defaults]
2
446 4
400ccccd3e4ccccd4047ae143f000000
445 4
3f6666663fb9999a000000003f800000
[Microcode]
1184
00001c6c009c220c013fc0c36041dffc401f9c6c011bf808010400d740619f9c
00001c6c0040007f8106c08360403ffc00019c6c0080082a8100008360409ffc
00009c6c005c10000186c08360411ffc00009c6c00c000000106c08aa0409ffc
00041c6c0150400c008600c360411ffc00031c6c0150600c008600c360403ffc
00029c6c0150500c008600c360405ffc00019c6c00c000550106c08aa0a11ffc
00019c6c009d3000028000c360403ffc201fdc6c0040007f8686c08360411ffc
00011c6c0040007f8686c08360403ffc00011c6c008000550aaa854360411ffc
00041c6c004000550a86c08360409ffc00041c6c0040007f8c86c08360405ffc
00001c6c019c700c1086c0c360405ffc00001c6c019c800c1086c0c360409ffc
00001c6c019c900c1086c0c360411ffc00009c6c0080000d109a08436041fffc
00019c6c010000001080086001205ffc00011c6c01dc400d8286c0c360405ffc
00011c6c01dc500d8286c0c360409ffc00011c6c01dc600d8286c0c360411ffc
00012400004000ff8686c08360403ffc00009c6c00c0000c0086c0830121dffc
00001c6c011be07f848800c001a19ffc00001c6c011bd07f849540c001a05ffc
00009c6c789bd0aa868000caa028207c00011c6c789c3055068600c00031c07c
00019c6c7880082a811540554023017c00001c6c008008000095408360409ffc
00001c6c0080082a813fc24360411ffc00001c6c009c0000008000c360411ffc
00001c6c009c002a808000c360405ffc00001c6c009c0000068000c360409ffc
00001c6c011be02a80bfc0dfe0a09ffc00001c6c011be0d5009540d540405ffc
00001c6c011be00000bfc0c000411ffc00031c6c00c0000c0486c08300a1dffc
00029c6c01d0300d8086c0c360403ffc00029c6c01d0100d8086c0c360409ffc
00029c6c01d0000d8086c0c360411ffc00019c6c01d0500d8086c0c360411ffc
00011c6c01d0400d8086c0c360411ffc00009c6c01d0600d8086c0c360411ffc
00009c6c00dcf00d8186c0a000a1fffc00011c6c00dd100d8186c0a00121fffc
00019c6c00dd000d8186c0a001a1fffc00039c6c009be00e0abfc0c36041dffc
00039c6c009d202a8e8000c360409ffc00021c6c008000550a86c3436041fffc
00019c6c0080000d8686c3436041fffc401f9c6c00c000080e86c09543a19fa8
00021c6c010000001086c2436221fffc00011c6c0100000d8486c24361a1fffc
00011c6c0100000d8286c1436121fffc00009c6c0100007f8c86c1436221fffc
401f9c6c2040007f8c86c080013041a0401f9c6c204000550a86c08aa12881a0
00021c6c209ce00d8486c0d54125e1fc00021c6c00dbd07f8186c0836221fffc
00029c6c21d0200d8086c0dfe12241fc401f9c6c104000001086c08002310020
401f9c6c1040000d8a86c08aa229e000401f9c6c104000558a86c09542246028
00009c6c1080000d8286c35fe223e07c00009c6c029bd00d82aa80c36041fffc
00001c6c0080000d8286c0436041fffc00009c6c009cc02a808600c36041dffc
00009c6c011cd000008600c300a1dffc00001c6c011cb055008600c300a1dffc
00001c6c011ca07f808600c30021dffc401f9c6c00c0000c0c86c0830021dfa5
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 176 // 160 used size, 9 vars
Float 128 [_WaveSpeed]
Float 132 [_Amplitude]
Vector 144 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 0 [_Time] 4
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityLighting" 720 // 720 used size, 17 vars
Vector 32 [unity_4LightPosX0] 4
Vector 48 [unity_4LightPosY0] 4
Vector 64 [unity_4LightPosZ0] 4
Vector 80 [unity_4LightAtten0] 4
Vector 96 [unity_LightColor0] 4
Vector 112 [unity_LightColor1] 4
Vector 128 [unity_LightColor2] 4
Vector 144 [unity_LightColor3] 4
Vector 160 [unity_LightColor4] 4
Vector 176 [unity_LightColor5] 4
Vector 192 [unity_LightColor6] 4
Vector 208 [unity_LightColor7] 4
Vector 608 [unity_SHAr] 4
Vector 624 [unity_SHAg] 4
Vector 640 [unity_SHAb] 4
Vector 656 [unity_SHBr] 4
Vector 672 [unity_SHBg] 4
Vector 688 [unity_SHBb] 4
Vector 704 [unity_SHC] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 67 instructions, 7 temp regs, 0 temp arrays:
// ALU 61 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedfccnjimdaccjdgpeadkpkfecminbackiabaaaaaapmakaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcgaajaaaaeaaaabaa
fiacaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaafjaaaaaeegiocaaaabaaaaaa
agaaaaaafjaaaaaeegiocaaaacaaaaaacnaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaad
dcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaad
pccabaaaaeaaaaaagiaaaaacahaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaa
aaaaaaaaaiaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaa
aaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaa
aaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaa
aaaaaaaaaceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaa
enaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgifcaaaaaaaaaaaaiaaaaaadiaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaa
adaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaa
aaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadiaaaaaihcaabaaaacaaaaaa
fgafbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaajbcaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakccaabaaa
aaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaa
dcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaakncaabaaaaaaaaaaaagijcaaaadaaaaaaamaaaaaa
agaabaaaaaaaaaaaagajbaaaacaaaaaadcaaaaakncaabaaaaaaaaaaaagijcaaa
adaaaaaaaoaaaaaafgafbaaaaaaaaaaaagaobaaaaaaaaaaadcaaaaakpcaabaaa
abaaaaaaegiocaaaadaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaaabaaaaaa
dcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaaapaaaaaa
pgbpbaaaaaaaaaaaigadbaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaa
ajaaaaaaogikcaaaaaaaaaaaajaaaaaadiaaaaaihcaabaaaacaaaaaaegbcbaaa
acaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaadaaaaaafgafbaaa
acaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaacaaaaaaegiicaaa
adaaaaaaamaaaaaaagaabaaaacaaaaaaegaibaaaadaaaaaadcaaaaakhcaabaaa
acaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaacaaaaaaegadbaaaacaaaaaa
dgaaaaafhccabaaaacaaaaaaegacbaaaacaaaaaadgaaaaaficaabaaaacaaaaaa
abeaaaaaaaaaiadpbbaaaaaibcaabaaaadaaaaaaegiocaaaacaaaaaacgaaaaaa
egaobaaaacaaaaaabbaaaaaiccaabaaaadaaaaaaegiocaaaacaaaaaachaaaaaa
egaobaaaacaaaaaabbaaaaaiecaabaaaadaaaaaaegiocaaaacaaaaaaciaaaaaa
egaobaaaacaaaaaadiaaaaahpcaabaaaaeaaaaaajgacbaaaacaaaaaaegakbaaa
acaaaaaabbaaaaaibcaabaaaafaaaaaaegiocaaaacaaaaaacjaaaaaaegaobaaa
aeaaaaaabbaaaaaiccaabaaaafaaaaaaegiocaaaacaaaaaackaaaaaaegaobaaa
aeaaaaaabbaaaaaiecaabaaaafaaaaaaegiocaaaacaaaaaaclaaaaaaegaobaaa
aeaaaaaaaaaaaaahhcaabaaaadaaaaaaegacbaaaadaaaaaaegacbaaaafaaaaaa
diaaaaahicaabaaaaaaaaaaabkaabaaaacaaaaaabkaabaaaacaaaaaadcaaaaak
icaabaaaaaaaaaaaakaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaebaaaaaa
aaaaaaaadcaaaaakhcaabaaaadaaaaaaegiccaaaacaaaaaacmaaaaaapgapbaaa
aaaaaaaaegacbaaaadaaaaaaaaaaaaajpcaabaaaaeaaaaaaagaabaiaebaaaaaa
aaaaaaaaegiocaaaacaaaaaaacaaaaaaaaaaaaajpcaabaaaafaaaaaafgafbaia
ebaaaaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaaaaaaaaajpcaabaaaaaaaaaaa
kgakbaiaebaaaaaaaaaaaaaaegiocaaaacaaaaaaaeaaaaaadiaaaaahpcaabaaa
agaaaaaafgafbaaaacaaaaaaegaobaaaafaaaaaadiaaaaahpcaabaaaafaaaaaa
egaobaaaafaaaaaaegaobaaaafaaaaaadcaaaaajpcaabaaaafaaaaaaegaobaaa
aeaaaaaaegaobaaaaeaaaaaaegaobaaaafaaaaaadcaaaaajpcaabaaaaeaaaaaa
egaobaaaaeaaaaaaagaabaaaacaaaaaaegaobaaaagaaaaaadcaaaaajpcaabaaa
acaaaaaaegaobaaaaaaaaaaakgakbaaaacaaaaaaegaobaaaaeaaaaaadcaaaaaj
pcaabaaaaaaaaaaaegaobaaaaaaaaaaaegaobaaaaaaaaaaaegaobaaaafaaaaaa
eeaaaaafpcaabaaaaeaaaaaaegaobaaaaaaaaaaadcaaaaanpcaabaaaaaaaaaaa
egaobaaaaaaaaaaaegiocaaaacaaaaaaafaaaaaaaceaaaaaaaaaiadpaaaaiadp
aaaaiadpaaaaiadpaoaaaaakpcaabaaaaaaaaaaaaceaaaaaaaaaiadpaaaaiadp
aaaaiadpaaaaiadpegaobaaaaaaaaaaadiaaaaahpcaabaaaacaaaaaaegaobaaa
acaaaaaaegaobaaaaeaaaaaadeaaaaakpcaabaaaacaaaaaaegaobaaaacaaaaaa
aceaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadiaaaaahpcaabaaaaaaaaaaa
egaobaaaaaaaaaaaegaobaaaacaaaaaadiaaaaaihcaabaaaacaaaaaafgafbaaa
aaaaaaaaegiccaaaacaaaaaaahaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaa
acaaaaaaagaaaaaaagaabaaaaaaaaaaaegacbaaaacaaaaaadcaaaaakhcaabaaa
aaaaaaaaegiccaaaacaaaaaaaiaaaaaakgakbaaaaaaaaaaaegacbaaaacaaaaaa
dcaaaaakhcaabaaaaaaaaaaaegiccaaaacaaaaaaajaaaaaapgapbaaaaaaaaaaa
egacbaaaaaaaaaaaaaaaaaahhccabaaaadaaaaaaegacbaaaaaaaaaaaegacbaaa
adaaaaaadiaaaaaibcaabaaaaaaaaaaabkaabaaaabaaaaaaakiacaaaabaaaaaa
afaaaaaadiaaaaahicaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaadp
diaaaaakfcaabaaaaaaaaaaaagadbaaaabaaaaaaaceaaaaaaaaaaadpaaaaaaaa
aaaaaadpaaaaaaaadgaaaaafmccabaaaaeaaaaaakgaobaaaabaaaaaaaaaaaaah
dccabaaaaeaaaaaakgakbaaaaaaaaaaamgaabaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

varying highp vec4 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  highp vec3 shlight_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = _glesVertex;
  highp float t_6;
  highp float tmpvar_7;
  tmpvar_7 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_8;
  tmpvar_8 = (_Time * _WaveSpeed).x;
  t_6 = tmpvar_8;
  if ((tmpvar_8 < 0.0)) {
    t_6 = (tmpvar_8 * -1.0);
  };
  tmpvar_5.x = (_glesVertex.x + (((sin(((t_6 * 1.45) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_5.y = ((((sin(((t_6 * 3.12) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_5.z = (_glesVertex.z - (((sin(((t_6 * 2.2) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_9 * (tmpvar_1 * unity_Scale.w));
  tmpvar_3 = tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_10;
  mediump vec3 tmpvar_12;
  mediump vec4 normal_13;
  normal_13 = tmpvar_11;
  highp float vC_14;
  mediump vec3 x3_15;
  mediump vec3 x2_16;
  mediump vec3 x1_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAr, normal_13);
  x1_17.x = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAg, normal_13);
  x1_17.y = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAb, normal_13);
  x1_17.z = tmpvar_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normal_13.xyzz * normal_13.yzzx);
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBr, tmpvar_21);
  x2_16.x = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBg, tmpvar_21);
  x2_16.y = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBb, tmpvar_21);
  x2_16.z = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y));
  vC_14 = tmpvar_25;
  highp vec3 tmpvar_26;
  tmpvar_26 = (unity_SHC.xyz * vC_14);
  x3_15 = tmpvar_26;
  tmpvar_12 = ((x1_17 + x2_16) + x3_15);
  shlight_2 = tmpvar_12;
  tmpvar_4 = shlight_2;
  highp vec3 tmpvar_27;
  tmpvar_27 = (_Object2World * tmpvar_5).xyz;
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosX0 - tmpvar_27.x);
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_4LightPosY0 - tmpvar_27.y);
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosZ0 - tmpvar_27.z);
  highp vec4 tmpvar_31;
  tmpvar_31 = (((tmpvar_28 * tmpvar_28) + (tmpvar_29 * tmpvar_29)) + (tmpvar_30 * tmpvar_30));
  highp vec4 tmpvar_32;
  tmpvar_32 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_28 * tmpvar_10.x) + (tmpvar_29 * tmpvar_10.y)) + (tmpvar_30 * tmpvar_10.z)) * inversesqrt(tmpvar_31))) * (1.0/((1.0 + (tmpvar_31 * unity_4LightAtten0)))));
  highp vec3 tmpvar_33;
  tmpvar_33 = (tmpvar_4 + ((((unity_LightColor[0].xyz * tmpvar_32.x) + (unity_LightColor[1].xyz * tmpvar_32.y)) + (unity_LightColor[2].xyz * tmpvar_32.z)) + (unity_LightColor[3].xyz * tmpvar_32.w)));
  tmpvar_4 = tmpvar_33;
  gl_Position = (glstate_matrix_mvp * tmpvar_5);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * (_Object2World * tmpvar_5));
}



#endif
#ifdef FRAGMENT

varying highp vec4 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _WorldSpaceLightPos0;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float tmpvar_5;
  tmpvar_5 = c_2.w;
  lowp float x_6;
  x_6 = (c_2.w - _Cutoff);
  if ((x_6 < 0.0)) {
    discard;
  };
  lowp float tmpvar_7;
  mediump float lightShadowDataX_8;
  highp float dist_9;
  lowp float tmpvar_10;
  tmpvar_10 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD3).x;
  dist_9 = tmpvar_10;
  highp float tmpvar_11;
  tmpvar_11 = _LightShadowData.x;
  lightShadowDataX_8 = tmpvar_11;
  highp float tmpvar_12;
  tmpvar_12 = max (float((dist_9 > (xlv_TEXCOORD3.z / xlv_TEXCOORD3.w))), lightShadowDataX_8);
  tmpvar_7 = tmpvar_12;
  lowp vec4 c_13;
  c_13.xyz = ((c_2.xyz * _LightColor0.xyz) * ((max (0.0, dot (xlv_TEXCOORD1, _WorldSpaceLightPos0.xyz)) * tmpvar_7) * 2.0));
  c_13.w = tmpvar_5;
  c_1.xyz = (c_13.xyz + (c_2.xyz * xlv_TEXCOORD2));
  c_1.w = tmpvar_5;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

varying highp vec4 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  highp vec3 shlight_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = _glesVertex;
  highp float t_6;
  highp float tmpvar_7;
  tmpvar_7 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_8;
  tmpvar_8 = (_Time * _WaveSpeed).x;
  t_6 = tmpvar_8;
  if ((tmpvar_8 < 0.0)) {
    t_6 = (tmpvar_8 * -1.0);
  };
  tmpvar_5.x = (_glesVertex.x + (((sin(((t_6 * 1.45) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_5.y = ((((sin(((t_6 * 3.12) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_5.z = (_glesVertex.z - (((sin(((t_6 * 2.2) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * tmpvar_5);
  mat3 tmpvar_10;
  tmpvar_10[0] = _Object2World[0].xyz;
  tmpvar_10[1] = _Object2World[1].xyz;
  tmpvar_10[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (tmpvar_1 * unity_Scale.w));
  tmpvar_3 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = tmpvar_11;
  mediump vec3 tmpvar_13;
  mediump vec4 normal_14;
  normal_14 = tmpvar_12;
  highp float vC_15;
  mediump vec3 x3_16;
  mediump vec3 x2_17;
  mediump vec3 x1_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAr, normal_14);
  x1_18.x = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAg, normal_14);
  x1_18.y = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAb, normal_14);
  x1_18.z = tmpvar_21;
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_14.xyzz * normal_14.yzzx);
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBr, tmpvar_22);
  x2_17.x = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBg, tmpvar_22);
  x2_17.y = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBb, tmpvar_22);
  x2_17.z = tmpvar_25;
  mediump float tmpvar_26;
  tmpvar_26 = ((normal_14.x * normal_14.x) - (normal_14.y * normal_14.y));
  vC_15 = tmpvar_26;
  highp vec3 tmpvar_27;
  tmpvar_27 = (unity_SHC.xyz * vC_15);
  x3_16 = tmpvar_27;
  tmpvar_13 = ((x1_18 + x2_17) + x3_16);
  shlight_2 = tmpvar_13;
  tmpvar_4 = shlight_2;
  highp vec3 tmpvar_28;
  tmpvar_28 = (_Object2World * tmpvar_5).xyz;
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_4LightPosX0 - tmpvar_28.x);
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosY0 - tmpvar_28.y);
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosZ0 - tmpvar_28.z);
  highp vec4 tmpvar_32;
  tmpvar_32 = (((tmpvar_29 * tmpvar_29) + (tmpvar_30 * tmpvar_30)) + (tmpvar_31 * tmpvar_31));
  highp vec4 tmpvar_33;
  tmpvar_33 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_29 * tmpvar_11.x) + (tmpvar_30 * tmpvar_11.y)) + (tmpvar_31 * tmpvar_11.z)) * inversesqrt(tmpvar_32))) * (1.0/((1.0 + (tmpvar_32 * unity_4LightAtten0)))));
  highp vec3 tmpvar_34;
  tmpvar_34 = (tmpvar_4 + ((((unity_LightColor[0].xyz * tmpvar_33.x) + (unity_LightColor[1].xyz * tmpvar_33.y)) + (unity_LightColor[2].xyz * tmpvar_33.z)) + (unity_LightColor[3].xyz * tmpvar_33.w)));
  tmpvar_4 = tmpvar_34;
  highp vec4 o_35;
  highp vec4 tmpvar_36;
  tmpvar_36 = (tmpvar_9 * 0.5);
  highp vec2 tmpvar_37;
  tmpvar_37.x = tmpvar_36.x;
  tmpvar_37.y = (tmpvar_36.y * _ProjectionParams.x);
  o_35.xy = (tmpvar_37 + tmpvar_36.w);
  o_35.zw = tmpvar_9.zw;
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = o_35;
}



#endif
#ifdef FRAGMENT

varying highp vec4 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _WorldSpaceLightPos0;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float tmpvar_5;
  tmpvar_5 = c_2.w;
  lowp float x_6;
  x_6 = (c_2.w - _Cutoff);
  if ((x_6 < 0.0)) {
    discard;
  };
  lowp vec4 c_7;
  c_7.xyz = ((c_2.xyz * _LightColor0.xyz) * ((max (0.0, dot (xlv_TEXCOORD1, _WorldSpaceLightPos0.xyz)) * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD3).x) * 2.0));
  c_7.w = tmpvar_5;
  c_1.xyz = (c_7.xyz + (c_2.xyz * xlv_TEXCOORD2));
  c_1.w = tmpvar_5;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "flash " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Vector 9 [_ProjectionParams]
Vector 10 [unity_4LightPosX0]
Vector 11 [unity_4LightPosY0]
Vector 12 [unity_4LightPosZ0]
Vector 13 [unity_4LightAtten0]
Vector 14 [unity_LightColor0]
Vector 15 [unity_LightColor1]
Vector 16 [unity_LightColor2]
Vector 17 [unity_LightColor3]
Vector 18 [unity_SHAr]
Vector 19 [unity_SHAg]
Vector 20 [unity_SHAb]
Vector 21 [unity_SHBr]
Vector 22 [unity_SHBg]
Vector 23 [unity_SHBb]
Vector 24 [unity_SHC]
Matrix 4 [_Object2World]
Vector 25 [unity_Scale]
Vector 26 [unity_NPOTScale]
Float 27 [_WaveSpeed]
Float 28 [_Amplitude]
Vector 29 [_MainTex_ST]
"agal_vs
c30 -0.020833 -0.125 1.0 0.5
c31 -0.000002 -0.000022 0.002604 0.00026
c32 0.0 2.2 0.159155 0.5
c33 6.283185 -3.141593 0.2 3.12
c34 0.9 1.45 0.0 0.0
[bc]
adaaaaaaaeaaahacabaaaaoeaaaaaaaabjaaaappabaaaaaa mul r4.xyz, a1, c25.w
bcaaaaaaafaaabacaeaaaakeacaaaaaaaeaaaaoeabaaaaaa dp3 r5.x, r4.xyzz, c4
bcaaaaaaaeaaaiacaeaaaakeacaaaaaaafaaaaoeabaaaaaa dp3 r4.w, r4.xyzz, c5
bcaaaaaaaeaaabacaeaaaakeacaaaaaaagaaaaoeabaaaaaa dp3 r4.x, r4.xyzz, c6
abaaaaaaaaaaaiacaaaaaaaaaaaaaaaaaaaaaaffaaaaaaaa add r0.w, a0.x, a0.y
aaaaaaaaaaaaabacaiaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r0.x, c8
adaaaaaaaaaaabacblaaaaoeabaaaaaaaaaaaaaaacaaaaaa mul r0.x, c27, r0.x
ckaaaaaaaaaaacacaaaaaaaaacaaaaaacaaaaaaaabaaaaaa slt r0.y, r0.x, c32.x
bfaaaaaaabaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r1.y, r0.y
ahaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa max r0.y, r1.y, r0.y
ckaaaaaaaaaaacaccaaaaaaaabaaaaaaaaaaaaffacaaaaaa slt r0.y, c32.x, r0.y
bfaaaaaaacaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r2.y, r0.y
abaaaaaaaaaaaeacacaaaaffacaaaaaaboaaaaoeabaaaaaa add r0.z, r2.y, c30
adaaaaaaaaaaaeacaaaaaaaaacaaaaaaaaaaaakkacaaaaaa mul r0.z, r0.x, r0.z
bfaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r1.x, r0.x
adaaaaaaabaaabacaaaaaaffacaaaaaaabaaaaaaacaaaaaa mul r1.x, r0.y, r1.x
abaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaakkacaaaaaa add r1.x, r1.x, r0.z
abaaaaaaabaaacacaaaaaappacaaaaaaaaaaaakkaaaaaaaa add r1.y, r0.w, a0.z
adaaaaaaaaaaabacabaaaaaaacaaaaaacaaaaaffabaaaaaa mul r0.x, r1.x, c32.y
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaffacaaaaaa add r0.x, r0.x, r1.y
adaaaaaaaaaaabacaaaaaaaaacaaaaaacaaaaakkabaaaaaa mul r0.x, r0.x, c32.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaacaaaaappabaaaaaa add r0.x, r0.x, c32.w
aiaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r0.x, r0.x
adaaaaaaabaaaeacaaaaaaaaacaaaaaacbaaaaaaabaaaaaa mul r1.z, r0.x, c33.x
abaaaaaaabaaaeacabaaaakkacaaaaaacbaaaaffabaaaaaa add r1.z, r1.z, c33.y
apaaaaaaaaaaabacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.z
baaaaaaaaaaaacacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.z
adaaaaaaaaaaabacaaaaaaffacaaaaaaadaaaaffaaaaaaaa mul r0.x, r0.y, a3.y
adaaaaaaaaaaacacabaaaaaaacaaaaaaccaaaaoeabaaaaaa mul r0.y, r1.x, c34
abaaaaaaaaaaacacaaaaaaffacaaaaaaabaaaaffacaaaaaa add r0.y, r0.y, r1.y
adaaaaaaaaaaabacaaaaaaaaacaaaaaabmaaaaoeabaaaaaa mul r0.x, r0.x, c28
bfaaaaaaadaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r3.x, r0.x
adaaaaaaabaaaeacadaaaaaaacaaaaaacbaaaaoeabaaaaaa mul r1.z, r3.x, c33
abaaaaaaabaaaeacabaaaakkacaaaaaaaaaaaaoeaaaaaaaa add r1.z, r1.z, a0
adaaaaaaaaaaabacabaaaaaaacaaaaaacbaaaappabaaaaaa mul r0.x, r1.x, c33.w
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaffacaaaaaa add r0.x, r0.x, r1.y
adaaaaaaaaaaabacaaaaaaaaacaaaaaacaaaaakkabaaaaaa mul r0.x, r0.x, c32.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaacaaaaappabaaaaaa add r0.x, r0.x, c32.w
adaaaaaaaaaaacacaaaaaaffacaaaaaacaaaaakkabaaaaaa mul r0.y, r0.y, c32.z
abaaaaaaaaaaacacaaaaaaffacaaaaaacaaaaappabaaaaaa add r0.y, r0.y, c32.w
aiaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa frc r0.y, r0.y
aaaaaaaaabaaaiacaaaaaaoeaaaaaaaaaaaaaaaaaaaaaaaa mov r1.w, a0
aaaaaaaaafaaaeacaeaaaaaaacaaaaaaaaaaaaaaaaaaaaaa mov r5.z, r4.x
aaaaaaaaafaaaiacboaaaakkabaaaaaaaaaaaaaaaaaaaaaa mov r5.w, c30.z
adaaaaaaabaaacacaaaaaaffacaaaaaacbaaaaaaabaaaaaa mul r1.y, r0.y, c33.x
abaaaaaaabaaacacabaaaaffacaaaaaacbaaaaoeabaaaaaa add r1.y, r1.y, c33
aiaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r1.x, r0.x
apaaaaaaaaaaabacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.y
baaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.y
adaaaaaaaaaaabacabaaaaaaacaaaaaacbaaaaoeabaaaaaa mul r0.x, r1.x, c33
abaaaaaaaaaaabacaaaaaaaaacaaaaaacbaaaaffabaaaaaa add r0.x, r0.x, c33.y
apaaaaaaacaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sin r2.x, r0.x
baaaaaaaacaaacacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa cos r2.y, r0.x
adaaaaaaaaaaaeacadaaaaffaaaaaaaaaaaaaaffacaaaaaa mul r0.z, a3.y, r0.y
adaaaaaaaaaaabacadaaaaffaaaaaaaaacaaaaffacaaaaaa mul r0.x, a3.y, r2.y
adaaaaaaaaaaacacadaaaaoeaaaaaaaaadaaaaaaaaaaaaaa mul r0.y, a3, a3.x
bfaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r0.y, r0.y
adaaaaaaaaaaacacaaaaaaffacaaaaaaccaaaaaaabaaaaaa mul r0.y, r0.y, c34.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaabmaaaaoeabaaaaaa mul r0.x, r0.x, c28
adaaaaaaabaaacacaaaaaaaaacaaaaaaboaaaappabaaaaaa mul r1.y, r0.x, c30.w
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa add r1.y, r1.y, r0.y
adaaaaaaaaaaabacaaaaaakkacaaaaaabmaaaaoeabaaaaaa mul r0.x, r0.z, c28
adaaaaaaabaaabacaaaaaaaaacaaaaaaboaaaappabaaaaaa mul r1.x, r0.x, c30.w
abaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaaoeaaaaaaaa add r1.x, r1.x, a0
bdaaaaaaaaaaacacabaaaaoeacaaaaaaafaaaaoeabaaaaaa dp4 r0.y, r1, c5
bfaaaaaaacaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r2.y, r0.y
abaaaaaaacaaapacacaaaaffacaaaaaaalaaaaoeabaaaaaa add r2, r2.y, c11
adaaaaaaadaaapacaeaaaappacaaaaaaacaaaaoeacaaaaaa mul r3, r4.w, r2
bdaaaaaaaaaaabacabaaaaoeacaaaaaaaeaaaaoeabaaaaaa dp4 r0.x, r1, c4
bfaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r0.x, r0.x
abaaaaaaaaaaapacaaaaaaaaacaaaaaaakaaaaoeabaaaaaa add r0, r0.x, c10
adaaaaaaacaaapacacaaaaoeacaaaaaaacaaaaoeacaaaaaa mul r2, r2, r2
adaaaaaaagaaapacafaaaaaaacaaaaaaaaaaaaoeacaaaaaa mul r6, r5.x, r0
abaaaaaaadaaapacagaaaaoeacaaaaaaadaaaaoeacaaaaaa add r3, r6, r3
bdaaaaaaafaaacacabaaaaoeacaaaaaaagaaaaoeabaaaaaa dp4 r5.y, r1, c6
adaaaaaaagaaapacaaaaaaoeacaaaaaaaaaaaaoeacaaaaaa mul r6, r0, r0
abaaaaaaacaaapacagaaaaoeacaaaaaaacaaaaoeacaaaaaa add r2, r6, r2
bfaaaaaaaaaaacacafaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r0.y, r5.y
abaaaaaaaaaaapacaaaaaaffacaaaaaaamaaaaoeabaaaaaa add r0, r0.y, c12
adaaaaaaagaaapacaaaaaaoeacaaaaaaaaaaaaoeacaaaaaa mul r6, r0, r0
abaaaaaaacaaapacagaaaaoeacaaaaaaacaaaaoeacaaaaaa add r2, r6, r2
adaaaaaaaaaaapacaeaaaaaaacaaaaaaaaaaaaoeacaaaaaa mul r0, r4.x, r0
abaaaaaaaaaaapacaaaaaaoeacaaaaaaadaaaaoeacaaaaaa add r0, r0, r3
adaaaaaaadaaapacacaaaaoeacaaaaaaanaaaaoeabaaaaaa mul r3, r2, c13
aaaaaaaaafaaacacaeaaaappacaaaaaaaaaaaaaaaaaaaaaa mov r5.y, r4.w
akaaaaaaacaaabacacaaaaaaacaaaaaaaaaaaaaaaaaaaaaa rsq r2.x, r2.x
akaaaaaaacaaacacacaaaaffacaaaaaaaaaaaaaaaaaaaaaa rsq r2.y, r2.y
akaaaaaaacaaaiacacaaaappacaaaaaaaaaaaaaaaaaaaaaa rsq r2.w, r2.w
akaaaaaaacaaaeacacaaaakkacaaaaaaaaaaaaaaaaaaaaaa rsq r2.z, r2.z
adaaaaaaaaaaapacaaaaaaoeacaaaaaaacaaaaoeacaaaaaa mul r0, r0, r2
abaaaaaaacaaapacadaaaaoeacaaaaaaboaaaakkabaaaaaa add r2, r3, c30.z
bdaaaaaaadaaaeacafaaaaoeacaaaaaabeaaaaoeabaaaaaa dp4 r3.z, r5, c20
bdaaaaaaadaaacacafaaaaoeacaaaaaabdaaaaoeabaaaaaa dp4 r3.y, r5, c19
bdaaaaaaadaaabacafaaaaoeacaaaaaabcaaaaoeabaaaaaa dp4 r3.x, r5, c18
afaaaaaaacaaabacacaaaaaaacaaaaaaaaaaaaaaaaaaaaaa rcp r2.x, r2.x
afaaaaaaacaaacacacaaaaffacaaaaaaaaaaaaaaaaaaaaaa rcp r2.y, r2.y
afaaaaaaacaaaiacacaaaappacaaaaaaaaaaaaaaaaaaaaaa rcp r2.w, r2.w
afaaaaaaacaaaeacacaaaakkacaaaaaaaaaaaaaaaaaaaaaa rcp r2.z, r2.z
ahaaaaaaaaaaapacaaaaaaoeacaaaaaacaaaaaaaabaaaaaa max r0, r0, c32.x
adaaaaaaaaaaapacaaaaaaoeacaaaaaaacaaaaoeacaaaaaa mul r0, r0, r2
adaaaaaaacaaahacaaaaaaffacaaaaaaapaaaaoeabaaaaaa mul r2.xyz, r0.y, c15
adaaaaaaagaaahacaaaaaaaaacaaaaaaaoaaaaoeabaaaaaa mul r6.xyz, r0.x, c14
abaaaaaaacaaahacagaaaakeacaaaaaaacaaaakeacaaaaaa add r2.xyz, r6.xyzz, r2.xyzz
adaaaaaaaaaaahacaaaaaakkacaaaaaabaaaaaoeabaaaaaa mul r0.xyz, r0.z, c16
abaaaaaaaaaaahacaaaaaakeacaaaaaaacaaaakeacaaaaaa add r0.xyz, r0.xyzz, r2.xyzz
adaaaaaaacaaahacaaaaaappacaaaaaabbaaaaoeabaaaaaa mul r2.xyz, r0.w, c17
abaaaaaaacaaahacacaaaakeacaaaaaaaaaaaakeacaaaaaa add r2.xyz, r2.xyzz, r0.xyzz
adaaaaaaaaaaapacafaaaakeacaaaaaaafaaaacjacaaaaaa mul r0, r5.xyzz, r5.yzzx
adaaaaaaacaaaiacaeaaaappacaaaaaaaeaaaappacaaaaaa mul r2.w, r4.w, r4.w
bdaaaaaaafaaaiacaaaaaaoeacaaaaaabhaaaaoeabaaaaaa dp4 r5.w, r0, c23
bdaaaaaaafaaaeacaaaaaaoeacaaaaaabgaaaaoeabaaaaaa dp4 r5.z, r0, c22
bdaaaaaaafaaacacaaaaaaoeacaaaaaabfaaaaoeabaaaaaa dp4 r5.y, r0, c21
adaaaaaaagaaaiacafaaaaaaacaaaaaaafaaaaaaacaaaaaa mul r6.w, r5.x, r5.x
acaaaaaaacaaaiacagaaaappacaaaaaaacaaaappacaaaaaa sub r2.w, r6.w, r2.w
adaaaaaaaaaaahacacaaaappacaaaaaabiaaaaoeabaaaaaa mul r0.xyz, r2.w, c24
abaaaaaaadaaahacadaaaakeacaaaaaaafaaaapjacaaaaaa add r3.xyz, r3.xyzz, r5.yzww
abaaaaaaadaaahacadaaaakeacaaaaaaaaaaaakeacaaaaaa add r3.xyz, r3.xyzz, r0.xyzz
bdaaaaaaaaaaaiacabaaaaoeacaaaaaaadaaaaoeabaaaaaa dp4 r0.w, r1, c3
bdaaaaaaaaaaaeacabaaaaoeacaaaaaaacaaaaoeabaaaaaa dp4 r0.z, r1, c2
bdaaaaaaaaaaabacabaaaaoeacaaaaaaaaaaaaoeabaaaaaa dp4 r0.x, r1, c0
bdaaaaaaaaaaacacabaaaaoeacaaaaaaabaaaaoeabaaaaaa dp4 r0.y, r1, c1
adaaaaaaafaaaoacaaaaaandacaaaaaaboaaaappabaaaaaa mul r5.yzw, r0.wxyw, c30.w
abaaaaaaacaaahaeadaaaakeacaaaaaaacaaaakeacaaaaaa add v2.xyz, r3.xyzz, r2.xyzz
adaaaaaaacaaacacafaaaakkacaaaaaaajaaaaaaabaaaaaa mul r2.y, r5.z, c9.x
aaaaaaaaacaaabacafaaaaffacaaaaaaaaaaaaaaaaaaaaaa mov r2.x, r5.y
abaaaaaaacaaadacacaaaafeacaaaaaaafaaaappacaaaaaa add r2.xy, r2.xyyy, r5.w
adaaaaaaadaaadaeacaaaafeacaaaaaabkaaaaoeabaaaaaa mul v3.xy, r2.xyyy, c26
aaaaaaaaaaaaapadaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r0
aaaaaaaaadaaamaeaaaaaaopacaaaaaaaaaaaaaaaaaaaaaa mov v3.zw, r0.wwzw
aaaaaaaaabaaaeaeaeaaaaaaacaaaaaaaaaaaaaaaaaaaaaa mov v1.z, r4.x
aaaaaaaaabaaacaeaeaaaappacaaaaaaaaaaaaaaaaaaaaaa mov v1.y, r4.w
aaaaaaaaabaaabaeafaaaaaaacaaaaaaaaaaaaaaaaaaaaaa mov v1.x, r5.x
adaaaaaaagaaadacadaaaaoeaaaaaaaabnaaaaoeabaaaaaa mul r6.xy, a3, c29
abaaaaaaaaaaadaeagaaaafeacaaaaaabnaaaaooabaaaaaa add v0.xy, r6.xyyy, c29.zwzw
aaaaaaaaaaaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v0.zw, c0
aaaaaaaaabaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v1.w, c0
aaaaaaaaacaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v2.w, c0
"
}

SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 176 // 160 used size, 9 vars
Float 128 [_WaveSpeed]
Float 132 [_Amplitude]
Vector 144 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 0 [_Time] 4
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityLighting" 720 // 720 used size, 17 vars
Vector 32 [unity_4LightPosX0] 4
Vector 48 [unity_4LightPosY0] 4
Vector 64 [unity_4LightPosZ0] 4
Vector 80 [unity_4LightAtten0] 4
Vector 96 [unity_LightColor0] 4
Vector 112 [unity_LightColor1] 4
Vector 128 [unity_LightColor2] 4
Vector 144 [unity_LightColor3] 4
Vector 160 [unity_LightColor4] 4
Vector 176 [unity_LightColor5] 4
Vector 192 [unity_LightColor6] 4
Vector 208 [unity_LightColor7] 4
Vector 608 [unity_SHAr] 4
Vector 624 [unity_SHAg] 4
Vector 640 [unity_SHAb] 4
Vector 656 [unity_SHBr] 4
Vector 672 [unity_SHBg] 4
Vector 688 [unity_SHBb] 4
Vector 704 [unity_SHC] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 67 instructions, 7 temp regs, 0 temp arrays:
// ALU 61 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecedgjoflnmcdnhkhkajnlfcakjocnklhmpdabaaaaaamabbaaaaaeaaaaaa
daaaaaaapaagaaaafibaaaaacabbaaaaebgpgodjliagaaaaliagaaaaaaacpopp
daagaaaaiiaaaaaaaiaaceaaaaaaieaaaaaaieaaaaaaceaaabaaieaaaaaaaiaa
acaaabaaaaaaaaaaabaaaaaaabaaadaaaaaaaaaaabaaafaaabaaaeaaaaaaaaaa
acaaacaaaiaaafaaaaaaaaaaacaacgaaahaaanaaaaaaaaaaadaaaaaaaeaabeaa
aaaaaaaaadaaamaaaeaabiaaaaaaaaaaadaabeaaabaabmaaaaaaaaaaaaaaaaaa
aaacpoppfbaaaaafbnaaapkajkjjljdpbekoeheamnmmameaggggggdpfbaaaaaf
boaaapkanlapmjeanlapejmamnmmemdoaaaaiadpfbaaaaafbpaaapkaaaaaaaaa
aaaaaamaidpjccdoaaaaaadpfbaaaaafcaaaapkaabannalfgballglhklkkckdl
ijiiiidjfbaaaaafcbaaapkaklkkkklmaaaaaaloaaaaiadpaaaaaadpbpaaaaac
afaaaaiaaaaaapjabpaaaaacafaaaciaacaaapjabpaaaaacafaaadiaadaaapja
aeaaaaaeaaaaadoaadaaoejaacaaoekaacaaookaabaaaaacaaaaabiaabaaaaka
afaaaaadaaaaabiaaaaaaaiaadaaaakaamaaaaadaaaaaciaaaaaaaiabpaaaaka
afaaaaadaaaaaciaaaaaffiaaaaaaaiaaeaaaaaeaaaaabiaaaaaffiabpaaffka
aaaaaaiaacaaaaadaaaaaciaaaaaffjaaaaaaajaacaaaaadaaaaaciaaaaaffia
aaaakkjaaeaaaaaeaaaaahiaaaaaaaiabnaaoekaaaaaffiaaeaaaaaeaaaaahia
aaaaoeiabpaakkkabpaappkabdaaaaacaaaaahiaaaaaoeiaaeaaaaaeaaaaahia
aaaaoeiaboaaaakaboaaffkacfaaaaaeabaaaciaaaaaffiacaaaoekacbaaoeka
afaaaaadaaaaaciaabaaffiaadaaffjaafaaaaadaaaaaciaaaaaffiaabaaffka
afaaaaadaaaaaiiaadaaaajaadaaffjaafaaaaadaaaaaiiaaaaappiabnaappka
aeaaaaaeaaaaaciaaaaaffiabpaappkaaaaappibafaaaaadabaaahiaaaaaffia
bjaaoekaafaaaaadacaaapiaaaaaffiabfaaoekacfaaaaaeadaaaciaaaaaaaia
caaaoekacbaaoekacfaaaaaeaeaaaciaaaaakkiacaaaoekacbaaoekaafaaaaad
aaaaabiaaeaaffiaadaaffjaafaaaaadaaaaabiaaaaaaaiaabaaffkaaeaaaaae
aaaaabiaaaaaaaiaboaakkkbaaaakkjaafaaaaadaaaaaciaadaaffiaadaaffja
afaaaaadaaaaaciaaaaaffiaabaaffkaaeaaaaaeaaaaaciaaaaaffiabpaappka
aaaaaajaaeaaaaaeabaaahiabiaaoekaaaaaffiaabaaoeiaaeaaaaaeacaaapia
beaaoekaaaaaffiaacaaoeiaaeaaaaaeacaaapiabgaaoekaaaaaaaiaacaaoeia
aeaaaaaeaaaaahiabkaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaahiablaaoeka
aaaappjaaaaaoeiaaeaaaaaeabaaapiabhaaoekaaaaappjaacaaoeiaacaaaaad
acaaapiaaaaaffibagaaoekaafaaaaadadaaapiaacaaoeiaacaaoeiaacaaaaad
aeaaapiaaaaaaaibafaaoekaacaaaaadaaaaapiaaaaakkibahaaoekaaeaaaaae
adaaapiaaeaaoeiaaeaaoeiaadaaoeiaaeaaaaaeadaaapiaaaaaoeiaaaaaoeia
adaaoeiaahaaaaacafaaabiaadaaaaiaahaaaaacafaaaciaadaaffiaahaaaaac
afaaaeiaadaakkiaahaaaaacafaaaiiaadaappiaabaaaaacagaaaiiaboaappka
aeaaaaaeadaaapiaadaaoeiaaiaaoekaagaappiaafaaaaadagaaahiaacaaoeja
bmaappkaafaaaaadahaaahiaagaaffiabjaaoekaaeaaaaaeagaaaliabiaakeka
agaaaaiaahaakeiaaeaaaaaeagaaahiabkaaoekaagaakkiaagaapeiaafaaaaad
acaaapiaacaaoeiaagaaffiaaeaaaaaeacaaapiaaeaaoeiaagaaaaiaacaaoeia
aeaaaaaeaaaaapiaaaaaoeiaagaakkiaacaaoeiaafaaaaadaaaaapiaafaaoeia
aaaaoeiaalaaaaadaaaaapiaaaaaoeiabpaaaakaagaaaaacacaaabiaadaaaaia
agaaaaacacaaaciaadaaffiaagaaaaacacaaaeiaadaakkiaagaaaaacacaaaiia
adaappiaafaaaaadaaaaapiaaaaaoeiaacaaoeiaafaaaaadacaaahiaaaaaffia
akaaoekaaeaaaaaeacaaahiaajaaoekaaaaaaaiaacaaoeiaaeaaaaaeaaaaahia
alaaoekaaaaakkiaacaaoeiaaeaaaaaeaaaaahiaamaaoekaaaaappiaaaaaoeia
abaaaaacagaaaiiaboaappkaajaaaaadacaaabiaanaaoekaagaaoeiaajaaaaad
acaaaciaaoaaoekaagaaoeiaajaaaaadacaaaeiaapaaoekaagaaoeiaafaaaaad
adaaapiaagaacjiaagaakeiaajaaaaadaeaaabiabaaaoekaadaaoeiaajaaaaad
aeaaaciabbaaoekaadaaoeiaajaaaaadaeaaaeiabcaaoekaadaaoeiaacaaaaad
acaaahiaacaaoeiaaeaaoeiaafaaaaadaaaaaiiaagaaffiaagaaffiaaeaaaaae
aaaaaiiaagaaaaiaagaaaaiaaaaappibabaaaaacabaaahoaagaaoeiaaeaaaaae
acaaahiabdaaoekaaaaappiaacaaoeiaacaaaaadacaaahoaaaaaoeiaacaaoeia
afaaaaadaaaaabiaabaaffiaaeaaaakaafaaaaadaaaaaiiaaaaaaaiabpaappka
afaaaaadaaaaafiaabaapeiabpaappkaacaaaaadadaaadoaaaaakkiaaaaaomia
aeaaaaaeaaaaadmaabaappiaaaaaoekaabaaoeiaabaaaaacaaaaammaabaaoeia
abaaaaacadaaamoaabaaoeiappppaaaafdeieefcgaajaaaaeaaaabaafiacaaaa
fjaaaaaeegiocaaaaaaaaaaaakaaaaaafjaaaaaeegiocaaaabaaaaaaagaaaaaa
fjaaaaaeegiocaaaacaaaaaacnaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaa
fpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaa
adaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaa
gfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaadpccabaaa
aeaaaaaagiaaaaacahaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaa
aiaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaa
aceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaag
hcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaa
aaaaaaaafgifcaaaaaaaaaaaaiaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaa
bkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaa
abeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaa
aaaaaaaaegiocaaaadaaaaaaabaaaaaadiaaaaaihcaabaaaacaaaaaafgafbaaa
aaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaa
ckaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakncaabaaaaaaaaaaaagijcaaaadaaaaaaamaaaaaaagaabaaa
aaaaaaaaagajbaaaacaaaaaadcaaaaakncaabaaaaaaaaaaaagijcaaaadaaaaaa
aoaaaaaafgafbaaaaaaaaaaaagaobaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaa
egiocaaaadaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaaapaaaaaapgbpbaaa
aaaaaaaaigadbaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaabaaaaaa
dcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaajaaaaaa
ogikcaaaaaaaaaaaajaaaaaadiaaaaaihcaabaaaacaaaaaaegbcbaaaacaaaaaa
pgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaadaaaaaafgafbaaaacaaaaaa
egiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaacaaaaaaegiicaaaadaaaaaa
amaaaaaaagaabaaaacaaaaaaegaibaaaadaaaaaadcaaaaakhcaabaaaacaaaaaa
egiccaaaadaaaaaaaoaaaaaakgakbaaaacaaaaaaegadbaaaacaaaaaadgaaaaaf
hccabaaaacaaaaaaegacbaaaacaaaaaadgaaaaaficaabaaaacaaaaaaabeaaaaa
aaaaiadpbbaaaaaibcaabaaaadaaaaaaegiocaaaacaaaaaacgaaaaaaegaobaaa
acaaaaaabbaaaaaiccaabaaaadaaaaaaegiocaaaacaaaaaachaaaaaaegaobaaa
acaaaaaabbaaaaaiecaabaaaadaaaaaaegiocaaaacaaaaaaciaaaaaaegaobaaa
acaaaaaadiaaaaahpcaabaaaaeaaaaaajgacbaaaacaaaaaaegakbaaaacaaaaaa
bbaaaaaibcaabaaaafaaaaaaegiocaaaacaaaaaacjaaaaaaegaobaaaaeaaaaaa
bbaaaaaiccaabaaaafaaaaaaegiocaaaacaaaaaackaaaaaaegaobaaaaeaaaaaa
bbaaaaaiecaabaaaafaaaaaaegiocaaaacaaaaaaclaaaaaaegaobaaaaeaaaaaa
aaaaaaahhcaabaaaadaaaaaaegacbaaaadaaaaaaegacbaaaafaaaaaadiaaaaah
icaabaaaaaaaaaaabkaabaaaacaaaaaabkaabaaaacaaaaaadcaaaaakicaabaaa
aaaaaaaaakaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaebaaaaaaaaaaaaaa
dcaaaaakhcaabaaaadaaaaaaegiccaaaacaaaaaacmaaaaaapgapbaaaaaaaaaaa
egacbaaaadaaaaaaaaaaaaajpcaabaaaaeaaaaaaagaabaiaebaaaaaaaaaaaaaa
egiocaaaacaaaaaaacaaaaaaaaaaaaajpcaabaaaafaaaaaafgafbaiaebaaaaaa
aaaaaaaaegiocaaaacaaaaaaadaaaaaaaaaaaaajpcaabaaaaaaaaaaakgakbaia
ebaaaaaaaaaaaaaaegiocaaaacaaaaaaaeaaaaaadiaaaaahpcaabaaaagaaaaaa
fgafbaaaacaaaaaaegaobaaaafaaaaaadiaaaaahpcaabaaaafaaaaaaegaobaaa
afaaaaaaegaobaaaafaaaaaadcaaaaajpcaabaaaafaaaaaaegaobaaaaeaaaaaa
egaobaaaaeaaaaaaegaobaaaafaaaaaadcaaaaajpcaabaaaaeaaaaaaegaobaaa
aeaaaaaaagaabaaaacaaaaaaegaobaaaagaaaaaadcaaaaajpcaabaaaacaaaaaa
egaobaaaaaaaaaaakgakbaaaacaaaaaaegaobaaaaeaaaaaadcaaaaajpcaabaaa
aaaaaaaaegaobaaaaaaaaaaaegaobaaaaaaaaaaaegaobaaaafaaaaaaeeaaaaaf
pcaabaaaaeaaaaaaegaobaaaaaaaaaaadcaaaaanpcaabaaaaaaaaaaaegaobaaa
aaaaaaaaegiocaaaacaaaaaaafaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadp
aaaaiadpaoaaaaakpcaabaaaaaaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadp
aaaaiadpegaobaaaaaaaaaaadiaaaaahpcaabaaaacaaaaaaegaobaaaacaaaaaa
egaobaaaaeaaaaaadeaaaaakpcaabaaaacaaaaaaegaobaaaacaaaaaaaceaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadiaaaaahpcaabaaaaaaaaaaaegaobaaa
aaaaaaaaegaobaaaacaaaaaadiaaaaaihcaabaaaacaaaaaafgafbaaaaaaaaaaa
egiccaaaacaaaaaaahaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaacaaaaaa
agaaaaaaagaabaaaaaaaaaaaegacbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaa
egiccaaaacaaaaaaaiaaaaaakgakbaaaaaaaaaaaegacbaaaacaaaaaadcaaaaak
hcaabaaaaaaaaaaaegiccaaaacaaaaaaajaaaaaapgapbaaaaaaaaaaaegacbaaa
aaaaaaaaaaaaaaahhccabaaaadaaaaaaegacbaaaaaaaaaaaegacbaaaadaaaaaa
diaaaaaibcaabaaaaaaaaaaabkaabaaaabaaaaaaakiacaaaabaaaaaaafaaaaaa
diaaaaahicaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaak
fcaabaaaaaaaaaaaagadbaaaabaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadp
aaaaaaaadgaaaaafmccabaaaaeaaaaaakgaobaaaabaaaaaaaaaaaaahdccabaaa
aeaaaaaakgakbaaaaaaaaaaamgaabaaaaaaaaaaadoaaaaabejfdeheomaaaaaaa
agaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaa
kbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaacaaaaaaahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
adaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaa
ljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeo
aafeebeoehefeofeaaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaakl
epfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
imaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl
"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 403
struct Input {
    highp vec2 uv_MainTex;
};
#line 425
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    lowp vec3 vlight;
    highp vec4 _ShadowCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _ShadowOffsets[4];
uniform sampler2D _ShadowMapTexture;
#line 393
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 401
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 408
#line 434
uniform highp vec4 _MainTex_ST;
#line 451
uniform lowp float _Cutoff;
#line 96
highp vec3 Shade4PointLights( in highp vec4 lightPosX, in highp vec4 lightPosY, in highp vec4 lightPosZ, in highp vec3 lightColor0, in highp vec3 lightColor1, in highp vec3 lightColor2, in highp vec3 lightColor3, in highp vec4 lightAttenSq, in highp vec3 pos, in highp vec3 normal ) {
    highp vec4 toLightX = (lightPosX - pos.x);
    highp vec4 toLightY = (lightPosY - pos.y);
    #line 100
    highp vec4 toLightZ = (lightPosZ - pos.z);
    highp vec4 lengthSq = vec4( 0.0);
    lengthSq += (toLightX * toLightX);
    lengthSq += (toLightY * toLightY);
    #line 104
    lengthSq += (toLightZ * toLightZ);
    highp vec4 ndotl = vec4( 0.0);
    ndotl += (toLightX * normal.x);
    ndotl += (toLightY * normal.y);
    #line 108
    ndotl += (toLightZ * normal.z);
    highp vec4 corr = inversesqrt(lengthSq);
    ndotl = max( vec4( 0.0, 0.0, 0.0, 0.0), (ndotl * corr));
    highp vec4 atten = (1.0 / (1.0 + (lengthSq * lightAttenSq)));
    #line 112
    highp vec4 diff = (ndotl * atten);
    highp vec3 col = vec3( 0.0);
    col += (lightColor0 * diff.x);
    col += (lightColor1 * diff.y);
    #line 116
    col += (lightColor2 * diff.z);
    col += (lightColor3 * diff.w);
    return col;
}
#line 137
mediump vec3 ShadeSH9( in mediump vec4 normal ) {
    mediump vec3 x1;
    mediump vec3 x2;
    mediump vec3 x3;
    x1.x = dot( unity_SHAr, normal);
    #line 141
    x1.y = dot( unity_SHAg, normal);
    x1.z = dot( unity_SHAb, normal);
    mediump vec4 vB = (normal.xyzz * normal.yzzx);
    x2.x = dot( unity_SHBr, vB);
    #line 145
    x2.y = dot( unity_SHBg, vB);
    x2.z = dot( unity_SHBb, vB);
    highp float vC = ((normal.x * normal.x) - (normal.y * normal.y));
    x3 = (unity_SHC.xyz * vC);
    #line 149
    return ((x1 + x2) + x3);
}
#line 408
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 412
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 416
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 435
v2f_surf vert_surf( in appdata_full v ) {
    v2f_surf o;
    #line 438
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec3 worldN = (mat3( _Object2World) * (v.normal * unity_Scale.w));
    #line 442
    o.normal = worldN;
    highp vec3 shlight = ShadeSH9( vec4( worldN, 1.0));
    o.vlight = shlight;
    highp vec3 worldPos = (_Object2World * v.vertex).xyz;
    #line 446
    o.vlight += Shade4PointLights( unity_4LightPosX0, unity_4LightPosY0, unity_4LightPosZ0, unity_LightColor[0].xyz, unity_LightColor[1].xyz, unity_LightColor[2].xyz, unity_LightColor[3].xyz, unity_4LightAtten0, worldPos, worldN);
    o._ShadowCoord = (unity_World2Shadow[0] * (_Object2World * v.vertex));
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out lowp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec3(xl_retval.normal);
    xlv_TEXCOORD2 = vec3(xl_retval.vlight);
    xlv_TEXCOORD3 = vec4(xl_retval._ShadowCoord);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 403
struct Input {
    highp vec2 uv_MainTex;
};
#line 425
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    lowp vec3 vlight;
    highp vec4 _ShadowCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _ShadowOffsets[4];
uniform sampler2D _ShadowMapTexture;
#line 393
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 401
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 408
#line 434
uniform highp vec4 _MainTex_ST;
#line 451
uniform lowp float _Cutoff;
#line 338
lowp vec4 LightingLambert( in SurfaceOutput s, in lowp vec3 lightDir, in lowp float atten ) {
    lowp float diff = max( 0.0, dot( s.Normal, lightDir));
    lowp vec4 c;
    #line 342
    c.xyz = ((s.Albedo * _LightColor0.xyz) * ((diff * atten) * 2.0));
    c.w = s.Alpha;
    return c;
}
#line 419
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 421
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 393
lowp float unitySampleShadow( in highp vec4 shadowCoord ) {
    highp float dist = textureProj( _ShadowMapTexture, shadowCoord).x;
    mediump float lightShadowDataX = _LightShadowData.x;
    #line 397
    return max( float((dist > (shadowCoord.z / shadowCoord.w))), lightShadowDataX);
}
#line 452
lowp vec4 frag_surf( in v2f_surf IN ) {
    Input surfIN;
    #line 455
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    o.Emission = vec3( 0.0);
    #line 459
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    o.Normal = IN.normal;
    #line 463
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    lowp float atten = unitySampleShadow( IN._ShadowCoord);
    lowp vec4 c = vec4( 0.0);
    #line 467
    c = LightingLambert( o, _WorldSpaceLightPos0.xyz, atten);
    c.xyz += (o.Albedo * IN.vlight);
    c.w = o.Alpha;
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in lowp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.normal = vec3(xlv_TEXCOORD1);
    xlt_IN.vlight = vec3(xlv_TEXCOORD2);
    xlt_IN._ShadowCoord = vec4(xlv_TEXCOORD3);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "SHADOWS_NATIVE" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
varying highp vec4 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  highp vec3 shlight_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = _glesVertex;
  highp float t_6;
  highp float tmpvar_7;
  tmpvar_7 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_8;
  tmpvar_8 = (_Time * _WaveSpeed).x;
  t_6 = tmpvar_8;
  if ((tmpvar_8 < 0.0)) {
    t_6 = (tmpvar_8 * -1.0);
  };
  tmpvar_5.x = (_glesVertex.x + (((sin(((t_6 * 1.45) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_5.y = ((((sin(((t_6 * 3.12) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_5.z = (_glesVertex.z - (((sin(((t_6 * 2.2) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_9 * (tmpvar_1 * unity_Scale.w));
  tmpvar_3 = tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_10;
  mediump vec3 tmpvar_12;
  mediump vec4 normal_13;
  normal_13 = tmpvar_11;
  highp float vC_14;
  mediump vec3 x3_15;
  mediump vec3 x2_16;
  mediump vec3 x1_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAr, normal_13);
  x1_17.x = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAg, normal_13);
  x1_17.y = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAb, normal_13);
  x1_17.z = tmpvar_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normal_13.xyzz * normal_13.yzzx);
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBr, tmpvar_21);
  x2_16.x = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBg, tmpvar_21);
  x2_16.y = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBb, tmpvar_21);
  x2_16.z = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y));
  vC_14 = tmpvar_25;
  highp vec3 tmpvar_26;
  tmpvar_26 = (unity_SHC.xyz * vC_14);
  x3_15 = tmpvar_26;
  tmpvar_12 = ((x1_17 + x2_16) + x3_15);
  shlight_2 = tmpvar_12;
  tmpvar_4 = shlight_2;
  gl_Position = (glstate_matrix_mvp * tmpvar_5);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * (_Object2World * tmpvar_5));
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
varying highp vec4 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _WorldSpaceLightPos0;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float tmpvar_5;
  tmpvar_5 = c_2.w;
  lowp float x_6;
  x_6 = (c_2.w - _Cutoff);
  if ((x_6 < 0.0)) {
    discard;
  };
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD3.xyz);
  highp float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  lowp vec4 c_10;
  c_10.xyz = ((c_2.xyz * _LightColor0.xyz) * ((max (0.0, dot (xlv_TEXCOORD1, _WorldSpaceLightPos0.xyz)) * shadow_7) * 2.0));
  c_10.w = tmpvar_5;
  c_1.xyz = (c_10.xyz + (c_2.xyz * xlv_TEXCOORD2));
  c_1.w = tmpvar_5;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "SHADOWS_NATIVE" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 403
struct Input {
    highp vec2 uv_MainTex;
};
#line 425
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    lowp vec3 vlight;
    highp vec4 _ShadowCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _ShadowOffsets[4];
uniform lowp sampler2DShadow _ShadowMapTexture;
#line 393
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 401
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 408
#line 434
uniform highp vec4 _MainTex_ST;
uniform lowp float _Cutoff;
#line 137
mediump vec3 ShadeSH9( in mediump vec4 normal ) {
    mediump vec3 x1;
    mediump vec3 x2;
    mediump vec3 x3;
    x1.x = dot( unity_SHAr, normal);
    #line 141
    x1.y = dot( unity_SHAg, normal);
    x1.z = dot( unity_SHAb, normal);
    mediump vec4 vB = (normal.xyzz * normal.yzzx);
    x2.x = dot( unity_SHBr, vB);
    #line 145
    x2.y = dot( unity_SHBg, vB);
    x2.z = dot( unity_SHBb, vB);
    highp float vC = ((normal.x * normal.x) - (normal.y * normal.y));
    x3 = (unity_SHC.xyz * vC);
    #line 149
    return ((x1 + x2) + x3);
}
#line 408
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 412
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 416
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 435
v2f_surf vert_surf( in appdata_full v ) {
    v2f_surf o;
    #line 438
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec3 worldN = (mat3( _Object2World) * (v.normal * unity_Scale.w));
    #line 442
    o.normal = worldN;
    highp vec3 shlight = ShadeSH9( vec4( worldN, 1.0));
    o.vlight = shlight;
    o._ShadowCoord = (unity_World2Shadow[0] * (_Object2World * v.vertex));
    #line 447
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out lowp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec3(xl_retval.normal);
    xlv_TEXCOORD2 = vec3(xl_retval.vlight);
    xlv_TEXCOORD3 = vec4(xl_retval._ShadowCoord);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
float xll_shadow2D(mediump sampler2DShadow s, vec3 coord) { return texture (s, coord); }
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 403
struct Input {
    highp vec2 uv_MainTex;
};
#line 425
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    lowp vec3 vlight;
    highp vec4 _ShadowCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _ShadowOffsets[4];
uniform lowp sampler2DShadow _ShadowMapTexture;
#line 393
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 401
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 408
#line 434
uniform highp vec4 _MainTex_ST;
uniform lowp float _Cutoff;
#line 338
lowp vec4 LightingLambert( in SurfaceOutput s, in lowp vec3 lightDir, in lowp float atten ) {
    lowp float diff = max( 0.0, dot( s.Normal, lightDir));
    lowp vec4 c;
    #line 342
    c.xyz = ((s.Albedo * _LightColor0.xyz) * ((diff * atten) * 2.0));
    c.w = s.Alpha;
    return c;
}
#line 419
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 421
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 393
lowp float unitySampleShadow( in highp vec4 shadowCoord ) {
    lowp float shadow = xll_shadow2D( _ShadowMapTexture, shadowCoord.xyz.xyz);
    shadow = (_LightShadowData.x + (shadow * (1.0 - _LightShadowData.x)));
    #line 397
    return shadow;
}
#line 450
lowp vec4 frag_surf( in v2f_surf IN ) {
    #line 452
    Input surfIN;
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    #line 456
    o.Emission = vec3( 0.0);
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    #line 460
    o.Normal = IN.normal;
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    lowp float atten = unitySampleShadow( IN._ShadowCoord);
    #line 464
    lowp vec4 c = vec4( 0.0);
    c = LightingLambert( o, _WorldSpaceLightPos0.xyz, atten);
    c.xyz += (o.Albedo * IN.vlight);
    c.w = o.Alpha;
    #line 468
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in lowp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.normal = vec3(xlv_TEXCOORD1);
    xlt_IN.vlight = vec3(xlv_TEXCOORD2);
    xlt_IN._ShadowCoord = vec4(xlv_TEXCOORD3);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "SHADOWS_NATIVE" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp float t_2;
  highp float tmpvar_3;
  tmpvar_3 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_4;
  tmpvar_4 = (_Time * _WaveSpeed).x;
  t_2 = tmpvar_4;
  if ((tmpvar_4 < 0.0)) {
    t_2 = (tmpvar_4 * -1.0);
  };
  tmpvar_1.x = (_glesVertex.x + (((sin(((t_2 * 1.45) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_1.y = ((((sin(((t_2 * 3.12) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_1.z = (_glesVertex.z - (((sin(((t_2 * 2.2) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  gl_Position = (glstate_matrix_mvp * tmpvar_1);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (unity_World2Shadow[0] * (_Object2World * tmpvar_1));
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D unity_Lightmap;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform highp vec4 _LightShadowData;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float x_5;
  x_5 = (c_2.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  lowp float shadow_6;
  lowp float tmpvar_7;
  tmpvar_7 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD2.xyz);
  highp float tmpvar_8;
  tmpvar_8 = (_LightShadowData.x + (tmpvar_7 * (1.0 - _LightShadowData.x)));
  shadow_6 = tmpvar_8;
  c_1.xyz = (c_2.xyz * min ((2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz), vec3((shadow_6 * 2.0))));
  c_1.w = c_2.w;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "SHADOWS_NATIVE" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 403
struct Input {
    highp vec2 uv_MainTex;
};
#line 425
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec2 lmap;
    highp vec4 _ShadowCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _ShadowOffsets[4];
uniform lowp sampler2DShadow _ShadowMapTexture;
#line 393
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 401
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 408
#line 433
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform sampler2D unity_Lightmap;
uniform lowp float _Cutoff;
#line 449
#line 408
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 412
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 416
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 435
v2f_surf vert_surf( in appdata_full v ) {
    #line 437
    v2f_surf o;
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    #line 441
    o.lmap.xy = ((v.texcoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp vec3 worldN = (mat3( _Object2World) * (v.normal * unity_Scale.w));
    o._ShadowCoord = (unity_World2Shadow[0] * (_Object2World * v.vertex));
    #line 445
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec2(xl_retval.lmap);
    xlv_TEXCOORD2 = vec4(xl_retval._ShadowCoord);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
float xll_shadow2D(mediump sampler2DShadow s, vec3 coord) { return texture (s, coord); }
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 403
struct Input {
    highp vec2 uv_MainTex;
};
#line 425
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec2 lmap;
    highp vec4 _ShadowCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _ShadowOffsets[4];
uniform lowp sampler2DShadow _ShadowMapTexture;
#line 393
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 401
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 408
#line 433
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform sampler2D unity_Lightmap;
uniform lowp float _Cutoff;
#line 449
#line 177
lowp vec3 DecodeLightmap( in lowp vec4 color ) {
    #line 179
    return (2.0 * color.xyz);
}
#line 419
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 421
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 393
lowp float unitySampleShadow( in highp vec4 shadowCoord ) {
    lowp float shadow = xll_shadow2D( _ShadowMapTexture, shadowCoord.xyz.xyz);
    shadow = (_LightShadowData.x + (shadow * (1.0 - _LightShadowData.x)));
    #line 397
    return shadow;
}
#line 449
lowp vec4 frag_surf( in v2f_surf IN ) {
    Input surfIN;
    surfIN.uv_MainTex = IN.pack0.xy;
    #line 453
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    o.Emission = vec3( 0.0);
    o.Specular = 0.0;
    #line 457
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    #line 461
    lowp float atten = unitySampleShadow( IN._ShadowCoord);
    lowp vec4 c = vec4( 0.0);
    lowp vec4 lmtex = texture( unity_Lightmap, IN.lmap.xy);
    lowp vec3 lm = DecodeLightmap( lmtex);
    #line 465
    c.xyz += (o.Albedo * min( lm, vec3( (atten * 2.0))));
    c.w = o.Alpha;
    c.w = o.Alpha;
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.lmap = vec2(xlv_TEXCOORD1);
    xlt_IN._ShadowCoord = vec4(xlv_TEXCOORD2);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" "SHADOWS_NATIVE" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp float t_2;
  highp float tmpvar_3;
  tmpvar_3 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_4;
  tmpvar_4 = (_Time * _WaveSpeed).x;
  t_2 = tmpvar_4;
  if ((tmpvar_4 < 0.0)) {
    t_2 = (tmpvar_4 * -1.0);
  };
  tmpvar_1.x = (_glesVertex.x + (((sin(((t_2 * 1.45) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_1.y = ((((sin(((t_2 * 3.12) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_1.z = (_glesVertex.z - (((sin(((t_2 * 2.2) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  gl_Position = (glstate_matrix_mvp * tmpvar_1);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (unity_World2Shadow[0] * (_Object2World * tmpvar_1));
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D unity_Lightmap;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform highp vec4 _LightShadowData;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float x_5;
  x_5 = (c_2.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  lowp float shadow_6;
  lowp float tmpvar_7;
  tmpvar_7 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD2.xyz);
  highp float tmpvar_8;
  tmpvar_8 = (_LightShadowData.x + (tmpvar_7 * (1.0 - _LightShadowData.x)));
  shadow_6 = tmpvar_8;
  mediump vec3 lm_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz);
  lm_9 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = vec3((shadow_6 * 2.0));
  mediump vec3 tmpvar_12;
  tmpvar_12 = (c_2.xyz * min (lm_9, tmpvar_11));
  c_1.xyz = tmpvar_12;
  c_1.w = c_2.w;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" "SHADOWS_NATIVE" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 403
struct Input {
    highp vec2 uv_MainTex;
};
#line 425
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec2 lmap;
    highp vec4 _ShadowCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _ShadowOffsets[4];
uniform lowp sampler2DShadow _ShadowMapTexture;
#line 393
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 401
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 408
#line 433
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
#line 449
uniform lowp float _Cutoff;
#line 408
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 412
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 416
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 435
v2f_surf vert_surf( in appdata_full v ) {
    #line 437
    v2f_surf o;
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    #line 441
    o.lmap.xy = ((v.texcoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    highp vec3 worldN = (mat3( _Object2World) * (v.normal * unity_Scale.w));
    o._ShadowCoord = (unity_World2Shadow[0] * (_Object2World * v.vertex));
    #line 445
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec2(xl_retval.lmap);
    xlv_TEXCOORD2 = vec4(xl_retval._ShadowCoord);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
float xll_shadow2D(mediump sampler2DShadow s, vec3 coord) { return texture (s, coord); }
mat2 xll_transpose_mf2x2(mat2 m) {
  return mat2( m[0][0], m[1][0], m[0][1], m[1][1]);
}
mat3 xll_transpose_mf3x3(mat3 m) {
  return mat3( m[0][0], m[1][0], m[2][0],
               m[0][1], m[1][1], m[2][1],
               m[0][2], m[1][2], m[2][2]);
}
mat4 xll_transpose_mf4x4(mat4 m) {
  return mat4( m[0][0], m[1][0], m[2][0], m[3][0],
               m[0][1], m[1][1], m[2][1], m[3][1],
               m[0][2], m[1][2], m[2][2], m[3][2],
               m[0][3], m[1][3], m[2][3], m[3][3]);
}
float xll_saturate_f( float x) {
  return clamp( x, 0.0, 1.0);
}
vec2 xll_saturate_vf2( vec2 x) {
  return clamp( x, 0.0, 1.0);
}
vec3 xll_saturate_vf3( vec3 x) {
  return clamp( x, 0.0, 1.0);
}
vec4 xll_saturate_vf4( vec4 x) {
  return clamp( x, 0.0, 1.0);
}
mat2 xll_saturate_mf2x2(mat2 m) {
  return mat2( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0));
}
mat3 xll_saturate_mf3x3(mat3 m) {
  return mat3( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0));
}
mat4 xll_saturate_mf4x4(mat4 m) {
  return mat4( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0), clamp(m[3], 0.0, 1.0));
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 403
struct Input {
    highp vec2 uv_MainTex;
};
#line 425
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec2 lmap;
    highp vec4 _ShadowCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _ShadowOffsets[4];
uniform lowp sampler2DShadow _ShadowMapTexture;
#line 393
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 401
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 408
#line 433
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
#line 449
uniform lowp float _Cutoff;
#line 177
lowp vec3 DecodeLightmap( in lowp vec4 color ) {
    #line 179
    return (2.0 * color.xyz);
}
#line 325
mediump vec3 DirLightmapDiffuse( in mediump mat3 dirBasis, in lowp vec4 color, in lowp vec4 scale, in mediump vec3 normal, in bool surfFuncWritesNormal, out mediump vec3 scalePerBasisVector ) {
    mediump vec3 lm = DecodeLightmap( color);
    scalePerBasisVector = DecodeLightmap( scale);
    #line 329
    if (surfFuncWritesNormal){
        mediump vec3 normalInRnmBasis = xll_saturate_vf3((dirBasis * normal));
        lm *= dot( normalInRnmBasis, scalePerBasisVector);
    }
    #line 334
    return lm;
}
#line 353
mediump vec4 LightingLambert_DirLightmap( in SurfaceOutput s, in lowp vec4 color, in lowp vec4 scale, in bool surfFuncWritesNormal ) {
    #line 355
    highp mat3 unity_DirBasis = xll_transpose_mf3x3(mat3( vec3( 0.816497, 0.0, 0.57735), vec3( -0.408248, 0.707107, 0.57735), vec3( -0.408248, -0.707107, 0.57735)));
    mediump vec3 scalePerBasisVector;
    mediump vec3 lm = DirLightmapDiffuse( unity_DirBasis, color, scale, s.Normal, surfFuncWritesNormal, scalePerBasisVector);
    return vec4( lm, 0.0);
}
#line 419
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 421
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 393
lowp float unitySampleShadow( in highp vec4 shadowCoord ) {
    lowp float shadow = xll_shadow2D( _ShadowMapTexture, shadowCoord.xyz.xyz);
    shadow = (_LightShadowData.x + (shadow * (1.0 - _LightShadowData.x)));
    #line 397
    return shadow;
}
#line 450
lowp vec4 frag_surf( in v2f_surf IN ) {
    Input surfIN;
    #line 453
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    o.Emission = vec3( 0.0);
    #line 457
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    surf( surfIN, o);
    #line 461
    xll_clip_f((o.Alpha - _Cutoff));
    lowp float atten = unitySampleShadow( IN._ShadowCoord);
    lowp vec4 c = vec4( 0.0);
    lowp vec4 lmtex = texture( unity_Lightmap, IN.lmap.xy);
    #line 465
    lowp vec4 lmIndTex = texture( unity_LightmapInd, IN.lmap.xy);
    mediump vec3 lm = LightingLambert_DirLightmap( o, lmtex, lmIndTex, false).xyz;
    c.xyz += (o.Albedo * min( lm, vec3( (atten * 2.0))));
    c.w = o.Alpha;
    #line 469
    c.w = o.Alpha;
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.lmap = vec2(xlv_TEXCOORD1);
    xlt_IN._ShadowCoord = vec4(xlv_TEXCOORD2);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
varying highp vec4 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  highp vec3 shlight_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = _glesVertex;
  highp float t_6;
  highp float tmpvar_7;
  tmpvar_7 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_8;
  tmpvar_8 = (_Time * _WaveSpeed).x;
  t_6 = tmpvar_8;
  if ((tmpvar_8 < 0.0)) {
    t_6 = (tmpvar_8 * -1.0);
  };
  tmpvar_5.x = (_glesVertex.x + (((sin(((t_6 * 1.45) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_5.y = ((((sin(((t_6 * 3.12) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_5.z = (_glesVertex.z - (((sin(((t_6 * 2.2) + tmpvar_7)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_9 * (tmpvar_1 * unity_Scale.w));
  tmpvar_3 = tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = tmpvar_10;
  mediump vec3 tmpvar_12;
  mediump vec4 normal_13;
  normal_13 = tmpvar_11;
  highp float vC_14;
  mediump vec3 x3_15;
  mediump vec3 x2_16;
  mediump vec3 x1_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAr, normal_13);
  x1_17.x = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAg, normal_13);
  x1_17.y = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAb, normal_13);
  x1_17.z = tmpvar_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normal_13.xyzz * normal_13.yzzx);
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBr, tmpvar_21);
  x2_16.x = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBg, tmpvar_21);
  x2_16.y = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBb, tmpvar_21);
  x2_16.z = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = ((normal_13.x * normal_13.x) - (normal_13.y * normal_13.y));
  vC_14 = tmpvar_25;
  highp vec3 tmpvar_26;
  tmpvar_26 = (unity_SHC.xyz * vC_14);
  x3_15 = tmpvar_26;
  tmpvar_12 = ((x1_17 + x2_16) + x3_15);
  shlight_2 = tmpvar_12;
  tmpvar_4 = shlight_2;
  highp vec3 tmpvar_27;
  tmpvar_27 = (_Object2World * tmpvar_5).xyz;
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosX0 - tmpvar_27.x);
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_4LightPosY0 - tmpvar_27.y);
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosZ0 - tmpvar_27.z);
  highp vec4 tmpvar_31;
  tmpvar_31 = (((tmpvar_28 * tmpvar_28) + (tmpvar_29 * tmpvar_29)) + (tmpvar_30 * tmpvar_30));
  highp vec4 tmpvar_32;
  tmpvar_32 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_28 * tmpvar_10.x) + (tmpvar_29 * tmpvar_10.y)) + (tmpvar_30 * tmpvar_10.z)) * inversesqrt(tmpvar_31))) * (1.0/((1.0 + (tmpvar_31 * unity_4LightAtten0)))));
  highp vec3 tmpvar_33;
  tmpvar_33 = (tmpvar_4 + ((((unity_LightColor[0].xyz * tmpvar_32.x) + (unity_LightColor[1].xyz * tmpvar_32.y)) + (unity_LightColor[2].xyz * tmpvar_32.z)) + (unity_LightColor[3].xyz * tmpvar_32.w)));
  tmpvar_4 = tmpvar_33;
  gl_Position = (glstate_matrix_mvp * tmpvar_5);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * (_Object2World * tmpvar_5));
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
varying highp vec4 xlv_TEXCOORD3;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _WorldSpaceLightPos0;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float tmpvar_5;
  tmpvar_5 = c_2.w;
  lowp float x_6;
  x_6 = (c_2.w - _Cutoff);
  if ((x_6 < 0.0)) {
    discard;
  };
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD3.xyz);
  highp float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  lowp vec4 c_10;
  c_10.xyz = ((c_2.xyz * _LightColor0.xyz) * ((max (0.0, dot (xlv_TEXCOORD1, _WorldSpaceLightPos0.xyz)) * shadow_7) * 2.0));
  c_10.w = tmpvar_5;
  c_1.xyz = (c_10.xyz + (c_2.xyz * xlv_TEXCOORD2));
  c_1.w = tmpvar_5;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 403
struct Input {
    highp vec2 uv_MainTex;
};
#line 425
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    lowp vec3 vlight;
    highp vec4 _ShadowCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _ShadowOffsets[4];
uniform lowp sampler2DShadow _ShadowMapTexture;
#line 393
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 401
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 408
#line 434
uniform highp vec4 _MainTex_ST;
#line 451
uniform lowp float _Cutoff;
#line 96
highp vec3 Shade4PointLights( in highp vec4 lightPosX, in highp vec4 lightPosY, in highp vec4 lightPosZ, in highp vec3 lightColor0, in highp vec3 lightColor1, in highp vec3 lightColor2, in highp vec3 lightColor3, in highp vec4 lightAttenSq, in highp vec3 pos, in highp vec3 normal ) {
    highp vec4 toLightX = (lightPosX - pos.x);
    highp vec4 toLightY = (lightPosY - pos.y);
    #line 100
    highp vec4 toLightZ = (lightPosZ - pos.z);
    highp vec4 lengthSq = vec4( 0.0);
    lengthSq += (toLightX * toLightX);
    lengthSq += (toLightY * toLightY);
    #line 104
    lengthSq += (toLightZ * toLightZ);
    highp vec4 ndotl = vec4( 0.0);
    ndotl += (toLightX * normal.x);
    ndotl += (toLightY * normal.y);
    #line 108
    ndotl += (toLightZ * normal.z);
    highp vec4 corr = inversesqrt(lengthSq);
    ndotl = max( vec4( 0.0, 0.0, 0.0, 0.0), (ndotl * corr));
    highp vec4 atten = (1.0 / (1.0 + (lengthSq * lightAttenSq)));
    #line 112
    highp vec4 diff = (ndotl * atten);
    highp vec3 col = vec3( 0.0);
    col += (lightColor0 * diff.x);
    col += (lightColor1 * diff.y);
    #line 116
    col += (lightColor2 * diff.z);
    col += (lightColor3 * diff.w);
    return col;
}
#line 137
mediump vec3 ShadeSH9( in mediump vec4 normal ) {
    mediump vec3 x1;
    mediump vec3 x2;
    mediump vec3 x3;
    x1.x = dot( unity_SHAr, normal);
    #line 141
    x1.y = dot( unity_SHAg, normal);
    x1.z = dot( unity_SHAb, normal);
    mediump vec4 vB = (normal.xyzz * normal.yzzx);
    x2.x = dot( unity_SHBr, vB);
    #line 145
    x2.y = dot( unity_SHBg, vB);
    x2.z = dot( unity_SHBb, vB);
    highp float vC = ((normal.x * normal.x) - (normal.y * normal.y));
    x3 = (unity_SHC.xyz * vC);
    #line 149
    return ((x1 + x2) + x3);
}
#line 408
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 412
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 416
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 435
v2f_surf vert_surf( in appdata_full v ) {
    v2f_surf o;
    #line 438
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    highp vec3 worldN = (mat3( _Object2World) * (v.normal * unity_Scale.w));
    #line 442
    o.normal = worldN;
    highp vec3 shlight = ShadeSH9( vec4( worldN, 1.0));
    o.vlight = shlight;
    highp vec3 worldPos = (_Object2World * v.vertex).xyz;
    #line 446
    o.vlight += Shade4PointLights( unity_4LightPosX0, unity_4LightPosY0, unity_4LightPosZ0, unity_LightColor[0].xyz, unity_LightColor[1].xyz, unity_LightColor[2].xyz, unity_LightColor[3].xyz, unity_4LightAtten0, worldPos, worldN);
    o._ShadowCoord = (unity_World2Shadow[0] * (_Object2World * v.vertex));
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out lowp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec3(xl_retval.normal);
    xlv_TEXCOORD2 = vec3(xl_retval.vlight);
    xlv_TEXCOORD3 = vec4(xl_retval._ShadowCoord);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
float xll_shadow2D(mediump sampler2DShadow s, vec3 coord) { return texture (s, coord); }
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 403
struct Input {
    highp vec2 uv_MainTex;
};
#line 425
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    lowp vec3 vlight;
    highp vec4 _ShadowCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _ShadowOffsets[4];
uniform lowp sampler2DShadow _ShadowMapTexture;
#line 393
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 401
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 408
#line 434
uniform highp vec4 _MainTex_ST;
#line 451
uniform lowp float _Cutoff;
#line 338
lowp vec4 LightingLambert( in SurfaceOutput s, in lowp vec3 lightDir, in lowp float atten ) {
    lowp float diff = max( 0.0, dot( s.Normal, lightDir));
    lowp vec4 c;
    #line 342
    c.xyz = ((s.Albedo * _LightColor0.xyz) * ((diff * atten) * 2.0));
    c.w = s.Alpha;
    return c;
}
#line 419
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 421
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 393
lowp float unitySampleShadow( in highp vec4 shadowCoord ) {
    lowp float shadow = xll_shadow2D( _ShadowMapTexture, shadowCoord.xyz.xyz);
    shadow = (_LightShadowData.x + (shadow * (1.0 - _LightShadowData.x)));
    #line 397
    return shadow;
}
#line 452
lowp vec4 frag_surf( in v2f_surf IN ) {
    Input surfIN;
    #line 455
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    o.Emission = vec3( 0.0);
    #line 459
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    o.Normal = IN.normal;
    #line 463
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    lowp float atten = unitySampleShadow( IN._ShadowCoord);
    lowp vec4 c = vec4( 0.0);
    #line 467
    c = LightingLambert( o, _WorldSpaceLightPos0.xyz, atten);
    c.xyz += (o.Albedo * IN.vlight);
    c.w = o.Alpha;
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in lowp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.normal = vec3(xlv_TEXCOORD1);
    xlt_IN.vlight = vec3(xlv_TEXCOORD2);
    xlt_IN._ShadowCoord = vec4(xlv_TEXCOORD3);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

}
Program "fp" {
// Fragment combos: 6
//   opengl - ALU: 9 to 15, TEX: 1 to 3
//   d3d9 - ALU: 9 to 14, TEX: 2 to 4
//   d3d11 - ALU: 6 to 12, TEX: 1 to 3, FLOW: 1 to 1
//   d3d11_9x - ALU: 6 to 12, TEX: 1 to 3, FLOW: 1 to 1
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Vector 0 [_WorldSpaceLightPos0]
Vector 1 [_LightColor0]
Vector 2 [_Color]
Float 3 [_Cutoff]
SetTexture 0 [_MainTex] 2D
"!!ARBfp1.0
# 11 ALU, 1 TEX
PARAM c[5] = { program.local[0..3],
		{ 0, 2 } };
TEMP R0;
TEMP R1;
TEX R0, fragment.texcoord[0], texture[0], 2D;
MUL R0, R0, c[2];
SLT R1.x, R0.w, c[3];
DP3 R1.w, fragment.texcoord[1], c[0];
MAX R1.w, R1, c[4].x;
MOV result.color.w, R0;
KIL -R1.x;
MUL R1.xyz, R0, fragment.texcoord[2];
MUL R0.xyz, R0, c[1];
MUL R0.xyz, R1.w, R0;
MAD result.color.xyz, R0, c[4].y, R1;
END
# 11 instructions, 2 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Vector 0 [_WorldSpaceLightPos0]
Vector 1 [_LightColor0]
Vector 2 [_Color]
Float 3 [_Cutoff]
SetTexture 0 [_MainTex] 2D
"ps_2_0
; 12 ALU, 2 TEX
dcl_2d s0
def c4, 0.00000000, 1.00000000, 2.00000000, 0
dcl t0.xy
dcl t1.xyz
dcl t2.xyz
texld r0, t0, s0
mul r1, r0, c2
mul_pp r2.xyz, r1, t2
add_pp r0.x, r1.w, -c3
cmp r0.x, r0, c4, c4.y
mov_pp r0, -r0.x
mul_pp r1.xyz, r1, c1
texkill r0.xyzw
dp3_pp r0.x, t1, c0
max_pp r0.x, r0, c4
mul_pp r0.xyz, r0.x, r1
mad_pp r0.xyz, r0, c4.z, r2
mov_pp r0.w, r1
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Vector 2 [_Color]
Float 3 [_Cutoff]
Vector 1 [_LightColor0]
Vector 0 [_WorldSpaceLightPos0]
SetTexture 0 [_MainTex] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 10.67 (8 instructions), vertex: 0, texture: 4,
//   sequencer: 8, interpolator: 12;    5 GPRs, 36 threads,
// Performance (if enough threads): ~12 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaabhmaaaaaanaaaaaaaaaaaaaaaceaaaaabciaaaaabfaaaaaaaaa
aaaaaaaaaaaaabaaaaaaaabmaaaaaapeppppadaaaaaaaaafaaaaaabmaaaaaaaa
aaaaaaonaaaaaaiaaaacaaacaaabaaaaaaaaaaiiaaaaaaaaaaaaaajiaaacaaad
aaabaaaaaaaaaakaaaaaaaaaaaaaaalaaaacaaabaaabaaaaaaaaaaiiaaaaaaaa
aaaaaalnaaadaaaaaaabaaaaaaaaaamiaaaaaaaaaaaaaaniaaacaaaaaaabaaaa
aaaaaaiiaaaaaaaafpedgpgmgphcaaklaaabaaadaaabaaaeaaabaaaaaaaaaaaa
fpedhfhegpggggaaaaaaaaadaaabaaabaaabaaaaaaaaaaaafpemgjghgiheedgp
gmgphcdaaafpengbgjgofegfhiaaklklaaaeaaamaaabaaabaaabaaaaaaaaaaaa
fpfhgphcgmgefdhagbgdgfemgjghgihefagphddaaahahdfpddfpdaaadccodaco
dcdadddfddcodaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabeabpmaaba
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaaajabaaaaeaaaaaaaaae
aaaaaaaaaaaacagdaaahaaahaaaaaacbaaaadafaaaaahbfbaaaahcfcaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbaac
aaaabcaameaaaaaaaaaagaadcaajbcaaccaaaaaabaaiaaabbpbppeedaaaaeaaa
miabaaabaaloloaalaabaaaabebcaaabaagmgmgmkcabppaakichaaaeaabfmaaa
ibaaacaclibhabadabmamaebibaeabadaacnabaaaapapalbobaeacabmianaaaa
aapalbaeoladabaamiaaaaaaaagmgmaahjppabaamiapiaaaaajejeaaocaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Vector 0 [_WorldSpaceLightPos0]
Vector 1 [_LightColor0]
Vector 2 [_Color]
Float 3 [_Cutoff]
SetTexture 0 [_MainTex] 2D
"sce_fp_rsx // 15 instructions using 2 registers
[Configuration]
24
ffffffff0001c0200007fff9000000000000848002000000
[Offsets]
4
_WorldSpaceLightPos0 1 0
00000080
_LightColor0 1 0
000000d0
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
240
9e001700c8011c9dc8000001c8003fe11e800200c8001c9dc8020001c8000001
00000000000000000000000000000000037e4a80ff001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
10800140c9001c9dc8000001c8000001b0820540c8011c9dc8020001c8003fe1
0000000000000000000000000000000010820900c9041c9d00020000c8000001
00000000000000000000000000000000ce820240c9001c9dc8015001c8003fe1
0e800240c9001c9dc8020001c800000100000000000000000000000000000000
0e810440ff041c9dc9001001c9040001
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
ConstBuffer "$Globals" 112 // 100 used size, 8 vars
Vector 16 [_LightColor0] 4
Vector 48 [_Color] 4
Float 96 [_Cutoff]
ConstBuffer "UnityLighting" 720 // 16 used size, 17 vars
Vector 0 [_WorldSpaceLightPos0] 4
BindCB "$Globals" 0
BindCB "UnityLighting" 1
SetTexture 0 [_MainTex] 2D 0
// 13 instructions, 2 temp regs, 0 temp arrays:
// ALU 9 float, 0 int, 0 uint
// TEX 1 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecednlifbpnpmalcagepenegfmdckniafoheabaaaaaaniacaaaaadaaaaaa
cmaaaaaaleaaaaaaoiaaaaaaejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcoiabaaaaeaaaaaaahkaaaaaafjaaaaaeegiocaaa
aaaaaaaaahaaaaaafjaaaaaeegiocaaaabaaaaaaabaaaaaafkaaaaadaagabaaa
aaaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaa
gcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagfaaaaadpccabaaa
aaaaaaaagiaaaaacacaaaaaaefaaaaajpcaabaaaaaaaaaaaegbabaaaabaaaaaa
eghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaambcaabaaaabaaaaaadkaabaaa
aaaaaaaadkiacaaaaaaaaaaaadaaaaaaakiacaiaebaaaaaaaaaaaaaaagaaaaaa
diaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaaegiocaaaaaaaaaaaadaaaaaa
dbaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaaanaaaead
akaabaaaabaaaaaabaaaaaaibcaabaaaabaaaaaaegbcbaaaacaaaaaaegiccaaa
abaaaaaaaaaaaaaadeaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaa
aaaaaaaaaaaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaakaabaaaabaaaaaa
diaaaaaiocaabaaaabaaaaaaagajbaaaaaaaaaaaagijcaaaaaaaaaaaabaaaaaa
diaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaaegbcbaaaadaaaaaadgaaaaaf
iccabaaaaaaaaaaadkaabaaaaaaaaaaadcaaaaajhccabaaaaaaaaaaajgahbaaa
abaaaaaaagaabaaaabaaaaaaegacbaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLES"
}

SubProgram "flash " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Vector 0 [_WorldSpaceLightPos0]
Vector 1 [_LightColor0]
Vector 2 [_Color]
Float 3 [_Cutoff]
SetTexture 0 [_MainTex] 2D
"agal_ps
c4 0.0 1.0 2.0 0.0
[bc]
ciaaaaaaaaaaapacaaaaaaoeaeaaaaaaaaaaaaaaafaababb tex r0, v0, s0 <2d wrap linear point>
adaaaaaaabaaapacaaaaaaoeacaaaaaaacaaaaoeabaaaaaa mul r1, r0, c2
adaaaaaaacaaahacabaaaakeacaaaaaaacaaaaoeaeaaaaaa mul r2.xyz, r1.xyzz, v2
acaaaaaaaaaaabacabaaaappacaaaaaaadaaaaoeabaaaaaa sub r0.x, r1.w, c3
ckaaaaaaaaaaabacaaaaaaaaacaaaaaaaeaaaaaaabaaaaaa slt r0.x, r0.x, c4.x
bfaaaaaaaaaaapacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r0, r0.x
adaaaaaaabaaahacabaaaakeacaaaaaaabaaaaoeabaaaaaa mul r1.xyz, r1.xyzz, c1
chaaaaaaaaaaaaaaaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa kil a0.none, r0.x
bcaaaaaaaaaaabacabaaaaoeaeaaaaaaaaaaaaoeabaaaaaa dp3 r0.x, v1, c0
ahaaaaaaaaaaabacaaaaaaaaacaaaaaaaeaaaaoeabaaaaaa max r0.x, r0.x, c4
adaaaaaaaaaaahacaaaaaaaaacaaaaaaabaaaakeacaaaaaa mul r0.xyz, r0.x, r1.xyzz
adaaaaaaaaaaahacaaaaaakeacaaaaaaaeaaaakkabaaaaaa mul r0.xyz, r0.xyzz, c4.z
abaaaaaaaaaaahacaaaaaakeacaaaaaaacaaaakeacaaaaaa add r0.xyz, r0.xyzz, r2.xyzz
aaaaaaaaaaaaaiacabaaaappacaaaaaaaaaaaaaaaaaaaaaa mov r0.w, r1.w
aaaaaaaaaaaaapadaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r0
"
}

SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
ConstBuffer "$Globals" 112 // 100 used size, 8 vars
Vector 16 [_LightColor0] 4
Vector 48 [_Color] 4
Float 96 [_Cutoff]
ConstBuffer "UnityLighting" 720 // 16 used size, 17 vars
Vector 0 [_WorldSpaceLightPos0] 4
BindCB "$Globals" 0
BindCB "UnityLighting" 1
SetTexture 0 [_MainTex] 2D 0
// 13 instructions, 2 temp regs, 0 temp arrays:
// ALU 9 float, 0 int, 0 uint
// TEX 1 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefiecedcaaeafclifiojjadjgimjljinmpkicilabaaaaaaeeaeaaaaaeaaaaaa
daaaaaaajiabaaaaiiadaaaabaaeaaaaebgpgodjgaabaaaagaabaaaaaaacpppp
aiabaaaafiaaaaaaaeaaciaaaaaafiaaaaaafiaaabaaceaaaaaafiaaaaaaaaaa
aaaaabaaabaaaaaaaaaaaaaaaaaaadaaabaaabaaaaaaaaaaaaaaagaaabaaacaa
aaaaaaaaabaaaaaaabaaadaaaaaaaaaaaaacppppfbaaaaafaeaaapkaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaabpaaaaacaaaaaaiaaaaaadlabpaaaaacaaaaaaia
abaachlabpaaaaacaaaaaaiaacaachlabpaaaaacaaaaaajaaaaiapkaecaaaaad
aaaaapiaaaaaoelaaaaioekaabaaaaacabaaaiiaabaappkaaeaaaaaeabaacpia
aaaappiaabaappiaacaaaakbafaaaaadaaaacpiaaaaaoeiaabaaoekaebaaaaab
abaaapiaaiaaaaadabaacbiaabaaoelaadaaoekaalaaaaadacaaciiaabaaaaia
aeaaaakaacaaaaadabaacbiaacaappiaacaappiaafaaaaadabaacoiaaaaablia
aaaablkaafaaaaadacaachiaaaaaoeiaacaaoelaaeaaaaaeaaaachiaabaablia
abaaaaiaacaaoeiaabaaaaacaaaicpiaaaaaoeiappppaaaafdeieefcoiabaaaa
eaaaaaaahkaaaaaafjaaaaaeegiocaaaaaaaaaaaahaaaaaafjaaaaaeegiocaaa
abaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafibiaaaeaahabaaaaaaaaaaa
ffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaad
hcbabaaaadaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacacaaaaaaefaaaaaj
pcaabaaaaaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaa
dcaaaaambcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaa
akiacaiaebaaaaaaaaaaaaaaagaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaa
aaaaaaaaegiocaaaaaaaaaaaadaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaa
abaaaaaaabeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaabaaaaaaibcaabaaa
abaaaaaaegbcbaaaacaaaaaaegiccaaaabaaaaaaaaaaaaaadeaaaaahbcaabaaa
abaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaaaaaaaaahbcaabaaaabaaaaaa
akaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaaiocaabaaaabaaaaaaagajbaaa
aaaaaaaaagijcaaaaaaaaaaaabaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaaegbcbaaaadaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaaaaaaaaaa
dcaaaaajhccabaaaaaaaaaaajgahbaaaabaaaaaaagaabaaaabaaaaaaegacbaaa
aaaaaaaadoaaaaabejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaaaaaaaaaa
abaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
abaaaaaaadadaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaa
heaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaafdfgfpfaepfdejfe
ejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaa
caaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgf
heaaklkl"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLES3"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [unity_Lightmap] 2D
"!!ARBfp1.0
# 9 ALU, 2 TEX
PARAM c[3] = { program.local[0..1],
		{ 8 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEX R0, fragment.texcoord[0], texture[0], 2D;
MUL R1, R0, c[0];
SLT R2.x, R1.w, c[1];
MOV result.color.w, R1;
TEX R0, fragment.texcoord[1], texture[1], 2D;
KIL -R2.x;
MUL R0.xyz, R0.w, R0;
MUL R0.xyz, R1, R0;
MUL result.color.xyz, R0, c[2].x;
END
# 9 instructions, 3 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [unity_Lightmap] 2D
"ps_2_0
; 9 ALU, 3 TEX
dcl_2d s0
dcl_2d s1
def c2, 0.00000000, 1.00000000, 8.00000000, 0
dcl t0.xy
dcl t1.xy
texld r0, t0, s0
mul r1, r0, c0
add_pp r0.x, r1.w, -c1
cmp r0.x, r0, c2, c2.y
mov_pp r2, -r0.x
texld r0, t1, s1
texkill r2.xyzw
mul_pp r0.xyz, r0.w, r0
mul_pp r0.xyz, r1, r0
mul_pp r0.xyz, r0, c2.z
mov_pp r0.w, r1
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [unity_Lightmap] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 9.33 (7 instructions), vertex: 0, texture: 8,
//   sequencer: 6, interpolator: 8;    3 GPRs, 63 threads,
// Performance (if enough threads): ~9 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaabfeaaaaaanaaaaaaaaaaaaaaaceaaaaabaeaaaaabcmaaaaaaaa
aaaaaaaaaaaaaanmaaaaaabmaaaaaamoppppadaaaaaaaaaeaaaaaabmaaaaaaaa
aaaaaamhaaaaaagmaaacaaaaaaabaaaaaaaaaaheaaaaaaaaaaaaaaieaaacaaab
aaabaaaaaaaaaaimaaaaaaaaaaaaaajmaaadaaaaaaabaaaaaaaaaakiaaaaaaaa
aaaaaaliaaadaaabaaabaaaaaaaaaakiaaaaaaaafpedgpgmgphcaaklaaabaaad
aaabaaaeaaabaaaaaaaaaaaafpedhfhegpggggaaaaaaaaadaaabaaabaaabaaaa
aaaaaaaafpengbgjgofegfhiaaklklklaaaeaaamaaabaaabaaabaaaaaaaaaaaa
hfgogjhehjfpemgjghgihegngbhaaahahdfpddfpdaaadccodacodcdadddfddco
daaaklklaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabeabpmaabaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaaajabaaaacaaaaaaaaaeaaaaaaaa
aaaabaecaaadaaadaaaaaacbaaaadafaaaaadbfbaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaebaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabajfaacaaaabcaameaaaaaa
aaaaeaahaaaaccaaaaaaaaaabaaiaaabbpbppefiaaaaeaaakicaaaaaaaaaaaab
mcaaaaaalibhaaacabbemaebibaaaaabmiaaaaaaaalbgmaahjppaaaababibacb
bpbppgiiaaaaeaaakmbaaaaaaaaaaaedmcaaaappmianaaaaaagmpaaaobaaabaa
mianaaaaaapaaeaaobacaaaamiapiaaaaajejeaaocaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [unity_Lightmap] 2D
"sce_fp_rsx // 10 instructions using 2 registers
[Configuration]
24
ffffffff0000c0200003ffff000000000000848002000000
[Offsets]
2
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
160
9e001700c8011c9dc8000001c8003fe11e800200c8001c9dc8020001c8000001
00000000000000000000000000000000037e4a80ff001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
10800140c9001c9dc8000001c8000001be021702c8011c9dc8000001c8003fe1
0e800240c9001c9dfe040001c80000010e810240c9001c9dc8043001c8000001
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
ConstBuffer "$Globals" 128 // 116 used size, 9 vars
Vector 48 [_Color] 4
Float 112 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [unity_Lightmap] 2D 1
// 11 instructions, 2 temp regs, 0 temp arrays:
// ALU 6 float, 0 int, 0 uint
// TEX 2 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedhonlgaffooomgekoeekmcibciblbifofabaaaaaaiaacaaaaadaaaaaa
cmaaaaaajmaaaaaanaaaaaaaejfdeheogiaaaaaaadaaaaaaaiaaaaaafaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaafmaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaafmaaaaaaabaaaaaaaaaaaaaaadaaaaaaabaaaaaa
amamaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheo
cmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaa
apaaaaaafdfgfpfegbhcghgfheaaklklfdeieefckiabaaaaeaaaaaaagkaaaaaa
fjaaaaaeegiocaaaaaaaaaaaaiaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaa
abaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaadmcbabaaaabaaaaaa
gfaaaaadpccabaaaaaaaaaaagiaaaaacacaaaaaaefaaaaajpcaabaaaaaaaaaaa
egbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaambcaabaaa
abaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaaakiacaiaebaaaaaa
aaaaaaaaahaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaaegiocaaa
aaaaaaaaadaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaa
aaaaaaaaanaaaeadakaabaaaabaaaaaaefaaaaajpcaabaaaabaaaaaaogbkbaaa
abaaaaaaeghobaaaabaaaaaaaagabaaaabaaaaaadiaaaaahicaabaaaabaaaaaa
dkaabaaaabaaaaaaabeaaaaaaaaaaaebdiaaaaahhcaabaaaabaaaaaaegacbaaa
abaaaaaapgapbaaaabaaaaaadiaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaa
egacbaaaabaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaaaaaaaaaadoaaaaab
"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLES"
}

SubProgram "flash " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [unity_Lightmap] 2D
"agal_ps
c2 0.0 1.0 8.0 0.0
[bc]
ciaaaaaaaaaaapacaaaaaaoeaeaaaaaaaaaaaaaaafaababb tex r0, v0, s0 <2d wrap linear point>
adaaaaaaabaaapacaaaaaaoeacaaaaaaaaaaaaoeabaaaaaa mul r1, r0, c0
acaaaaaaaaaaabacabaaaappacaaaaaaabaaaaoeabaaaaaa sub r0.x, r1.w, c1
ckaaaaaaaaaaabacaaaaaaaaacaaaaaaacaaaaaaabaaaaaa slt r0.x, r0.x, c2.x
bfaaaaaaacaaapacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r2, r0.x
ciaaaaaaaaaaapacabaaaaoeaeaaaaaaabaaaaaaafaababb tex r0, v1, s1 <2d wrap linear point>
chaaaaaaaaaaaaaaacaaaaaaacaaaaaaaaaaaaaaaaaaaaaa kil a0.none, r2.x
adaaaaaaaaaaahacaaaaaappacaaaaaaaaaaaakeacaaaaaa mul r0.xyz, r0.w, r0.xyzz
adaaaaaaaaaaahacabaaaakeacaaaaaaaaaaaakeacaaaaaa mul r0.xyz, r1.xyzz, r0.xyzz
adaaaaaaaaaaahacaaaaaakeacaaaaaaacaaaakkabaaaaaa mul r0.xyz, r0.xyzz, c2.z
aaaaaaaaaaaaaiacabaaaappacaaaaaaaaaaaaaaaaaaaaaa mov r0.w, r1.w
aaaaaaaaaaaaapadaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r0
"
}

SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
ConstBuffer "$Globals" 128 // 116 used size, 9 vars
Vector 48 [_Color] 4
Float 112 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [unity_Lightmap] 2D 1
// 11 instructions, 2 temp regs, 0 temp arrays:
// ALU 6 float, 0 int, 0 uint
// TEX 2 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefiecedcamlgpedmipmdjmloggjmgckkahlageoabaaaaaaleadaaaaaeaaaaaa
daaaaaaagaabaaaabaadaaaaiaadaaaaebgpgodjciabaaaaciabaaaaaaacpppp
oeaaaaaaeeaaaaaaacaacmaaaaaaeeaaaaaaeeaaacaaceaaaaaaeeaaaaaaaaaa
abababaaaaaaadaaabaaaaaaaaaaaaaaaaaaahaaabaaabaaaaaaaaaaaaacpppp
fbaaaaafacaaapkaaaaaaaebaaaaaaaaaaaaaaaaaaaaaaaabpaaaaacaaaaaaia
aaaaaplabpaaaaacaaaaaajaaaaiapkabpaaaaacaaaaaajaabaiapkaecaaaaad
aaaaapiaaaaaoelaaaaioekaabaaaaacabaaaiiaaaaappkaaeaaaaaeabaacpia
aaaappiaabaappiaabaaaakbafaaaaadaaaacpiaaaaaoeiaaaaaoekaabaaaaac
acaaadiaaaaabllaebaaaaababaaapiaecaaaaadabaacpiaacaaoeiaabaioeka
afaaaaadabaaciiaabaappiaacaaaakaafaaaaadabaachiaabaaoeiaabaappia
afaaaaadaaaachiaaaaaoeiaabaaoeiaabaaaaacaaaicpiaaaaaoeiappppaaaa
fdeieefckiabaaaaeaaaaaaagkaaaaaafjaaaaaeegiocaaaaaaaaaaaaiaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafibiaaaeaahabaaa
aaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaagcbaaaaddcbabaaa
abaaaaaagcbaaaadmcbabaaaabaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaac
acaaaaaaefaaaaajpcaabaaaaaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaa
aagabaaaaaaaaaaadcaaaaambcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaa
aaaaaaaaadaaaaaaakiacaiaebaaaaaaaaaaaaaaahaaaaaadiaaaaaipcaabaaa
aaaaaaaaegaobaaaaaaaaaaaegiocaaaaaaaaaaaadaaaaaadbaaaaahbcaabaaa
abaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaa
efaaaaajpcaabaaaabaaaaaaogbkbaaaabaaaaaaeghobaaaabaaaaaaaagabaaa
abaaaaaadiaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaaaeb
diaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaaabaaaaaadiaaaaah
hccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadgaaaaaficcabaaa
aaaaaaaadkaabaaaaaaaaaaadoaaaaabejfdeheogiaaaaaaadaaaaaaaiaaaaaa
faaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaafmaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaabaaaaaaadadaaaafmaaaaaaabaaaaaaaaaaaaaaadaaaaaa
abaaaaaaamamaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl
epfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
aaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLES3"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_OFF" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [unity_Lightmap] 2D
"!!ARBfp1.0
# 9 ALU, 2 TEX
PARAM c[3] = { program.local[0..1],
		{ 8 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEX R0, fragment.texcoord[0], texture[0], 2D;
MUL R1, R0, c[0];
SLT R2.x, R1.w, c[1];
MOV result.color.w, R1;
TEX R0, fragment.texcoord[1], texture[1], 2D;
KIL -R2.x;
MUL R0.xyz, R0.w, R0;
MUL R0.xyz, R1, R0;
MUL result.color.xyz, R0, c[2].x;
END
# 9 instructions, 3 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_OFF" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [unity_Lightmap] 2D
"ps_2_0
; 9 ALU, 3 TEX
dcl_2d s0
dcl_2d s1
def c2, 0.00000000, 1.00000000, 8.00000000, 0
dcl t0.xy
dcl t1.xy
texld r0, t0, s0
mul r1, r0, c0
add_pp r0.x, r1.w, -c1
cmp r0.x, r0, c2, c2.y
mov_pp r2, -r0.x
texld r0, t1, s1
texkill r2.xyzw
mul_pp r0.xyz, r0.w, r0
mul_pp r0.xyz, r1, r0
mul_pp r0.xyz, r0, c2.z
mov_pp r0.w, r1
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_OFF" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [unity_Lightmap] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 9.33 (7 instructions), vertex: 0, texture: 8,
//   sequencer: 6, interpolator: 8;    3 GPRs, 63 threads,
// Performance (if enough threads): ~9 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaabfeaaaaaanaaaaaaaaaaaaaaaceaaaaabaeaaaaabcmaaaaaaaa
aaaaaaaaaaaaaanmaaaaaabmaaaaaamoppppadaaaaaaaaaeaaaaaabmaaaaaaaa
aaaaaamhaaaaaagmaaacaaaaaaabaaaaaaaaaaheaaaaaaaaaaaaaaieaaacaaab
aaabaaaaaaaaaaimaaaaaaaaaaaaaajmaaadaaaaaaabaaaaaaaaaakiaaaaaaaa
aaaaaaliaaadaaabaaabaaaaaaaaaakiaaaaaaaafpedgpgmgphcaaklaaabaaad
aaabaaaeaaabaaaaaaaaaaaafpedhfhegpggggaaaaaaaaadaaabaaabaaabaaaa
aaaaaaaafpengbgjgofegfhiaaklklklaaaeaaamaaabaaabaaabaaaaaaaaaaaa
hfgogjhehjfpemgjghgihegngbhaaahahdfpddfpdaaadccodacodcdadddfddco
daaaklklaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabeabpmaabaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaaajabaaaacaaaaaaaaaeaaaaaaaa
aaaabaecaaadaaadaaaaaacbaaaadafaaaaadbfbaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaebaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabajfaacaaaabcaameaaaaaa
aaaaeaahaaaaccaaaaaaaaaabaaiaaabbpbppefiaaaaeaaakicaaaaaaaaaaaab
mcaaaaaalibhaaacabbemaebibaaaaabmiaaaaaaaalbgmaahjppaaaababibacb
bpbppgiiaaaaeaaakmbaaaaaaaaaaaedmcaaaappmianaaaaaagmpaaaobaaabaa
mianaaaaaapaaeaaobacaaaamiapiaaaaajejeaaocaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_OFF" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [unity_Lightmap] 2D
"sce_fp_rsx // 10 instructions using 2 registers
[Configuration]
24
ffffffff0000c0200003ffff000000000000848002000000
[Offsets]
2
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
160
9e001700c8011c9dc8000001c8003fe11e800200c8001c9dc8020001c8000001
00000000000000000000000000000000037e4a80ff001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
10800140c9001c9dc8000001c8000001be021702c8011c9dc8000001c8003fe1
0e800240c9001c9dfe040001c80000010e810240c9001c9dc8043001c8000001
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_OFF" }
ConstBuffer "$Globals" 128 // 116 used size, 9 vars
Vector 48 [_Color] 4
Float 112 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [unity_Lightmap] 2D 1
// 11 instructions, 2 temp regs, 0 temp arrays:
// ALU 6 float, 0 int, 0 uint
// TEX 2 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedhonlgaffooomgekoeekmcibciblbifofabaaaaaaiaacaaaaadaaaaaa
cmaaaaaajmaaaaaanaaaaaaaejfdeheogiaaaaaaadaaaaaaaiaaaaaafaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaafmaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaafmaaaaaaabaaaaaaaaaaaaaaadaaaaaaabaaaaaa
amamaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheo
cmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaa
apaaaaaafdfgfpfegbhcghgfheaaklklfdeieefckiabaaaaeaaaaaaagkaaaaaa
fjaaaaaeegiocaaaaaaaaaaaaiaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaa
abaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaadmcbabaaaabaaaaaa
gfaaaaadpccabaaaaaaaaaaagiaaaaacacaaaaaaefaaaaajpcaabaaaaaaaaaaa
egbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaambcaabaaa
abaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaaakiacaiaebaaaaaa
aaaaaaaaahaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaaegiocaaa
aaaaaaaaadaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaa
aaaaaaaaanaaaeadakaabaaaabaaaaaaefaaaaajpcaabaaaabaaaaaaogbkbaaa
abaaaaaaeghobaaaabaaaaaaaagabaaaabaaaaaadiaaaaahicaabaaaabaaaaaa
dkaabaaaabaaaaaaabeaaaaaaaaaaaebdiaaaaahhcaabaaaabaaaaaaegacbaaa
abaaaaaapgapbaaaabaaaaaadiaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaa
egacbaaaabaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaaaaaaaaaadoaaaaab
"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_OFF" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_OFF" }
"!!GLES"
}

SubProgram "flash " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_OFF" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [unity_Lightmap] 2D
"agal_ps
c2 0.0 1.0 8.0 0.0
[bc]
ciaaaaaaaaaaapacaaaaaaoeaeaaaaaaaaaaaaaaafaababb tex r0, v0, s0 <2d wrap linear point>
adaaaaaaabaaapacaaaaaaoeacaaaaaaaaaaaaoeabaaaaaa mul r1, r0, c0
acaaaaaaaaaaabacabaaaappacaaaaaaabaaaaoeabaaaaaa sub r0.x, r1.w, c1
ckaaaaaaaaaaabacaaaaaaaaacaaaaaaacaaaaaaabaaaaaa slt r0.x, r0.x, c2.x
bfaaaaaaacaaapacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r2, r0.x
ciaaaaaaaaaaapacabaaaaoeaeaaaaaaabaaaaaaafaababb tex r0, v1, s1 <2d wrap linear point>
chaaaaaaaaaaaaaaacaaaaaaacaaaaaaaaaaaaaaaaaaaaaa kil a0.none, r2.x
adaaaaaaaaaaahacaaaaaappacaaaaaaaaaaaakeacaaaaaa mul r0.xyz, r0.w, r0.xyzz
adaaaaaaaaaaahacabaaaakeacaaaaaaaaaaaakeacaaaaaa mul r0.xyz, r1.xyzz, r0.xyzz
adaaaaaaaaaaahacaaaaaakeacaaaaaaacaaaakkabaaaaaa mul r0.xyz, r0.xyzz, c2.z
aaaaaaaaaaaaaiacabaaaappacaaaaaaaaaaaaaaaaaaaaaa mov r0.w, r1.w
aaaaaaaaaaaaapadaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r0
"
}

SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_OFF" }
ConstBuffer "$Globals" 128 // 116 used size, 9 vars
Vector 48 [_Color] 4
Float 112 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [unity_Lightmap] 2D 1
// 11 instructions, 2 temp regs, 0 temp arrays:
// ALU 6 float, 0 int, 0 uint
// TEX 2 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefiecedcamlgpedmipmdjmloggjmgckkahlageoabaaaaaaleadaaaaaeaaaaaa
daaaaaaagaabaaaabaadaaaaiaadaaaaebgpgodjciabaaaaciabaaaaaaacpppp
oeaaaaaaeeaaaaaaacaacmaaaaaaeeaaaaaaeeaaacaaceaaaaaaeeaaaaaaaaaa
abababaaaaaaadaaabaaaaaaaaaaaaaaaaaaahaaabaaabaaaaaaaaaaaaacpppp
fbaaaaafacaaapkaaaaaaaebaaaaaaaaaaaaaaaaaaaaaaaabpaaaaacaaaaaaia
aaaaaplabpaaaaacaaaaaajaaaaiapkabpaaaaacaaaaaajaabaiapkaecaaaaad
aaaaapiaaaaaoelaaaaioekaabaaaaacabaaaiiaaaaappkaaeaaaaaeabaacpia
aaaappiaabaappiaabaaaakbafaaaaadaaaacpiaaaaaoeiaaaaaoekaabaaaaac
acaaadiaaaaabllaebaaaaababaaapiaecaaaaadabaacpiaacaaoeiaabaioeka
afaaaaadabaaciiaabaappiaacaaaakaafaaaaadabaachiaabaaoeiaabaappia
afaaaaadaaaachiaaaaaoeiaabaaoeiaabaaaaacaaaicpiaaaaaoeiappppaaaa
fdeieefckiabaaaaeaaaaaaagkaaaaaafjaaaaaeegiocaaaaaaaaaaaaiaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafibiaaaeaahabaaa
aaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaagcbaaaaddcbabaaa
abaaaaaagcbaaaadmcbabaaaabaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaac
acaaaaaaefaaaaajpcaabaaaaaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaa
aagabaaaaaaaaaaadcaaaaambcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaa
aaaaaaaaadaaaaaaakiacaiaebaaaaaaaaaaaaaaahaaaaaadiaaaaaipcaabaaa
aaaaaaaaegaobaaaaaaaaaaaegiocaaaaaaaaaaaadaaaaaadbaaaaahbcaabaaa
abaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaa
efaaaaajpcaabaaaabaaaaaaogbkbaaaabaaaaaaeghobaaaabaaaaaaaagabaaa
abaaaaaadiaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaaaeb
diaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaaabaaaaaadiaaaaah
hccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadgaaaaaficcabaaa
aaaaaaaadkaabaaaaaaaaaaadoaaaaabejfdeheogiaaaaaaadaaaaaaaiaaaaaa
faaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaafmaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaabaaaaaaadadaaaafmaaaaaaabaaaaaaaaaaaaaaadaaaaaa
abaaaaaaamamaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl
epfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
aaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_OFF" }
"!!GLES3"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Vector 0 [_WorldSpaceLightPos0]
Vector 1 [_LightColor0]
Vector 2 [_Color]
Float 3 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
"!!ARBfp1.0
# 13 ALU, 2 TEX
PARAM c[5] = { program.local[0..3],
		{ 0, 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEX R0, fragment.texcoord[0], texture[0], 2D;
TXP R2.x, fragment.texcoord[3], texture[1], 2D;
MUL R0, R0, c[2];
SLT R1.x, R0.w, c[3];
DP3 R1.w, fragment.texcoord[1], c[0];
MAX R1.w, R1, c[4].x;
MUL R1.w, R1, R2.x;
MOV result.color.w, R0;
KIL -R1.x;
MUL R1.xyz, R0, fragment.texcoord[2];
MUL R0.xyz, R0, c[1];
MUL R0.xyz, R1.w, R0;
MAD result.color.xyz, R0, c[4].y, R1;
END
# 13 instructions, 3 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Vector 0 [_WorldSpaceLightPos0]
Vector 1 [_LightColor0]
Vector 2 [_Color]
Float 3 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
"ps_2_0
; 12 ALU, 3 TEX
dcl_2d s0
dcl_2d s1
def c4, 0.00000000, 1.00000000, 2.00000000, 0
dcl t0.xy
dcl t1.xyz
dcl t2.xyz
dcl t3
texld r0, t0, s0
mul r0, r0, c2
add_pp r1.x, r0.w, -c3
cmp r1.x, r1, c4, c4.y
mov_pp r1, -r1.x
mul_pp r2.xyz, r0, t2
mul_pp r3.xyz, r0, c1
dp3_pp r0.x, t1, c0
max_pp r0.x, r0, c4
texkill r1.xyzw
texldp r1, t3, s1
mul_pp r0.x, r0, r1
mul_pp r0.xyz, r0.x, r3
mad_pp r0.xyz, r0, c4.z, r2
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Vector 2 [_Color]
Float 3 [_Cutoff]
Vector 1 [_LightColor0]
Vector 0 [_WorldSpaceLightPos0]
SetTexture 0 [_ShadowMapTexture] 2D
SetTexture 1 [_MainTex] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 14.67 (11 instructions), vertex: 0, texture: 8,
//   sequencer: 8, interpolator: 16;    4 GPRs, 48 threads,
// Performance (if enough threads): ~16 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaabkiaaaaabaaaaaaaaaaaaaaaaceaaaaabfaaaaaabhiaaaaaaaa
aaaaaaaaaaaaabciaaaaaabmaaaaabbkppppadaaaaaaaaagaaaaaabmaaaaaaaa
aaaaabbdaaaaaajeaaacaaacaaabaaaaaaaaaajmaaaaaaaaaaaaaakmaaacaaad
aaabaaaaaaaaaaleaaaaaaaaaaaaaameaaacaaabaaabaaaaaaaaaajmaaaaaaaa
aaaaaanbaaadaaabaaabaaaaaaaaaanmaaaaaaaaaaaaaaomaaadaaaaaaabaaaa
aaaaaanmaaaaaaaaaaaaaapoaaacaaaaaaabaaaaaaaaaajmaaaaaaaafpedgpgm
gphcaaklaaabaaadaaabaaaeaaabaaaaaaaaaaaafpedhfhegpggggaaaaaaaaad
aaabaaabaaabaaaaaaaaaaaafpemgjghgiheedgpgmgphcdaaafpengbgjgofegf
hiaaklklaaaeaaamaaabaaabaaabaaaaaaaaaaaafpfdgigbgegphhengbhafegf
hihehfhcgfaafpfhgphcgmgefdhagbgdgfemgjghgihefagphddaaahahdfpddfp
daaadccodacodcdadddfddcodaaaklklaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaa
aaaaaabeabpmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaaama
baaaadaaaaaaaaaeaaaaaaaaaaaadaieaaapaaapaaaaaacbaaaadafaaaaahbfb
aaaahcfcaaaapdfdaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaabajfaacaaaabcaameaaaaaaaaaagaahcaanbcaaccaaaaaa
babiaaabbpbppefiaaaaeaaaemicabaaaalbblblkbaaacadliidabadabbllaeb
mbabadadmiaaaaaaaagmblaahjppabaabaaibagbbpbppbppaaaaeaaamiabaaab
aaloloaalaabaaaaaaecababaagmgmblkcabppabbeanaaaaaaaepamgkbaaacab
ambhabadaabemalbkbaaababmialaaabaamalmaaobadabaamiaeaaabaablmgaa
obababaamianaaaaaaaepapaolaaacabmiapiaaaaajejeaaocaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Vector 0 [_WorldSpaceLightPos0]
Vector 1 [_LightColor0]
Vector 2 [_Color]
Float 3 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
"sce_fp_rsx // 17 instructions using 2 registers
[Configuration]
24
ffffffff0003c020000ffff1000000000000848002000000
[Offsets]
4
_WorldSpaceLightPos0 1 0
00000080
_LightColor0 1 0
000000f0
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
272
9e001700c8011c9dc8000001c8003fe11e800200c8001c9dc8020001c8000001
00000000000000000000000000000000037e4a80ff001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
10800140c9001c9dc8000001c8000001a2820540c8011c9dc8020001c8003fe1
000000000000000000000000000000001082090001041c9c00020000c8000001
00000000000000000000000000000000ce820240c9001c9dc8015001c8003fe1
e2021802c8011c9dc8000001c8003fe110820240c9041c9d00040000c8000001
0e800240c9001c9dc8020001c800000100000000000000000000000000000000
0e810440ff041c9dc9001001c9040001
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
ConstBuffer "$Globals" 176 // 164 used size, 9 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Float 160 [_Cutoff]
ConstBuffer "UnityLighting" 720 // 16 used size, 17 vars
Vector 0 [_WorldSpaceLightPos0] 4
BindCB "$Globals" 0
BindCB "UnityLighting" 1
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_ShadowMapTexture] 2D 0
// 15 instructions, 2 temp regs, 0 temp arrays:
// ALU 10 float, 0 int, 0 uint
// TEX 2 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedhgnfjdabafikijolkjeinlpeemnkcfboabaaaaaafiadaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapalaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcfaacaaaaeaaaaaaajeaaaaaafjaaaaaeegiocaaaaaaaaaaaalaaaaaa
fjaaaaaeegiocaaaabaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaa
abaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaa
gcbaaaadhcbabaaaadaaaaaagcbaaaadlcbabaaaaeaaaaaagfaaaaadpccabaaa
aaaaaaaagiaaaaacacaaaaaaefaaaaajpcaabaaaaaaaaaaaegbabaaaabaaaaaa
eghobaaaaaaaaaaaaagabaaaabaaaaaadcaaaaambcaabaaaabaaaaaadkaabaaa
aaaaaaaadkiacaaaaaaaaaaaahaaaaaaakiacaiaebaaaaaaaaaaaaaaakaaaaaa
diaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaaegiocaaaaaaaaaaaahaaaaaa
dbaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaaanaaaead
akaabaaaabaaaaaaaoaaaaahdcaabaaaabaaaaaaegbabaaaaeaaaaaapgbpbaaa
aeaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaaabaaaaaaeghobaaaabaaaaaa
aagabaaaaaaaaaaabaaaaaaiccaabaaaabaaaaaaegbcbaaaacaaaaaaegiccaaa
abaaaaaaaaaaaaaadeaaaaahccaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaa
aaaaaaaaapaaaaahbcaabaaaabaaaaaafgafbaaaabaaaaaaagaabaaaabaaaaaa
diaaaaaiocaabaaaabaaaaaaagajbaaaaaaaaaaaagijcaaaaaaaaaaaabaaaaaa
diaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaaegbcbaaaadaaaaaadgaaaaaf
iccabaaaaaaaaaaadkaabaaaaaaaaaaadcaaaaajhccabaaaaaaaaaaajgahbaaa
abaaaaaaagaabaaaabaaaaaaegacbaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLES"
}

SubProgram "flash " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Vector 0 [_WorldSpaceLightPos0]
Vector 1 [_LightColor0]
Vector 2 [_Color]
Float 3 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
"agal_ps
c4 0.0 1.0 2.0 0.0
[bc]
ciaaaaaaaaaaapacaaaaaaoeaeaaaaaaaaaaaaaaafaababb tex r0, v0, s0 <2d wrap linear point>
adaaaaaaaaaaapacaaaaaaoeacaaaaaaacaaaaoeabaaaaaa mul r0, r0, c2
acaaaaaaabaaabacaaaaaappacaaaaaaadaaaaoeabaaaaaa sub r1.x, r0.w, c3
ckaaaaaaabaaabacabaaaaaaacaaaaaaaeaaaaaaabaaaaaa slt r1.x, r1.x, c4.x
bfaaaaaaabaaapacabaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r1, r1.x
adaaaaaaacaaahacaaaaaakeacaaaaaaacaaaaoeaeaaaaaa mul r2.xyz, r0.xyzz, v2
adaaaaaaadaaahacaaaaaakeacaaaaaaabaaaaoeabaaaaaa mul r3.xyz, r0.xyzz, c1
bcaaaaaaaaaaabacabaaaaoeaeaaaaaaaaaaaaoeabaaaaaa dp3 r0.x, v1, c0
ahaaaaaaaaaaabacaaaaaaaaacaaaaaaaeaaaaoeabaaaaaa max r0.x, r0.x, c4
chaaaaaaaaaaaaaaabaaaaaaacaaaaaaaaaaaaaaaaaaaaaa kil a0.none, r1.x
aeaaaaaaabaaagacadaaaaoeaeaaaaaaadaaaappaeaaaaaa div r1.yz, v3, v3.w
ciaaaaaaabaaapacabaaaakjacaaaaaaabaaaaaaafaababb tex r1, r1.yzzz, s1 <2d wrap linear point>
adaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa mul r0.x, r0.x, r1.x
adaaaaaaaaaaahacaaaaaaaaacaaaaaaadaaaakeacaaaaaa mul r0.xyz, r0.x, r3.xyzz
adaaaaaaaaaaahacaaaaaakeacaaaaaaaeaaaakkabaaaaaa mul r0.xyz, r0.xyzz, c4.z
abaaaaaaaaaaahacaaaaaakeacaaaaaaacaaaakeacaaaaaa add r0.xyz, r0.xyzz, r2.xyzz
aaaaaaaaaaaaapadaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r0
"
}

SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
ConstBuffer "$Globals" 176 // 164 used size, 9 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Float 160 [_Cutoff]
ConstBuffer "UnityLighting" 720 // 16 used size, 17 vars
Vector 0 [_WorldSpaceLightPos0] 4
BindCB "$Globals" 0
BindCB "UnityLighting" 1
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_ShadowMapTexture] 2D 0
// 15 instructions, 2 temp regs, 0 temp arrays:
// ALU 10 float, 0 int, 0 uint
// TEX 2 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefiecedcaebddfbpfjhkoodldibgakgmhbjeapmabaaaaaacaafaaaaaeaaaaaa
daaaaaaapeabaaaaemaeaaaaomaeaaaaebgpgodjlmabaaaalmabaaaaaaacpppp
gaabaaaafmaaaaaaaeaacmaaaaaafmaaaaaafmaaacaaceaaaaaafmaaabaaaaaa
aaababaaaaaaabaaabaaaaaaaaaaaaaaaaaaahaaabaaabaaaaaaaaaaaaaaakaa
abaaacaaaaaaaaaaabaaaaaaabaaadaaaaaaaaaaaaacppppfbaaaaafaeaaapka
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabpaaaaacaaaaaaiaaaaaadlabpaaaaac
aaaaaaiaabaachlabpaaaaacaaaaaaiaacaachlabpaaaaacaaaaaaiaadaaapla
bpaaaaacaaaaaajaaaaiapkabpaaaaacaaaaaajaabaiapkaecaaaaadaaaaapia
aaaaoelaabaioekaabaaaaacabaaaiiaabaappkaaeaaaaaeabaacpiaaaaappia
abaappiaacaaaakbafaaaaadaaaacpiaaaaaoeiaabaaoekaagaaaaacacaaaiia
adaapplaafaaaaadacaaadiaacaappiaadaaoelaebaaaaababaaapiaecaaaaad
abaacpiaacaaoeiaaaaioekaaiaaaaadabaacciaabaaoelaadaaoekaafaaaaad
abaacbiaabaaaaiaabaaffiafiaaaaaeabaacbiaabaaffiaabaaaaiaaeaaaaka
acaaaaadabaacbiaabaaaaiaabaaaaiaafaaaaadabaacoiaaaaabliaaaaablka
afaaaaadacaachiaaaaaoeiaacaaoelaaeaaaaaeaaaachiaabaabliaabaaaaia
acaaoeiaabaaaaacaaaicpiaaaaaoeiappppaaaafdeieefcfaacaaaaeaaaaaaa
jeaaaaaafjaaaaaeegiocaaaaaaaaaaaalaaaaaafjaaaaaeegiocaaaabaaaaaa
abaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafibiaaae
aahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaagcbaaaad
dcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaa
gcbaaaadlcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacacaaaaaa
efaaaaajpcaabaaaaaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaa
abaaaaaadcaaaaambcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaa
ahaaaaaaakiacaiaebaaaaaaaaaaaaaaakaaaaaadiaaaaaipcaabaaaaaaaaaaa
egaobaaaaaaaaaaaegiocaaaaaaaaaaaahaaaaaadbaaaaahbcaabaaaabaaaaaa
akaabaaaabaaaaaaabeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaaaoaaaaah
dcaabaaaabaaaaaaegbabaaaaeaaaaaapgbpbaaaaeaaaaaaefaaaaajpcaabaaa
abaaaaaaegaabaaaabaaaaaaeghobaaaabaaaaaaaagabaaaaaaaaaaabaaaaaai
ccaabaaaabaaaaaaegbcbaaaacaaaaaaegiccaaaabaaaaaaaaaaaaaadeaaaaah
ccaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaaaaaaaaaaapaaaaahbcaabaaa
abaaaaaafgafbaaaabaaaaaaagaabaaaabaaaaaadiaaaaaiocaabaaaabaaaaaa
agajbaaaaaaaaaaaagijcaaaaaaaaaaaabaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaaegbcbaaaadaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaa
aaaaaaaadcaaaaajhccabaaaaaaaaaaajgahbaaaabaaaaaaagaabaaaabaaaaaa
egacbaaaaaaaaaaadoaaaaabejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapalaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLES3"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
SetTexture 2 [unity_Lightmap] 2D
"!!ARBfp1.0
# 15 ALU, 3 TEX
PARAM c[3] = { program.local[0..1],
		{ 8, 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEX R0, fragment.texcoord[0], texture[0], 2D;
TEX R2, fragment.texcoord[1], texture[2], 2D;
TXP R3.x, fragment.texcoord[2], texture[1], 2D;
MUL R0, R0, c[0];
SLT R1.x, R0.w, c[1];
MOV result.color.w, R0;
KIL -R1.x;
MUL R1.xyz, R2.w, R2;
MUL R2.xyz, R2, R3.x;
MUL R1.xyz, R1, c[2].x;
MUL R3.xyz, R1, R3.x;
MUL R2.xyz, R2, c[2].y;
MIN R1.xyz, R1, R2;
MAX R1.xyz, R1, R3;
MUL result.color.xyz, R0, R1;
END
# 15 instructions, 4 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
SetTexture 2 [unity_Lightmap] 2D
"ps_2_0
; 14 ALU, 4 TEX
dcl_2d s0
dcl_2d s1
dcl_2d s2
def c2, 0.00000000, 1.00000000, 8.00000000, 2.00000000
dcl t0.xy
dcl t1.xy
dcl t2
texldp r1, t2, s1
texld r0, t0, s0
mul r2, r0, c0
add_pp r0.x, r2.w, -c1
cmp r0.x, r0, c2, c2.y
mov_pp r0, -r0.x
texkill r0.xyzw
texld r0, t1, s2
mul_pp r3.xyz, r0.w, r0
mul_pp r0.xyz, r0, r1.x
mul_pp r3.xyz, r3, c2.z
mul_pp r0.xyz, r0, c2.w
mul_pp r1.xyz, r3, r1.x
min_pp r0.xyz, r3, r0
max_pp r0.xyz, r0, r1
mul_pp r0.xyz, r2, r0
mov_pp r0.w, r2
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_ShadowMapTexture] 2D
SetTexture 1 [_MainTex] 2D
SetTexture 2 [unity_Lightmap] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 14.67 (11 instructions), vertex: 0, texture: 12,
//   sequencer: 8, interpolator: 12;    4 GPRs, 48 threads,
// Performance (if enough threads): ~14 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaabhmaaaaabamaaaaaaaaaaaaaaceaaaaabciaaaaabfaaaaaaaaa
aaaaaaaaaaaaabaaaaaaaabmaaaaaapeppppadaaaaaaaaafaaaaaabmaaaaaaaa
aaaaaaonaaaaaaiaaaacaaaaaaabaaaaaaaaaaiiaaaaaaaaaaaaaajiaaacaaab
aaabaaaaaaaaaakaaaaaaaaaaaaaaalaaaadaaabaaabaaaaaaaaaalmaaaaaaaa
aaaaaammaaadaaaaaaabaaaaaaaaaalmaaaaaaaaaaaaaanoaaadaaacaaabaaaa
aaaaaalmaaaaaaaafpedgpgmgphcaaklaaabaaadaaabaaaeaaabaaaaaaaaaaaa
fpedhfhegpggggaaaaaaaaadaaabaaabaaabaaaaaaaaaaaafpengbgjgofegfhi
aaklklklaaaeaaamaaabaaabaaabaaaaaaaaaaaafpfdgigbgegphhengbhafegf
hihehfhcgfaahfgogjhehjfpemgjghgihegngbhaaahahdfpddfpdaaadccodaco
dcdadddfddcodaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabeabpmaaba
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaaammbaaaadaaaaaaaaae
aaaaaaaaaaaacagdaaahaaahaaaaaacbaaaadafaaaaadbfbaaaapcfcaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaebaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaafajgaac
aaaabcaameaaaaaaaaaagaaicaaobcaaccaaaaaababiaaabbpbppgecaaaaeaaa
emeiabaaaablblblkbaaaaaclibmacababmgkmedmbabacabmiaaaaaaaalbgmaa
hjppacaabacicacbbpbppgiiaaaaeaaaliaibacbbpbppbppaaaaeaaaaabbabad
aablgmblkbacppabmiahaaabaagmmaaaobabacaabecoaaacaagmpmlbobadacaa
kibhacadaabfblebmbacabaakichacabaabfmaicmdacabaakiehacabaamamama
mcadabaamiahaaaaaamamaaaobacabaamiapiaaaaaaaaaaaocaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
SetTexture 2 [unity_Lightmap] 2D
"sce_fp_rsx // 15 instructions using 3 registers
[Configuration]
24
ffffffff0001c0200007fffb000000000000848003000000
[Offsets]
2
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
240
9e001700c8011c9dc8000001c8003fe11e800200c8001c9dc8020001c8000001
00000000000000000000000000000000037e4a80ff001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
10800140c9001c9dc8000001c8000001be041704c8011c9dc8000001c8003fe1
0e860240fe081c9dc8083001c8000001c2021802c8011c9dc8000001c8003fe1
0e820240c90c1c9d00040000c80000010e840240c8081c9d00041000c8000001
0e840840c90c1c9dc9080001c80000010e820940c9081c9dc9040001c8000001
0e810240c9001c9dc9040001c8000001
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
ConstBuffer "$Globals" 192 // 180 used size, 10 vars
Vector 112 [_Color] 4
Float 176 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_ShadowMapTexture] 2D 0
SetTexture 2 [unity_Lightmap] 2D 2
// 18 instructions, 3 temp regs, 0 temp arrays:
// ALU 12 float, 0 int, 0 uint
// TEX 3 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedbaeemhnpghfjbomekpafgcjacfolgfjjabaaaaaaimadaaaaadaaaaaa
cmaaaaaaleaaaaaaoiaaaaaaejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaabaaaaaa
amamaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaacaaaaaaapalaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcjmacaaaaeaaaaaaakhaaaaaafjaaaaaeegiocaaa
aaaaaaaaamaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaae
aahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaagcbaaaad
dcbabaaaabaaaaaagcbaaaadmcbabaaaabaaaaaagcbaaaadlcbabaaaacaaaaaa
gfaaaaadpccabaaaaaaaaaaagiaaaaacadaaaaaaefaaaaajpcaabaaaaaaaaaaa
egbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaabaaaaaadcaaaaambcaabaaa
abaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaahaaaaaaakiacaiaebaaaaaa
aaaaaaaaalaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaaegiocaaa
aaaaaaaaahaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaa
aaaaaaaaanaaaeadakaabaaaabaaaaaaaoaaaaahdcaabaaaabaaaaaaegbabaaa
acaaaaaapgbpbaaaacaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaaabaaaaaa
eghobaaaabaaaaaaaagabaaaaaaaaaaaaaaaaaahccaabaaaabaaaaaaakaabaaa
abaaaaaaakaabaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaogbkbaaaabaaaaaa
eghobaaaacaaaaaaaagabaaaacaaaaaadiaaaaahocaabaaaabaaaaaafgafbaaa
abaaaaaaagajbaaaacaaaaaadiaaaaahicaabaaaacaaaaaadkaabaaaacaaaaaa
abeaaaaaaaaaaaebdiaaaaahhcaabaaaacaaaaaaegacbaaaacaaaaaapgapbaaa
acaaaaaaddaaaaahocaabaaaabaaaaaafgaobaaaabaaaaaaagajbaaaacaaaaaa
diaaaaahhcaabaaaacaaaaaaagaabaaaabaaaaaaegacbaaaacaaaaaadeaaaaah
hcaabaaaabaaaaaajgahbaaaabaaaaaaegacbaaaacaaaaaadiaaaaahhccabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadgaaaaaficcabaaaaaaaaaaa
dkaabaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLES"
}

SubProgram "flash " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
SetTexture 2 [unity_Lightmap] 2D
"agal_ps
c2 0.0 1.0 8.0 2.0
[bc]
aeaaaaaaaaaaapacacaaaaoeaeaaaaaaacaaaappaeaaaaaa div r0, v2, v2.w
ciaaaaaaabaaapacaaaaaafeacaaaaaaabaaaaaaafaababb tex r1, r0.xyyy, s1 <2d wrap linear point>
ciaaaaaaaaaaapacaaaaaaoeaeaaaaaaaaaaaaaaafaababb tex r0, v0, s0 <2d wrap linear point>
adaaaaaaacaaapacaaaaaaoeacaaaaaaaaaaaaoeabaaaaaa mul r2, r0, c0
acaaaaaaaaaaabacacaaaappacaaaaaaabaaaaoeabaaaaaa sub r0.x, r2.w, c1
cjaaaaaaaaaaabacaaaaaaaaacaaaaaaacaaaaaaabaaaaaa sge r0.x, r0.x, c2.x
chaaaaaaaaaaaaaaaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa kil a0.none, r0.x
ciaaaaaaaaaaapacabaaaaoeaeaaaaaaacaaaaaaafaababb tex r0, v1, s2 <2d wrap linear point>
adaaaaaaadaaahacaaaaaappacaaaaaaaaaaaakeacaaaaaa mul r3.xyz, r0.w, r0.xyzz
adaaaaaaaaaaahacaaaaaakeacaaaaaaabaaaaaaacaaaaaa mul r0.xyz, r0.xyzz, r1.x
adaaaaaaadaaahacadaaaakeacaaaaaaacaaaakkabaaaaaa mul r3.xyz, r3.xyzz, c2.z
adaaaaaaaaaaahacaaaaaakeacaaaaaaacaaaappabaaaaaa mul r0.xyz, r0.xyzz, c2.w
adaaaaaaabaaahacadaaaakeacaaaaaaabaaaaaaacaaaaaa mul r1.xyz, r3.xyzz, r1.x
agaaaaaaaaaaahacadaaaakeacaaaaaaaaaaaakeacaaaaaa min r0.xyz, r3.xyzz, r0.xyzz
ahaaaaaaaaaaahacaaaaaakeacaaaaaaabaaaakeacaaaaaa max r0.xyz, r0.xyzz, r1.xyzz
adaaaaaaaaaaahacacaaaakeacaaaaaaaaaaaakeacaaaaaa mul r0.xyz, r2.xyzz, r0.xyzz
aaaaaaaaaaaaaiacacaaaappacaaaaaaaaaaaaaaaaaaaaaa mov r0.w, r2.w
aaaaaaaaaaaaapadaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r0
"
}

SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
ConstBuffer "$Globals" 192 // 180 used size, 10 vars
Vector 112 [_Color] 4
Float 176 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_ShadowMapTexture] 2D 0
SetTexture 2 [unity_Lightmap] 2D 2
// 18 instructions, 3 temp regs, 0 temp arrays:
// ALU 12 float, 0 int, 0 uint
// TEX 3 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefiecedjdaecgbjocbdpbdmnipaeedcfijhpelkabaaaaaafiafaaaaaeaaaaaa
daaaaaaapiabaaaajmaeaaaaceafaaaaebgpgodjmaabaaaamaabaaaaaaacpppp
hiabaaaaeiaaaaaaacaadaaaaaaaeiaaaaaaeiaaadaaceaaaaaaeiaaabaaaaaa
aaababaaacacacaaaaaaahaaabaaaaaaaaaaaaaaaaaaalaaabaaabaaaaaaaaaa
aaacppppfbaaaaafacaaapkaaaaaaaebaaaaaaaaaaaaaaaaaaaaaaaabpaaaaac
aaaaaaiaaaaaaplabpaaaaacaaaaaaiaabaaaplabpaaaaacaaaaaajaaaaiapka
bpaaaaacaaaaaajaabaiapkabpaaaaacaaaaaajaacaiapkaecaaaaadaaaaapia
aaaaoelaabaioekaabaaaaacabaaaiiaaaaappkaaeaaaaaeabaacpiaaaaappia
abaappiaabaaaakbafaaaaadaaaacpiaaaaaoeiaaaaaoekaagaaaaacacaaaiia
abaapplaafaaaaadacaaadiaacaappiaabaaoelaabaaaaacadaaadiaaaaablla
ebaaaaababaaapiaecaaaaadabaacpiaacaaoeiaaaaioekaecaaaaadacaacpia
adaaoeiaacaioekaacaaaaadabaacciaabaaaaiaabaaaaiaafaaaaadabaacoia
acaabliaabaaffiaafaaaaadacaaciiaacaappiaacaaaakaafaaaaadacaachia
acaaoeiaacaappiaakaaaaadadaachiaabaabliaacaaoeiaafaaaaadabaachia
abaaaaiaacaaoeiaalaaaaadacaachiaadaaoeiaabaaoeiaafaaaaadaaaachia
aaaaoeiaacaaoeiaabaaaaacaaaicpiaaaaaoeiappppaaaafdeieefcjmacaaaa
eaaaaaaakhaaaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaafkaaaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafibiaaae
aahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaae
aahabaaaacaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaadmcbabaaa
abaaaaaagcbaaaadlcbabaaaacaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaac
adaaaaaaefaaaaajpcaabaaaaaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaa
aagabaaaabaaaaaadcaaaaambcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaa
aaaaaaaaahaaaaaaakiacaiaebaaaaaaaaaaaaaaalaaaaaadiaaaaaipcaabaaa
aaaaaaaaegaobaaaaaaaaaaaegiocaaaaaaaaaaaahaaaaaadbaaaaahbcaabaaa
abaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaa
aoaaaaahdcaabaaaabaaaaaaegbabaaaacaaaaaapgbpbaaaacaaaaaaefaaaaaj
pcaabaaaabaaaaaaegaabaaaabaaaaaaeghobaaaabaaaaaaaagabaaaaaaaaaaa
aaaaaaahccaabaaaabaaaaaaakaabaaaabaaaaaaakaabaaaabaaaaaaefaaaaaj
pcaabaaaacaaaaaaogbkbaaaabaaaaaaeghobaaaacaaaaaaaagabaaaacaaaaaa
diaaaaahocaabaaaabaaaaaafgafbaaaabaaaaaaagajbaaaacaaaaaadiaaaaah
icaabaaaacaaaaaadkaabaaaacaaaaaaabeaaaaaaaaaaaebdiaaaaahhcaabaaa
acaaaaaaegacbaaaacaaaaaapgapbaaaacaaaaaaddaaaaahocaabaaaabaaaaaa
fgaobaaaabaaaaaaagajbaaaacaaaaaadiaaaaahhcaabaaaacaaaaaaagaabaaa
abaaaaaaegacbaaaacaaaaaadeaaaaahhcaabaaaabaaaaaajgahbaaaabaaaaaa
egacbaaaacaaaaaadiaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaa
abaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaaaaaaaaaadoaaaaabejfdeheo
iaaaaaaaaeaaaaaaaiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaa
apaaaaaaheaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadadaaaaheaaaaaa
abaaaaaaaaaaaaaaadaaaaaaabaaaaaaamamaaaaheaaaaaaacaaaaaaaaaaaaaa
adaaaaaaacaaaaaaapalaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLES3"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
SetTexture 2 [unity_Lightmap] 2D
"!!ARBfp1.0
# 15 ALU, 3 TEX
PARAM c[3] = { program.local[0..1],
		{ 8, 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEX R0, fragment.texcoord[0], texture[0], 2D;
TEX R2, fragment.texcoord[1], texture[2], 2D;
TXP R3.x, fragment.texcoord[2], texture[1], 2D;
MUL R0, R0, c[0];
SLT R1.x, R0.w, c[1];
MOV result.color.w, R0;
KIL -R1.x;
MUL R1.xyz, R2.w, R2;
MUL R2.xyz, R2, R3.x;
MUL R1.xyz, R1, c[2].x;
MUL R3.xyz, R1, R3.x;
MUL R2.xyz, R2, c[2].y;
MIN R1.xyz, R1, R2;
MAX R1.xyz, R1, R3;
MUL result.color.xyz, R0, R1;
END
# 15 instructions, 4 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
SetTexture 2 [unity_Lightmap] 2D
"ps_2_0
; 14 ALU, 4 TEX
dcl_2d s0
dcl_2d s1
dcl_2d s2
def c2, 0.00000000, 1.00000000, 8.00000000, 2.00000000
dcl t0.xy
dcl t1.xy
dcl t2
texldp r1, t2, s1
texld r0, t0, s0
mul r2, r0, c0
add_pp r0.x, r2.w, -c1
cmp r0.x, r0, c2, c2.y
mov_pp r0, -r0.x
texkill r0.xyzw
texld r0, t1, s2
mul_pp r3.xyz, r0.w, r0
mul_pp r0.xyz, r0, r1.x
mul_pp r3.xyz, r3, c2.z
mul_pp r0.xyz, r0, c2.w
mul_pp r1.xyz, r3, r1.x
min_pp r0.xyz, r3, r0
max_pp r0.xyz, r0, r1
mul_pp r0.xyz, r2, r0
mov_pp r0.w, r2
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_ShadowMapTexture] 2D
SetTexture 1 [_MainTex] 2D
SetTexture 2 [unity_Lightmap] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 14.67 (11 instructions), vertex: 0, texture: 12,
//   sequencer: 8, interpolator: 12;    4 GPRs, 48 threads,
// Performance (if enough threads): ~14 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaabhmaaaaabamaaaaaaaaaaaaaaceaaaaabciaaaaabfaaaaaaaaa
aaaaaaaaaaaaabaaaaaaaabmaaaaaapeppppadaaaaaaaaafaaaaaabmaaaaaaaa
aaaaaaonaaaaaaiaaaacaaaaaaabaaaaaaaaaaiiaaaaaaaaaaaaaajiaaacaaab
aaabaaaaaaaaaakaaaaaaaaaaaaaaalaaaadaaabaaabaaaaaaaaaalmaaaaaaaa
aaaaaammaaadaaaaaaabaaaaaaaaaalmaaaaaaaaaaaaaanoaaadaaacaaabaaaa
aaaaaalmaaaaaaaafpedgpgmgphcaaklaaabaaadaaabaaaeaaabaaaaaaaaaaaa
fpedhfhegpggggaaaaaaaaadaaabaaabaaabaaaaaaaaaaaafpengbgjgofegfhi
aaklklklaaaeaaamaaabaaabaaabaaaaaaaaaaaafpfdgigbgegphhengbhafegf
hihehfhcgfaahfgogjhehjfpemgjghgihegngbhaaahahdfpddfpdaaadccodaco
dcdadddfddcodaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabeabpmaaba
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaaammbaaaadaaaaaaaaae
aaaaaaaaaaaacagdaaahaaahaaaaaacbaaaadafaaaaadbfbaaaapcfcaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaebaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaafajgaac
aaaabcaameaaaaaaaaaagaaicaaobcaaccaaaaaababiaaabbpbppgecaaaaeaaa
emeiabaaaablblblkbaaaaaclibmacababmgkmedmbabacabmiaaaaaaaalbgmaa
hjppacaabacicacbbpbppgiiaaaaeaaaliaibacbbpbppbppaaaaeaaaaabbabad
aablgmblkbacppabmiahaaabaagmmaaaobabacaabecoaaacaagmpmlbobadacaa
kibhacadaabfblebmbacabaakichacabaabfmaicmdacabaakiehacabaamamama
mcadabaamiahaaaaaamamaaaobacabaamiapiaaaaaaaaaaaocaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
SetTexture 2 [unity_Lightmap] 2D
"sce_fp_rsx // 15 instructions using 3 registers
[Configuration]
24
ffffffff0001c0200007fffb000000000000848003000000
[Offsets]
2
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
240
9e001700c8011c9dc8000001c8003fe11e800200c8001c9dc8020001c8000001
00000000000000000000000000000000037e4a80ff001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
10800140c9001c9dc8000001c8000001be041704c8011c9dc8000001c8003fe1
0e860240fe081c9dc8083001c8000001c2021802c8011c9dc8000001c8003fe1
0e820240c90c1c9d00040000c80000010e840240c8081c9d00041000c8000001
0e840840c90c1c9dc9080001c80000010e820940c9081c9dc9040001c8000001
0e810240c9001c9dc9040001c8000001
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" }
ConstBuffer "$Globals" 192 // 180 used size, 10 vars
Vector 112 [_Color] 4
Float 176 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_ShadowMapTexture] 2D 0
SetTexture 2 [unity_Lightmap] 2D 2
// 18 instructions, 3 temp regs, 0 temp arrays:
// ALU 12 float, 0 int, 0 uint
// TEX 3 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedbaeemhnpghfjbomekpafgcjacfolgfjjabaaaaaaimadaaaaadaaaaaa
cmaaaaaaleaaaaaaoiaaaaaaejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaabaaaaaa
amamaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaacaaaaaaapalaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcjmacaaaaeaaaaaaakhaaaaaafjaaaaaeegiocaaa
aaaaaaaaamaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaae
aahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaagcbaaaad
dcbabaaaabaaaaaagcbaaaadmcbabaaaabaaaaaagcbaaaadlcbabaaaacaaaaaa
gfaaaaadpccabaaaaaaaaaaagiaaaaacadaaaaaaefaaaaajpcaabaaaaaaaaaaa
egbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaabaaaaaadcaaaaambcaabaaa
abaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaahaaaaaaakiacaiaebaaaaaa
aaaaaaaaalaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaaegiocaaa
aaaaaaaaahaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaa
aaaaaaaaanaaaeadakaabaaaabaaaaaaaoaaaaahdcaabaaaabaaaaaaegbabaaa
acaaaaaapgbpbaaaacaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaaabaaaaaa
eghobaaaabaaaaaaaagabaaaaaaaaaaaaaaaaaahccaabaaaabaaaaaaakaabaaa
abaaaaaaakaabaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaogbkbaaaabaaaaaa
eghobaaaacaaaaaaaagabaaaacaaaaaadiaaaaahocaabaaaabaaaaaafgafbaaa
abaaaaaaagajbaaaacaaaaaadiaaaaahicaabaaaacaaaaaadkaabaaaacaaaaaa
abeaaaaaaaaaaaebdiaaaaahhcaabaaaacaaaaaaegacbaaaacaaaaaapgapbaaa
acaaaaaaddaaaaahocaabaaaabaaaaaafgaobaaaabaaaaaaagajbaaaacaaaaaa
diaaaaahhcaabaaaacaaaaaaagaabaaaabaaaaaaegacbaaaacaaaaaadeaaaaah
hcaabaaaabaaaaaajgahbaaaabaaaaaaegacbaaaacaaaaaadiaaaaahhccabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadgaaaaaficcabaaaaaaaaaaa
dkaabaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" }
"!!GLES"
}

SubProgram "flash " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
SetTexture 2 [unity_Lightmap] 2D
"agal_ps
c2 0.0 1.0 8.0 2.0
[bc]
aeaaaaaaaaaaapacacaaaaoeaeaaaaaaacaaaappaeaaaaaa div r0, v2, v2.w
ciaaaaaaabaaapacaaaaaafeacaaaaaaabaaaaaaafaababb tex r1, r0.xyyy, s1 <2d wrap linear point>
ciaaaaaaaaaaapacaaaaaaoeaeaaaaaaaaaaaaaaafaababb tex r0, v0, s0 <2d wrap linear point>
adaaaaaaacaaapacaaaaaaoeacaaaaaaaaaaaaoeabaaaaaa mul r2, r0, c0
acaaaaaaaaaaabacacaaaappacaaaaaaabaaaaoeabaaaaaa sub r0.x, r2.w, c1
cjaaaaaaaaaaabacaaaaaaaaacaaaaaaacaaaaaaabaaaaaa sge r0.x, r0.x, c2.x
chaaaaaaaaaaaaaaaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa kil a0.none, r0.x
ciaaaaaaaaaaapacabaaaaoeaeaaaaaaacaaaaaaafaababb tex r0, v1, s2 <2d wrap linear point>
adaaaaaaadaaahacaaaaaappacaaaaaaaaaaaakeacaaaaaa mul r3.xyz, r0.w, r0.xyzz
adaaaaaaaaaaahacaaaaaakeacaaaaaaabaaaaaaacaaaaaa mul r0.xyz, r0.xyzz, r1.x
adaaaaaaadaaahacadaaaakeacaaaaaaacaaaakkabaaaaaa mul r3.xyz, r3.xyzz, c2.z
adaaaaaaaaaaahacaaaaaakeacaaaaaaacaaaappabaaaaaa mul r0.xyz, r0.xyzz, c2.w
adaaaaaaabaaahacadaaaakeacaaaaaaabaaaaaaacaaaaaa mul r1.xyz, r3.xyzz, r1.x
agaaaaaaaaaaahacadaaaakeacaaaaaaaaaaaakeacaaaaaa min r0.xyz, r3.xyzz, r0.xyzz
ahaaaaaaaaaaahacaaaaaakeacaaaaaaabaaaakeacaaaaaa max r0.xyz, r0.xyzz, r1.xyzz
adaaaaaaaaaaahacacaaaakeacaaaaaaaaaaaakeacaaaaaa mul r0.xyz, r2.xyzz, r0.xyzz
aaaaaaaaaaaaaiacacaaaappacaaaaaaaaaaaaaaaaaaaaaa mov r0.w, r2.w
aaaaaaaaaaaaapadaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r0
"
}

SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" }
ConstBuffer "$Globals" 192 // 180 used size, 10 vars
Vector 112 [_Color] 4
Float 176 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_ShadowMapTexture] 2D 0
SetTexture 2 [unity_Lightmap] 2D 2
// 18 instructions, 3 temp regs, 0 temp arrays:
// ALU 12 float, 0 int, 0 uint
// TEX 3 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefiecedjdaecgbjocbdpbdmnipaeedcfijhpelkabaaaaaafiafaaaaaeaaaaaa
daaaaaaapiabaaaajmaeaaaaceafaaaaebgpgodjmaabaaaamaabaaaaaaacpppp
hiabaaaaeiaaaaaaacaadaaaaaaaeiaaaaaaeiaaadaaceaaaaaaeiaaabaaaaaa
aaababaaacacacaaaaaaahaaabaaaaaaaaaaaaaaaaaaalaaabaaabaaaaaaaaaa
aaacppppfbaaaaafacaaapkaaaaaaaebaaaaaaaaaaaaaaaaaaaaaaaabpaaaaac
aaaaaaiaaaaaaplabpaaaaacaaaaaaiaabaaaplabpaaaaacaaaaaajaaaaiapka
bpaaaaacaaaaaajaabaiapkabpaaaaacaaaaaajaacaiapkaecaaaaadaaaaapia
aaaaoelaabaioekaabaaaaacabaaaiiaaaaappkaaeaaaaaeabaacpiaaaaappia
abaappiaabaaaakbafaaaaadaaaacpiaaaaaoeiaaaaaoekaagaaaaacacaaaiia
abaapplaafaaaaadacaaadiaacaappiaabaaoelaabaaaaacadaaadiaaaaablla
ebaaaaababaaapiaecaaaaadabaacpiaacaaoeiaaaaioekaecaaaaadacaacpia
adaaoeiaacaioekaacaaaaadabaacciaabaaaaiaabaaaaiaafaaaaadabaacoia
acaabliaabaaffiaafaaaaadacaaciiaacaappiaacaaaakaafaaaaadacaachia
acaaoeiaacaappiaakaaaaadadaachiaabaabliaacaaoeiaafaaaaadabaachia
abaaaaiaacaaoeiaalaaaaadacaachiaadaaoeiaabaaoeiaafaaaaadaaaachia
aaaaoeiaacaaoeiaabaaaaacaaaicpiaaaaaoeiappppaaaafdeieefcjmacaaaa
eaaaaaaakhaaaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaafkaaaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafibiaaae
aahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaae
aahabaaaacaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaadmcbabaaa
abaaaaaagcbaaaadlcbabaaaacaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaac
adaaaaaaefaaaaajpcaabaaaaaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaa
aagabaaaabaaaaaadcaaaaambcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaa
aaaaaaaaahaaaaaaakiacaiaebaaaaaaaaaaaaaaalaaaaaadiaaaaaipcaabaaa
aaaaaaaaegaobaaaaaaaaaaaegiocaaaaaaaaaaaahaaaaaadbaaaaahbcaabaaa
abaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaa
aoaaaaahdcaabaaaabaaaaaaegbabaaaacaaaaaapgbpbaaaacaaaaaaefaaaaaj
pcaabaaaabaaaaaaegaabaaaabaaaaaaeghobaaaabaaaaaaaagabaaaaaaaaaaa
aaaaaaahccaabaaaabaaaaaaakaabaaaabaaaaaaakaabaaaabaaaaaaefaaaaaj
pcaabaaaacaaaaaaogbkbaaaabaaaaaaeghobaaaacaaaaaaaagabaaaacaaaaaa
diaaaaahocaabaaaabaaaaaafgafbaaaabaaaaaaagajbaaaacaaaaaadiaaaaah
icaabaaaacaaaaaadkaabaaaacaaaaaaabeaaaaaaaaaaaebdiaaaaahhcaabaaa
acaaaaaaegacbaaaacaaaaaapgapbaaaacaaaaaaddaaaaahocaabaaaabaaaaaa
fgaobaaaabaaaaaaagajbaaaacaaaaaadiaaaaahhcaabaaaacaaaaaaagaabaaa
abaaaaaaegacbaaaacaaaaaadeaaaaahhcaabaaaabaaaaaajgahbaaaabaaaaaa
egacbaaaacaaaaaadiaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaa
abaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaaaaaaaaaadoaaaaabejfdeheo
iaaaaaaaaeaaaaaaaiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaa
apaaaaaaheaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadadaaaaheaaaaaa
abaaaaaaaaaaaaaaadaaaaaaabaaaaaaamamaaaaheaaaaaaacaaaaaaaaaaaaaa
adaaaaaaacaaaaaaapalaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_SCREEN" }
"!!GLES3"
}

}
	}
	Pass {
		Name "FORWARD"
		Tags { "LightMode" = "ForwardAdd" }
		ZWrite Off Blend One One Fog { Color (0,0,0,0) }
		ColorMask RGB
Program "vp" {
// Vertex combos: 5
//   opengl - ALU: 74 to 82
//   d3d9 - ALU: 74 to 82
//   d3d11 - ALU: 22 to 35, TEX: 0 to 0, FLOW: 1 to 1
//   d3d11_9x - ALU: 22 to 35, TEX: 0 to 0, FLOW: 1 to 1
SubProgram "opengl " {
Keywords { "POINT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 13 [_Time]
Vector 14 [_WorldSpaceLightPos0]
Matrix 5 [_Object2World]
Vector 15 [unity_Scale]
Matrix 9 [_LightMatrix0]
Float 16 [_WaveSpeed]
Float 17 [_Amplitude]
Vector 18 [_MainTex_ST]
"!!ARBvp1.0
# 81 ALU
PARAM c[24] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.mvp,
		program.local[5..18],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[16];
MUL R0.x, R0, c[13];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[19];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[20].xyxw, c[20].zwzw;
MAD R1.xyz, R1, R0, c[21].xyxw;
MAD R1.xyz, R1, R0, c[21].zwzw;
MAD R1.xyz, R1, R0, c[22].xyxw;
MAD R0.xyz, R1, R0, c[19].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[22].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[19].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[23].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[17];
MAD R0.w, -R0.x, c[23].x, vertex.position.z;
MAD R0.x, R1.w, c[23].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[19];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[20].xyxw, c[20].zwzw;
MAD R3.xyz, R2, R0, c[21].xyxw;
MAD R3.xyz, R3, R0, c[21].zwzw;
MAD R3.xyz, R3, R0, c[22].xyxw;
ADD R1.xyz, -R1.w, c[19];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[20].xyxw, c[20].zwzw;
MAD R2.xyz, R2, R1, c[21].xyxw;
MAD R2.xyz, R2, R1, c[21].zwzw;
MAD R3.xyz, R3, R0, c[19].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[22].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[19].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[22].xyxw;
MAD R1.xyz, R0, R1, c[19].wzww;
SGE R0.yz, R1.w, c[22].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[19].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R0.x, R0, c[17];
MUL R0.y, -R0, c[23].z;
MAD R0.y, R0.x, c[19], R0;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R2.w, c[17];
MAD R0.x, R0, c[19].y, vertex.position;
DP4 R1.z, R0.xywz, c[7];
DP4 R1.x, R0.xywz, c[5];
DP4 R1.y, R0.xywz, c[6];
DP4 R1.w, R0.xywz, c[8];
DP4 result.texcoord[3].z, R1, c[11];
DP4 result.texcoord[3].y, R1, c[10];
DP4 result.texcoord[3].x, R1, c[9];
ADD result.texcoord[2].xyz, -R1, c[14];
MUL R1.xyz, vertex.normal, c[15].w;
DP4 result.position.w, R0.xywz, c[4];
DP4 result.position.z, R0.xywz, c[3];
DP4 result.position.y, R0.xywz, c[2];
DP4 result.position.x, R0.xywz, c[1];
DP3 result.texcoord[1].z, R1, c[7];
DP3 result.texcoord[1].y, R1, c[6];
DP3 result.texcoord[1].x, R1, c[5];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[18], c[18].zwzw;
END
# 81 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "POINT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 12 [_Time]
Vector 13 [_WorldSpaceLightPos0]
Matrix 4 [_Object2World]
Vector 14 [unity_Scale]
Matrix 8 [_LightMatrix0]
Float 15 [_WaveSpeed]
Float 16 [_Amplitude]
Vector 17 [_MainTex_ST]
"vs_2_0
; 81 ALU
def c18, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c19, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c20, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c21, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c22, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_normal0 v2
dcl_texcoord0 v3
add r0.w, v0.x, v0.y
mov r0.x, c12
mul r0.x, c15, r0
slt r0.y, r0.x, c20.x
max r0.y, -r0, r0
slt r0.y, c20.x, r0
add r0.z, -r0.y, c18
mul r0.z, r0.x, r0
mov r1.w, v0
mad r1.y, r0, -r0.x, r0.z
add r1.x, r0.w, v0.z
mad r0.x, r1.y, c20.y, r1
mad r0.x, r0, c20.z, c20.w
frc r0.x, r0
mad r1.z, r0.x, c21.x, c21.y
sincos r0.xy, r1.z, c19.xyzw, c18.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1, c22.x, r1.x
mul r0.x, r0, c16
mad r1.z, -r0.x, c22.y, v0
mad r0.x, r1.y, c21.z, r1
mad r0.x, r0, c20.z, c20.w
mad r0.y, r0, c20.z, c20.w
frc r0.y, r0
mad r1.y, r0, c21.x, c21
frc r1.x, r0
sincos r0.xy, r1.y, c19.xyzw, c18.xyzw
mad r0.x, r1, c21, c21.y
mul r0.z, v3.y, r0.y
sincos r2.xy, r0.x, c19.xyzw, c18.xyzw
mul r0.y, v3, v3.x
mul r0.x, v3.y, r2.y
mul r0.y, -r0, c21.w
mul r0.x, r0, c16
mad r1.y, r0.x, c18.w, r0
mul r0.x, r0.z, c16
mad r1.x, r0, c18.w, v0
dp4 r0.z, r1, c6
dp4 r0.x, r1, c4
dp4 r0.y, r1, c5
dp4 r0.w, r1, c7
dp4 oT3.z, r0, c10
dp4 oT3.y, r0, c9
dp4 oT3.x, r0, c8
add oT2.xyz, -r0, c13
mul r0.xyz, v2, c14.w
dp4 oPos.w, r1, c3
dp4 oPos.z, r1, c2
dp4 oPos.y, r1, c1
dp4 oPos.x, r1, c0
dp3 oT1.z, r0, c6
dp3 oT1.y, r0, c5
dp3 oT1.x, r0, c4
mad oT0.xy, v3, c17, c17.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "POINT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Float 16 [_Amplitude]
Matrix 11 [_LightMatrix0] 4
Vector 17 [_MainTex_ST]
Matrix 6 [_Object2World] 4
Vector 0 [_Time]
Float 15 [_WaveSpeed]
Vector 1 [_WorldSpaceLightPos0]
Matrix 2 [glstate_matrix_mvp] 4
Vector 10 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 44.00-45.33 (33-34 instructions), vertex: 32, texture: 0,
//   sequencer: 20,  6 GPRs, 30 threads,
// Performance (if enough threads): ~44-45 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacdeaaaaaceeaaaaaaaaaaaaaaceaaaaabliaaaaaboaaaaaaaaa
aaaaaaaaaaaaabjaaaaaaabmaaaaabicpppoadaaaaaaaaajaaaaaabmaaaaaaaa
aaaaabhlaaaaaanaaaacaabaaaabaaaaaaaaaanmaaaaaaaaaaaaaaomaaacaaal
aaaeaaaaaaaaaapmaaaaaaaaaaaaabamaaacaabbaaabaaaaaaaaabbiaaaaaaaa
aaaaabciaaacaaagaaaeaaaaaaaaaapmaaaaaaaaaaaaabdgaaacaaaaaaabaaaa
aaaaabbiaaaaaaaaaaaaabdmaaacaaapaaabaaaaaaaaaanmaaaaaaaaaaaaabeh
aaacaaabaaabaaaaaaaaabbiaaaaaaaaaaaaabfmaaacaaacaaaeaaaaaaaaaapm
aaaaaaaaaaaaabgpaaacaaakaaabaaaaaaaaabbiaaaaaaaafpebgnhagmgjhehf
gegfaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaafpemgjghgiheengbhehcgjhi
daaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpengbgjgofegfhifpfdfeaa
aaabaaadaaabaaaeaaabaaaaaaaaaaaafpepgcgkgfgdhedcfhgphcgmgeaafpfe
gjgngfaafpfhgbhggffdhagfgfgeaafpfhgphcgmgefdhagbgdgfemgjghgihefa
gphddaaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaahfgogjhehjfpfdgdgb
gmgfaahghdfpddfpdaaadccodacodcdadddfddcodaaaklklaaaaaaaaaaaaaaab
aaaaaaaaaaaaaaaaaaaaaabeaapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaeaaaaaacaeaadbaaafaaaaaaaaaaaaaaaaaaaacmieaaaaaaabaaaaaaad
aaaaaaaeaaaaacjaaabaaaafaaaadaagaadafaahaaaadafaaaabhbfbaaachcfc
aaadhdfdaaaabacfaaaabaceaaaabacdaaaabacjaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaadoccpjidlpiaaaaamaejapnldpiaaaaadpaaaaaadoemmmmneamjapnl
dpggggggdpljjjjkeaehkobeeaammmmndpaaaaaahajfgaafbaalbaaafgaaaaaa
aaaaaaaagaammcaabcaaaaaaaaaagabcfabibcaabcaaaaaaaaaaaaaagabnmeaa
bcaaaaaaaaaagacdbacjbcaaccaaaaaaafpibaaaaaaaagiiaaaaaaaaafpicaaa
aaaaaoiiaaaaaaaaafpiaaaaaaaaaohiaaaaaaaamiacaaaaaagmlbaacbaapnaa
miaiaaaaaagmgmaacbaaapaaheacaaababloblbllaabpnaakiiaaaaabiaaaaeb
mcaaaaapmiaiaaadaamggmaaobaaaaaamiahaaadaablmalbklaappabmiahaaad
aamagmbliladpnppmiahaaadaamaaaaaoiadaaaamiapaaafaadeagaakbadpoaa
miahaaaeaalemgaakaafpnaamacaaeaaaaaaaalbocaaaaaemaekaeaaaamglmmg
kbaapoaemabpaeadaablaagmkbabajaemiahaaaeaabbmaaaobaaaeaamiahaaaf
aamagmaakbaebaaamiacaaaaaagmgmaaoaafabaabeapaaaeaablaalbkbabafaf
aeibaaabafmgmgbloaafabafmiapaaaeaagmiiiiklabaeaemiapaaaeaabldeje
klaaadaemiapiadoaalbaadeklaaacaemialaaacaagfblaakbacakaamiaoaaab
aalbimaakbacaiaamiahaaacaagmlebfklacahabmiapaaabaagmaaaaklabaiad
miapaaabaablaaaaklaaahabmiapaaabaalbaaaaklaaagabmiahiaacaemamaaa
kaababaamiahiaabaablmaleklacagacmiadiaaaaamelabkilaabbbbmiahaaaa
aablleaakbabaoaamiahaaaaaamgmaleklabanaamiahaaaaaalbleleklabamaa
miahiaadaagmmaleklabalaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "POINT" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_Time]
Vector 466 [_WorldSpaceLightPos0]
Matrix 260 [_Object2World]
Vector 465 [unity_Scale]
Matrix 264 [_LightMatrix0]
Float 464 [_WaveSpeed]
Float 463 [_Amplitude]
Vector 462 [_MainTex_ST]
"sce_vp_rsx // 38 instructions using 3 registers
[Configuration]
8
0000002601050300
[Defaults]
2
461 4
400ccccd3e4ccccd4047ae143f000000
460 2
3f6666663fb9999a
[Microcode]
608
00001c6c009d120c013fc0c36041dffc401f9c6c011ce808010400d740619f9c
00009c6c0040007f8106c08360403ffc00011c6c0080082a8100008360411ffc
00001c6c00c000000106c08aa0403ffc00009c6c005d00000186c08360411ffc
401f9c6c0150600c008600c360405fa000009c6c009d3000028000c360411ffc
201fdc6c004000000286c08360411ffc00009c6c00c000550106c09fe0205ffc
00001c6c004000000286c08360403ffc00002400004000800286c08360403ffc
00009c6c011cd07f808800d540a19ffc00001c6c011cc07f809540d540a03ffc
401f9c6c7950500c008600caa0a880a000011c6c789cc080048000c000b100fc
00009c6c7880082a8115415fe022807c00009c6c008008000295408360411ffc
00001c6c0080082a813fc04360403ffc00001c6c009cf07f808000c360403ffc
00009c6c009cf000028000c360411ffc00009c6c009cf02a828000c360409ffc
00009c6c011cd02a82bfc0c001209ffc00009c6c011cd080029540d540405ffc
00009c6c011cd07f80bfc0c000411ffc401f9c6c0150400c008600c360411fa0
401f9c6c01d0300d8286c0c360403f80401f9c6c01d0200d8286c0c360405f80
401f9c6c01d0100d8286c0c360409f80401f9c6c01d0000d8286c0c360411f80
00001c6c01d0700d8286c0c360403ffc00001c6c01d0600d8286c0c360405ffc
00001c6c01d0500d8286c0c360409ffc00001c6c01d0400d8286c0c360411ffc
401f9c6c00dd200c0186c0a30021dfa4401f9c6c01d0a00d8086c0c360405fa8
401f9c6c01d0900d8086c0c360409fa8401f9c6c01d0800d8086c0c360411fa9
"
}

SubProgram "d3d11 " {
Keywords { "POINT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 176 // 160 used size, 9 vars
Matrix 48 [_LightMatrix0] 4
Float 128 [_WaveSpeed]
Float 132 [_Amplitude]
Vector 144 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityLighting" 720 // 16 used size, 17 vars
Vector 0 [_WorldSpaceLightPos0] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 37 instructions, 3 temp regs, 0 temp arrays:
// ALU 35 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedonhjhbbdhlaeaplneoojpkkmfbjmdfoiabaaaaaageahaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcmiafaaaaeaaaabaa
hcabaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaafjaaaaaeegiocaaaabaaaaaa
abaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaad
dcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaad
hccabaaaaeaaaaaagiaaaaacadaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaa
aaaaaaaaaiaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaa
aaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaa
aaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaa
aaaaaaaaaceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaa
enaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgifcaaaaaaaaaaaaiaaaaaadiaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaa
adaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaa
aaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakecaabaaa
aaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaa
dcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaacaaaaaa
kgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaa
adaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaaldccabaaa
abaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaajaaaaaaogikcaaaaaaaaaaa
ajaaaaaadiaaaaaihcaabaaaabaaaaaaegbcbaaaacaaaaaapgipcaaaadaaaaaa
beaaaaaadiaaaaaihcaabaaaacaaaaaafgafbaaaabaaaaaaegiccaaaadaaaaaa
anaaaaaadcaaaaaklcaabaaaabaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaa
abaaaaaaegaibaaaacaaaaaadcaaaaakhccabaaaacaaaaaaegiccaaaadaaaaaa
aoaaaaaakgakbaaaabaaaaaaegadbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadiaaaaaipcaabaaaacaaaaaa
fgafbaaaaaaaaaaaegiocaaaadaaaaaaanaaaaaadcaaaaakpcaabaaaacaaaaaa
egiocaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaaegaobaaaacaaaaaadcaaaaak
lcaabaaaaaaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaaegaibaaa
abaaaaaadcaaaaaklcaabaaaaaaaaaaaegiicaaaadaaaaaaaoaaaaaakgakbaaa
aaaaaaaaegambaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaa
aoaaaaaakgakbaaaaaaaaaaaegaobaaaacaaaaaadcaaaaakpcaabaaaabaaaaaa
egiocaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
hcaabaaaaaaaaaaaegiccaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaaegadbaaa
aaaaaaaaaaaaaaajhccabaaaadaaaaaaegacbaiaebaaaaaaaaaaaaaaegiccaaa
acaaaaaaaaaaaaaadiaaaaaihcaabaaaaaaaaaaafgafbaaaabaaaaaaegiccaaa
aaaaaaaaaeaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaaaaaaaaaadaaaaaa
agaabaaaabaaaaaaegacbaaaaaaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaa
aaaaaaaaafaaaaaakgakbaaaabaaaaaaegacbaaaaaaaaaaadcaaaaakhccabaaa
aeaaaaaaegiccaaaaaaaaaaaagaaaaaapgapbaaaabaaaaaaegacbaaaaaaaaaaa
doaaaaab"
}

SubProgram "gles " {
Keywords { "POINT" }
"!!GLES


#ifdef VERTEX

varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = _glesVertex;
  highp float t_5;
  highp float tmpvar_6;
  tmpvar_6 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_7;
  tmpvar_7 = (_Time * _WaveSpeed).x;
  t_5 = tmpvar_7;
  if ((tmpvar_7 < 0.0)) {
    t_5 = (tmpvar_7 * -1.0);
  };
  tmpvar_4.x = (_glesVertex.x + (((sin(((t_5 * 1.45) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_4.y = ((((sin(((t_5 * 3.12) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_4.z = (_glesVertex.z - (((sin(((t_5 * 2.2) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  mat3 tmpvar_8;
  tmpvar_8[0] = _Object2World[0].xyz;
  tmpvar_8[1] = _Object2World[1].xyz;
  tmpvar_8[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (tmpvar_1 * unity_Scale.w));
  tmpvar_2 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = (_WorldSpaceLightPos0.xyz - (_Object2World * tmpvar_4).xyz);
  tmpvar_3 = tmpvar_10;
  gl_Position = (glstate_matrix_mvp * tmpvar_4);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * tmpvar_4)).xyz;
}



#endif
#ifdef FRAGMENT

varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform sampler2D _LightTexture0;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec4 c_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  c_3 = tmpvar_5;
  lowp float tmpvar_6;
  tmpvar_6 = c_3.w;
  lowp float x_7;
  x_7 = (c_3.w - _Cutoff);
  if ((x_7 < 0.0)) {
    discard;
  };
  mediump vec3 tmpvar_8;
  tmpvar_8 = normalize(xlv_TEXCOORD2);
  lightDir_2 = tmpvar_8;
  highp float tmpvar_9;
  tmpvar_9 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp vec4 c_10;
  c_10.xyz = ((c_3.xyz * _LightColor0.xyz) * ((max (0.0, dot (xlv_TEXCOORD1, lightDir_2)) * texture2D (_LightTexture0, vec2(tmpvar_9)).w) * 2.0));
  c_10.w = tmpvar_6;
  c_1.xyz = c_10.xyz;
  c_1.w = tmpvar_6;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "POINT" }
"!!GLES


#ifdef VERTEX

varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = _glesVertex;
  highp float t_5;
  highp float tmpvar_6;
  tmpvar_6 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_7;
  tmpvar_7 = (_Time * _WaveSpeed).x;
  t_5 = tmpvar_7;
  if ((tmpvar_7 < 0.0)) {
    t_5 = (tmpvar_7 * -1.0);
  };
  tmpvar_4.x = (_glesVertex.x + (((sin(((t_5 * 1.45) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_4.y = ((((sin(((t_5 * 3.12) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_4.z = (_glesVertex.z - (((sin(((t_5 * 2.2) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  mat3 tmpvar_8;
  tmpvar_8[0] = _Object2World[0].xyz;
  tmpvar_8[1] = _Object2World[1].xyz;
  tmpvar_8[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (tmpvar_1 * unity_Scale.w));
  tmpvar_2 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = (_WorldSpaceLightPos0.xyz - (_Object2World * tmpvar_4).xyz);
  tmpvar_3 = tmpvar_10;
  gl_Position = (glstate_matrix_mvp * tmpvar_4);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * tmpvar_4)).xyz;
}



#endif
#ifdef FRAGMENT

varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform sampler2D _LightTexture0;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec4 c_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  c_3 = tmpvar_5;
  lowp float tmpvar_6;
  tmpvar_6 = c_3.w;
  lowp float x_7;
  x_7 = (c_3.w - _Cutoff);
  if ((x_7 < 0.0)) {
    discard;
  };
  mediump vec3 tmpvar_8;
  tmpvar_8 = normalize(xlv_TEXCOORD2);
  lightDir_2 = tmpvar_8;
  highp float tmpvar_9;
  tmpvar_9 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp vec4 c_10;
  c_10.xyz = ((c_3.xyz * _LightColor0.xyz) * ((max (0.0, dot (xlv_TEXCOORD1, lightDir_2)) * texture2D (_LightTexture0, vec2(tmpvar_9)).w) * 2.0));
  c_10.w = tmpvar_6;
  c_1.xyz = c_10.xyz;
  c_1.w = tmpvar_6;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "flash " {
Keywords { "POINT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 12 [_Time]
Vector 13 [_WorldSpaceLightPos0]
Matrix 4 [_Object2World]
Vector 14 [unity_Scale]
Matrix 8 [_LightMatrix0]
Float 15 [_WaveSpeed]
Float 16 [_Amplitude]
Vector 17 [_MainTex_ST]
"agal_vs
c18 -0.020833 -0.125 1.0 0.5
c19 -0.000002 -0.000022 0.002604 0.00026
c20 0.0 2.2 0.159155 0.5
c21 6.283185 -3.141593 3.12 0.9
c22 1.45 0.2 0.0 0.0
[bc]
abaaaaaaaaaaaiacaaaaaaaaaaaaaaaaaaaaaaffaaaaaaaa add r0.w, a0.x, a0.y
aaaaaaaaaaaaabacamaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r0.x, c12
adaaaaaaaaaaabacapaaaaoeabaaaaaaaaaaaaaaacaaaaaa mul r0.x, c15, r0.x
ckaaaaaaaaaaacacaaaaaaaaacaaaaaabeaaaaaaabaaaaaa slt r0.y, r0.x, c20.x
bfaaaaaaabaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r1.y, r0.y
ahaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa max r0.y, r1.y, r0.y
ckaaaaaaaaaaacacbeaaaaaaabaaaaaaaaaaaaffacaaaaaa slt r0.y, c20.x, r0.y
bfaaaaaaacaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r2.y, r0.y
abaaaaaaaaaaaeacacaaaaffacaaaaaabcaaaaoeabaaaaaa add r0.z, r2.y, c18
adaaaaaaaaaaaeacaaaaaaaaacaaaaaaaaaaaakkacaaaaaa mul r0.z, r0.x, r0.z
aaaaaaaaabaaaiacaaaaaaoeaaaaaaaaaaaaaaaaaaaaaaaa mov r1.w, a0
bfaaaaaaacaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r2.x, r0.x
adaaaaaaabaaacacaaaaaaffacaaaaaaacaaaaaaacaaaaaa mul r1.y, r0.y, r2.x
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaakkacaaaaaa add r1.y, r1.y, r0.z
abaaaaaaabaaabacaaaaaappacaaaaaaaaaaaakkaaaaaaaa add r1.x, r0.w, a0.z
adaaaaaaaaaaabacabaaaaffacaaaaaabeaaaaffabaaaaaa mul r0.x, r1.y, c20.y
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaabeaaaakkabaaaaaa mul r0.x, r0.x, c20.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaabeaaaappabaaaaaa add r0.x, r0.x, c20.w
aiaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r0.x, r0.x
adaaaaaaabaaaeacaaaaaaaaacaaaaaabfaaaaaaabaaaaaa mul r1.z, r0.x, c21.x
abaaaaaaabaaaeacabaaaakkacaaaaaabfaaaaffabaaaaaa add r1.z, r1.z, c21.y
apaaaaaaaaaaabacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.z
baaaaaaaaaaaacacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.z
adaaaaaaaaaaabacaaaaaaffacaaaaaaadaaaaffaaaaaaaa mul r0.x, r0.y, a3.y
adaaaaaaaaaaacacabaaaaffacaaaaaabgaaaaaaabaaaaaa mul r0.y, r1.y, c22.x
abaaaaaaaaaaacacaaaaaaffacaaaaaaabaaaaaaacaaaaaa add r0.y, r0.y, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaabaaaaaoeabaaaaaa mul r0.x, r0.x, c16
bfaaaaaaadaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r3.x, r0.x
adaaaaaaabaaaeacadaaaaaaacaaaaaabgaaaaffabaaaaaa mul r1.z, r3.x, c22.y
abaaaaaaabaaaeacabaaaakkacaaaaaaaaaaaaoeaaaaaaaa add r1.z, r1.z, a0
adaaaaaaaaaaabacabaaaaffacaaaaaabfaaaakkabaaaaaa mul r0.x, r1.y, c21.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaabeaaaakkabaaaaaa mul r0.x, r0.x, c20.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaabeaaaappabaaaaaa add r0.x, r0.x, c20.w
adaaaaaaaaaaacacaaaaaaffacaaaaaabeaaaakkabaaaaaa mul r0.y, r0.y, c20.z
abaaaaaaaaaaacacaaaaaaffacaaaaaabeaaaappabaaaaaa add r0.y, r0.y, c20.w
aiaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa frc r0.y, r0.y
adaaaaaaabaaacacaaaaaaffacaaaaaabfaaaaaaabaaaaaa mul r1.y, r0.y, c21.x
abaaaaaaabaaacacabaaaaffacaaaaaabfaaaaoeabaaaaaa add r1.y, r1.y, c21
aiaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r1.x, r0.x
apaaaaaaaaaaabacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.y
baaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.y
adaaaaaaaaaaabacabaaaaaaacaaaaaabfaaaaoeabaaaaaa mul r0.x, r1.x, c21
abaaaaaaaaaaabacaaaaaaaaacaaaaaabfaaaaffabaaaaaa add r0.x, r0.x, c21.y
adaaaaaaaaaaaeacadaaaaffaaaaaaaaaaaaaaffacaaaaaa mul r0.z, a3.y, r0.y
apaaaaaaacaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sin r2.x, r0.x
baaaaaaaacaaacacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa cos r2.y, r0.x
adaaaaaaaaaaacacadaaaaoeaaaaaaaaadaaaaaaaaaaaaaa mul r0.y, a3, a3.x
adaaaaaaaaaaabacadaaaaffaaaaaaaaacaaaaffacaaaaaa mul r0.x, a3.y, r2.y
bfaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r0.y, r0.y
adaaaaaaaaaaacacaaaaaaffacaaaaaabfaaaappabaaaaaa mul r0.y, r0.y, c21.w
adaaaaaaaaaaabacaaaaaaaaacaaaaaabaaaaaoeabaaaaaa mul r0.x, r0.x, c16
adaaaaaaabaaacacaaaaaaaaacaaaaaabcaaaappabaaaaaa mul r1.y, r0.x, c18.w
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa add r1.y, r1.y, r0.y
adaaaaaaaaaaabacaaaaaakkacaaaaaabaaaaaoeabaaaaaa mul r0.x, r0.z, c16
adaaaaaaabaaabacaaaaaaaaacaaaaaabcaaaappabaaaaaa mul r1.x, r0.x, c18.w
abaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaaoeaaaaaaaa add r1.x, r1.x, a0
bdaaaaaaaaaaaeacabaaaaoeacaaaaaaagaaaaoeabaaaaaa dp4 r0.z, r1, c6
bdaaaaaaaaaaabacabaaaaoeacaaaaaaaeaaaaoeabaaaaaa dp4 r0.x, r1, c4
bdaaaaaaaaaaacacabaaaaoeacaaaaaaafaaaaoeabaaaaaa dp4 r0.y, r1, c5
bdaaaaaaaaaaaiacabaaaaoeacaaaaaaahaaaaoeabaaaaaa dp4 r0.w, r1, c7
bdaaaaaaadaaaeaeaaaaaaoeacaaaaaaakaaaaoeabaaaaaa dp4 v3.z, r0, c10
bdaaaaaaadaaacaeaaaaaaoeacaaaaaaajaaaaoeabaaaaaa dp4 v3.y, r0, c9
bdaaaaaaadaaabaeaaaaaaoeacaaaaaaaiaaaaoeabaaaaaa dp4 v3.x, r0, c8
bfaaaaaaadaaahacaaaaaakeacaaaaaaaaaaaaaaaaaaaaaa neg r3.xyz, r0.xyzz
abaaaaaaacaaahaeadaaaakeacaaaaaaanaaaaoeabaaaaaa add v2.xyz, r3.xyzz, c13
adaaaaaaaaaaahacabaaaaoeaaaaaaaaaoaaaappabaaaaaa mul r0.xyz, a1, c14.w
bdaaaaaaaaaaaiadabaaaaoeacaaaaaaadaaaaoeabaaaaaa dp4 o0.w, r1, c3
bdaaaaaaaaaaaeadabaaaaoeacaaaaaaacaaaaoeabaaaaaa dp4 o0.z, r1, c2
bdaaaaaaaaaaacadabaaaaoeacaaaaaaabaaaaoeabaaaaaa dp4 o0.y, r1, c1
bdaaaaaaaaaaabadabaaaaoeacaaaaaaaaaaaaoeabaaaaaa dp4 o0.x, r1, c0
bcaaaaaaabaaaeaeaaaaaakeacaaaaaaagaaaaoeabaaaaaa dp3 v1.z, r0.xyzz, c6
bcaaaaaaabaaacaeaaaaaakeacaaaaaaafaaaaoeabaaaaaa dp3 v1.y, r0.xyzz, c5
bcaaaaaaabaaabaeaaaaaakeacaaaaaaaeaaaaoeabaaaaaa dp3 v1.x, r0.xyzz, c4
adaaaaaaadaaadacadaaaaoeaaaaaaaabbaaaaoeabaaaaaa mul r3.xy, a3, c17
abaaaaaaaaaaadaeadaaaafeacaaaaaabbaaaaooabaaaaaa add v0.xy, r3.xyyy, c17.zwzw
aaaaaaaaaaaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v0.zw, c0
aaaaaaaaabaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v1.w, c0
aaaaaaaaacaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v2.w, c0
aaaaaaaaadaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v3.w, c0
"
}

SubProgram "d3d11_9x " {
Keywords { "POINT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 176 // 160 used size, 9 vars
Matrix 48 [_LightMatrix0] 4
Float 128 [_WaveSpeed]
Float 132 [_Amplitude]
Vector 144 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityLighting" 720 // 16 used size, 17 vars
Vector 0 [_WorldSpaceLightPos0] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 37 instructions, 3 temp regs, 0 temp arrays:
// ALU 35 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecedocalcfhjafcdedlcnhaijdpfokomekcmabaaaaaapmalaaaaaeaaaaaa
daaaaaaameaeaaaajeakaaaafmalaaaaebgpgodjimaeaaaaimaeaaaaaaacpopp
baaeaaaahmaaaaaaahaaceaaaaaahiaaaaaahiaaaaaaceaaabaahiaaaaaaadaa
aeaaabaaaaaaaaaaaaaaaiaaacaaafaaaaaaaaaaabaaaaaaabaaahaaaaaaaaaa
acaaaaaaabaaaiaaaaaaaaaaadaaaaaaaeaaajaaaaaaaaaaadaaamaaaeaaanaa
aaaaaaaaadaabeaaabaabbaaaaaaaaaaaaaaaaaaaaacpoppfbaaaaafbcaaapka
jkjjljdpbekoeheamnmmameaggggggdpfbaaaaafbdaaapkanlapmjeanlapejma
mnmmemdoaaaaaaaafbaaaaafbeaaapkaaaaaaaaaaaaaaamaidpjccdoaaaaaadp
fbaaaaafbfaaapkaabannalfgballglhklkkckdlijiiiidjfbaaaaafbgaaapka
klkkkklmaaaaaaloaaaaiadpaaaaaadpbpaaaaacafaaaaiaaaaaapjabpaaaaac
afaaaciaacaaapjabpaaaaacafaaadiaadaaapjaaeaaaaaeaaaaadoaadaaoeja
agaaoekaagaaookaafaaaaadaaaaahiaacaaoejabbaappkaafaaaaadabaaahia
aaaaffiaaoaaoekaaeaaaaaeaaaaaliaanaakekaaaaaaaiaabaakeiaaeaaaaae
abaaahoaapaaoekaaaaakkiaaaaapeiaabaaaaacaaaaabiaafaaaakaafaaaaad
aaaaabiaaaaaaaiaahaaaakaamaaaaadaaaaaciaaaaaaaiabeaaaakaafaaaaad
aaaaaciaaaaaffiaaaaaaaiaaeaaaaaeaaaaabiaaaaaffiabeaaffkaaaaaaaia
acaaaaadaaaaaciaaaaaffjaaaaaaajaacaaaaadaaaaaciaaaaaffiaaaaakkja
aeaaaaaeaaaaahiaaaaaaaiabcaaoekaaaaaffiaaeaaaaaeaaaaahiaaaaaoeia
beaakkkabeaappkabdaaaaacaaaaahiaaaaaoeiaaeaaaaaeaaaaahiaaaaaoeia
bdaaaakabdaaffkacfaaaaaeabaaaciaaaaaffiabfaaoekabgaaoekaafaaaaad
aaaaaciaabaaffiaadaaffjaafaaaaadaaaaaciaaaaaffiaafaaffkaafaaaaad
aaaaaiiaadaaaajaadaaffjaafaaaaadaaaaaiiaaaaappiabcaappkaaeaaaaae
aaaaaciaaaaaffiabeaappkaaaaappibafaaaaadabaaahiaaaaaffiaaoaaoeka
cfaaaaaeacaaaciaaaaaaaiabfaaoekabgaaoekacfaaaaaeadaaaciaaaaakkia
bfaaoekabgaaoekaafaaaaadaaaaabiaadaaffiaadaaffjaafaaaaadaaaaabia
aaaaaaiaafaaffkaaeaaaaaeaaaaabiaaaaaaaiabdaakkkbaaaakkjaafaaaaad
aaaaaeiaacaaffiaadaaffjaafaaaaadaaaaaeiaaaaakkiaafaaffkaaeaaaaae
aaaaaeiaaaaakkiabeaappkaaaaaaajaaeaaaaaeabaaahiaanaaoekaaaaakkia
abaaoeiaaeaaaaaeabaaahiaapaaoekaaaaaaaiaabaaoeiaaeaaaaaeabaaahia
baaaoekaaaaappjaabaaoeiaacaaaaadacaaahoaabaaoeibaiaaoekaafaaaaad
abaaapiaaaaaffiaaoaaoekaafaaaaadacaaapiaaaaaffiaakaaoekaaeaaaaae
acaaapiaajaaoekaaaaakkiaacaaoeiaaeaaaaaeabaaapiaanaaoekaaaaakkia
abaaoeiaaeaaaaaeabaaapiaapaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaapia
alaaoekaaaaaaaiaacaaoeiaaeaaaaaeaaaaapiaamaaoekaaaaappjaaaaaoeia
aeaaaaaeabaaapiabaaaoekaaaaappjaabaaoeiaafaaaaadacaaahiaabaaffia
acaaoekaaeaaaaaeacaaahiaabaaoekaabaaaaiaacaaoeiaaeaaaaaeabaaahia
adaaoekaabaakkiaacaaoeiaaeaaaaaeadaaahoaaeaaoekaabaappiaabaaoeia
aeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeia
ppppaaaafdeieefcmiafaaaaeaaaabaahcabaaaafjaaaaaeegiocaaaaaaaaaaa
akaaaaaafjaaaaaeegiocaaaabaaaaaaabaaaaaafjaaaaaeegiocaaaacaaaaaa
abaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaa
fpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaa
aaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaa
gfaaaaadhccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagiaaaaacadaaaaaa
diaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaaaiaaaaaaakiacaaaabaaaaaa
aaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaa
dhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaa
akaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaaakbabaaa
aaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaaaaaaaaaa
dcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdpbekoehea
mnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaaaanaaaaa
egacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaafgbfbaaa
adaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaaaaaaaaaa
aiaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaaadp
diaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaadcaaaaak
ccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdpbkaabaaa
aaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaadaaaaaa
abaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaadp
akbabaaaaaaaaaaadcaaaaakecaabaaaaaaaaaaackaabaiaebaaaaaaaaaaaaaa
abeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
adaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaa
abaaaaaaegiocaaaadaaaaaaacaaaaaakgakbaaaaaaaaaaaegaobaaaabaaaaaa
dcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaajaaaaaaogikcaaaaaaaaaaaajaaaaaadiaaaaaihcaabaaaabaaaaaa
egbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaacaaaaaa
fgafbaaaabaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaabaaaaaa
egiicaaaadaaaaaaamaaaaaaagaabaaaabaaaaaaegaibaaaacaaaaaadcaaaaak
hccabaaaacaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaabaaaaaaegadbaaa
abaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaaadaaaaaa
anaaaaaadiaaaaaipcaabaaaacaaaaaafgafbaaaaaaaaaaaegiocaaaadaaaaaa
anaaaaaadcaaaaakpcaabaaaacaaaaaaegiocaaaadaaaaaaamaaaaaaagaabaaa
aaaaaaaaegaobaaaacaaaaaadcaaaaaklcaabaaaaaaaaaaaegiicaaaadaaaaaa
amaaaaaaagaabaaaaaaaaaaaegaibaaaabaaaaaadcaaaaaklcaabaaaaaaaaaaa
egiicaaaadaaaaaaaoaaaaaakgakbaaaaaaaaaaaegambaaaaaaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaadaaaaaaaoaaaaaakgakbaaaaaaaaaaaegaobaaa
acaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaapaaaaaapgbpbaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaa
apaaaaaapgbpbaaaaaaaaaaaegadbaaaaaaaaaaaaaaaaaajhccabaaaadaaaaaa
egacbaiaebaaaaaaaaaaaaaaegiccaaaacaaaaaaaaaaaaaadiaaaaaihcaabaaa
aaaaaaaafgafbaaaabaaaaaaegiccaaaaaaaaaaaaeaaaaaadcaaaaakhcaabaaa
aaaaaaaaegiccaaaaaaaaaaaadaaaaaaagaabaaaabaaaaaaegacbaaaaaaaaaaa
dcaaaaakhcaabaaaaaaaaaaaegiccaaaaaaaaaaaafaaaaaakgakbaaaabaaaaaa
egacbaaaaaaaaaaadcaaaaakhccabaaaaeaaaaaaegiccaaaaaaaaaaaagaaaaaa
pgapbaaaabaaaaaaegacbaaaaaaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaa
apadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeo
ehefeofeaaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheo
jiaaaaaaafaaaaaaaiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaa
apaaaaaaimaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaimaaaaaa
abaaaaaaaaaaaaaaadaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaa
adaaaaaaadaaaaaaahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaa
ahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl"
}

SubProgram "gles3 " {
Keywords { "POINT" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 397
struct Input {
    highp vec2 uv_MainTex;
};
#line 419
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    mediump vec3 lightDir;
    highp vec3 _LightCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform sampler2D _LightTexture0;
uniform highp mat4 _LightMatrix0;
#line 393
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 402
#line 428
uniform highp vec4 _MainTex_ST;
uniform lowp float _Cutoff;
#line 77
highp vec3 WorldSpaceLightDir( in highp vec4 v ) {
    highp vec3 worldPos = (_Object2World * v).xyz;
    return (_WorldSpaceLightPos0.xyz - worldPos);
}
#line 402
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 406
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 410
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 429
v2f_surf vert_surf( in appdata_full v ) {
    v2f_surf o;
    #line 432
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    o.normal = (mat3( _Object2World) * (v.normal * unity_Scale.w));
    #line 436
    highp vec3 lightDir = WorldSpaceLightDir( v.vertex);
    o.lightDir = lightDir;
    o._LightCoord = (_LightMatrix0 * (_Object2World * v.vertex)).xyz;
    #line 440
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out lowp vec3 xlv_TEXCOORD1;
out mediump vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec3(xl_retval.normal);
    xlv_TEXCOORD2 = vec3(xl_retval.lightDir);
    xlv_TEXCOORD3 = vec3(xl_retval._LightCoord);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 397
struct Input {
    highp vec2 uv_MainTex;
};
#line 419
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    mediump vec3 lightDir;
    highp vec3 _LightCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform sampler2D _LightTexture0;
uniform highp mat4 _LightMatrix0;
#line 393
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 402
#line 428
uniform highp vec4 _MainTex_ST;
uniform lowp float _Cutoff;
#line 338
lowp vec4 LightingLambert( in SurfaceOutput s, in lowp vec3 lightDir, in lowp float atten ) {
    lowp float diff = max( 0.0, dot( s.Normal, lightDir));
    lowp vec4 c;
    #line 342
    c.xyz = ((s.Albedo * _LightColor0.xyz) * ((diff * atten) * 2.0));
    c.w = s.Alpha;
    return c;
}
#line 413
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 415
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 443
lowp vec4 frag_surf( in v2f_surf IN ) {
    #line 445
    Input surfIN;
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    #line 449
    o.Emission = vec3( 0.0);
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    #line 453
    o.Normal = IN.normal;
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    lowp vec3 lightDir = normalize(IN.lightDir);
    #line 457
    lowp vec4 c = LightingLambert( o, lightDir, (texture( _LightTexture0, vec2( dot( IN._LightCoord, IN._LightCoord))).w * 1.0));
    c.w = o.Alpha;
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in lowp vec3 xlv_TEXCOORD1;
in mediump vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.normal = vec3(xlv_TEXCOORD1);
    xlt_IN.lightDir = vec3(xlv_TEXCOORD2);
    xlt_IN._LightCoord = vec3(xlv_TEXCOORD3);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 9 [_Time]
Vector 10 [_WorldSpaceLightPos0]
Matrix 5 [_Object2World]
Vector 11 [unity_Scale]
Float 12 [_WaveSpeed]
Float 13 [_Amplitude]
Vector 14 [_MainTex_ST]
"!!ARBvp1.0
# 74 ALU
PARAM c[20] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.mvp,
		program.local[5..14],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[12];
MUL R0.x, R0, c[9];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[15];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[16].xyxw, c[16].zwzw;
MAD R1.xyz, R1, R0, c[17].xyxw;
MAD R1.xyz, R1, R0, c[17].zwzw;
MAD R1.xyz, R1, R0, c[18].xyxw;
MAD R0.xyz, R1, R0, c[15].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[18].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[15].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[19].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[13];
MAD R0.w, -R0.x, c[19].x, vertex.position.z;
MAD R0.x, R1.w, c[19].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[15];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[16].xyxw, c[16].zwzw;
MAD R3.xyz, R2, R0, c[17].xyxw;
MAD R3.xyz, R3, R0, c[17].zwzw;
MAD R3.xyz, R3, R0, c[18].xyxw;
ADD R1.xyz, -R1.w, c[15];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[16].xyxw, c[16].zwzw;
MAD R2.xyz, R2, R1, c[17].xyxw;
MAD R2.xyz, R2, R1, c[17].zwzw;
MAD R3.xyz, R3, R0, c[15].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[18].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[15].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[18].xyxw;
MAD R1.xyz, R0, R1, c[15].wzww;
SGE R0.yz, R1.w, c[18].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[15].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R1.xyz, vertex.normal, c[11].w;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R0.x, R0, c[13];
MUL R0.y, -R0, c[19].z;
MAD R0.y, R0.x, c[15], R0;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R2.w, c[13];
MAD R0.x, R0, c[15].y, vertex.position;
DP4 result.position.w, R0.xywz, c[4];
DP4 result.position.z, R0.xywz, c[3];
DP4 result.position.y, R0.xywz, c[2];
DP4 result.position.x, R0.xywz, c[1];
DP3 result.texcoord[1].z, R1, c[7];
DP3 result.texcoord[1].y, R1, c[6];
DP3 result.texcoord[1].x, R1, c[5];
MOV result.texcoord[2].xyz, c[10];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[14], c[14].zwzw;
END
# 74 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Vector 9 [_WorldSpaceLightPos0]
Matrix 4 [_Object2World]
Vector 10 [unity_Scale]
Float 11 [_WaveSpeed]
Float 12 [_Amplitude]
Vector 13 [_MainTex_ST]
"vs_2_0
; 74 ALU
def c14, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c15, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c16, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c17, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c18, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_normal0 v2
dcl_texcoord0 v3
add r0.w, v0.x, v0.y
mov r0.x, c8
mul r0.x, c11, r0
slt r0.y, r0.x, c16.x
max r0.y, -r0, r0
slt r0.y, c16.x, r0
add r0.z, -r0.y, c14
mul r0.z, r0.x, r0
mad r1.y, r0, -r0.x, r0.z
add r1.x, r0.w, v0.z
mad r0.x, r1.y, c16.y, r1
mad r0.x, r0, c16.z, c16.w
frc r0.x, r0
mad r1.z, r0.x, c17.x, c17.y
sincos r0.xy, r1.z, c15.xyzw, c14.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1, c18.x, r1.x
mul r0.x, r0, c12
mad r2.z, -r0.x, c18.y, v0
mad r0.x, r1.y, c17.z, r1
mad r0.x, r0, c16.z, c16.w
mad r0.y, r0, c16.z, c16.w
frc r0.y, r0
mov r2.w, v0
mad r1.y, r0, c17.x, c17
frc r1.x, r0
sincos r0.xy, r1.y, c15.xyzw, c14.xyzw
mad r0.x, r1, c17, c17.y
mul r0.z, v3.y, r0.y
sincos r1.xy, r0.x, c15.xyzw, c14.xyzw
mul r0.y, v3, v3.x
mul r0.x, v3.y, r1.y
mul r0.y, -r0, c17.w
mul r0.x, r0, c12
mad r2.y, r0.x, c14.w, r0
mul r0.x, r0.z, c12
mad r2.x, r0, c14.w, v0
mul r0.xyz, v2, c10.w
dp4 oPos.w, r2, c3
dp4 oPos.z, r2, c2
dp4 oPos.y, r2, c1
dp4 oPos.x, r2, c0
dp3 oT1.z, r0, c6
dp3 oT1.y, r0, c5
dp3 oT1.x, r0, c4
mov oT2.xyz, c9
mad oT0.xy, v3, c13, c13.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Float 11 [_Amplitude]
Vector 12 [_MainTex_ST]
Matrix 6 [_Object2World] 3
Vector 0 [_Time]
Float 10 [_WaveSpeed]
Vector 1 [_WorldSpaceLightPos0]
Matrix 2 [glstate_matrix_mvp] 4
Vector 9 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 34.67-36.00 (26-27 instructions), vertex: 32, texture: 0,
//   sequencer: 16,  5 GPRs, 31 threads,
// Performance (if enough threads): ~34-36 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacaiaaaaaboeaaaaaaaaaaaaaaceaaaaabjeaaaaablmaaaaaaaa
aaaaaaaaaaaaabgmaaaaaabmaaaaabgapppoadaaaaaaaaaiaaaaaabmaaaaaaaa
aaaaabfjaaaaaalmaaacaaalaaabaaaaaaaaaamiaaaaaaaaaaaaaaniaaacaaam
aaabaaaaaaaaaaoeaaaaaaaaaaaaaapeaaacaaagaaadaaaaaaaaabaeaaaaaaaa
aaaaabbeaaacaaaaaaabaaaaaaaaaaoeaaaaaaaaaaaaabbkaaacaaakaaabaaaa
aaaaaamiaaaaaaaaaaaaabcfaaacaaabaaabaaaaaaaaaaoeaaaaaaaaaaaaabdk
aaacaaacaaaeaaaaaaaaabaeaaaaaaaaaaaaabenaaacaaajaaabaaaaaaaaaaoe
aaaaaaaafpebgnhagmgjhehfgegfaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaa
fpengbgjgofegfhifpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpepgcgk
gfgdhedcfhgphcgmgeaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpfegjgn
gfaafpfhgbhggffdhagfgfgeaafpfhgphcgmgefdhagbgdgfemgjghgihefagphd
daaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaahfgogjhehjfpfdgdgbgmgf
aahghdfpddfpdaaadccodacodcdadddfddcodaaaaaaaaaaaaaaaaaabaaaaaaaa
aaaaaaaaaaaaaabeaapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaea
aaaaabkeaacbaaaeaaaaaaaaaaaaaaaaaaaacagdaaaaaaabaaaaaaadaaaaaaad
aaaaacjaaabaaaaeaaaadaafaadafaagaaaadafaaaabhbfbaaachcfcaaaabacb
aaaabacaaaaababpaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadoccpjidlpiaaaaa
maejapnldpiaaaaadpaaaaaadoemmmmneamjapnldpggggggdpljjjjkeaehkobe
eaammmmndpaaaaaahajfgaaebaakbaaafgaaaaaaaaaaaaaagaalmcaabcaaaaaa
aaaagabbfabhbcaabcaaaaaaaaaaaaaagabmmeaaccaaaaaaafpibaaaaaaaagii
aaaaaaaaafpicaaaaaaaaoiiaaaaaaaaafpiaaaaaaaaaohiaaaaaaaamiacaaaa
aagmlbaacbaapnaamiaiaaaaaagmgmaacbaaakaaheacaaababloblbllaabpnaa
kiiaaaaabiaaaaebmcaaaaakmiaiaaadaamggmaaobaaaaaamiahaaadaablmalb
klaappabmiahaaadaamagmbliladpnppmiahaaadaamaaaaaoiadaaaamiapaaae
aadeagaakbadpoaamiahaaadaalemgaakaaepnaamabaadaaaaaaaagmocaaaaad
macaadaaaaaaaalbocaaaaadmaekadaaaamglmmgkbaapoadmiahaaadaabbmaaa
obaaadaamiahaaaeaamagmaakbadalaamiacaaaaaagmgmaaoaaeabaabeapaaad
aablaalbkbabafaeaeibaaabafmgmgbloaaeabaemiapaaabaagmiiiiklabaead
miapaaabaabldejeklaaadabmiapiadoaalbaadeklaaacabmialaaabaagfblaa
kbacajaamiahaaacaalbleaakbabaiaamiahaaabaagmlemaklabahacmiahiaac
aamamaaaccababaamiahiaabaablmaleklabagabmiadiaaaaamelabkilaaamam
aaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_Time]
Vector 466 [_WorldSpaceLightPos0]
Matrix 260 [_Object2World]
Vector 465 [unity_Scale]
Float 464 [_WaveSpeed]
Float 463 [_Amplitude]
Vector 462 [_MainTex_ST]
"sce_vp_rsx // 31 instructions using 4 registers
[Configuration]
8
0000001f01050400
[Defaults]
2
461 4
400ccccd3e4ccccd4047ae143f000000
460 2
3f6666663fb9999a
[Microcode]
496
401f9c6c005d200c0186c0836041dfa400009c6c009d120c013fc0c36041dffc
401f9c6c011ce808010400d740619f9c00001c6c0040007f8106c08360403ffc
00011c6c0080082a8100008360411ffc00001c6c00c000000106c08aa0409ffc
00001c6c005d00000186c08360411ffc401f9c6c0150600c028600c360405fa0
00001c6c009d3000008000c360411ffc201fdc6c004000000086c08360411ffc
00009c6c00c000550106c08aa0203ffc00001c6c004000000086c08360405ffc
00002400004000800086c08360405ffc00001c6c011cd055008800dfe0a19ffc
00001c6c011cc055009540dfe0a05ffc401f9c6c7950500c028600caa0288020
00009c6c789cc080048000c00030207c00019c6c7880082a811540554031017c
00001c6c008008000095408360409ffc00001c6c0080082a8100024360411ffc
00001c6c009cf000008000c360411ffc00001c6c009cf02a808000c360405ffc
00001c6c009cf000068000c360409ffc00001c6c011cd02a80bfc0dfe0a09ffc
00001c6c011cd0d5009540d540405ffc00001c6c011cd00000bfc0c000411ffc
401f9c6c0150400c028600c360411fa0401f9c6c01d0300d8086c0c360403f80
401f9c6c01d0200d8086c0c360405f80401f9c6c01d0100d8086c0c360409f80
401f9c6c01d0000d8086c0c360411f81
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 112 // 96 used size, 8 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityLighting" 720 // 16 used size, 17 vars
Vector 0 [_WorldSpaceLightPos0] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 25 instructions, 2 temp regs, 0 temp arrays:
// ALU 22 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedfbpkiknofhmjedmjhhinonjiagdikploabaaaaaagmafaaaaadaaaaaa
cmaaaaaapeaaaaaahmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaa
aiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaheaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefc
oiadaaaaeaaaabaapkaaaaaafjaaaaaeegiocaaaaaaaaaaaagaaaaaafjaaaaae
egiocaaaabaaaaaaabaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaae
egiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaa
acaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaaddccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaa
adaaaaaagiaaaaacacaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaa
aeaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaa
aceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaag
hcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaa
aaaaaaaafgifcaaaaaaaaaaaaeaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaa
bkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaa
abeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaa
aaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaa
ckaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaafgafbaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaafaaaaaaogikcaaaaaaaaaaaafaaaaaa
diaaaaaihcaabaaaaaaaaaaaegbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaa
diaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaa
dcaaaaaklcaabaaaaaaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaa
egaibaaaabaaaaaadcaaaaakhccabaaaacaaaaaaegiccaaaadaaaaaaaoaaaaaa
kgakbaaaaaaaaaaaegadbaaaaaaaaaaadgaaaaaghccabaaaadaaaaaaegiccaaa
acaaaaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" }
"!!GLES


#ifdef VERTEX

varying mediump vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = _glesVertex;
  highp float t_5;
  highp float tmpvar_6;
  tmpvar_6 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_7;
  tmpvar_7 = (_Time * _WaveSpeed).x;
  t_5 = tmpvar_7;
  if ((tmpvar_7 < 0.0)) {
    t_5 = (tmpvar_7 * -1.0);
  };
  tmpvar_4.x = (_glesVertex.x + (((sin(((t_5 * 1.45) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_4.y = ((((sin(((t_5 * 3.12) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_4.z = (_glesVertex.z - (((sin(((t_5 * 2.2) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  mat3 tmpvar_8;
  tmpvar_8[0] = _Object2World[0].xyz;
  tmpvar_8[1] = _Object2World[1].xyz;
  tmpvar_8[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (tmpvar_1 * unity_Scale.w));
  tmpvar_2 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  tmpvar_3 = tmpvar_10;
  gl_Position = (glstate_matrix_mvp * tmpvar_4);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
}



#endif
#ifdef FRAGMENT

varying mediump vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec4 c_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  c_3 = tmpvar_5;
  lowp float tmpvar_6;
  tmpvar_6 = c_3.w;
  lowp float x_7;
  x_7 = (c_3.w - _Cutoff);
  if ((x_7 < 0.0)) {
    discard;
  };
  lightDir_2 = xlv_TEXCOORD2;
  lowp vec4 c_8;
  c_8.xyz = ((c_3.xyz * _LightColor0.xyz) * (max (0.0, dot (xlv_TEXCOORD1, lightDir_2)) * 2.0));
  c_8.w = tmpvar_6;
  c_1.xyz = c_8.xyz;
  c_1.w = tmpvar_6;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" }
"!!GLES


#ifdef VERTEX

varying mediump vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = _glesVertex;
  highp float t_5;
  highp float tmpvar_6;
  tmpvar_6 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_7;
  tmpvar_7 = (_Time * _WaveSpeed).x;
  t_5 = tmpvar_7;
  if ((tmpvar_7 < 0.0)) {
    t_5 = (tmpvar_7 * -1.0);
  };
  tmpvar_4.x = (_glesVertex.x + (((sin(((t_5 * 1.45) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_4.y = ((((sin(((t_5 * 3.12) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_4.z = (_glesVertex.z - (((sin(((t_5 * 2.2) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  mat3 tmpvar_8;
  tmpvar_8[0] = _Object2World[0].xyz;
  tmpvar_8[1] = _Object2World[1].xyz;
  tmpvar_8[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (tmpvar_1 * unity_Scale.w));
  tmpvar_2 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  tmpvar_3 = tmpvar_10;
  gl_Position = (glstate_matrix_mvp * tmpvar_4);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
}



#endif
#ifdef FRAGMENT

varying mediump vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec4 c_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  c_3 = tmpvar_5;
  lowp float tmpvar_6;
  tmpvar_6 = c_3.w;
  lowp float x_7;
  x_7 = (c_3.w - _Cutoff);
  if ((x_7 < 0.0)) {
    discard;
  };
  lightDir_2 = xlv_TEXCOORD2;
  lowp vec4 c_8;
  c_8.xyz = ((c_3.xyz * _LightColor0.xyz) * (max (0.0, dot (xlv_TEXCOORD1, lightDir_2)) * 2.0));
  c_8.w = tmpvar_6;
  c_1.xyz = c_8.xyz;
  c_1.w = tmpvar_6;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "flash " {
Keywords { "DIRECTIONAL" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Vector 9 [_WorldSpaceLightPos0]
Matrix 4 [_Object2World]
Vector 10 [unity_Scale]
Float 11 [_WaveSpeed]
Float 12 [_Amplitude]
Vector 13 [_MainTex_ST]
"agal_vs
c14 -0.020833 -0.125 1.0 0.5
c15 -0.000002 -0.000022 0.002604 0.00026
c16 0.0 2.2 0.159155 0.5
c17 6.283185 -3.141593 3.12 0.9
c18 1.45 0.2 0.0 0.0
[bc]
abaaaaaaaaaaaiacaaaaaaaaaaaaaaaaaaaaaaffaaaaaaaa add r0.w, a0.x, a0.y
aaaaaaaaaaaaabacaiaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r0.x, c8
adaaaaaaaaaaabacalaaaaoeabaaaaaaaaaaaaaaacaaaaaa mul r0.x, c11, r0.x
ckaaaaaaaaaaacacaaaaaaaaacaaaaaabaaaaaaaabaaaaaa slt r0.y, r0.x, c16.x
bfaaaaaaabaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r1.y, r0.y
ahaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa max r0.y, r1.y, r0.y
ckaaaaaaaaaaacacbaaaaaaaabaaaaaaaaaaaaffacaaaaaa slt r0.y, c16.x, r0.y
bfaaaaaaabaaaiacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r1.w, r0.y
abaaaaaaaaaaaeacabaaaappacaaaaaaaoaaaaoeabaaaaaa add r0.z, r1.w, c14
adaaaaaaaaaaaeacaaaaaaaaacaaaaaaaaaaaakkacaaaaaa mul r0.z, r0.x, r0.z
bfaaaaaaacaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r2.x, r0.x
adaaaaaaabaaacacaaaaaaffacaaaaaaacaaaaaaacaaaaaa mul r1.y, r0.y, r2.x
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaakkacaaaaaa add r1.y, r1.y, r0.z
abaaaaaaabaaabacaaaaaappacaaaaaaaaaaaakkaaaaaaaa add r1.x, r0.w, a0.z
adaaaaaaaaaaabacabaaaaffacaaaaaabaaaaaffabaaaaaa mul r0.x, r1.y, c16.y
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaabaaaaakkabaaaaaa mul r0.x, r0.x, c16.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaabaaaaappabaaaaaa add r0.x, r0.x, c16.w
aiaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r0.x, r0.x
adaaaaaaabaaaeacaaaaaaaaacaaaaaabbaaaaaaabaaaaaa mul r1.z, r0.x, c17.x
abaaaaaaabaaaeacabaaaakkacaaaaaabbaaaaffabaaaaaa add r1.z, r1.z, c17.y
apaaaaaaaaaaabacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.z
baaaaaaaaaaaacacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.z
adaaaaaaaaaaabacaaaaaaffacaaaaaaadaaaaffaaaaaaaa mul r0.x, r0.y, a3.y
adaaaaaaaaaaacacabaaaaffacaaaaaabcaaaaaaabaaaaaa mul r0.y, r1.y, c18.x
abaaaaaaaaaaacacaaaaaaffacaaaaaaabaaaaaaacaaaaaa add r0.y, r0.y, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaamaaaaoeabaaaaaa mul r0.x, r0.x, c12
bfaaaaaaadaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r3.x, r0.x
adaaaaaaacaaaeacadaaaaaaacaaaaaabcaaaaffabaaaaaa mul r2.z, r3.x, c18.y
abaaaaaaacaaaeacacaaaakkacaaaaaaaaaaaaoeaaaaaaaa add r2.z, r2.z, a0
adaaaaaaaaaaabacabaaaaffacaaaaaabbaaaakkabaaaaaa mul r0.x, r1.y, c17.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaabaaaaakkabaaaaaa mul r0.x, r0.x, c16.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaabaaaaappabaaaaaa add r0.x, r0.x, c16.w
adaaaaaaaaaaacacaaaaaaffacaaaaaabaaaaakkabaaaaaa mul r0.y, r0.y, c16.z
abaaaaaaaaaaacacaaaaaaffacaaaaaabaaaaappabaaaaaa add r0.y, r0.y, c16.w
aiaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa frc r0.y, r0.y
aaaaaaaaacaaaiacaaaaaaoeaaaaaaaaaaaaaaaaaaaaaaaa mov r2.w, a0
adaaaaaaabaaacacaaaaaaffacaaaaaabbaaaaaaabaaaaaa mul r1.y, r0.y, c17.x
abaaaaaaabaaacacabaaaaffacaaaaaabbaaaaoeabaaaaaa add r1.y, r1.y, c17
aiaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r1.x, r0.x
apaaaaaaaaaaabacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.y
baaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.y
adaaaaaaaaaaabacabaaaaaaacaaaaaabbaaaaoeabaaaaaa mul r0.x, r1.x, c17
abaaaaaaaaaaabacaaaaaaaaacaaaaaabbaaaaffabaaaaaa add r0.x, r0.x, c17.y
adaaaaaaaaaaaeacadaaaaffaaaaaaaaaaaaaaffacaaaaaa mul r0.z, a3.y, r0.y
apaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sin r1.x, r0.x
baaaaaaaabaaacacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa cos r1.y, r0.x
adaaaaaaaaaaacacadaaaaoeaaaaaaaaadaaaaaaaaaaaaaa mul r0.y, a3, a3.x
adaaaaaaaaaaabacadaaaaffaaaaaaaaabaaaaffacaaaaaa mul r0.x, a3.y, r1.y
bfaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r0.y, r0.y
adaaaaaaaaaaacacaaaaaaffacaaaaaabbaaaappabaaaaaa mul r0.y, r0.y, c17.w
adaaaaaaaaaaabacaaaaaaaaacaaaaaaamaaaaoeabaaaaaa mul r0.x, r0.x, c12
adaaaaaaacaaacacaaaaaaaaacaaaaaaaoaaaappabaaaaaa mul r2.y, r0.x, c14.w
abaaaaaaacaaacacacaaaaffacaaaaaaaaaaaaffacaaaaaa add r2.y, r2.y, r0.y
adaaaaaaaaaaabacaaaaaakkacaaaaaaamaaaaoeabaaaaaa mul r0.x, r0.z, c12
adaaaaaaacaaabacaaaaaaaaacaaaaaaaoaaaappabaaaaaa mul r2.x, r0.x, c14.w
abaaaaaaacaaabacacaaaaaaacaaaaaaaaaaaaoeaaaaaaaa add r2.x, r2.x, a0
adaaaaaaaaaaahacabaaaaoeaaaaaaaaakaaaappabaaaaaa mul r0.xyz, a1, c10.w
bdaaaaaaaaaaaiadacaaaaoeacaaaaaaadaaaaoeabaaaaaa dp4 o0.w, r2, c3
bdaaaaaaaaaaaeadacaaaaoeacaaaaaaacaaaaoeabaaaaaa dp4 o0.z, r2, c2
bdaaaaaaaaaaacadacaaaaoeacaaaaaaabaaaaoeabaaaaaa dp4 o0.y, r2, c1
bdaaaaaaaaaaabadacaaaaoeacaaaaaaaaaaaaoeabaaaaaa dp4 o0.x, r2, c0
bcaaaaaaabaaaeaeaaaaaakeacaaaaaaagaaaaoeabaaaaaa dp3 v1.z, r0.xyzz, c6
bcaaaaaaabaaacaeaaaaaakeacaaaaaaafaaaaoeabaaaaaa dp3 v1.y, r0.xyzz, c5
bcaaaaaaabaaabaeaaaaaakeacaaaaaaaeaaaaoeabaaaaaa dp3 v1.x, r0.xyzz, c4
aaaaaaaaacaaahaeajaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v2.xyz, c9
adaaaaaaadaaadacadaaaaoeaaaaaaaaanaaaaoeabaaaaaa mul r3.xy, a3, c13
abaaaaaaaaaaadaeadaaaafeacaaaaaaanaaaaooabaaaaaa add v0.xy, r3.xyyy, c13.zwzw
aaaaaaaaaaaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v0.zw, c0
aaaaaaaaabaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v1.w, c0
aaaaaaaaacaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v2.w, c0
"
}

SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 112 // 96 used size, 8 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityLighting" 720 // 16 used size, 17 vars
Vector 0 [_WorldSpaceLightPos0] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 25 instructions, 2 temp regs, 0 temp arrays:
// ALU 22 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecedfcamcfonemkdkejaoadpfncbfjopimpiabaaaaaabaajaaaaaeaaaaaa
daaaaaaanaadaaaamaahaaaaiiaiaaaaebgpgodjjiadaaaajiadaaaaaaacpopp
ciadaaaahaaaaaaaagaaceaaaaaagmaaaaaagmaaaaaaceaaabaagmaaaaaaaeaa
acaaabaaaaaaaaaaabaaaaaaabaaadaaaaaaaaaaacaaaaaaabaaaeaaaaaaaaaa
adaaaaaaaeaaafaaaaaaaaaaadaaamaaadaaajaaaaaaaaaaadaabeaaabaaamaa
aaaaaaaaaaaaaaaaaaacpoppfbaaaaafanaaapkajkjjljdpbekoeheamnmmamea
ggggggdpfbaaaaafaoaaapkanlapmjeanlapejmamnmmemdoaaaaaaaafbaaaaaf
apaaapkaaaaaaaaaaaaaaamaidpjccdoaaaaaadpfbaaaaafbaaaapkaabannalf
gballglhklkkckdlijiiiidjfbaaaaafbbaaapkaklkkkklmaaaaaaloaaaaiadp
aaaaaadpbpaaaaacafaaaaiaaaaaapjabpaaaaacafaaaciaacaaapjabpaaaaac
afaaadiaadaaapjaaeaaaaaeaaaaadoaadaaoejaacaaoekaacaaookaafaaaaad
aaaaahiaacaaoejaamaappkaafaaaaadabaaahiaaaaaffiaakaaoekaaeaaaaae
aaaaaliaajaakekaaaaaaaiaabaakeiaaeaaaaaeabaaahoaalaaoekaaaaakkia
aaaapeiaabaaaaacaaaaabiaabaaaakaafaaaaadaaaaabiaaaaaaaiaadaaaaka
amaaaaadaaaaaciaaaaaaaiaapaaaakaafaaaaadaaaaaciaaaaaffiaaaaaaaia
aeaaaaaeaaaaabiaaaaaffiaapaaffkaaaaaaaiaacaaaaadaaaaaciaaaaaffja
aaaaaajaacaaaaadaaaaaciaaaaaffiaaaaakkjaaeaaaaaeaaaaahiaaaaaaaia
anaaoekaaaaaffiaaeaaaaaeaaaaahiaaaaaoeiaapaakkkaapaappkabdaaaaac
aaaaahiaaaaaoeiaaeaaaaaeaaaaahiaaaaaoeiaaoaaaakaaoaaffkacfaaaaae
abaaaciaaaaaffiabaaaoekabbaaoekaafaaaaadaaaaaciaabaaffiaadaaffja
afaaaaadaaaaaciaaaaaffiaabaaffkaafaaaaadaaaaaiiaadaaaajaadaaffja
afaaaaadaaaaaiiaaaaappiaanaappkaaeaaaaaeaaaaaciaaaaaffiaapaappka
aaaappibafaaaaadabaaapiaaaaaffiaagaaoekacfaaaaaeacaaaciaaaaaaaia
baaaoekabbaaoekacfaaaaaeadaaaciaaaaakkiabaaaoekabbaaoekaafaaaaad
aaaaabiaadaaffiaadaaffjaafaaaaadaaaaabiaaaaaaaiaabaaffkaaeaaaaae
aaaaabiaaaaaaaiaaoaakkkbaaaakkjaafaaaaadaaaaaciaacaaffiaadaaffja
afaaaaadaaaaaciaaaaaffiaabaaffkaaeaaaaaeaaaaaciaaaaaffiaapaappka
aaaaaajaaeaaaaaeabaaapiaafaaoekaaaaaffiaabaaoeiaaeaaaaaeaaaaapia
ahaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaapiaaiaaoekaaaaappjaaaaaoeia
aeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeia
abaaaaacacaaahoaaeaaoekappppaaaafdeieefcoiadaaaaeaaaabaapkaaaaaa
fjaaaaaeegiocaaaaaaaaaaaagaaaaaafjaaaaaeegiocaaaabaaaaaaabaaaaaa
fjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaa
fpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaa
adaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaa
gfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagiaaaaacacaaaaaa
diaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaaakiacaaaabaaaaaa
aaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaa
dhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaa
akaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaaakbabaaa
aaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaaaaaaaaaa
dcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdpbekoehea
mnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaaaanaaaaa
egacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaafgbfbaaa
adaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaaaaaaaaaa
aeaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaaadp
diaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaadcaaaaak
ccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdpbkaabaaa
aaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaadaaaaaa
abaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaadp
akbabaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaackaabaiaebaaaaaaaaaaaaaa
abeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
adaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaadaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaaabaaaaaa
dcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaafaaaaaaogikcaaaaaaaaaaaafaaaaaadiaaaaaihcaabaaaaaaaaaaa
egbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaaaaaaaaa
egiicaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaaegaibaaaabaaaaaadcaaaaak
hccabaaaacaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaaaaaaaaaegadbaaa
aaaaaaaadgaaaaaghccabaaaadaaaaaaegiccaaaacaaaaaaaaaaaaaadoaaaaab
ejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
aaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaa
kjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaalaaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaa
faepfdejfeejepeoaafeebeoehefeofeaaeoepfcenebemaafeeffiedepepfcee
aaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaaaaaaaaaa
abaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
abaaaaaaadamaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaahaiaaaa
heaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahaiaaaafdfgfpfaepfdejfe
ejepeoaafeeffiedepepfceeaaklklkl"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    mediump vec3 lightDir;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 425
uniform highp vec4 _MainTex_ST;
#line 438
uniform lowp float _Cutoff;
#line 77
highp vec3 WorldSpaceLightDir( in highp vec4 v ) {
    highp vec3 worldPos = (_Object2World * v).xyz;
    return _WorldSpaceLightPos0.xyz;
}
#line 400
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 404
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 408
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 426
v2f_surf vert_surf( in appdata_full v ) {
    v2f_surf o;
    #line 429
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    o.normal = (mat3( _Object2World) * (v.normal * unity_Scale.w));
    #line 433
    highp vec3 lightDir = WorldSpaceLightDir( v.vertex);
    o.lightDir = lightDir;
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out lowp vec3 xlv_TEXCOORD1;
out mediump vec3 xlv_TEXCOORD2;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec3(xl_retval.normal);
    xlv_TEXCOORD2 = vec3(xl_retval.lightDir);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    mediump vec3 lightDir;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 425
uniform highp vec4 _MainTex_ST;
#line 438
uniform lowp float _Cutoff;
#line 338
lowp vec4 LightingLambert( in SurfaceOutput s, in lowp vec3 lightDir, in lowp float atten ) {
    lowp float diff = max( 0.0, dot( s.Normal, lightDir));
    lowp vec4 c;
    #line 342
    c.xyz = ((s.Albedo * _LightColor0.xyz) * ((diff * atten) * 2.0));
    c.w = s.Alpha;
    return c;
}
#line 411
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 413
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 439
lowp vec4 frag_surf( in v2f_surf IN ) {
    Input surfIN;
    #line 442
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    o.Emission = vec3( 0.0);
    #line 446
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    o.Normal = IN.normal;
    #line 450
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    lowp vec3 lightDir = IN.lightDir;
    lowp vec4 c = LightingLambert( o, lightDir, 1.0);
    #line 454
    c.w = o.Alpha;
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in lowp vec3 xlv_TEXCOORD1;
in mediump vec3 xlv_TEXCOORD2;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.normal = vec3(xlv_TEXCOORD1);
    xlt_IN.lightDir = vec3(xlv_TEXCOORD2);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "opengl " {
Keywords { "SPOT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 13 [_Time]
Vector 14 [_WorldSpaceLightPos0]
Matrix 5 [_Object2World]
Vector 15 [unity_Scale]
Matrix 9 [_LightMatrix0]
Float 16 [_WaveSpeed]
Float 17 [_Amplitude]
Vector 18 [_MainTex_ST]
"!!ARBvp1.0
# 82 ALU
PARAM c[24] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.mvp,
		program.local[5..18],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[16];
MUL R0.x, R0, c[13];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[19];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[20].xyxw, c[20].zwzw;
MAD R1.xyz, R1, R0, c[21].xyxw;
MAD R1.xyz, R1, R0, c[21].zwzw;
MAD R1.xyz, R1, R0, c[22].xyxw;
MAD R0.xyz, R1, R0, c[19].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[22].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[19].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[23].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[17];
MAD R0.w, -R0.x, c[23].x, vertex.position.z;
MAD R0.x, R1.w, c[23].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[19];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[20].xyxw, c[20].zwzw;
MAD R3.xyz, R2, R0, c[21].xyxw;
MAD R3.xyz, R3, R0, c[21].zwzw;
MAD R3.xyz, R3, R0, c[22].xyxw;
ADD R1.xyz, -R1.w, c[19];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[20].xyxw, c[20].zwzw;
MAD R2.xyz, R2, R1, c[21].xyxw;
MAD R2.xyz, R2, R1, c[21].zwzw;
MAD R3.xyz, R3, R0, c[19].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[22].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[19].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[22].xyxw;
MAD R1.xyz, R0, R1, c[19].wzww;
SGE R0.yz, R1.w, c[22].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[19].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R0.x, R0, c[17];
MUL R0.y, -R0, c[23].z;
MAD R0.y, R0.x, c[19], R0;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R2.w, c[17];
MAD R0.x, R0, c[19].y, vertex.position;
DP4 R1.z, R0.xywz, c[7];
DP4 R1.x, R0.xywz, c[5];
DP4 R1.y, R0.xywz, c[6];
DP4 R1.w, R0.xywz, c[8];
DP4 result.texcoord[3].w, R1, c[12];
DP4 result.texcoord[3].z, R1, c[11];
DP4 result.texcoord[3].y, R1, c[10];
DP4 result.texcoord[3].x, R1, c[9];
ADD result.texcoord[2].xyz, -R1, c[14];
MUL R1.xyz, vertex.normal, c[15].w;
DP4 result.position.w, R0.xywz, c[4];
DP4 result.position.z, R0.xywz, c[3];
DP4 result.position.y, R0.xywz, c[2];
DP4 result.position.x, R0.xywz, c[1];
DP3 result.texcoord[1].z, R1, c[7];
DP3 result.texcoord[1].y, R1, c[6];
DP3 result.texcoord[1].x, R1, c[5];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[18], c[18].zwzw;
END
# 82 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "SPOT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 12 [_Time]
Vector 13 [_WorldSpaceLightPos0]
Matrix 4 [_Object2World]
Vector 14 [unity_Scale]
Matrix 8 [_LightMatrix0]
Float 15 [_WaveSpeed]
Float 16 [_Amplitude]
Vector 17 [_MainTex_ST]
"vs_2_0
; 82 ALU
def c18, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c19, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c20, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c21, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c22, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_normal0 v2
dcl_texcoord0 v3
add r0.w, v0.x, v0.y
mov r0.x, c12
mul r0.x, c15, r0
slt r0.y, r0.x, c20.x
max r0.y, -r0, r0
slt r0.y, c20.x, r0
add r0.z, -r0.y, c18
mul r0.z, r0.x, r0
mov r1.w, v0
mad r1.y, r0, -r0.x, r0.z
add r1.x, r0.w, v0.z
mad r0.x, r1.y, c20.y, r1
mad r0.x, r0, c20.z, c20.w
frc r0.x, r0
mad r1.z, r0.x, c21.x, c21.y
sincos r0.xy, r1.z, c19.xyzw, c18.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1, c22.x, r1.x
mul r0.x, r0, c16
mad r1.z, -r0.x, c22.y, v0
mad r0.x, r1.y, c21.z, r1
mad r0.x, r0, c20.z, c20.w
mad r0.y, r0, c20.z, c20.w
frc r0.y, r0
mad r1.y, r0, c21.x, c21
frc r1.x, r0
sincos r0.xy, r1.y, c19.xyzw, c18.xyzw
mad r0.x, r1, c21, c21.y
mul r0.z, v3.y, r0.y
sincos r2.xy, r0.x, c19.xyzw, c18.xyzw
mul r0.y, v3, v3.x
mul r0.x, v3.y, r2.y
mul r0.y, -r0, c21.w
mul r0.x, r0, c16
mad r1.y, r0.x, c18.w, r0
mul r0.x, r0.z, c16
mad r1.x, r0, c18.w, v0
dp4 r0.z, r1, c6
dp4 r0.x, r1, c4
dp4 r0.y, r1, c5
dp4 r0.w, r1, c7
dp4 oT3.w, r0, c11
dp4 oT3.z, r0, c10
dp4 oT3.y, r0, c9
dp4 oT3.x, r0, c8
add oT2.xyz, -r0, c13
mul r0.xyz, v2, c14.w
dp4 oPos.w, r1, c3
dp4 oPos.z, r1, c2
dp4 oPos.y, r1, c1
dp4 oPos.x, r1, c0
dp3 oT1.z, r0, c6
dp3 oT1.y, r0, c5
dp3 oT1.x, r0, c4
mad oT0.xy, v3, c17, c17.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "SPOT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Float 16 [_Amplitude]
Matrix 11 [_LightMatrix0] 4
Vector 17 [_MainTex_ST]
Matrix 6 [_Object2World] 4
Vector 0 [_Time]
Float 15 [_WaveSpeed]
Vector 1 [_WorldSpaceLightPos0]
Matrix 2 [glstate_matrix_mvp] 4
Vector 10 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 44.00-45.33 (33-34 instructions), vertex: 32, texture: 0,
//   sequencer: 20,  6 GPRs, 30 threads,
// Performance (if enough threads): ~44-45 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacdeaaaaaceeaaaaaaaaaaaaaaceaaaaabliaaaaaboaaaaaaaaa
aaaaaaaaaaaaabjaaaaaaabmaaaaabicpppoadaaaaaaaaajaaaaaabmaaaaaaaa
aaaaabhlaaaaaanaaaacaabaaaabaaaaaaaaaanmaaaaaaaaaaaaaaomaaacaaal
aaaeaaaaaaaaaapmaaaaaaaaaaaaabamaaacaabbaaabaaaaaaaaabbiaaaaaaaa
aaaaabciaaacaaagaaaeaaaaaaaaaapmaaaaaaaaaaaaabdgaaacaaaaaaabaaaa
aaaaabbiaaaaaaaaaaaaabdmaaacaaapaaabaaaaaaaaaanmaaaaaaaaaaaaabeh
aaacaaabaaabaaaaaaaaabbiaaaaaaaaaaaaabfmaaacaaacaaaeaaaaaaaaaapm
aaaaaaaaaaaaabgpaaacaaakaaabaaaaaaaaabbiaaaaaaaafpebgnhagmgjhehf
gegfaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaafpemgjghgiheengbhehcgjhi
daaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpengbgjgofegfhifpfdfeaa
aaabaaadaaabaaaeaaabaaaaaaaaaaaafpepgcgkgfgdhedcfhgphcgmgeaafpfe
gjgngfaafpfhgbhggffdhagfgfgeaafpfhgphcgmgefdhagbgdgfemgjghgihefa
gphddaaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaahfgogjhehjfpfdgdgb
gmgfaahghdfpddfpdaaadccodacodcdadddfddcodaaaklklaaaaaaaaaaaaaaab
aaaaaaaaaaaaaaaaaaaaaabeaapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaeaaaaaacaeaadbaaafaaaaaaaaaaaaaaaaaaaadaieaaaaaaabaaaaaaad
aaaaaaaeaaaaacjaaabaaaafaaaadaagaadafaahaaaadafaaaabhbfbaaachcfc
aaadpdfdaaaabacfaaaabaceaaaabacdaaaabacjaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaadoccpjidlpiaaaaamaejapnldpiaaaaadpaaaaaadoemmmmneamjapnl
dpggggggdpljjjjkeaehkobeeaammmmndpaaaaaahajfgaafbaalbaaafgaaaaaa
aaaaaaaagaammcaabcaaaaaaaaaagabcfabibcaabcaaaaaaaaaaaaaagabnmeaa
bcaaaaaaaaaagacdbacjbcaaccaaaaaaafpibaaaaaaaagiiaaaaaaaaafpicaaa
aaaaaoiiaaaaaaaaafpiaaaaaaaaaohiaaaaaaaamiacaaaaaagmlbaacbaapnaa
miaiaaaaaagmgmaacbaaapaaheacaaababloblbllaabpnaakiiaaaaabiaaaaeb
mcaaaaapmiaiaaadaamggmaaobaaaaaamiahaaadaablmalbklaappabmiahaaad
aamagmbliladpnppmiahaaadaamaaaaaoiadaaaamiapaaafaadeagaakbadpoaa
miahaaaeaalemgaakaafpnaamacaaeaaaaaaaalbocaaaaaemaekaeaaaamglmmg
kbaapoaemabpaeadaablaagmkbabajaemiahaaaeaabbmaaaobaaaeaamiahaaaf
aamagmaakbaebaaamiacaaaaaagmgmaaoaafabaabeapaaaeaablaalbkbabafaf
aeibaaabafmgmgbloaafabafmiapaaaeaagmiiiiklabaeaemiapaaaeaabldeje
klaaadaemiapiadoaalbaadeklaaacaemialaaacaagfblaakbacakaamiaoaaab
aalbimaakbacaiaamiahaaacaagmlebfklacahabmiapaaabaagmaaaaklabaiad
miapaaabaablaaaaklaaahabmiapaaabaalbaaaaklaaagabmiahiaacaemamaaa
kaababaamiahiaabaablmaleklacagacmiadiaaaaamelabkilaabbbbmiapaaaa
aabliiaakbabaoaamiapaaaaaamgiiaaklabanaamiapaaaaaalbdejeklabamaa
miapiaadaagmaadeklabalaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "SPOT" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_Time]
Vector 466 [_WorldSpaceLightPos0]
Matrix 260 [_Object2World]
Vector 465 [unity_Scale]
Matrix 264 [_LightMatrix0]
Float 464 [_WaveSpeed]
Float 463 [_Amplitude]
Vector 462 [_MainTex_ST]
"sce_vp_rsx // 39 instructions using 3 registers
[Configuration]
8
0000002701050300
[Defaults]
2
461 4
400ccccd3e4ccccd4047ae143f000000
460 2
3f6666663fb9999a
[Microcode]
624
00001c6c009d120c013fc0c36041dffc401f9c6c011ce808010400d740619f9c
00009c6c0040007f8106c08360403ffc00011c6c0080082a8100008360411ffc
00001c6c00c000000106c08aa0403ffc00009c6c005d00000186c08360411ffc
401f9c6c0150600c008600c360405fa000009c6c009d3000028000c360411ffc
201fdc6c004000000286c08360411ffc00009c6c00c000550106c09fe0205ffc
00001c6c004000000286c08360403ffc00002400004000800286c08360403ffc
00009c6c011cd07f808800d540a19ffc00001c6c011cc07f809540d540a03ffc
401f9c6c7950500c008600caa0a880a000011c6c789cc080048000c000b100fc
00009c6c7880082a8115415fe022807c00009c6c008008000295408360411ffc
00001c6c0080082a813fc04360403ffc00001c6c009cf07f808000c360403ffc
00009c6c009cf000028000c360411ffc00009c6c009cf02a828000c360409ffc
00009c6c011cd02a82bfc0c001209ffc00009c6c011cd080029540d540405ffc
00009c6c011cd07f80bfc0c000411ffc401f9c6c0150400c008600c360411fa0
401f9c6c01d0300d8286c0c360403f80401f9c6c01d0200d8286c0c360405f80
401f9c6c01d0100d8286c0c360409f80401f9c6c01d0000d8286c0c360411f80
00001c6c01d0700d8286c0c360403ffc00001c6c01d0600d8286c0c360405ffc
00001c6c01d0500d8286c0c360409ffc00001c6c01d0400d8286c0c360411ffc
401f9c6c00dd200c0186c0a30021dfa4401f9c6c01d0b00d8086c0c360403fa8
401f9c6c01d0a00d8086c0c360405fa8401f9c6c01d0900d8086c0c360409fa8
401f9c6c01d0800d8086c0c360411fa9
"
}

SubProgram "d3d11 " {
Keywords { "SPOT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 176 // 160 used size, 9 vars
Matrix 48 [_LightMatrix0] 4
Float 128 [_WaveSpeed]
Float 132 [_Amplitude]
Vector 144 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityLighting" 720 // 16 used size, 17 vars
Vector 0 [_WorldSpaceLightPos0] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 37 instructions, 3 temp regs, 0 temp arrays:
// ALU 35 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedbkdkmmennmneicmannjimfhlhjioaahmabaaaaaageahaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcmiafaaaaeaaaabaa
hcabaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaafjaaaaaeegiocaaaabaaaaaa
abaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaad
dcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaad
pccabaaaaeaaaaaagiaaaaacadaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaa
aaaaaaaaaiaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaa
aaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaa
aaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaa
aaaaaaaaaceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaa
enaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgifcaaaaaaaaaaaaiaaaaaadiaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaa
adaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaa
aaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakecaabaaa
aaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaa
dcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaacaaaaaa
kgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaa
adaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaaldccabaaa
abaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaajaaaaaaogikcaaaaaaaaaaa
ajaaaaaadiaaaaaihcaabaaaabaaaaaaegbcbaaaacaaaaaapgipcaaaadaaaaaa
beaaaaaadiaaaaaihcaabaaaacaaaaaafgafbaaaabaaaaaaegiccaaaadaaaaaa
anaaaaaadcaaaaaklcaabaaaabaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaa
abaaaaaaegaibaaaacaaaaaadcaaaaakhccabaaaacaaaaaaegiccaaaadaaaaaa
aoaaaaaakgakbaaaabaaaaaaegadbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadiaaaaaipcaabaaaacaaaaaa
fgafbaaaaaaaaaaaegiocaaaadaaaaaaanaaaaaadcaaaaakpcaabaaaacaaaaaa
egiocaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaaegaobaaaacaaaaaadcaaaaak
lcaabaaaaaaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaaegaibaaa
abaaaaaadcaaaaaklcaabaaaaaaaaaaaegiicaaaadaaaaaaaoaaaaaakgakbaaa
aaaaaaaaegambaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaa
aoaaaaaakgakbaaaaaaaaaaaegaobaaaacaaaaaadcaaaaakpcaabaaaabaaaaaa
egiocaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
hcaabaaaaaaaaaaaegiccaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaaegadbaaa
aaaaaaaaaaaaaaajhccabaaaadaaaaaaegacbaiaebaaaaaaaaaaaaaaegiccaaa
acaaaaaaaaaaaaaadiaaaaaipcaabaaaaaaaaaaafgafbaaaabaaaaaaegiocaaa
aaaaaaaaaeaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaaaaaaaaaadaaaaaa
agaabaaaabaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
aaaaaaaaafaaaaaakgakbaaaabaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaa
aeaaaaaaegiocaaaaaaaaaaaagaaaaaapgapbaaaabaaaaaaegaobaaaaaaaaaaa
doaaaaab"
}

SubProgram "gles " {
Keywords { "SPOT" }
"!!GLES


#ifdef VERTEX

varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = _glesVertex;
  highp float t_5;
  highp float tmpvar_6;
  tmpvar_6 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_7;
  tmpvar_7 = (_Time * _WaveSpeed).x;
  t_5 = tmpvar_7;
  if ((tmpvar_7 < 0.0)) {
    t_5 = (tmpvar_7 * -1.0);
  };
  tmpvar_4.x = (_glesVertex.x + (((sin(((t_5 * 1.45) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_4.y = ((((sin(((t_5 * 3.12) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_4.z = (_glesVertex.z - (((sin(((t_5 * 2.2) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  mat3 tmpvar_8;
  tmpvar_8[0] = _Object2World[0].xyz;
  tmpvar_8[1] = _Object2World[1].xyz;
  tmpvar_8[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (tmpvar_1 * unity_Scale.w));
  tmpvar_2 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = (_WorldSpaceLightPos0.xyz - (_Object2World * tmpvar_4).xyz);
  tmpvar_3 = tmpvar_10;
  gl_Position = (glstate_matrix_mvp * tmpvar_4);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * tmpvar_4));
}



#endif
#ifdef FRAGMENT

varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec4 c_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  c_3 = tmpvar_5;
  lowp float tmpvar_6;
  tmpvar_6 = c_3.w;
  lowp float x_7;
  x_7 = (c_3.w - _Cutoff);
  if ((x_7 < 0.0)) {
    discard;
  };
  mediump vec3 tmpvar_8;
  tmpvar_8 = normalize(xlv_TEXCOORD2);
  lightDir_2 = tmpvar_8;
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD3.xy / xlv_TEXCOORD3.w) + 0.5);
  highp float tmpvar_10;
  tmpvar_10 = dot (xlv_TEXCOORD3.xyz, xlv_TEXCOORD3.xyz);
  lowp float atten_11;
  atten_11 = ((float((xlv_TEXCOORD3.z > 0.0)) * texture2D (_LightTexture0, P_9).w) * texture2D (_LightTextureB0, vec2(tmpvar_10)).w);
  lowp vec4 c_12;
  c_12.xyz = ((c_3.xyz * _LightColor0.xyz) * ((max (0.0, dot (xlv_TEXCOORD1, lightDir_2)) * atten_11) * 2.0));
  c_12.w = tmpvar_6;
  c_1.xyz = c_12.xyz;
  c_1.w = tmpvar_6;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "SPOT" }
"!!GLES


#ifdef VERTEX

varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = _glesVertex;
  highp float t_5;
  highp float tmpvar_6;
  tmpvar_6 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_7;
  tmpvar_7 = (_Time * _WaveSpeed).x;
  t_5 = tmpvar_7;
  if ((tmpvar_7 < 0.0)) {
    t_5 = (tmpvar_7 * -1.0);
  };
  tmpvar_4.x = (_glesVertex.x + (((sin(((t_5 * 1.45) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_4.y = ((((sin(((t_5 * 3.12) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_4.z = (_glesVertex.z - (((sin(((t_5 * 2.2) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  mat3 tmpvar_8;
  tmpvar_8[0] = _Object2World[0].xyz;
  tmpvar_8[1] = _Object2World[1].xyz;
  tmpvar_8[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (tmpvar_1 * unity_Scale.w));
  tmpvar_2 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = (_WorldSpaceLightPos0.xyz - (_Object2World * tmpvar_4).xyz);
  tmpvar_3 = tmpvar_10;
  gl_Position = (glstate_matrix_mvp * tmpvar_4);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * tmpvar_4));
}



#endif
#ifdef FRAGMENT

varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec4 c_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  c_3 = tmpvar_5;
  lowp float tmpvar_6;
  tmpvar_6 = c_3.w;
  lowp float x_7;
  x_7 = (c_3.w - _Cutoff);
  if ((x_7 < 0.0)) {
    discard;
  };
  mediump vec3 tmpvar_8;
  tmpvar_8 = normalize(xlv_TEXCOORD2);
  lightDir_2 = tmpvar_8;
  highp vec2 P_9;
  P_9 = ((xlv_TEXCOORD3.xy / xlv_TEXCOORD3.w) + 0.5);
  highp float tmpvar_10;
  tmpvar_10 = dot (xlv_TEXCOORD3.xyz, xlv_TEXCOORD3.xyz);
  lowp float atten_11;
  atten_11 = ((float((xlv_TEXCOORD3.z > 0.0)) * texture2D (_LightTexture0, P_9).w) * texture2D (_LightTextureB0, vec2(tmpvar_10)).w);
  lowp vec4 c_12;
  c_12.xyz = ((c_3.xyz * _LightColor0.xyz) * ((max (0.0, dot (xlv_TEXCOORD1, lightDir_2)) * atten_11) * 2.0));
  c_12.w = tmpvar_6;
  c_1.xyz = c_12.xyz;
  c_1.w = tmpvar_6;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "flash " {
Keywords { "SPOT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 12 [_Time]
Vector 13 [_WorldSpaceLightPos0]
Matrix 4 [_Object2World]
Vector 14 [unity_Scale]
Matrix 8 [_LightMatrix0]
Float 15 [_WaveSpeed]
Float 16 [_Amplitude]
Vector 17 [_MainTex_ST]
"agal_vs
c18 -0.020833 -0.125 1.0 0.5
c19 -0.000002 -0.000022 0.002604 0.00026
c20 0.0 2.2 0.159155 0.5
c21 6.283185 -3.141593 3.12 0.9
c22 1.45 0.2 0.0 0.0
[bc]
abaaaaaaaaaaaiacaaaaaaaaaaaaaaaaaaaaaaffaaaaaaaa add r0.w, a0.x, a0.y
aaaaaaaaaaaaabacamaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r0.x, c12
adaaaaaaaaaaabacapaaaaoeabaaaaaaaaaaaaaaacaaaaaa mul r0.x, c15, r0.x
ckaaaaaaaaaaacacaaaaaaaaacaaaaaabeaaaaaaabaaaaaa slt r0.y, r0.x, c20.x
bfaaaaaaabaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r1.y, r0.y
ahaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa max r0.y, r1.y, r0.y
ckaaaaaaaaaaacacbeaaaaaaabaaaaaaaaaaaaffacaaaaaa slt r0.y, c20.x, r0.y
bfaaaaaaacaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r2.y, r0.y
abaaaaaaaaaaaeacacaaaaffacaaaaaabcaaaaoeabaaaaaa add r0.z, r2.y, c18
adaaaaaaaaaaaeacaaaaaaaaacaaaaaaaaaaaakkacaaaaaa mul r0.z, r0.x, r0.z
aaaaaaaaabaaaiacaaaaaaoeaaaaaaaaaaaaaaaaaaaaaaaa mov r1.w, a0
bfaaaaaaacaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r2.x, r0.x
adaaaaaaabaaacacaaaaaaffacaaaaaaacaaaaaaacaaaaaa mul r1.y, r0.y, r2.x
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaakkacaaaaaa add r1.y, r1.y, r0.z
abaaaaaaabaaabacaaaaaappacaaaaaaaaaaaakkaaaaaaaa add r1.x, r0.w, a0.z
adaaaaaaaaaaabacabaaaaffacaaaaaabeaaaaffabaaaaaa mul r0.x, r1.y, c20.y
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaabeaaaakkabaaaaaa mul r0.x, r0.x, c20.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaabeaaaappabaaaaaa add r0.x, r0.x, c20.w
aiaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r0.x, r0.x
adaaaaaaabaaaeacaaaaaaaaacaaaaaabfaaaaaaabaaaaaa mul r1.z, r0.x, c21.x
abaaaaaaabaaaeacabaaaakkacaaaaaabfaaaaffabaaaaaa add r1.z, r1.z, c21.y
apaaaaaaaaaaabacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.z
baaaaaaaaaaaacacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.z
adaaaaaaaaaaabacaaaaaaffacaaaaaaadaaaaffaaaaaaaa mul r0.x, r0.y, a3.y
adaaaaaaaaaaacacabaaaaffacaaaaaabgaaaaaaabaaaaaa mul r0.y, r1.y, c22.x
abaaaaaaaaaaacacaaaaaaffacaaaaaaabaaaaaaacaaaaaa add r0.y, r0.y, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaabaaaaaoeabaaaaaa mul r0.x, r0.x, c16
bfaaaaaaadaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r3.x, r0.x
adaaaaaaabaaaeacadaaaaaaacaaaaaabgaaaaffabaaaaaa mul r1.z, r3.x, c22.y
abaaaaaaabaaaeacabaaaakkacaaaaaaaaaaaaoeaaaaaaaa add r1.z, r1.z, a0
adaaaaaaaaaaabacabaaaaffacaaaaaabfaaaakkabaaaaaa mul r0.x, r1.y, c21.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaabeaaaakkabaaaaaa mul r0.x, r0.x, c20.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaabeaaaappabaaaaaa add r0.x, r0.x, c20.w
adaaaaaaaaaaacacaaaaaaffacaaaaaabeaaaakkabaaaaaa mul r0.y, r0.y, c20.z
abaaaaaaaaaaacacaaaaaaffacaaaaaabeaaaappabaaaaaa add r0.y, r0.y, c20.w
aiaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa frc r0.y, r0.y
adaaaaaaabaaacacaaaaaaffacaaaaaabfaaaaaaabaaaaaa mul r1.y, r0.y, c21.x
abaaaaaaabaaacacabaaaaffacaaaaaabfaaaaoeabaaaaaa add r1.y, r1.y, c21
aiaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r1.x, r0.x
apaaaaaaaaaaabacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.y
baaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.y
adaaaaaaaaaaabacabaaaaaaacaaaaaabfaaaaoeabaaaaaa mul r0.x, r1.x, c21
abaaaaaaaaaaabacaaaaaaaaacaaaaaabfaaaaffabaaaaaa add r0.x, r0.x, c21.y
adaaaaaaaaaaaeacadaaaaffaaaaaaaaaaaaaaffacaaaaaa mul r0.z, a3.y, r0.y
apaaaaaaacaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sin r2.x, r0.x
baaaaaaaacaaacacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa cos r2.y, r0.x
adaaaaaaaaaaacacadaaaaoeaaaaaaaaadaaaaaaaaaaaaaa mul r0.y, a3, a3.x
adaaaaaaaaaaabacadaaaaffaaaaaaaaacaaaaffacaaaaaa mul r0.x, a3.y, r2.y
bfaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r0.y, r0.y
adaaaaaaaaaaacacaaaaaaffacaaaaaabfaaaappabaaaaaa mul r0.y, r0.y, c21.w
adaaaaaaaaaaabacaaaaaaaaacaaaaaabaaaaaoeabaaaaaa mul r0.x, r0.x, c16
adaaaaaaabaaacacaaaaaaaaacaaaaaabcaaaappabaaaaaa mul r1.y, r0.x, c18.w
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa add r1.y, r1.y, r0.y
adaaaaaaaaaaabacaaaaaakkacaaaaaabaaaaaoeabaaaaaa mul r0.x, r0.z, c16
adaaaaaaabaaabacaaaaaaaaacaaaaaabcaaaappabaaaaaa mul r1.x, r0.x, c18.w
abaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaaoeaaaaaaaa add r1.x, r1.x, a0
bdaaaaaaaaaaaeacabaaaaoeacaaaaaaagaaaaoeabaaaaaa dp4 r0.z, r1, c6
bdaaaaaaaaaaabacabaaaaoeacaaaaaaaeaaaaoeabaaaaaa dp4 r0.x, r1, c4
bdaaaaaaaaaaacacabaaaaoeacaaaaaaafaaaaoeabaaaaaa dp4 r0.y, r1, c5
bdaaaaaaaaaaaiacabaaaaoeacaaaaaaahaaaaoeabaaaaaa dp4 r0.w, r1, c7
bdaaaaaaadaaaiaeaaaaaaoeacaaaaaaalaaaaoeabaaaaaa dp4 v3.w, r0, c11
bdaaaaaaadaaaeaeaaaaaaoeacaaaaaaakaaaaoeabaaaaaa dp4 v3.z, r0, c10
bdaaaaaaadaaacaeaaaaaaoeacaaaaaaajaaaaoeabaaaaaa dp4 v3.y, r0, c9
bdaaaaaaadaaabaeaaaaaaoeacaaaaaaaiaaaaoeabaaaaaa dp4 v3.x, r0, c8
bfaaaaaaadaaahacaaaaaakeacaaaaaaaaaaaaaaaaaaaaaa neg r3.xyz, r0.xyzz
abaaaaaaacaaahaeadaaaakeacaaaaaaanaaaaoeabaaaaaa add v2.xyz, r3.xyzz, c13
adaaaaaaaaaaahacabaaaaoeaaaaaaaaaoaaaappabaaaaaa mul r0.xyz, a1, c14.w
bdaaaaaaaaaaaiadabaaaaoeacaaaaaaadaaaaoeabaaaaaa dp4 o0.w, r1, c3
bdaaaaaaaaaaaeadabaaaaoeacaaaaaaacaaaaoeabaaaaaa dp4 o0.z, r1, c2
bdaaaaaaaaaaacadabaaaaoeacaaaaaaabaaaaoeabaaaaaa dp4 o0.y, r1, c1
bdaaaaaaaaaaabadabaaaaoeacaaaaaaaaaaaaoeabaaaaaa dp4 o0.x, r1, c0
bcaaaaaaabaaaeaeaaaaaakeacaaaaaaagaaaaoeabaaaaaa dp3 v1.z, r0.xyzz, c6
bcaaaaaaabaaacaeaaaaaakeacaaaaaaafaaaaoeabaaaaaa dp3 v1.y, r0.xyzz, c5
bcaaaaaaabaaabaeaaaaaakeacaaaaaaaeaaaaoeabaaaaaa dp3 v1.x, r0.xyzz, c4
adaaaaaaadaaadacadaaaaoeaaaaaaaabbaaaaoeabaaaaaa mul r3.xy, a3, c17
abaaaaaaaaaaadaeadaaaafeacaaaaaabbaaaaooabaaaaaa add v0.xy, r3.xyyy, c17.zwzw
aaaaaaaaaaaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v0.zw, c0
aaaaaaaaabaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v1.w, c0
aaaaaaaaacaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v2.w, c0
"
}

SubProgram "d3d11_9x " {
Keywords { "SPOT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 176 // 160 used size, 9 vars
Matrix 48 [_LightMatrix0] 4
Float 128 [_WaveSpeed]
Float 132 [_Amplitude]
Vector 144 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityLighting" 720 // 16 used size, 17 vars
Vector 0 [_WorldSpaceLightPos0] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 37 instructions, 3 temp regs, 0 temp arrays:
// ALU 35 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecedgfdkogmablbbcbhddppfmmjkfdpeieefabaaaaaapmalaaaaaeaaaaaa
daaaaaaameaeaaaajeakaaaafmalaaaaebgpgodjimaeaaaaimaeaaaaaaacpopp
baaeaaaahmaaaaaaahaaceaaaaaahiaaaaaahiaaaaaaceaaabaahiaaaaaaadaa
aeaaabaaaaaaaaaaaaaaaiaaacaaafaaaaaaaaaaabaaaaaaabaaahaaaaaaaaaa
acaaaaaaabaaaiaaaaaaaaaaadaaaaaaaeaaajaaaaaaaaaaadaaamaaaeaaanaa
aaaaaaaaadaabeaaabaabbaaaaaaaaaaaaaaaaaaaaacpoppfbaaaaafbcaaapka
jkjjljdpbekoeheamnmmameaggggggdpfbaaaaafbdaaapkanlapmjeanlapejma
mnmmemdoaaaaaaaafbaaaaafbeaaapkaaaaaaaaaaaaaaamaidpjccdoaaaaaadp
fbaaaaafbfaaapkaabannalfgballglhklkkckdlijiiiidjfbaaaaafbgaaapka
klkkkklmaaaaaaloaaaaiadpaaaaaadpbpaaaaacafaaaaiaaaaaapjabpaaaaac
afaaaciaacaaapjabpaaaaacafaaadiaadaaapjaaeaaaaaeaaaaadoaadaaoeja
agaaoekaagaaookaafaaaaadaaaaahiaacaaoejabbaappkaafaaaaadabaaahia
aaaaffiaaoaaoekaaeaaaaaeaaaaaliaanaakekaaaaaaaiaabaakeiaaeaaaaae
abaaahoaapaaoekaaaaakkiaaaaapeiaabaaaaacaaaaabiaafaaaakaafaaaaad
aaaaabiaaaaaaaiaahaaaakaamaaaaadaaaaaciaaaaaaaiabeaaaakaafaaaaad
aaaaaciaaaaaffiaaaaaaaiaaeaaaaaeaaaaabiaaaaaffiabeaaffkaaaaaaaia
acaaaaadaaaaaciaaaaaffjaaaaaaajaacaaaaadaaaaaciaaaaaffiaaaaakkja
aeaaaaaeaaaaahiaaaaaaaiabcaaoekaaaaaffiaaeaaaaaeaaaaahiaaaaaoeia
beaakkkabeaappkabdaaaaacaaaaahiaaaaaoeiaaeaaaaaeaaaaahiaaaaaoeia
bdaaaakabdaaffkacfaaaaaeabaaaciaaaaaffiabfaaoekabgaaoekaafaaaaad
aaaaaciaabaaffiaadaaffjaafaaaaadaaaaaciaaaaaffiaafaaffkaafaaaaad
aaaaaiiaadaaaajaadaaffjaafaaaaadaaaaaiiaaaaappiabcaappkaaeaaaaae
aaaaaciaaaaaffiabeaappkaaaaappibafaaaaadabaaahiaaaaaffiaaoaaoeka
cfaaaaaeacaaaciaaaaaaaiabfaaoekabgaaoekacfaaaaaeadaaaciaaaaakkia
bfaaoekabgaaoekaafaaaaadaaaaabiaadaaffiaadaaffjaafaaaaadaaaaabia
aaaaaaiaafaaffkaaeaaaaaeaaaaabiaaaaaaaiabdaakkkbaaaakkjaafaaaaad
aaaaaeiaacaaffiaadaaffjaafaaaaadaaaaaeiaaaaakkiaafaaffkaaeaaaaae
aaaaaeiaaaaakkiabeaappkaaaaaaajaaeaaaaaeabaaahiaanaaoekaaaaakkia
abaaoeiaaeaaaaaeabaaahiaapaaoekaaaaaaaiaabaaoeiaaeaaaaaeabaaahia
baaaoekaaaaappjaabaaoeiaacaaaaadacaaahoaabaaoeibaiaaoekaafaaaaad
abaaapiaaaaaffiaaoaaoekaafaaaaadacaaapiaaaaaffiaakaaoekaaeaaaaae
acaaapiaajaaoekaaaaakkiaacaaoeiaaeaaaaaeabaaapiaanaaoekaaaaakkia
abaaoeiaaeaaaaaeabaaapiaapaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaapia
alaaoekaaaaaaaiaacaaoeiaaeaaaaaeaaaaapiaamaaoekaaaaappjaaaaaoeia
aeaaaaaeabaaapiabaaaoekaaaaappjaabaaoeiaafaaaaadacaaapiaabaaffia
acaaoekaaeaaaaaeacaaapiaabaaoekaabaaaaiaacaaoeiaaeaaaaaeacaaapia
adaaoekaabaakkiaacaaoeiaaeaaaaaeadaaapoaaeaaoekaabaappiaacaaoeia
aeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeia
ppppaaaafdeieefcmiafaaaaeaaaabaahcabaaaafjaaaaaeegiocaaaaaaaaaaa
akaaaaaafjaaaaaeegiocaaaabaaaaaaabaaaaaafjaaaaaeegiocaaaacaaaaaa
abaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaa
fpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaa
aaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaa
gfaaaaadhccabaaaadaaaaaagfaaaaadpccabaaaaeaaaaaagiaaaaacadaaaaaa
diaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaaaiaaaaaaakiacaaaabaaaaaa
aaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaa
dhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaa
akaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaaakbabaaa
aaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaaaaaaaaaa
dcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdpbekoehea
mnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaaaanaaaaa
egacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaafgbfbaaa
adaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaaaaaaaaaa
aiaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaaadp
diaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaadcaaaaak
ccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdpbkaabaaa
aaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaadaaaaaa
abaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaadp
akbabaaaaaaaaaaadcaaaaakecaabaaaaaaaaaaackaabaiaebaaaaaaaaaaaaaa
abeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
adaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaa
abaaaaaaegiocaaaadaaaaaaacaaaaaakgakbaaaaaaaaaaaegaobaaaabaaaaaa
dcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaajaaaaaaogikcaaaaaaaaaaaajaaaaaadiaaaaaihcaabaaaabaaaaaa
egbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaacaaaaaa
fgafbaaaabaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaabaaaaaa
egiicaaaadaaaaaaamaaaaaaagaabaaaabaaaaaaegaibaaaacaaaaaadcaaaaak
hccabaaaacaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaabaaaaaaegadbaaa
abaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaaadaaaaaa
anaaaaaadiaaaaaipcaabaaaacaaaaaafgafbaaaaaaaaaaaegiocaaaadaaaaaa
anaaaaaadcaaaaakpcaabaaaacaaaaaaegiocaaaadaaaaaaamaaaaaaagaabaaa
aaaaaaaaegaobaaaacaaaaaadcaaaaaklcaabaaaaaaaaaaaegiicaaaadaaaaaa
amaaaaaaagaabaaaaaaaaaaaegaibaaaabaaaaaadcaaaaaklcaabaaaaaaaaaaa
egiicaaaadaaaaaaaoaaaaaakgakbaaaaaaaaaaaegambaaaaaaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaadaaaaaaaoaaaaaakgakbaaaaaaaaaaaegaobaaa
acaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaapaaaaaapgbpbaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaa
apaaaaaapgbpbaaaaaaaaaaaegadbaaaaaaaaaaaaaaaaaajhccabaaaadaaaaaa
egacbaiaebaaaaaaaaaaaaaaegiccaaaacaaaaaaaaaaaaaadiaaaaaipcaabaaa
aaaaaaaafgafbaaaabaaaaaaegiocaaaaaaaaaaaaeaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaaaaaaaaaadaaaaaaagaabaaaabaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaaaaaaaaaafaaaaaakgakbaaaabaaaaaa
egaobaaaaaaaaaaadcaaaaakpccabaaaaeaaaaaaegiocaaaaaaaaaaaagaaaaaa
pgapbaaaabaaaaaaegaobaaaaaaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaa
apadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeo
ehefeofeaaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheo
jiaaaaaaafaaaaaaaiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaa
apaaaaaaimaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaimaaaaaa
abaaaaaaaaaaaaaaadaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaa
adaaaaaaadaaaaaaahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaa
apaaaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl"
}

SubProgram "gles3 " {
Keywords { "SPOT" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 406
struct Input {
    highp vec2 uv_MainTex;
};
#line 428
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    mediump vec3 lightDir;
    highp vec4 _LightCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform sampler2D _LightTexture0;
uniform highp mat4 _LightMatrix0;
#line 393
uniform sampler2D _LightTextureB0;
#line 398
#line 402
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 411
#line 437
uniform highp vec4 _MainTex_ST;
uniform lowp float _Cutoff;
#line 77
highp vec3 WorldSpaceLightDir( in highp vec4 v ) {
    highp vec3 worldPos = (_Object2World * v).xyz;
    return (_WorldSpaceLightPos0.xyz - worldPos);
}
#line 411
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 415
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 419
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 438
v2f_surf vert_surf( in appdata_full v ) {
    v2f_surf o;
    #line 441
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    o.normal = (mat3( _Object2World) * (v.normal * unity_Scale.w));
    #line 445
    highp vec3 lightDir = WorldSpaceLightDir( v.vertex);
    o.lightDir = lightDir;
    o._LightCoord = (_LightMatrix0 * (_Object2World * v.vertex));
    #line 449
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out lowp vec3 xlv_TEXCOORD1;
out mediump vec3 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec3(xl_retval.normal);
    xlv_TEXCOORD2 = vec3(xl_retval.lightDir);
    xlv_TEXCOORD3 = vec4(xl_retval._LightCoord);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 406
struct Input {
    highp vec2 uv_MainTex;
};
#line 428
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    mediump vec3 lightDir;
    highp vec4 _LightCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform sampler2D _LightTexture0;
uniform highp mat4 _LightMatrix0;
#line 393
uniform sampler2D _LightTextureB0;
#line 398
#line 402
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 411
#line 437
uniform highp vec4 _MainTex_ST;
uniform lowp float _Cutoff;
#line 338
lowp vec4 LightingLambert( in SurfaceOutput s, in lowp vec3 lightDir, in lowp float atten ) {
    lowp float diff = max( 0.0, dot( s.Normal, lightDir));
    lowp vec4 c;
    #line 342
    c.xyz = ((s.Albedo * _LightColor0.xyz) * ((diff * atten) * 2.0));
    c.w = s.Alpha;
    return c;
}
#line 398
lowp float UnitySpotAttenuate( in highp vec3 LightCoord ) {
    return texture( _LightTextureB0, vec2( dot( LightCoord, LightCoord))).w;
}
#line 394
lowp float UnitySpotCookie( in highp vec4 LightCoord ) {
    return texture( _LightTexture0, ((LightCoord.xy / LightCoord.w) + 0.5)).w;
}
#line 422
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 424
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 452
lowp vec4 frag_surf( in v2f_surf IN ) {
    #line 454
    Input surfIN;
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    #line 458
    o.Emission = vec3( 0.0);
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    #line 462
    o.Normal = IN.normal;
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    lowp vec3 lightDir = normalize(IN.lightDir);
    #line 466
    lowp vec4 c = LightingLambert( o, lightDir, (((float((IN._LightCoord.z > 0.0)) * UnitySpotCookie( IN._LightCoord)) * UnitySpotAttenuate( IN._LightCoord.xyz)) * 1.0));
    c.w = o.Alpha;
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in lowp vec3 xlv_TEXCOORD1;
in mediump vec3 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.normal = vec3(xlv_TEXCOORD1);
    xlt_IN.lightDir = vec3(xlv_TEXCOORD2);
    xlt_IN._LightCoord = vec4(xlv_TEXCOORD3);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "opengl " {
Keywords { "POINT_COOKIE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 13 [_Time]
Vector 14 [_WorldSpaceLightPos0]
Matrix 5 [_Object2World]
Vector 15 [unity_Scale]
Matrix 9 [_LightMatrix0]
Float 16 [_WaveSpeed]
Float 17 [_Amplitude]
Vector 18 [_MainTex_ST]
"!!ARBvp1.0
# 81 ALU
PARAM c[24] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.mvp,
		program.local[5..18],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[16];
MUL R0.x, R0, c[13];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[19];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[20].xyxw, c[20].zwzw;
MAD R1.xyz, R1, R0, c[21].xyxw;
MAD R1.xyz, R1, R0, c[21].zwzw;
MAD R1.xyz, R1, R0, c[22].xyxw;
MAD R0.xyz, R1, R0, c[19].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[22].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[19].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[23].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[17];
MAD R0.w, -R0.x, c[23].x, vertex.position.z;
MAD R0.x, R1.w, c[23].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[19];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[20].xyxw, c[20].zwzw;
MAD R3.xyz, R2, R0, c[21].xyxw;
MAD R3.xyz, R3, R0, c[21].zwzw;
MAD R3.xyz, R3, R0, c[22].xyxw;
ADD R1.xyz, -R1.w, c[19];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[20].xyxw, c[20].zwzw;
MAD R2.xyz, R2, R1, c[21].xyxw;
MAD R2.xyz, R2, R1, c[21].zwzw;
MAD R3.xyz, R3, R0, c[19].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[22].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[19].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[22].xyxw;
MAD R1.xyz, R0, R1, c[19].wzww;
SGE R0.yz, R1.w, c[22].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[19].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R0.x, R0, c[17];
MUL R0.y, -R0, c[23].z;
MAD R0.y, R0.x, c[19], R0;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R2.w, c[17];
MAD R0.x, R0, c[19].y, vertex.position;
DP4 R1.z, R0.xywz, c[7];
DP4 R1.x, R0.xywz, c[5];
DP4 R1.y, R0.xywz, c[6];
DP4 R1.w, R0.xywz, c[8];
DP4 result.texcoord[3].z, R1, c[11];
DP4 result.texcoord[3].y, R1, c[10];
DP4 result.texcoord[3].x, R1, c[9];
ADD result.texcoord[2].xyz, -R1, c[14];
MUL R1.xyz, vertex.normal, c[15].w;
DP4 result.position.w, R0.xywz, c[4];
DP4 result.position.z, R0.xywz, c[3];
DP4 result.position.y, R0.xywz, c[2];
DP4 result.position.x, R0.xywz, c[1];
DP3 result.texcoord[1].z, R1, c[7];
DP3 result.texcoord[1].y, R1, c[6];
DP3 result.texcoord[1].x, R1, c[5];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[18], c[18].zwzw;
END
# 81 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "POINT_COOKIE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 12 [_Time]
Vector 13 [_WorldSpaceLightPos0]
Matrix 4 [_Object2World]
Vector 14 [unity_Scale]
Matrix 8 [_LightMatrix0]
Float 15 [_WaveSpeed]
Float 16 [_Amplitude]
Vector 17 [_MainTex_ST]
"vs_2_0
; 81 ALU
def c18, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c19, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c20, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c21, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c22, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_normal0 v2
dcl_texcoord0 v3
add r0.w, v0.x, v0.y
mov r0.x, c12
mul r0.x, c15, r0
slt r0.y, r0.x, c20.x
max r0.y, -r0, r0
slt r0.y, c20.x, r0
add r0.z, -r0.y, c18
mul r0.z, r0.x, r0
mov r1.w, v0
mad r1.y, r0, -r0.x, r0.z
add r1.x, r0.w, v0.z
mad r0.x, r1.y, c20.y, r1
mad r0.x, r0, c20.z, c20.w
frc r0.x, r0
mad r1.z, r0.x, c21.x, c21.y
sincos r0.xy, r1.z, c19.xyzw, c18.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1, c22.x, r1.x
mul r0.x, r0, c16
mad r1.z, -r0.x, c22.y, v0
mad r0.x, r1.y, c21.z, r1
mad r0.x, r0, c20.z, c20.w
mad r0.y, r0, c20.z, c20.w
frc r0.y, r0
mad r1.y, r0, c21.x, c21
frc r1.x, r0
sincos r0.xy, r1.y, c19.xyzw, c18.xyzw
mad r0.x, r1, c21, c21.y
mul r0.z, v3.y, r0.y
sincos r2.xy, r0.x, c19.xyzw, c18.xyzw
mul r0.y, v3, v3.x
mul r0.x, v3.y, r2.y
mul r0.y, -r0, c21.w
mul r0.x, r0, c16
mad r1.y, r0.x, c18.w, r0
mul r0.x, r0.z, c16
mad r1.x, r0, c18.w, v0
dp4 r0.z, r1, c6
dp4 r0.x, r1, c4
dp4 r0.y, r1, c5
dp4 r0.w, r1, c7
dp4 oT3.z, r0, c10
dp4 oT3.y, r0, c9
dp4 oT3.x, r0, c8
add oT2.xyz, -r0, c13
mul r0.xyz, v2, c14.w
dp4 oPos.w, r1, c3
dp4 oPos.z, r1, c2
dp4 oPos.y, r1, c1
dp4 oPos.x, r1, c0
dp3 oT1.z, r0, c6
dp3 oT1.y, r0, c5
dp3 oT1.x, r0, c4
mad oT0.xy, v3, c17, c17.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "POINT_COOKIE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Float 16 [_Amplitude]
Matrix 11 [_LightMatrix0] 4
Vector 17 [_MainTex_ST]
Matrix 6 [_Object2World] 4
Vector 0 [_Time]
Float 15 [_WaveSpeed]
Vector 1 [_WorldSpaceLightPos0]
Matrix 2 [glstate_matrix_mvp] 4
Vector 10 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 44.00-45.33 (33-34 instructions), vertex: 32, texture: 0,
//   sequencer: 20,  6 GPRs, 30 threads,
// Performance (if enough threads): ~44-45 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacdeaaaaaceeaaaaaaaaaaaaaaceaaaaabliaaaaaboaaaaaaaaa
aaaaaaaaaaaaabjaaaaaaabmaaaaabicpppoadaaaaaaaaajaaaaaabmaaaaaaaa
aaaaabhlaaaaaanaaaacaabaaaabaaaaaaaaaanmaaaaaaaaaaaaaaomaaacaaal
aaaeaaaaaaaaaapmaaaaaaaaaaaaabamaaacaabbaaabaaaaaaaaabbiaaaaaaaa
aaaaabciaaacaaagaaaeaaaaaaaaaapmaaaaaaaaaaaaabdgaaacaaaaaaabaaaa
aaaaabbiaaaaaaaaaaaaabdmaaacaaapaaabaaaaaaaaaanmaaaaaaaaaaaaabeh
aaacaaabaaabaaaaaaaaabbiaaaaaaaaaaaaabfmaaacaaacaaaeaaaaaaaaaapm
aaaaaaaaaaaaabgpaaacaaakaaabaaaaaaaaabbiaaaaaaaafpebgnhagmgjhehf
gegfaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaafpemgjghgiheengbhehcgjhi
daaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpengbgjgofegfhifpfdfeaa
aaabaaadaaabaaaeaaabaaaaaaaaaaaafpepgcgkgfgdhedcfhgphcgmgeaafpfe
gjgngfaafpfhgbhggffdhagfgfgeaafpfhgphcgmgefdhagbgdgfemgjghgihefa
gphddaaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaahfgogjhehjfpfdgdgb
gmgfaahghdfpddfpdaaadccodacodcdadddfddcodaaaklklaaaaaaaaaaaaaaab
aaaaaaaaaaaaaaaaaaaaaabeaapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaeaaaaaacaeaadbaaafaaaaaaaaaaaaaaaaaaaacmieaaaaaaabaaaaaaad
aaaaaaaeaaaaacjaaabaaaafaaaadaagaadafaahaaaadafaaaabhbfbaaachcfc
aaadhdfdaaaabacfaaaabaceaaaabacdaaaabacjaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaadoccpjidlpiaaaaamaejapnldpiaaaaadpaaaaaadoemmmmneamjapnl
dpggggggdpljjjjkeaehkobeeaammmmndpaaaaaahajfgaafbaalbaaafgaaaaaa
aaaaaaaagaammcaabcaaaaaaaaaagabcfabibcaabcaaaaaaaaaaaaaagabnmeaa
bcaaaaaaaaaagacdbacjbcaaccaaaaaaafpibaaaaaaaagiiaaaaaaaaafpicaaa
aaaaaoiiaaaaaaaaafpiaaaaaaaaaohiaaaaaaaamiacaaaaaagmlbaacbaapnaa
miaiaaaaaagmgmaacbaaapaaheacaaababloblbllaabpnaakiiaaaaabiaaaaeb
mcaaaaapmiaiaaadaamggmaaobaaaaaamiahaaadaablmalbklaappabmiahaaad
aamagmbliladpnppmiahaaadaamaaaaaoiadaaaamiapaaafaadeagaakbadpoaa
miahaaaeaalemgaakaafpnaamacaaeaaaaaaaalbocaaaaaemaekaeaaaamglmmg
kbaapoaemabpaeadaablaagmkbabajaemiahaaaeaabbmaaaobaaaeaamiahaaaf
aamagmaakbaebaaamiacaaaaaagmgmaaoaafabaabeapaaaeaablaalbkbabafaf
aeibaaabafmgmgbloaafabafmiapaaaeaagmiiiiklabaeaemiapaaaeaabldeje
klaaadaemiapiadoaalbaadeklaaacaemialaaacaagfblaakbacakaamiaoaaab
aalbimaakbacaiaamiahaaacaagmlebfklacahabmiapaaabaagmaaaaklabaiad
miapaaabaablaaaaklaaahabmiapaaabaalbaaaaklaaagabmiahiaacaemamaaa
kaababaamiahiaabaablmaleklacagacmiadiaaaaamelabkilaabbbbmiahaaaa
aablleaakbabaoaamiahaaaaaamgmaleklabanaamiahaaaaaalbleleklabamaa
miahiaadaagmmaleklabalaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "POINT_COOKIE" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_Time]
Vector 466 [_WorldSpaceLightPos0]
Matrix 260 [_Object2World]
Vector 465 [unity_Scale]
Matrix 264 [_LightMatrix0]
Float 464 [_WaveSpeed]
Float 463 [_Amplitude]
Vector 462 [_MainTex_ST]
"sce_vp_rsx // 38 instructions using 3 registers
[Configuration]
8
0000002601050300
[Defaults]
2
461 4
400ccccd3e4ccccd4047ae143f000000
460 2
3f6666663fb9999a
[Microcode]
608
00001c6c009d120c013fc0c36041dffc401f9c6c011ce808010400d740619f9c
00009c6c0040007f8106c08360403ffc00011c6c0080082a8100008360411ffc
00001c6c00c000000106c08aa0403ffc00009c6c005d00000186c08360411ffc
401f9c6c0150600c008600c360405fa000009c6c009d3000028000c360411ffc
201fdc6c004000000286c08360411ffc00009c6c00c000550106c09fe0205ffc
00001c6c004000000286c08360403ffc00002400004000800286c08360403ffc
00009c6c011cd07f808800d540a19ffc00001c6c011cc07f809540d540a03ffc
401f9c6c7950500c008600caa0a880a000011c6c789cc080048000c000b100fc
00009c6c7880082a8115415fe022807c00009c6c008008000295408360411ffc
00001c6c0080082a813fc04360403ffc00001c6c009cf07f808000c360403ffc
00009c6c009cf000028000c360411ffc00009c6c009cf02a828000c360409ffc
00009c6c011cd02a82bfc0c001209ffc00009c6c011cd080029540d540405ffc
00009c6c011cd07f80bfc0c000411ffc401f9c6c0150400c008600c360411fa0
401f9c6c01d0300d8286c0c360403f80401f9c6c01d0200d8286c0c360405f80
401f9c6c01d0100d8286c0c360409f80401f9c6c01d0000d8286c0c360411f80
00001c6c01d0700d8286c0c360403ffc00001c6c01d0600d8286c0c360405ffc
00001c6c01d0500d8286c0c360409ffc00001c6c01d0400d8286c0c360411ffc
401f9c6c00dd200c0186c0a30021dfa4401f9c6c01d0a00d8086c0c360405fa8
401f9c6c01d0900d8086c0c360409fa8401f9c6c01d0800d8086c0c360411fa9
"
}

SubProgram "d3d11 " {
Keywords { "POINT_COOKIE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 176 // 160 used size, 9 vars
Matrix 48 [_LightMatrix0] 4
Float 128 [_WaveSpeed]
Float 132 [_Amplitude]
Vector 144 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityLighting" 720 // 16 used size, 17 vars
Vector 0 [_WorldSpaceLightPos0] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 37 instructions, 3 temp regs, 0 temp arrays:
// ALU 35 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedonhjhbbdhlaeaplneoojpkkmfbjmdfoiabaaaaaageahaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcmiafaaaaeaaaabaa
hcabaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaafjaaaaaeegiocaaaabaaaaaa
abaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaad
dcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaad
hccabaaaaeaaaaaagiaaaaacadaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaa
aaaaaaaaaiaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaa
aaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaa
aaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaa
aaaaaaaaaceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaa
enaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgifcaaaaaaaaaaaaiaaaaaadiaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaa
adaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaa
aaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakecaabaaa
aaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaa
dcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaacaaaaaa
kgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaa
adaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaaldccabaaa
abaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaajaaaaaaogikcaaaaaaaaaaa
ajaaaaaadiaaaaaihcaabaaaabaaaaaaegbcbaaaacaaaaaapgipcaaaadaaaaaa
beaaaaaadiaaaaaihcaabaaaacaaaaaafgafbaaaabaaaaaaegiccaaaadaaaaaa
anaaaaaadcaaaaaklcaabaaaabaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaa
abaaaaaaegaibaaaacaaaaaadcaaaaakhccabaaaacaaaaaaegiccaaaadaaaaaa
aoaaaaaakgakbaaaabaaaaaaegadbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadiaaaaaipcaabaaaacaaaaaa
fgafbaaaaaaaaaaaegiocaaaadaaaaaaanaaaaaadcaaaaakpcaabaaaacaaaaaa
egiocaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaaegaobaaaacaaaaaadcaaaaak
lcaabaaaaaaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaaegaibaaa
abaaaaaadcaaaaaklcaabaaaaaaaaaaaegiicaaaadaaaaaaaoaaaaaakgakbaaa
aaaaaaaaegambaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaa
aoaaaaaakgakbaaaaaaaaaaaegaobaaaacaaaaaadcaaaaakpcaabaaaabaaaaaa
egiocaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
hcaabaaaaaaaaaaaegiccaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaaegadbaaa
aaaaaaaaaaaaaaajhccabaaaadaaaaaaegacbaiaebaaaaaaaaaaaaaaegiccaaa
acaaaaaaaaaaaaaadiaaaaaihcaabaaaaaaaaaaafgafbaaaabaaaaaaegiccaaa
aaaaaaaaaeaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaaaaaaaaaadaaaaaa
agaabaaaabaaaaaaegacbaaaaaaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaa
aaaaaaaaafaaaaaakgakbaaaabaaaaaaegacbaaaaaaaaaaadcaaaaakhccabaaa
aeaaaaaaegiccaaaaaaaaaaaagaaaaaapgapbaaaabaaaaaaegacbaaaaaaaaaaa
doaaaaab"
}

SubProgram "gles " {
Keywords { "POINT_COOKIE" }
"!!GLES


#ifdef VERTEX

varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = _glesVertex;
  highp float t_5;
  highp float tmpvar_6;
  tmpvar_6 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_7;
  tmpvar_7 = (_Time * _WaveSpeed).x;
  t_5 = tmpvar_7;
  if ((tmpvar_7 < 0.0)) {
    t_5 = (tmpvar_7 * -1.0);
  };
  tmpvar_4.x = (_glesVertex.x + (((sin(((t_5 * 1.45) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_4.y = ((((sin(((t_5 * 3.12) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_4.z = (_glesVertex.z - (((sin(((t_5 * 2.2) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  mat3 tmpvar_8;
  tmpvar_8[0] = _Object2World[0].xyz;
  tmpvar_8[1] = _Object2World[1].xyz;
  tmpvar_8[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (tmpvar_1 * unity_Scale.w));
  tmpvar_2 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = (_WorldSpaceLightPos0.xyz - (_Object2World * tmpvar_4).xyz);
  tmpvar_3 = tmpvar_10;
  gl_Position = (glstate_matrix_mvp * tmpvar_4);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * tmpvar_4)).xyz;
}



#endif
#ifdef FRAGMENT

varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform samplerCube _LightTexture0;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec4 c_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  c_3 = tmpvar_5;
  lowp float tmpvar_6;
  tmpvar_6 = c_3.w;
  lowp float x_7;
  x_7 = (c_3.w - _Cutoff);
  if ((x_7 < 0.0)) {
    discard;
  };
  mediump vec3 tmpvar_8;
  tmpvar_8 = normalize(xlv_TEXCOORD2);
  lightDir_2 = tmpvar_8;
  highp float tmpvar_9;
  tmpvar_9 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp vec4 c_10;
  c_10.xyz = ((c_3.xyz * _LightColor0.xyz) * ((max (0.0, dot (xlv_TEXCOORD1, lightDir_2)) * (texture2D (_LightTextureB0, vec2(tmpvar_9)).w * textureCube (_LightTexture0, xlv_TEXCOORD3).w)) * 2.0));
  c_10.w = tmpvar_6;
  c_1.xyz = c_10.xyz;
  c_1.w = tmpvar_6;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "POINT_COOKIE" }
"!!GLES


#ifdef VERTEX

varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = _glesVertex;
  highp float t_5;
  highp float tmpvar_6;
  tmpvar_6 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_7;
  tmpvar_7 = (_Time * _WaveSpeed).x;
  t_5 = tmpvar_7;
  if ((tmpvar_7 < 0.0)) {
    t_5 = (tmpvar_7 * -1.0);
  };
  tmpvar_4.x = (_glesVertex.x + (((sin(((t_5 * 1.45) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_4.y = ((((sin(((t_5 * 3.12) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_4.z = (_glesVertex.z - (((sin(((t_5 * 2.2) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  mat3 tmpvar_8;
  tmpvar_8[0] = _Object2World[0].xyz;
  tmpvar_8[1] = _Object2World[1].xyz;
  tmpvar_8[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (tmpvar_1 * unity_Scale.w));
  tmpvar_2 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = (_WorldSpaceLightPos0.xyz - (_Object2World * tmpvar_4).xyz);
  tmpvar_3 = tmpvar_10;
  gl_Position = (glstate_matrix_mvp * tmpvar_4);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * tmpvar_4)).xyz;
}



#endif
#ifdef FRAGMENT

varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform samplerCube _LightTexture0;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec4 c_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  c_3 = tmpvar_5;
  lowp float tmpvar_6;
  tmpvar_6 = c_3.w;
  lowp float x_7;
  x_7 = (c_3.w - _Cutoff);
  if ((x_7 < 0.0)) {
    discard;
  };
  mediump vec3 tmpvar_8;
  tmpvar_8 = normalize(xlv_TEXCOORD2);
  lightDir_2 = tmpvar_8;
  highp float tmpvar_9;
  tmpvar_9 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp vec4 c_10;
  c_10.xyz = ((c_3.xyz * _LightColor0.xyz) * ((max (0.0, dot (xlv_TEXCOORD1, lightDir_2)) * (texture2D (_LightTextureB0, vec2(tmpvar_9)).w * textureCube (_LightTexture0, xlv_TEXCOORD3).w)) * 2.0));
  c_10.w = tmpvar_6;
  c_1.xyz = c_10.xyz;
  c_1.w = tmpvar_6;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "flash " {
Keywords { "POINT_COOKIE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 12 [_Time]
Vector 13 [_WorldSpaceLightPos0]
Matrix 4 [_Object2World]
Vector 14 [unity_Scale]
Matrix 8 [_LightMatrix0]
Float 15 [_WaveSpeed]
Float 16 [_Amplitude]
Vector 17 [_MainTex_ST]
"agal_vs
c18 -0.020833 -0.125 1.0 0.5
c19 -0.000002 -0.000022 0.002604 0.00026
c20 0.0 2.2 0.159155 0.5
c21 6.283185 -3.141593 3.12 0.9
c22 1.45 0.2 0.0 0.0
[bc]
abaaaaaaaaaaaiacaaaaaaaaaaaaaaaaaaaaaaffaaaaaaaa add r0.w, a0.x, a0.y
aaaaaaaaaaaaabacamaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r0.x, c12
adaaaaaaaaaaabacapaaaaoeabaaaaaaaaaaaaaaacaaaaaa mul r0.x, c15, r0.x
ckaaaaaaaaaaacacaaaaaaaaacaaaaaabeaaaaaaabaaaaaa slt r0.y, r0.x, c20.x
bfaaaaaaabaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r1.y, r0.y
ahaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa max r0.y, r1.y, r0.y
ckaaaaaaaaaaacacbeaaaaaaabaaaaaaaaaaaaffacaaaaaa slt r0.y, c20.x, r0.y
bfaaaaaaacaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r2.y, r0.y
abaaaaaaaaaaaeacacaaaaffacaaaaaabcaaaaoeabaaaaaa add r0.z, r2.y, c18
adaaaaaaaaaaaeacaaaaaaaaacaaaaaaaaaaaakkacaaaaaa mul r0.z, r0.x, r0.z
aaaaaaaaabaaaiacaaaaaaoeaaaaaaaaaaaaaaaaaaaaaaaa mov r1.w, a0
bfaaaaaaacaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r2.x, r0.x
adaaaaaaabaaacacaaaaaaffacaaaaaaacaaaaaaacaaaaaa mul r1.y, r0.y, r2.x
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaakkacaaaaaa add r1.y, r1.y, r0.z
abaaaaaaabaaabacaaaaaappacaaaaaaaaaaaakkaaaaaaaa add r1.x, r0.w, a0.z
adaaaaaaaaaaabacabaaaaffacaaaaaabeaaaaffabaaaaaa mul r0.x, r1.y, c20.y
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaabeaaaakkabaaaaaa mul r0.x, r0.x, c20.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaabeaaaappabaaaaaa add r0.x, r0.x, c20.w
aiaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r0.x, r0.x
adaaaaaaabaaaeacaaaaaaaaacaaaaaabfaaaaaaabaaaaaa mul r1.z, r0.x, c21.x
abaaaaaaabaaaeacabaaaakkacaaaaaabfaaaaffabaaaaaa add r1.z, r1.z, c21.y
apaaaaaaaaaaabacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.z
baaaaaaaaaaaacacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.z
adaaaaaaaaaaabacaaaaaaffacaaaaaaadaaaaffaaaaaaaa mul r0.x, r0.y, a3.y
adaaaaaaaaaaacacabaaaaffacaaaaaabgaaaaaaabaaaaaa mul r0.y, r1.y, c22.x
abaaaaaaaaaaacacaaaaaaffacaaaaaaabaaaaaaacaaaaaa add r0.y, r0.y, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaabaaaaaoeabaaaaaa mul r0.x, r0.x, c16
bfaaaaaaadaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r3.x, r0.x
adaaaaaaabaaaeacadaaaaaaacaaaaaabgaaaaffabaaaaaa mul r1.z, r3.x, c22.y
abaaaaaaabaaaeacabaaaakkacaaaaaaaaaaaaoeaaaaaaaa add r1.z, r1.z, a0
adaaaaaaaaaaabacabaaaaffacaaaaaabfaaaakkabaaaaaa mul r0.x, r1.y, c21.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaabeaaaakkabaaaaaa mul r0.x, r0.x, c20.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaabeaaaappabaaaaaa add r0.x, r0.x, c20.w
adaaaaaaaaaaacacaaaaaaffacaaaaaabeaaaakkabaaaaaa mul r0.y, r0.y, c20.z
abaaaaaaaaaaacacaaaaaaffacaaaaaabeaaaappabaaaaaa add r0.y, r0.y, c20.w
aiaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa frc r0.y, r0.y
adaaaaaaabaaacacaaaaaaffacaaaaaabfaaaaaaabaaaaaa mul r1.y, r0.y, c21.x
abaaaaaaabaaacacabaaaaffacaaaaaabfaaaaoeabaaaaaa add r1.y, r1.y, c21
aiaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r1.x, r0.x
apaaaaaaaaaaabacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.y
baaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.y
adaaaaaaaaaaabacabaaaaaaacaaaaaabfaaaaoeabaaaaaa mul r0.x, r1.x, c21
abaaaaaaaaaaabacaaaaaaaaacaaaaaabfaaaaffabaaaaaa add r0.x, r0.x, c21.y
adaaaaaaaaaaaeacadaaaaffaaaaaaaaaaaaaaffacaaaaaa mul r0.z, a3.y, r0.y
apaaaaaaacaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sin r2.x, r0.x
baaaaaaaacaaacacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa cos r2.y, r0.x
adaaaaaaaaaaacacadaaaaoeaaaaaaaaadaaaaaaaaaaaaaa mul r0.y, a3, a3.x
adaaaaaaaaaaabacadaaaaffaaaaaaaaacaaaaffacaaaaaa mul r0.x, a3.y, r2.y
bfaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r0.y, r0.y
adaaaaaaaaaaacacaaaaaaffacaaaaaabfaaaappabaaaaaa mul r0.y, r0.y, c21.w
adaaaaaaaaaaabacaaaaaaaaacaaaaaabaaaaaoeabaaaaaa mul r0.x, r0.x, c16
adaaaaaaabaaacacaaaaaaaaacaaaaaabcaaaappabaaaaaa mul r1.y, r0.x, c18.w
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa add r1.y, r1.y, r0.y
adaaaaaaaaaaabacaaaaaakkacaaaaaabaaaaaoeabaaaaaa mul r0.x, r0.z, c16
adaaaaaaabaaabacaaaaaaaaacaaaaaabcaaaappabaaaaaa mul r1.x, r0.x, c18.w
abaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaaoeaaaaaaaa add r1.x, r1.x, a0
bdaaaaaaaaaaaeacabaaaaoeacaaaaaaagaaaaoeabaaaaaa dp4 r0.z, r1, c6
bdaaaaaaaaaaabacabaaaaoeacaaaaaaaeaaaaoeabaaaaaa dp4 r0.x, r1, c4
bdaaaaaaaaaaacacabaaaaoeacaaaaaaafaaaaoeabaaaaaa dp4 r0.y, r1, c5
bdaaaaaaaaaaaiacabaaaaoeacaaaaaaahaaaaoeabaaaaaa dp4 r0.w, r1, c7
bdaaaaaaadaaaeaeaaaaaaoeacaaaaaaakaaaaoeabaaaaaa dp4 v3.z, r0, c10
bdaaaaaaadaaacaeaaaaaaoeacaaaaaaajaaaaoeabaaaaaa dp4 v3.y, r0, c9
bdaaaaaaadaaabaeaaaaaaoeacaaaaaaaiaaaaoeabaaaaaa dp4 v3.x, r0, c8
bfaaaaaaadaaahacaaaaaakeacaaaaaaaaaaaaaaaaaaaaaa neg r3.xyz, r0.xyzz
abaaaaaaacaaahaeadaaaakeacaaaaaaanaaaaoeabaaaaaa add v2.xyz, r3.xyzz, c13
adaaaaaaaaaaahacabaaaaoeaaaaaaaaaoaaaappabaaaaaa mul r0.xyz, a1, c14.w
bdaaaaaaaaaaaiadabaaaaoeacaaaaaaadaaaaoeabaaaaaa dp4 o0.w, r1, c3
bdaaaaaaaaaaaeadabaaaaoeacaaaaaaacaaaaoeabaaaaaa dp4 o0.z, r1, c2
bdaaaaaaaaaaacadabaaaaoeacaaaaaaabaaaaoeabaaaaaa dp4 o0.y, r1, c1
bdaaaaaaaaaaabadabaaaaoeacaaaaaaaaaaaaoeabaaaaaa dp4 o0.x, r1, c0
bcaaaaaaabaaaeaeaaaaaakeacaaaaaaagaaaaoeabaaaaaa dp3 v1.z, r0.xyzz, c6
bcaaaaaaabaaacaeaaaaaakeacaaaaaaafaaaaoeabaaaaaa dp3 v1.y, r0.xyzz, c5
bcaaaaaaabaaabaeaaaaaakeacaaaaaaaeaaaaoeabaaaaaa dp3 v1.x, r0.xyzz, c4
adaaaaaaadaaadacadaaaaoeaaaaaaaabbaaaaoeabaaaaaa mul r3.xy, a3, c17
abaaaaaaaaaaadaeadaaaafeacaaaaaabbaaaaooabaaaaaa add v0.xy, r3.xyyy, c17.zwzw
aaaaaaaaaaaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v0.zw, c0
aaaaaaaaabaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v1.w, c0
aaaaaaaaacaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v2.w, c0
aaaaaaaaadaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v3.w, c0
"
}

SubProgram "d3d11_9x " {
Keywords { "POINT_COOKIE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 176 // 160 used size, 9 vars
Matrix 48 [_LightMatrix0] 4
Float 128 [_WaveSpeed]
Float 132 [_Amplitude]
Vector 144 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityLighting" 720 // 16 used size, 17 vars
Vector 0 [_WorldSpaceLightPos0] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 37 instructions, 3 temp regs, 0 temp arrays:
// ALU 35 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecedocalcfhjafcdedlcnhaijdpfokomekcmabaaaaaapmalaaaaaeaaaaaa
daaaaaaameaeaaaajeakaaaafmalaaaaebgpgodjimaeaaaaimaeaaaaaaacpopp
baaeaaaahmaaaaaaahaaceaaaaaahiaaaaaahiaaaaaaceaaabaahiaaaaaaadaa
aeaaabaaaaaaaaaaaaaaaiaaacaaafaaaaaaaaaaabaaaaaaabaaahaaaaaaaaaa
acaaaaaaabaaaiaaaaaaaaaaadaaaaaaaeaaajaaaaaaaaaaadaaamaaaeaaanaa
aaaaaaaaadaabeaaabaabbaaaaaaaaaaaaaaaaaaaaacpoppfbaaaaafbcaaapka
jkjjljdpbekoeheamnmmameaggggggdpfbaaaaafbdaaapkanlapmjeanlapejma
mnmmemdoaaaaaaaafbaaaaafbeaaapkaaaaaaaaaaaaaaamaidpjccdoaaaaaadp
fbaaaaafbfaaapkaabannalfgballglhklkkckdlijiiiidjfbaaaaafbgaaapka
klkkkklmaaaaaaloaaaaiadpaaaaaadpbpaaaaacafaaaaiaaaaaapjabpaaaaac
afaaaciaacaaapjabpaaaaacafaaadiaadaaapjaaeaaaaaeaaaaadoaadaaoeja
agaaoekaagaaookaafaaaaadaaaaahiaacaaoejabbaappkaafaaaaadabaaahia
aaaaffiaaoaaoekaaeaaaaaeaaaaaliaanaakekaaaaaaaiaabaakeiaaeaaaaae
abaaahoaapaaoekaaaaakkiaaaaapeiaabaaaaacaaaaabiaafaaaakaafaaaaad
aaaaabiaaaaaaaiaahaaaakaamaaaaadaaaaaciaaaaaaaiabeaaaakaafaaaaad
aaaaaciaaaaaffiaaaaaaaiaaeaaaaaeaaaaabiaaaaaffiabeaaffkaaaaaaaia
acaaaaadaaaaaciaaaaaffjaaaaaaajaacaaaaadaaaaaciaaaaaffiaaaaakkja
aeaaaaaeaaaaahiaaaaaaaiabcaaoekaaaaaffiaaeaaaaaeaaaaahiaaaaaoeia
beaakkkabeaappkabdaaaaacaaaaahiaaaaaoeiaaeaaaaaeaaaaahiaaaaaoeia
bdaaaakabdaaffkacfaaaaaeabaaaciaaaaaffiabfaaoekabgaaoekaafaaaaad
aaaaaciaabaaffiaadaaffjaafaaaaadaaaaaciaaaaaffiaafaaffkaafaaaaad
aaaaaiiaadaaaajaadaaffjaafaaaaadaaaaaiiaaaaappiabcaappkaaeaaaaae
aaaaaciaaaaaffiabeaappkaaaaappibafaaaaadabaaahiaaaaaffiaaoaaoeka
cfaaaaaeacaaaciaaaaaaaiabfaaoekabgaaoekacfaaaaaeadaaaciaaaaakkia
bfaaoekabgaaoekaafaaaaadaaaaabiaadaaffiaadaaffjaafaaaaadaaaaabia
aaaaaaiaafaaffkaaeaaaaaeaaaaabiaaaaaaaiabdaakkkbaaaakkjaafaaaaad
aaaaaeiaacaaffiaadaaffjaafaaaaadaaaaaeiaaaaakkiaafaaffkaaeaaaaae
aaaaaeiaaaaakkiabeaappkaaaaaaajaaeaaaaaeabaaahiaanaaoekaaaaakkia
abaaoeiaaeaaaaaeabaaahiaapaaoekaaaaaaaiaabaaoeiaaeaaaaaeabaaahia
baaaoekaaaaappjaabaaoeiaacaaaaadacaaahoaabaaoeibaiaaoekaafaaaaad
abaaapiaaaaaffiaaoaaoekaafaaaaadacaaapiaaaaaffiaakaaoekaaeaaaaae
acaaapiaajaaoekaaaaakkiaacaaoeiaaeaaaaaeabaaapiaanaaoekaaaaakkia
abaaoeiaaeaaaaaeabaaapiaapaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaapia
alaaoekaaaaaaaiaacaaoeiaaeaaaaaeaaaaapiaamaaoekaaaaappjaaaaaoeia
aeaaaaaeabaaapiabaaaoekaaaaappjaabaaoeiaafaaaaadacaaahiaabaaffia
acaaoekaaeaaaaaeacaaahiaabaaoekaabaaaaiaacaaoeiaaeaaaaaeabaaahia
adaaoekaabaakkiaacaaoeiaaeaaaaaeadaaahoaaeaaoekaabaappiaabaaoeia
aeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeia
ppppaaaafdeieefcmiafaaaaeaaaabaahcabaaaafjaaaaaeegiocaaaaaaaaaaa
akaaaaaafjaaaaaeegiocaaaabaaaaaaabaaaaaafjaaaaaeegiocaaaacaaaaaa
abaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaa
fpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaa
aaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaa
gfaaaaadhccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagiaaaaacadaaaaaa
diaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaaaiaaaaaaakiacaaaabaaaaaa
aaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaa
dhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaa
akaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaaakbabaaa
aaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaaaaaaaaaa
dcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdpbekoehea
mnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaaaanaaaaa
egacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaafgbfbaaa
adaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaaaaaaaaaa
aiaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaaadp
diaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaadcaaaaak
ccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdpbkaabaaa
aaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaadaaaaaa
abaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaadp
akbabaaaaaaaaaaadcaaaaakecaabaaaaaaaaaaackaabaiaebaaaaaaaaaaaaaa
abeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
adaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaa
abaaaaaaegiocaaaadaaaaaaacaaaaaakgakbaaaaaaaaaaaegaobaaaabaaaaaa
dcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaajaaaaaaogikcaaaaaaaaaaaajaaaaaadiaaaaaihcaabaaaabaaaaaa
egbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaacaaaaaa
fgafbaaaabaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaabaaaaaa
egiicaaaadaaaaaaamaaaaaaagaabaaaabaaaaaaegaibaaaacaaaaaadcaaaaak
hccabaaaacaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaabaaaaaaegadbaaa
abaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaaadaaaaaa
anaaaaaadiaaaaaipcaabaaaacaaaaaafgafbaaaaaaaaaaaegiocaaaadaaaaaa
anaaaaaadcaaaaakpcaabaaaacaaaaaaegiocaaaadaaaaaaamaaaaaaagaabaaa
aaaaaaaaegaobaaaacaaaaaadcaaaaaklcaabaaaaaaaaaaaegiicaaaadaaaaaa
amaaaaaaagaabaaaaaaaaaaaegaibaaaabaaaaaadcaaaaaklcaabaaaaaaaaaaa
egiicaaaadaaaaaaaoaaaaaakgakbaaaaaaaaaaaegambaaaaaaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaadaaaaaaaoaaaaaakgakbaaaaaaaaaaaegaobaaa
acaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaapaaaaaapgbpbaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaa
apaaaaaapgbpbaaaaaaaaaaaegadbaaaaaaaaaaaaaaaaaajhccabaaaadaaaaaa
egacbaiaebaaaaaaaaaaaaaaegiccaaaacaaaaaaaaaaaaaadiaaaaaihcaabaaa
aaaaaaaafgafbaaaabaaaaaaegiccaaaaaaaaaaaaeaaaaaadcaaaaakhcaabaaa
aaaaaaaaegiccaaaaaaaaaaaadaaaaaaagaabaaaabaaaaaaegacbaaaaaaaaaaa
dcaaaaakhcaabaaaaaaaaaaaegiccaaaaaaaaaaaafaaaaaakgakbaaaabaaaaaa
egacbaaaaaaaaaaadcaaaaakhccabaaaaeaaaaaaegiccaaaaaaaaaaaagaaaaaa
pgapbaaaabaaaaaaegacbaaaaaaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaa
apadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeo
ehefeofeaaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheo
jiaaaaaaafaaaaaaaiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaa
apaaaaaaimaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaimaaaaaa
abaaaaaaaaaaaaaaadaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaa
adaaaaaaadaaaaaaahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaa
ahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl"
}

SubProgram "gles3 " {
Keywords { "POINT_COOKIE" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 398
struct Input {
    highp vec2 uv_MainTex;
};
#line 420
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    mediump vec3 lightDir;
    highp vec3 _LightCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform samplerCube _LightTexture0;
uniform highp mat4 _LightMatrix0;
#line 393
uniform sampler2D _LightTextureB0;
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
uniform highp float _WaveSpeed;
#line 397
uniform highp float _Amplitude;
#line 403
#line 429
uniform highp vec4 _MainTex_ST;
uniform lowp float _Cutoff;
#line 77
highp vec3 WorldSpaceLightDir( in highp vec4 v ) {
    highp vec3 worldPos = (_Object2World * v).xyz;
    return (_WorldSpaceLightPos0.xyz - worldPos);
}
#line 403
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 407
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 411
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 430
v2f_surf vert_surf( in appdata_full v ) {
    v2f_surf o;
    #line 433
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    o.normal = (mat3( _Object2World) * (v.normal * unity_Scale.w));
    #line 437
    highp vec3 lightDir = WorldSpaceLightDir( v.vertex);
    o.lightDir = lightDir;
    o._LightCoord = (_LightMatrix0 * (_Object2World * v.vertex)).xyz;
    #line 441
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out lowp vec3 xlv_TEXCOORD1;
out mediump vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec3(xl_retval.normal);
    xlv_TEXCOORD2 = vec3(xl_retval.lightDir);
    xlv_TEXCOORD3 = vec3(xl_retval._LightCoord);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 398
struct Input {
    highp vec2 uv_MainTex;
};
#line 420
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    mediump vec3 lightDir;
    highp vec3 _LightCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform samplerCube _LightTexture0;
uniform highp mat4 _LightMatrix0;
#line 393
uniform sampler2D _LightTextureB0;
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
uniform highp float _WaveSpeed;
#line 397
uniform highp float _Amplitude;
#line 403
#line 429
uniform highp vec4 _MainTex_ST;
uniform lowp float _Cutoff;
#line 338
lowp vec4 LightingLambert( in SurfaceOutput s, in lowp vec3 lightDir, in lowp float atten ) {
    lowp float diff = max( 0.0, dot( s.Normal, lightDir));
    lowp vec4 c;
    #line 342
    c.xyz = ((s.Albedo * _LightColor0.xyz) * ((diff * atten) * 2.0));
    c.w = s.Alpha;
    return c;
}
#line 414
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 416
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 444
lowp vec4 frag_surf( in v2f_surf IN ) {
    #line 446
    Input surfIN;
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    #line 450
    o.Emission = vec3( 0.0);
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    #line 454
    o.Normal = IN.normal;
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    lowp vec3 lightDir = normalize(IN.lightDir);
    #line 458
    lowp vec4 c = LightingLambert( o, lightDir, ((texture( _LightTextureB0, vec2( dot( IN._LightCoord, IN._LightCoord))).w * texture( _LightTexture0, IN._LightCoord).w) * 1.0));
    c.w = o.Alpha;
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in lowp vec3 xlv_TEXCOORD1;
in mediump vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.normal = vec3(xlv_TEXCOORD1);
    xlt_IN.lightDir = vec3(xlv_TEXCOORD2);
    xlt_IN._LightCoord = vec3(xlv_TEXCOORD3);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL_COOKIE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 13 [_Time]
Vector 14 [_WorldSpaceLightPos0]
Matrix 5 [_Object2World]
Vector 15 [unity_Scale]
Matrix 9 [_LightMatrix0]
Float 16 [_WaveSpeed]
Float 17 [_Amplitude]
Vector 18 [_MainTex_ST]
"!!ARBvp1.0
# 80 ALU
PARAM c[24] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.mvp,
		program.local[5..18],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[16];
MUL R0.x, R0, c[13];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[19];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[20].xyxw, c[20].zwzw;
MAD R1.xyz, R1, R0, c[21].xyxw;
MAD R1.xyz, R1, R0, c[21].zwzw;
MAD R1.xyz, R1, R0, c[22].xyxw;
MAD R0.xyz, R1, R0, c[19].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[22].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[19].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[23].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[17];
MAD R0.w, -R0.x, c[23].x, vertex.position.z;
MAD R0.x, R1.w, c[23].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[19];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[20].xyxw, c[20].zwzw;
MAD R3.xyz, R2, R0, c[21].xyxw;
MAD R3.xyz, R3, R0, c[21].zwzw;
MAD R3.xyz, R3, R0, c[22].xyxw;
ADD R1.xyz, -R1.w, c[19];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[20].xyxw, c[20].zwzw;
MAD R2.xyz, R2, R1, c[21].xyxw;
MAD R2.xyz, R2, R1, c[21].zwzw;
MAD R3.xyz, R3, R0, c[19].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[22].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[19].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[22].xyxw;
MAD R1.xyz, R0, R1, c[19].wzww;
SGE R0.yz, R1.w, c[22].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[19].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R0.x, R0, c[17];
MUL R0.y, -R0, c[23].z;
MAD R0.y, R0.x, c[19], R0;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R2.w, c[17];
MAD R0.x, R0, c[19].y, vertex.position;
DP4 R1.z, R0.xywz, c[7];
DP4 R1.x, R0.xywz, c[5];
DP4 R1.y, R0.xywz, c[6];
DP4 R1.w, R0.xywz, c[8];
DP4 result.texcoord[3].y, R1, c[10];
DP4 result.texcoord[3].x, R1, c[9];
MUL R1.xyz, vertex.normal, c[15].w;
DP4 result.position.w, R0.xywz, c[4];
DP4 result.position.z, R0.xywz, c[3];
DP4 result.position.y, R0.xywz, c[2];
DP4 result.position.x, R0.xywz, c[1];
DP3 result.texcoord[1].z, R1, c[7];
DP3 result.texcoord[1].y, R1, c[6];
DP3 result.texcoord[1].x, R1, c[5];
MOV result.texcoord[2].xyz, c[14];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[18], c[18].zwzw;
END
# 80 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL_COOKIE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 12 [_Time]
Vector 13 [_WorldSpaceLightPos0]
Matrix 4 [_Object2World]
Vector 14 [unity_Scale]
Matrix 8 [_LightMatrix0]
Float 15 [_WaveSpeed]
Float 16 [_Amplitude]
Vector 17 [_MainTex_ST]
"vs_2_0
; 80 ALU
def c18, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c19, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c20, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c21, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c22, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_normal0 v2
dcl_texcoord0 v3
add r0.w, v0.x, v0.y
mov r0.x, c12
mul r0.x, c15, r0
slt r0.y, r0.x, c20.x
max r0.y, -r0, r0
slt r0.y, c20.x, r0
add r0.z, -r0.y, c18
mul r0.z, r0.x, r0
mov r1.w, v0
mad r1.y, r0, -r0.x, r0.z
add r1.x, r0.w, v0.z
mad r0.x, r1.y, c20.y, r1
mad r0.x, r0, c20.z, c20.w
frc r0.x, r0
mad r1.z, r0.x, c21.x, c21.y
sincos r0.xy, r1.z, c19.xyzw, c18.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1, c22.x, r1.x
mul r0.x, r0, c16
mad r1.z, -r0.x, c22.y, v0
mad r0.x, r1.y, c21.z, r1
mad r0.x, r0, c20.z, c20.w
mad r0.y, r0, c20.z, c20.w
frc r0.y, r0
mad r1.y, r0, c21.x, c21
frc r1.x, r0
sincos r0.xy, r1.y, c19.xyzw, c18.xyzw
mad r0.x, r1, c21, c21.y
mul r0.z, v3.y, r0.y
sincos r2.xy, r0.x, c19.xyzw, c18.xyzw
mul r0.y, v3, v3.x
mul r0.x, v3.y, r2.y
mul r0.y, -r0, c21.w
mul r0.x, r0, c16
mad r1.y, r0.x, c18.w, r0
mul r0.x, r0.z, c16
mad r1.x, r0, c18.w, v0
dp4 r0.z, r1, c6
dp4 r0.x, r1, c4
dp4 r0.y, r1, c5
dp4 r0.w, r1, c7
dp4 oT3.y, r0, c9
dp4 oT3.x, r0, c8
mul r0.xyz, v2, c14.w
dp4 oPos.w, r1, c3
dp4 oPos.z, r1, c2
dp4 oPos.y, r1, c1
dp4 oPos.x, r1, c0
dp3 oT1.z, r0, c6
dp3 oT1.y, r0, c5
dp3 oT1.x, r0, c4
mov oT2.xyz, c13
mad oT0.xy, v3, c17, c17.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL_COOKIE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Float 16 [_Amplitude]
Matrix 11 [_LightMatrix0] 4
Vector 17 [_MainTex_ST]
Matrix 6 [_Object2World] 4
Vector 0 [_Time]
Float 15 [_WaveSpeed]
Vector 1 [_WorldSpaceLightPos0]
Matrix 2 [glstate_matrix_mvp] 4
Vector 10 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 44.00-45.33 (33-34 instructions), vertex: 32, texture: 0,
//   sequencer: 20,  6 GPRs, 30 threads,
// Performance (if enough threads): ~44-45 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacdeaaaaaceeaaaaaaaaaaaaaaceaaaaabliaaaaaboaaaaaaaaa
aaaaaaaaaaaaabjaaaaaaabmaaaaabicpppoadaaaaaaaaajaaaaaabmaaaaaaaa
aaaaabhlaaaaaanaaaacaabaaaabaaaaaaaaaanmaaaaaaaaaaaaaaomaaacaaal
aaaeaaaaaaaaaapmaaaaaaaaaaaaabamaaacaabbaaabaaaaaaaaabbiaaaaaaaa
aaaaabciaaacaaagaaaeaaaaaaaaaapmaaaaaaaaaaaaabdgaaacaaaaaaabaaaa
aaaaabbiaaaaaaaaaaaaabdmaaacaaapaaabaaaaaaaaaanmaaaaaaaaaaaaabeh
aaacaaabaaabaaaaaaaaabbiaaaaaaaaaaaaabfmaaacaaacaaaeaaaaaaaaaapm
aaaaaaaaaaaaabgpaaacaaakaaabaaaaaaaaabbiaaaaaaaafpebgnhagmgjhehf
gegfaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaafpemgjghgiheengbhehcgjhi
daaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpengbgjgofegfhifpfdfeaa
aaabaaadaaabaaaeaaabaaaaaaaaaaaafpepgcgkgfgdhedcfhgphcgmgeaafpfe
gjgngfaafpfhgbhggffdhagfgfgeaafpfhgphcgmgefdhagbgdgfemgjghgihefa
gphddaaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaahfgogjhehjfpfdgdgb
gmgfaahghdfpddfpdaaadccodacodcdadddfddcodaaaklklaaaaaaaaaaaaaaab
aaaaaaaaaaaaaaaaaaaaaabeaapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaeaaaaaacaeaadbaaafaaaaaaaaaaaaaaaaaaaaciieaaaaaaabaaaaaaad
aaaaaaaeaaaaacjaaabaaaafaaaadaagaadafaahaaaadafaaaabhbfbaaachcfc
aaadddfdaaaabacfaaaabaceaaaabacdaaaabacjaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaadoccpjidlpiaaaaamaejapnldpiaaaaadpaaaaaadoemmmmneamjapnl
dpggggggdpljjjjkeaehkobeeaammmmndpaaaaaahajfgaafbaalbaaafgaaaaaa
aaaaaaaagaammcaabcaaaaaaaaaagabcfabibcaabcaaaaaaaaaaaaaagabnmeaa
bcaaaaaaaaaagacdbacjbcaaccaaaaaaafpibaaaaaaaagiiaaaaaaaaafpicaaa
aaaaaoiiaaaaaaaaafpiaaaaaaaaaohiaaaaaaaamiacaaaaaagmlbaacbaapnaa
miaiaaaaaagmgmaacbaaapaaheacaaababloblbllaabpnaakiiaaaaabiaaaaeb
mcaaaaapmiaiaaadaamggmaaobaaaaaamiahaaadaablmalbklaappabmiahaaad
aamagmbliladpnppmiahaaadaamaaaaaoiadaaaamiapaaafaadeagaakbadpoaa
miahaaaeaalemgaakaafpnaamacaaeaaaaaaaalbocaaaaaemaekaeaaaamglmmg
kbaapoaemabpaeadaablaagmkbabajaemiahaaaeaabbmaaaobaaaeaamiahaaaf
aamagmaakbaebaaamiacaaaaaagmgmaaoaafabaabeapaaaeaablaalbkbabafaf
aeibaaabafmgmgbloaafabafmiapaaaeaagmiiiiklabaeaemiapaaaeaabldeje
klaaadaemiapiadoaalbaadeklaaacaemialaaacaagfblaakbacakaamiaoaaab
aalbimaakbacaiaamiahaaacaagmlebfklacahabmiapaaabaagmiiiiklabaiad
miapaaabaabldejeklaaahabmiapaaabaalbnajeklaaagabmiahiaacaamamaaa
ccababaamiahiaabaablmaleklacagacmiadiaaaaamelabkilaabbbbmiadaaaa
aamglaaakbabaoaamiadaaaaaabllalaklabanaamiadaaaaaalblalaklabamaa
miadiaadaagmlalaklabalaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL_COOKIE" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_Time]
Vector 466 [_WorldSpaceLightPos0]
Matrix 260 [_Object2World]
Vector 465 [unity_Scale]
Matrix 264 [_LightMatrix0]
Float 464 [_WaveSpeed]
Float 463 [_Amplitude]
Vector 462 [_MainTex_ST]
"sce_vp_rsx // 37 instructions using 3 registers
[Configuration]
8
0000002501050300
[Defaults]
2
461 4
400ccccd3e4ccccd4047ae143f000000
460 2
3f6666663fb9999a
[Microcode]
592
401f9c6c005d200c0186c0836041dfa400001c6c009d120c013fc0c36041dffc
401f9c6c011ce808010400d740619f9c00009c6c0040007f8106c08360403ffc
00011c6c0080082a8100008360411ffc00001c6c00c000000106c08aa0403ffc
00009c6c005d00000186c08360411ffc401f9c6c0150600c008600c360405fa0
00009c6c009d3000028000c360411ffc201fdc6c004000000286c08360411ffc
00009c6c00c000550106c09fe0205ffc00001c6c004000000286c08360403ffc
00002400004000800286c08360403ffc00009c6c011cd07f808800d540a19ffc
00001c6c011cc07f809540d540a03ffc401f9c6c7950500c008600caa0a880a0
00011c6c789cc080048000c000b100fc00009c6c7880082a8115415fe022807c
00009c6c008008000295408360411ffc00001c6c0080082a813fc04360403ffc
00001c6c009cf07f808000c360403ffc00009c6c009cf000028000c360411ffc
00009c6c009cf02a828000c360409ffc00009c6c011cd02a82bfc0c001209ffc
00009c6c011cd080029540d540405ffc00009c6c011cd07f80bfc0c000411ffc
401f9c6c0150400c008600c360411fa0401f9c6c01d0300d8286c0c360403f80
401f9c6c01d0200d8286c0c360405f80401f9c6c01d0100d8286c0c360409f80
00001c6c01d0700d8286c0c360403ffc00001c6c01d0600d8286c0c360405ffc
00001c6c01d0500d8286c0c360409ffc00001c6c01d0400d8286c0c360411ffc
401f9c6c01d0000d8286c0c360411f80401f9c6c01d0900d8086c0c360409fa8
401f9c6c01d0800d8086c0c360411fa9
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL_COOKIE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 176 // 160 used size, 9 vars
Matrix 48 [_LightMatrix0] 4
Float 128 [_WaveSpeed]
Float 132 [_Amplitude]
Vector 144 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityLighting" 720 // 16 used size, 17 vars
Vector 0 [_WorldSpaceLightPos0] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 33 instructions, 3 temp regs, 0 temp arrays:
// ALU 30 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedclppbpllpehgbieegojeboiljdjmapepabaaaaaamaagaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaimaaaaaaadaaaaaaaaaaaaaa
adaaaaaaabaaaaaaamadaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahaiaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcceafaaaaeaaaabaa
ejabaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaafjaaaaaeegiocaaaabaaaaaa
abaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaad
dcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadmccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagiaaaaacadaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaa
aaaaaaaaaiaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaa
aaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaa
aaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaa
aaaaaaaaaceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaa
enaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgifcaaaaaaaaaaaaiaaaaaadiaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaa
adaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaa
aaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadiaaaaaipcaabaaaacaaaaaa
fgafbaaaaaaaaaaaegiocaaaadaaaaaaanaaaaaadcaaaaajbcaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakccaabaaa
aaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaa
dcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaakpcaabaaaacaaaaaaegiocaaaadaaaaaaamaaaaaa
agaabaaaaaaaaaaaegaobaaaacaaaaaadcaaaaakpcaabaaaacaaaaaaegiocaaa
adaaaaaaaoaaaaaafgafbaaaaaaaaaaaegaobaaaacaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaadaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaaabaaaaaa
dcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaapaaaaaa
pgbpbaaaaaaaaaaaegaobaaaacaaaaaadiaaaaaidcaabaaaabaaaaaafgafbaaa
aaaaaaaaegiacaaaaaaaaaaaaeaaaaaadcaaaaakdcaabaaaaaaaaaaaegiacaaa
aaaaaaaaadaaaaaaagaabaaaaaaaaaaaegaabaaaabaaaaaadcaaaaakdcaabaaa
aaaaaaaaegiacaaaaaaaaaaaafaaaaaakgakbaaaaaaaaaaaegaabaaaaaaaaaaa
dcaaaaakmccabaaaabaaaaaaagiecaaaaaaaaaaaagaaaaaapgapbaaaaaaaaaaa
agaebaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaajaaaaaaogikcaaaaaaaaaaaajaaaaaadiaaaaaihcaabaaaaaaaaaaa
egbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaaaaaaaaa
egiicaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaaegaibaaaabaaaaaadcaaaaak
hccabaaaacaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaaaaaaaaaegadbaaa
aaaaaaaadgaaaaaghccabaaaadaaaaaaegiccaaaacaaaaaaaaaaaaaadoaaaaab
"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" }
"!!GLES


#ifdef VERTEX

varying highp vec2 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = _glesVertex;
  highp float t_5;
  highp float tmpvar_6;
  tmpvar_6 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_7;
  tmpvar_7 = (_Time * _WaveSpeed).x;
  t_5 = tmpvar_7;
  if ((tmpvar_7 < 0.0)) {
    t_5 = (tmpvar_7 * -1.0);
  };
  tmpvar_4.x = (_glesVertex.x + (((sin(((t_5 * 1.45) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_4.y = ((((sin(((t_5 * 3.12) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_4.z = (_glesVertex.z - (((sin(((t_5 * 2.2) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  mat3 tmpvar_8;
  tmpvar_8[0] = _Object2World[0].xyz;
  tmpvar_8[1] = _Object2World[1].xyz;
  tmpvar_8[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (tmpvar_1 * unity_Scale.w));
  tmpvar_2 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  tmpvar_3 = tmpvar_10;
  gl_Position = (glstate_matrix_mvp * tmpvar_4);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * tmpvar_4)).xy;
}



#endif
#ifdef FRAGMENT

varying highp vec2 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform sampler2D _LightTexture0;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec4 c_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  c_3 = tmpvar_5;
  lowp float tmpvar_6;
  tmpvar_6 = c_3.w;
  lowp float x_7;
  x_7 = (c_3.w - _Cutoff);
  if ((x_7 < 0.0)) {
    discard;
  };
  lightDir_2 = xlv_TEXCOORD2;
  lowp vec4 c_8;
  c_8.xyz = ((c_3.xyz * _LightColor0.xyz) * ((max (0.0, dot (xlv_TEXCOORD1, lightDir_2)) * texture2D (_LightTexture0, xlv_TEXCOORD3).w) * 2.0));
  c_8.w = tmpvar_6;
  c_1.xyz = c_8.xyz;
  c_1.w = tmpvar_6;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL_COOKIE" }
"!!GLES


#ifdef VERTEX

varying highp vec2 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  lowp vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = _glesVertex;
  highp float t_5;
  highp float tmpvar_6;
  tmpvar_6 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_7;
  tmpvar_7 = (_Time * _WaveSpeed).x;
  t_5 = tmpvar_7;
  if ((tmpvar_7 < 0.0)) {
    t_5 = (tmpvar_7 * -1.0);
  };
  tmpvar_4.x = (_glesVertex.x + (((sin(((t_5 * 1.45) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_4.y = ((((sin(((t_5 * 3.12) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_4.z = (_glesVertex.z - (((sin(((t_5 * 2.2) + tmpvar_6)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  mat3 tmpvar_8;
  tmpvar_8[0] = _Object2World[0].xyz;
  tmpvar_8[1] = _Object2World[1].xyz;
  tmpvar_8[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (tmpvar_1 * unity_Scale.w));
  tmpvar_2 = tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_10 = _WorldSpaceLightPos0.xyz;
  tmpvar_3 = tmpvar_10;
  gl_Position = (glstate_matrix_mvp * tmpvar_4);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * tmpvar_4)).xy;
}



#endif
#ifdef FRAGMENT

varying highp vec2 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform sampler2D _LightTexture0;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec4 c_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * _Color);
  c_3 = tmpvar_5;
  lowp float tmpvar_6;
  tmpvar_6 = c_3.w;
  lowp float x_7;
  x_7 = (c_3.w - _Cutoff);
  if ((x_7 < 0.0)) {
    discard;
  };
  lightDir_2 = xlv_TEXCOORD2;
  lowp vec4 c_8;
  c_8.xyz = ((c_3.xyz * _LightColor0.xyz) * ((max (0.0, dot (xlv_TEXCOORD1, lightDir_2)) * texture2D (_LightTexture0, xlv_TEXCOORD3).w) * 2.0));
  c_8.w = tmpvar_6;
  c_1.xyz = c_8.xyz;
  c_1.w = tmpvar_6;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "flash " {
Keywords { "DIRECTIONAL_COOKIE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 12 [_Time]
Vector 13 [_WorldSpaceLightPos0]
Matrix 4 [_Object2World]
Vector 14 [unity_Scale]
Matrix 8 [_LightMatrix0]
Float 15 [_WaveSpeed]
Float 16 [_Amplitude]
Vector 17 [_MainTex_ST]
"agal_vs
c18 -0.020833 -0.125 1.0 0.5
c19 -0.000002 -0.000022 0.002604 0.00026
c20 0.0 2.2 0.159155 0.5
c21 6.283185 -3.141593 3.12 0.9
c22 1.45 0.2 0.0 0.0
[bc]
abaaaaaaaaaaaiacaaaaaaaaaaaaaaaaaaaaaaffaaaaaaaa add r0.w, a0.x, a0.y
aaaaaaaaaaaaabacamaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r0.x, c12
adaaaaaaaaaaabacapaaaaoeabaaaaaaaaaaaaaaacaaaaaa mul r0.x, c15, r0.x
ckaaaaaaaaaaacacaaaaaaaaacaaaaaabeaaaaaaabaaaaaa slt r0.y, r0.x, c20.x
bfaaaaaaabaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r1.y, r0.y
ahaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa max r0.y, r1.y, r0.y
ckaaaaaaaaaaacacbeaaaaaaabaaaaaaaaaaaaffacaaaaaa slt r0.y, c20.x, r0.y
bfaaaaaaacaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r2.y, r0.y
abaaaaaaaaaaaeacacaaaaffacaaaaaabcaaaaoeabaaaaaa add r0.z, r2.y, c18
adaaaaaaaaaaaeacaaaaaaaaacaaaaaaaaaaaakkacaaaaaa mul r0.z, r0.x, r0.z
aaaaaaaaabaaaiacaaaaaaoeaaaaaaaaaaaaaaaaaaaaaaaa mov r1.w, a0
bfaaaaaaacaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r2.x, r0.x
adaaaaaaabaaacacaaaaaaffacaaaaaaacaaaaaaacaaaaaa mul r1.y, r0.y, r2.x
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaakkacaaaaaa add r1.y, r1.y, r0.z
abaaaaaaabaaabacaaaaaappacaaaaaaaaaaaakkaaaaaaaa add r1.x, r0.w, a0.z
adaaaaaaaaaaabacabaaaaffacaaaaaabeaaaaffabaaaaaa mul r0.x, r1.y, c20.y
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaabeaaaakkabaaaaaa mul r0.x, r0.x, c20.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaabeaaaappabaaaaaa add r0.x, r0.x, c20.w
aiaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r0.x, r0.x
adaaaaaaabaaaeacaaaaaaaaacaaaaaabfaaaaaaabaaaaaa mul r1.z, r0.x, c21.x
abaaaaaaabaaaeacabaaaakkacaaaaaabfaaaaffabaaaaaa add r1.z, r1.z, c21.y
apaaaaaaaaaaabacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.z
baaaaaaaaaaaacacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.z
adaaaaaaaaaaabacaaaaaaffacaaaaaaadaaaaffaaaaaaaa mul r0.x, r0.y, a3.y
adaaaaaaaaaaacacabaaaaffacaaaaaabgaaaaaaabaaaaaa mul r0.y, r1.y, c22.x
abaaaaaaaaaaacacaaaaaaffacaaaaaaabaaaaaaacaaaaaa add r0.y, r0.y, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaabaaaaaoeabaaaaaa mul r0.x, r0.x, c16
bfaaaaaaadaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r3.x, r0.x
adaaaaaaabaaaeacadaaaaaaacaaaaaabgaaaaffabaaaaaa mul r1.z, r3.x, c22.y
abaaaaaaabaaaeacabaaaakkacaaaaaaaaaaaaoeaaaaaaaa add r1.z, r1.z, a0
adaaaaaaaaaaabacabaaaaffacaaaaaabfaaaakkabaaaaaa mul r0.x, r1.y, c21.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaabeaaaakkabaaaaaa mul r0.x, r0.x, c20.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaabeaaaappabaaaaaa add r0.x, r0.x, c20.w
adaaaaaaaaaaacacaaaaaaffacaaaaaabeaaaakkabaaaaaa mul r0.y, r0.y, c20.z
abaaaaaaaaaaacacaaaaaaffacaaaaaabeaaaappabaaaaaa add r0.y, r0.y, c20.w
aiaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa frc r0.y, r0.y
adaaaaaaabaaacacaaaaaaffacaaaaaabfaaaaaaabaaaaaa mul r1.y, r0.y, c21.x
abaaaaaaabaaacacabaaaaffacaaaaaabfaaaaoeabaaaaaa add r1.y, r1.y, c21
aiaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r1.x, r0.x
apaaaaaaaaaaabacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.y
baaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.y
adaaaaaaaaaaabacabaaaaaaacaaaaaabfaaaaoeabaaaaaa mul r0.x, r1.x, c21
abaaaaaaaaaaabacaaaaaaaaacaaaaaabfaaaaffabaaaaaa add r0.x, r0.x, c21.y
adaaaaaaaaaaaeacadaaaaffaaaaaaaaaaaaaaffacaaaaaa mul r0.z, a3.y, r0.y
apaaaaaaacaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sin r2.x, r0.x
baaaaaaaacaaacacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa cos r2.y, r0.x
adaaaaaaaaaaacacadaaaaoeaaaaaaaaadaaaaaaaaaaaaaa mul r0.y, a3, a3.x
adaaaaaaaaaaabacadaaaaffaaaaaaaaacaaaaffacaaaaaa mul r0.x, a3.y, r2.y
bfaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r0.y, r0.y
adaaaaaaaaaaacacaaaaaaffacaaaaaabfaaaappabaaaaaa mul r0.y, r0.y, c21.w
adaaaaaaaaaaabacaaaaaaaaacaaaaaabaaaaaoeabaaaaaa mul r0.x, r0.x, c16
adaaaaaaabaaacacaaaaaaaaacaaaaaabcaaaappabaaaaaa mul r1.y, r0.x, c18.w
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa add r1.y, r1.y, r0.y
adaaaaaaaaaaabacaaaaaakkacaaaaaabaaaaaoeabaaaaaa mul r0.x, r0.z, c16
adaaaaaaabaaabacaaaaaaaaacaaaaaabcaaaappabaaaaaa mul r1.x, r0.x, c18.w
abaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaaoeaaaaaaaa add r1.x, r1.x, a0
bdaaaaaaaaaaaeacabaaaaoeacaaaaaaagaaaaoeabaaaaaa dp4 r0.z, r1, c6
bdaaaaaaaaaaabacabaaaaoeacaaaaaaaeaaaaoeabaaaaaa dp4 r0.x, r1, c4
bdaaaaaaaaaaacacabaaaaoeacaaaaaaafaaaaoeabaaaaaa dp4 r0.y, r1, c5
bdaaaaaaaaaaaiacabaaaaoeacaaaaaaahaaaaoeabaaaaaa dp4 r0.w, r1, c7
bdaaaaaaadaaacaeaaaaaaoeacaaaaaaajaaaaoeabaaaaaa dp4 v3.y, r0, c9
bdaaaaaaadaaabaeaaaaaaoeacaaaaaaaiaaaaoeabaaaaaa dp4 v3.x, r0, c8
adaaaaaaaaaaahacabaaaaoeaaaaaaaaaoaaaappabaaaaaa mul r0.xyz, a1, c14.w
bdaaaaaaaaaaaiadabaaaaoeacaaaaaaadaaaaoeabaaaaaa dp4 o0.w, r1, c3
bdaaaaaaaaaaaeadabaaaaoeacaaaaaaacaaaaoeabaaaaaa dp4 o0.z, r1, c2
bdaaaaaaaaaaacadabaaaaoeacaaaaaaabaaaaoeabaaaaaa dp4 o0.y, r1, c1
bdaaaaaaaaaaabadabaaaaoeacaaaaaaaaaaaaoeabaaaaaa dp4 o0.x, r1, c0
bcaaaaaaabaaaeaeaaaaaakeacaaaaaaagaaaaoeabaaaaaa dp3 v1.z, r0.xyzz, c6
bcaaaaaaabaaacaeaaaaaakeacaaaaaaafaaaaoeabaaaaaa dp3 v1.y, r0.xyzz, c5
bcaaaaaaabaaabaeaaaaaakeacaaaaaaaeaaaaoeabaaaaaa dp3 v1.x, r0.xyzz, c4
aaaaaaaaacaaahaeanaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v2.xyz, c13
adaaaaaaadaaadacadaaaaoeaaaaaaaabbaaaaoeabaaaaaa mul r3.xy, a3, c17
abaaaaaaaaaaadaeadaaaafeacaaaaaabbaaaaooabaaaaaa add v0.xy, r3.xyyy, c17.zwzw
aaaaaaaaaaaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v0.zw, c0
aaaaaaaaabaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v1.w, c0
aaaaaaaaacaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v2.w, c0
aaaaaaaaadaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v3.zw, c0
"
}

SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL_COOKIE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 176 // 160 used size, 9 vars
Matrix 48 [_LightMatrix0] 4
Float 128 [_WaveSpeed]
Float 132 [_Amplitude]
Vector 144 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityLighting" 720 // 16 used size, 17 vars
Vector 0 [_WorldSpaceLightPos0] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 33 instructions, 3 temp regs, 0 temp arrays:
// ALU 30 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecednddllckmmilnpbadnmdmbjolieiodjflabaaaaaaaialaaaaaeaaaaaa
daaaaaaaheaeaaaakaajaaaagiakaaaaebgpgodjdmaeaaaadmaeaaaaaaacpopp
maadaaaahmaaaaaaahaaceaaaaaahiaaaaaahiaaaaaaceaaabaahiaaaaaaadaa
aeaaabaaaaaaaaaaaaaaaiaaacaaafaaaaaaaaaaabaaaaaaabaaahaaaaaaaaaa
acaaaaaaabaaaiaaaaaaaaaaadaaaaaaaeaaajaaaaaaaaaaadaaamaaaeaaanaa
aaaaaaaaadaabeaaabaabbaaaaaaaaaaaaaaaaaaaaacpoppfbaaaaafbcaaapka
jkjjljdpbekoeheamnmmameaggggggdpfbaaaaafbdaaapkanlapmjeanlapejma
mnmmemdoaaaaaaaafbaaaaafbeaaapkaaaaaaaaaaaaaaamaidpjccdoaaaaaadp
fbaaaaafbfaaapkaabannalfgballglhklkkckdlijiiiidjfbaaaaafbgaaapka
klkkkklmaaaaaaloaaaaiadpaaaaaadpbpaaaaacafaaaaiaaaaaapjabpaaaaac
afaaaciaacaaapjabpaaaaacafaaadiaadaaapjaaeaaaaaeaaaaadoaadaaoeja
agaaoekaagaaookaafaaaaadaaaaahiaacaaoejabbaappkaafaaaaadabaaahia
aaaaffiaaoaaoekaaeaaaaaeaaaaaliaanaakekaaaaaaaiaabaakeiaaeaaaaae
abaaahoaapaaoekaaaaakkiaaaaapeiaabaaaaacaaaaabiaafaaaakaafaaaaad
aaaaabiaaaaaaaiaahaaaakaamaaaaadaaaaaciaaaaaaaiabeaaaakaafaaaaad
aaaaaciaaaaaffiaaaaaaaiaaeaaaaaeaaaaabiaaaaaffiabeaaffkaaaaaaaia
acaaaaadaaaaaciaaaaaffjaaaaaaajaacaaaaadaaaaaciaaaaaffiaaaaakkja
aeaaaaaeaaaaahiaaaaaaaiabcaaoekaaaaaffiaaeaaaaaeaaaaahiaaaaaoeia
beaakkkabeaappkabdaaaaacaaaaahiaaaaaoeiaaeaaaaaeaaaaahiaaaaaoeia
bdaaaakabdaaffkacfaaaaaeabaaaciaaaaaffiabfaaoekabgaaoekaafaaaaad
aaaaaciaabaaffiaadaaffjaafaaaaadaaaaaciaaaaaffiaafaaffkaafaaaaad
aaaaaiiaadaaaajaadaaffjaafaaaaadaaaaaiiaaaaappiabcaappkaaeaaaaae
aaaaaciaaaaaffiabeaappkaaaaappibafaaaaadabaaapiaaaaaffiaaoaaoeka
afaaaaadacaaapiaaaaaffiaakaaoekacfaaaaaeadaaaciaaaaaaaiabfaaoeka
bgaaoekacfaaaaaeaeaaaciaaaaakkiabfaaoekabgaaoekaafaaaaadaaaaabia
aeaaffiaadaaffjaafaaaaadaaaaabiaaaaaaaiaafaaffkaaeaaaaaeaaaaabia
aaaaaaiabdaakkkbaaaakkjaafaaaaadaaaaaciaadaaffiaadaaffjaafaaaaad
aaaaaciaaaaaffiaafaaffkaaeaaaaaeaaaaaciaaaaaffiabeaappkaaaaaaaja
aeaaaaaeabaaapiaanaaoekaaaaaffiaabaaoeiaaeaaaaaeacaaapiaajaaoeka
aaaaffiaacaaoeiaaeaaaaaeacaaapiaalaaoekaaaaaaaiaacaaoeiaaeaaaaae
aaaaapiaapaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaapiabaaaoekaaaaappja
aaaaoeiaaeaaaaaeabaaapiaamaaoekaaaaappjaacaaoeiaafaaaaadacaaadia
aaaaffiaacaaobkaaeaaaaaeaaaaadiaabaaobkaaaaaaaiaacaaoeiaaeaaaaae
aaaaadiaadaaobkaaaaakkiaaaaaoeiaaeaaaaaeaaaaamoaaeaabekaaaaappia
aaaaeeiaaeaaaaaeaaaaadmaabaappiaaaaaoekaabaaoeiaabaaaaacaaaaamma
abaaoeiaabaaaaacacaaahoaaiaaoekappppaaaafdeieefcceafaaaaeaaaabaa
ejabaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaafjaaaaaeegiocaaaabaaaaaa
abaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaad
dcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadmccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagiaaaaacadaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaa
aaaaaaaaaiaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaa
aaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaa
aaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaa
aaaaaaaaaceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaa
enaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgifcaaaaaaaaaaaaiaaaaaadiaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaa
adaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaa
aaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadiaaaaaipcaabaaaacaaaaaa
fgafbaaaaaaaaaaaegiocaaaadaaaaaaanaaaaaadcaaaaajbcaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakccaabaaa
aaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaa
dcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaakpcaabaaaacaaaaaaegiocaaaadaaaaaaamaaaaaa
agaabaaaaaaaaaaaegaobaaaacaaaaaadcaaaaakpcaabaaaacaaaaaaegiocaaa
adaaaaaaaoaaaaaafgafbaaaaaaaaaaaegaobaaaacaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaadaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaaabaaaaaa
dcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaapaaaaaa
pgbpbaaaaaaaaaaaegaobaaaacaaaaaadiaaaaaidcaabaaaabaaaaaafgafbaaa
aaaaaaaaegiacaaaaaaaaaaaaeaaaaaadcaaaaakdcaabaaaaaaaaaaaegiacaaa
aaaaaaaaadaaaaaaagaabaaaaaaaaaaaegaabaaaabaaaaaadcaaaaakdcaabaaa
aaaaaaaaegiacaaaaaaaaaaaafaaaaaakgakbaaaaaaaaaaaegaabaaaaaaaaaaa
dcaaaaakmccabaaaabaaaaaaagiecaaaaaaaaaaaagaaaaaapgapbaaaaaaaaaaa
agaebaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaajaaaaaaogikcaaaaaaaaaaaajaaaaaadiaaaaaihcaabaaaaaaaaaaa
egbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaaaaaaaaa
egiicaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaaegaibaaaabaaaaaadcaaaaak
hccabaaaacaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaaaaaaaaaegadbaaa
aaaaaaaadgaaaaaghccabaaaadaaaaaaegiccaaaacaaaaaaaaaaaaaadoaaaaab
ejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
aaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaa
kjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaalaaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaa
faepfdejfeejepeoaafeebeoehefeofeaaeoepfcenebemaafeeffiedepepfcee
aaedepemepfcaaklepfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaaaaaaaaaa
abaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
abaaaaaaadamaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaabaaaaaaamadaaaa
imaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaafeeffied
epepfceeaaklklkl"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 397
struct Input {
    highp vec2 uv_MainTex;
};
#line 419
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    mediump vec3 lightDir;
    highp vec2 _LightCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform sampler2D _LightTexture0;
uniform highp mat4 _LightMatrix0;
#line 393
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 402
#line 428
uniform highp vec4 _MainTex_ST;
uniform lowp float _Cutoff;
#line 77
highp vec3 WorldSpaceLightDir( in highp vec4 v ) {
    highp vec3 worldPos = (_Object2World * v).xyz;
    return _WorldSpaceLightPos0.xyz;
}
#line 402
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 406
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 410
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 429
v2f_surf vert_surf( in appdata_full v ) {
    v2f_surf o;
    #line 432
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    o.normal = (mat3( _Object2World) * (v.normal * unity_Scale.w));
    #line 436
    highp vec3 lightDir = WorldSpaceLightDir( v.vertex);
    o.lightDir = lightDir;
    o._LightCoord = (_LightMatrix0 * (_Object2World * v.vertex)).xy;
    #line 440
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out lowp vec3 xlv_TEXCOORD1;
out mediump vec3 xlv_TEXCOORD2;
out highp vec2 xlv_TEXCOORD3;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec3(xl_retval.normal);
    xlv_TEXCOORD2 = vec3(xl_retval.lightDir);
    xlv_TEXCOORD3 = vec2(xl_retval._LightCoord);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 397
struct Input {
    highp vec2 uv_MainTex;
};
#line 419
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
    mediump vec3 lightDir;
    highp vec2 _LightCoord;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform lowp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform sampler2D _LightTexture0;
uniform highp mat4 _LightMatrix0;
#line 393
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 402
#line 428
uniform highp vec4 _MainTex_ST;
uniform lowp float _Cutoff;
#line 338
lowp vec4 LightingLambert( in SurfaceOutput s, in lowp vec3 lightDir, in lowp float atten ) {
    lowp float diff = max( 0.0, dot( s.Normal, lightDir));
    lowp vec4 c;
    #line 342
    c.xyz = ((s.Albedo * _LightColor0.xyz) * ((diff * atten) * 2.0));
    c.w = s.Alpha;
    return c;
}
#line 413
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 415
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 443
lowp vec4 frag_surf( in v2f_surf IN ) {
    #line 445
    Input surfIN;
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    #line 449
    o.Emission = vec3( 0.0);
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    #line 453
    o.Normal = IN.normal;
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    lowp vec3 lightDir = IN.lightDir;
    #line 457
    lowp vec4 c = LightingLambert( o, lightDir, (texture( _LightTexture0, IN._LightCoord).w * 1.0));
    c.w = o.Alpha;
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in lowp vec3 xlv_TEXCOORD1;
in mediump vec3 xlv_TEXCOORD2;
in highp vec2 xlv_TEXCOORD3;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.normal = vec3(xlv_TEXCOORD1);
    xlt_IN.lightDir = vec3(xlv_TEXCOORD2);
    xlt_IN._LightCoord = vec2(xlv_TEXCOORD3);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

}
Program "fp" {
// Fragment combos: 5
//   opengl - ALU: 11 to 22, TEX: 1 to 3
//   d3d9 - ALU: 12 to 22, TEX: 2 to 4
//   d3d11 - ALU: 8 to 18, TEX: 1 to 3, FLOW: 1 to 1
//   d3d11_9x - ALU: 8 to 18, TEX: 1 to 3, FLOW: 1 to 1
SubProgram "opengl " {
Keywords { "POINT" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightTexture0] 2D
"!!ARBfp1.0
# 16 ALU, 2 TEX
PARAM c[4] = { program.local[0..2],
		{ 0, 2 } };
TEMP R0;
TEMP R1;
TEX R0, fragment.texcoord[0], texture[0], 2D;
MUL R0, R0, c[1];
SLT R1.y, R0.w, c[2].x;
DP3 R1.x, fragment.texcoord[3], fragment.texcoord[3];
MUL R0.xyz, R0, c[0];
MOV result.color.w, R0;
TEX R1.w, R1.x, texture[1], 2D;
KIL -R1.y;
DP3 R1.x, fragment.texcoord[2], fragment.texcoord[2];
RSQ R1.x, R1.x;
MUL R1.xyz, R1.x, fragment.texcoord[2];
DP3 R1.x, fragment.texcoord[1], R1;
MAX R1.x, R1, c[3];
MUL R1.x, R1, R1.w;
MUL R0.xyz, R1.x, R0;
MUL result.color.xyz, R0, c[3].y;
END
# 16 instructions, 2 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "POINT" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightTexture0] 2D
"ps_2_0
; 17 ALU, 3 TEX
dcl_2d s0
dcl_2d s1
def c3, 0.00000000, 1.00000000, 2.00000000, 0
dcl t0.xy
dcl t1.xyz
dcl t2.xyz
dcl t3.xyz
texld r0, t0, s0
mul r1, r0, c1
add_pp r0.x, r1.w, -c2
cmp r2.x, r0, c3, c3.y
mov_pp r2, -r2.x
dp3 r0.x, t3, t3
mov r0.xy, r0.x
mul_pp r1.xyz, r1, c0
texld r0, r0, s1
texkill r2.xyzw
dp3_pp r2.x, t2, t2
rsq_pp r2.x, r2.x
mul_pp r2.xyz, r2.x, t2
dp3_pp r2.x, t1, r2
max_pp r2.x, r2, c3
mul_pp r0.x, r2, r0
mul_pp r0.xyz, r0.x, r1
mul_pp r0.xyz, r0, c3.z
mov_pp r0.w, r1
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { "POINT" }
Vector 1 [_Color]
Float 2 [_Cutoff]
Vector 0 [_LightColor0]
SetTexture 0 [_LightTexture0] 2D
SetTexture 1 [_MainTex] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 16.00 (12 instructions), vertex: 0, texture: 8,
//   sequencer: 8, interpolator: 16;    4 GPRs, 48 threads,
// Performance (if enough threads): ~16 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaabhiaaaaabamaaaaaaaaaaaaaaceaaaaabcaaaaaabeiaaaaaaaa
aaaaaaaaaaaaaapiaaaaaabmaaaaaaomppppadaaaaaaaaafaaaaaabmaaaaaaaa
aaaaaaofaaaaaaiaaaacaaabaaabaaaaaaaaaaiiaaaaaaaaaaaaaajiaaacaaac
aaabaaaaaaaaaakaaaaaaaaaaaaaaalaaaacaaaaaaabaaaaaaaaaaiiaaaaaaaa
aaaaaalnaaadaaaaaaabaaaaaaaaaammaaaaaaaaaaaaaanmaaadaaabaaabaaaa
aaaaaammaaaaaaaafpedgpgmgphcaaklaaabaaadaaabaaaeaaabaaaaaaaaaaaa
fpedhfhegpggggaaaaaaaaadaaabaaabaaabaaaaaaaaaaaafpemgjghgiheedgp
gmgphcdaaafpemgjghgihefegfhihehfhcgfdaaaaaaeaaamaaabaaabaaabaaaa
aaaaaaaafpengbgjgofegfhiaahahdfpddfpdaaadccodacodcdadddfddcodaaa
aaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabeabpmaabaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaeaaaaaaammbaaaadaaaaaaaaaeaaaaaaaaaaaacmie
aaapaaapaaaaaacbaaaadafaaaaahbfbaaaahcfcaaaahdfdaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabajfaacaaaabcaa
meaaaaaaaaaagaahdaanbcaaccaaaaaababiaaabbpbppgiiaaaaeaaamiaiaaaa
aablblaakbaaabaaliiiacababloloednaadadacmiaaaaaaaagmblaahjppacaa
pmaicacbbpbppbppaaaaeaaaaaiiadabaaloloblpaacacacfiihabaaaalolobl
kbaaabibkibhadacaablmaebmbabacaakicbadabaaloloicnaacabaakiebadab
aagmgmmaicabppaamiadaaaaaabigmaaobadabaamiabaaaaaagmblaaobaaadaa
miagaaaaaamblbaaobadaaaamiapiaaaaaaaaaaaocaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "POINT" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightTexture0] 2D
"sce_fp_rsx // 18 instructions using 2 registers
[Configuration]
24
ffffffff0003c020000ffff1000000000000848002000000
[Offsets]
3
_LightColor0 1 0
000000c0
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
288
9e001700c8011c9dc8000001c8003fe11e800200c8001c9dc8020001c8000001
00000000000000000000000000000000037e4a80ff001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
10800140c9001c9dc8000001c8000001ee020100c8011c9dc8000001c8003fe1
02020500c8041c9dc8040001c80000010202170200041c9cc8000001c8000001
ce823940c8011c9dc8000029c800bfe10e800240c9001c9dc8020001c8000001
00000000000000000000000000000000a2820540c8011c9dc9040001c8003fe1
02820900c9041c9d00020000c800000100000000000000000000000000000000
1082024001041c9c00040000c80000010e810240ff041c9dc9001001c8000001
"
}

SubProgram "d3d11 " {
Keywords { "POINT" }
ConstBuffer "$Globals" 176 // 164 used size, 9 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Float 160 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 0
// 17 instructions, 3 temp regs, 0 temp arrays:
// ALU 12 float, 0 int, 0 uint
// TEX 2 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedkmnkhgnllnjcmcgknacejhkfcjjidfdpabaaaaaagmadaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcgeacaaaaeaaaaaaajjaaaaaafjaaaaaeegiocaaaaaaaaaaaalaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafibiaaaeaahabaaa
aaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaagcbaaaaddcbabaaa
abaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaad
hcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacadaaaaaaefaaaaaj
pcaabaaaaaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaabaaaaaa
dcaaaaambcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaahaaaaaa
akiacaiaebaaaaaaaaaaaaaaakaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaa
aaaaaaaaegiocaaaaaaaaaaaahaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaa
abaaaaaaabeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaabaaaaaahbcaabaaa
abaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaafbcaabaaaabaaaaaa
akaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaaagaabaaaabaaaaaaegbcbaaa
adaaaaaabaaaaaahbcaabaaaabaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaa
deaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaabaaaaaah
ccaabaaaabaaaaaaegbcbaaaaeaaaaaaegbcbaaaaeaaaaaaefaaaaajpcaabaaa
acaaaaaafgafbaaaabaaaaaaeghobaaaabaaaaaaaagabaaaaaaaaaaaapaaaaah
bcaabaaaabaaaaaaagaabaaaabaaaaaaagaabaaaacaaaaaadiaaaaaihcaabaaa
aaaaaaaaegacbaaaaaaaaaaaegiccaaaaaaaaaaaabaaaaaadgaaaaaficcabaaa
aaaaaaaadkaabaaaaaaaaaaadiaaaaahhccabaaaaaaaaaaaagaabaaaabaaaaaa
egacbaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "POINT" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "POINT" }
"!!GLES"
}

SubProgram "flash " {
Keywords { "POINT" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightTexture0] 2D
"agal_ps
c3 0.0 1.0 2.0 0.0
[bc]
ciaaaaaaaaaaapacaaaaaaoeaeaaaaaaaaaaaaaaafaababb tex r0, v0, s0 <2d wrap linear point>
adaaaaaaabaaapacaaaaaaoeacaaaaaaabaaaaoeabaaaaaa mul r1, r0, c1
acaaaaaaaaaaabacabaaaappacaaaaaaacaaaaoeabaaaaaa sub r0.x, r1.w, c2
ckaaaaaaacaaabacaaaaaaaaacaaaaaaadaaaaaaabaaaaaa slt r2.x, r0.x, c3.x
bcaaaaaaaaaaabacadaaaaoeaeaaaaaaadaaaaoeaeaaaaaa dp3 r0.x, v3, v3
bfaaaaaaacaaapacacaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r2, r2.x
aaaaaaaaaaaaadacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa mov r0.xy, r0.x
adaaaaaaabaaahacabaaaakeacaaaaaaaaaaaaoeabaaaaaa mul r1.xyz, r1.xyzz, c0
ciaaaaaaaaaaapacaaaaaafeacaaaaaaabaaaaaaafaababb tex r0, r0.xyyy, s1 <2d wrap linear point>
chaaaaaaaaaaaaaaacaaaaaaacaaaaaaaaaaaaaaaaaaaaaa kil a0.none, r2.x
bcaaaaaaaaaaabacacaaaaoeaeaaaaaaacaaaaoeaeaaaaaa dp3 r0.x, v2, v2
akaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa rsq r0.x, r0.x
adaaaaaaaaaaahacaaaaaaaaacaaaaaaacaaaaoeaeaaaaaa mul r0.xyz, r0.x, v2
bcaaaaaaaaaaabacabaaaaoeaeaaaaaaaaaaaakeacaaaaaa dp3 r0.x, v1, r0.xyzz
ahaaaaaaaaaaabacaaaaaaaaacaaaaaaadaaaaoeabaaaaaa max r0.x, r0.x, c3
adaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaappacaaaaaa mul r0.x, r0.x, r0.w
adaaaaaaaaaaahacaaaaaaaaacaaaaaaabaaaakeacaaaaaa mul r0.xyz, r0.x, r1.xyzz
adaaaaaaaaaaahacaaaaaakeacaaaaaaadaaaakkabaaaaaa mul r0.xyz, r0.xyzz, c3.z
aaaaaaaaaaaaaiacabaaaappacaaaaaaaaaaaaaaaaaaaaaa mov r0.w, r1.w
aaaaaaaaaaaaapadaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r0
"
}

SubProgram "d3d11_9x " {
Keywords { "POINT" }
ConstBuffer "$Globals" 176 // 164 used size, 9 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Float 160 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 0
// 17 instructions, 3 temp regs, 0 temp arrays:
// ALU 12 float, 0 int, 0 uint
// TEX 2 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefiecedcnofehkalanbcmhfciblfohfegcifbcgabaaaaaacaafaaaaaeaaaaaa
daaaaaaaoaabaaaaemaeaaaaomaeaaaaebgpgodjkiabaaaakiabaaaaaaacpppp
fiabaaaafaaaaaaaadaacmaaaaaafaaaaaaafaaaacaaceaaaaaafaaaabaaaaaa
aaababaaaaaaabaaabaaaaaaaaaaaaaaaaaaahaaabaaabaaaaaaaaaaaaaaakaa
abaaacaaaaaaaaaaaaacppppfbaaaaafadaaapkaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaabpaaaaacaaaaaaiaaaaaadlabpaaaaacaaaaaaiaabaachlabpaaaaac
aaaaaaiaacaachlabpaaaaacaaaaaaiaadaaahlabpaaaaacaaaaaajaaaaiapka
bpaaaaacaaaaaajaabaiapkaecaaaaadaaaaapiaaaaaoelaabaioekaabaaaaac
abaaaiiaabaappkaaeaaaaaeabaacpiaaaaappiaabaappiaacaaaakbafaaaaad
aaaacpiaaaaaoeiaabaaoekaaiaaaaadacaaaiiaadaaoelaadaaoelaabaaaaac
acaaadiaacaappiaebaaaaababaaapiaecaaaaadabaacpiaacaaoeiaaaaioeka
ceaaaaacacaachiaacaaoelaaiaaaaadabaacciaabaaoelaacaaoeiaafaaaaad
abaacbiaabaaaaiaabaaffiafiaaaaaeabaacbiaabaaffiaabaaaaiaadaaaaka
acaaaaadabaacbiaabaaaaiaabaaaaiaafaaaaadabaacoiaaaaabliaaaaablka
afaaaaadaaaachiaabaaaaiaabaabliaabaaaaacaaaicpiaaaaaoeiappppaaaa
fdeieefcgeacaaaaeaaaaaaajjaaaaaafjaaaaaeegiocaaaaaaaaaaaalaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafibiaaaeaahabaaa
aaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaagcbaaaaddcbabaaa
abaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaad
hcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacadaaaaaaefaaaaaj
pcaabaaaaaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaabaaaaaa
dcaaaaambcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaahaaaaaa
akiacaiaebaaaaaaaaaaaaaaakaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaa
aaaaaaaaegiocaaaaaaaaaaaahaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaa
abaaaaaaabeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaabaaaaaahbcaabaaa
abaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaafbcaabaaaabaaaaaa
akaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaaagaabaaaabaaaaaaegbcbaaa
adaaaaaabaaaaaahbcaabaaaabaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaa
deaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaabaaaaaah
ccaabaaaabaaaaaaegbcbaaaaeaaaaaaegbcbaaaaeaaaaaaefaaaaajpcaabaaa
acaaaaaafgafbaaaabaaaaaaeghobaaaabaaaaaaaagabaaaaaaaaaaaapaaaaah
bcaabaaaabaaaaaaagaabaaaabaaaaaaagaabaaaacaaaaaadiaaaaaihcaabaaa
aaaaaaaaegacbaaaaaaaaaaaegiccaaaaaaaaaaaabaaaaaadgaaaaaficcabaaa
aaaaaaaadkaabaaaaaaaaaaadiaaaaahhccabaaaaaaaaaaaagaabaaaabaaaaaa
egacbaaaaaaaaaaadoaaaaabejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
"
}

SubProgram "gles3 " {
Keywords { "POINT" }
"!!GLES3"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
"!!ARBfp1.0
# 11 ALU, 1 TEX
PARAM c[4] = { program.local[0..2],
		{ 0, 2 } };
TEMP R0;
TEMP R1;
TEX R0, fragment.texcoord[0], texture[0], 2D;
MUL R0, R0, c[1];
SLT R1.x, R0.w, c[2];
MUL R0.xyz, R0, c[0];
MOV result.color.w, R0;
KIL -R1.x;
MOV R1.xyz, fragment.texcoord[2];
DP3 R1.x, fragment.texcoord[1], R1;
MAX R1.x, R1, c[3];
MUL R0.xyz, R1.x, R0;
MUL result.color.xyz, R0, c[3].y;
END
# 11 instructions, 2 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
"ps_2_0
; 12 ALU, 2 TEX
dcl_2d s0
def c3, 0.00000000, 1.00000000, 2.00000000, 0
dcl t0.xy
dcl t1.xyz
dcl t2.xyz
texld r0, t0, s0
mul r1, r0, c1
add_pp r0.x, r1.w, -c2
cmp r0.x, r0, c3, c3.y
mov_pp r0, -r0.x
mul_pp r1.xyz, r1, c0
texkill r0.xyzw
mov_pp r0.xyz, t2
dp3_pp r0.x, t1, r0
max_pp r0.x, r0, c3
mul_pp r0.xyz, r0.x, r1
mul_pp r0.xyz, r0, c3.z
mov_pp r0.w, r1
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" }
Vector 1 [_Color]
Float 2 [_Cutoff]
Vector 0 [_LightColor0]
SetTexture 0 [_MainTex] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 9.33 (7 instructions), vertex: 0, texture: 4,
//   sequencer: 8, interpolator: 12;    4 GPRs, 48 threads,
// Performance (if enough threads): ~12 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaabfeaaaaaameaaaaaaaaaaaaaaceaaaaabaaaaaaabciaaaaaaaa
aaaaaaaaaaaaaaniaaaaaabmaaaaaamlppppadaaaaaaaaaeaaaaaabmaaaaaaaa
aaaaaameaaaaaagmaaacaaabaaabaaaaaaaaaaheaaaaaaaaaaaaaaieaaacaaac
aaabaaaaaaaaaaimaaaaaaaaaaaaaajmaaacaaaaaaabaaaaaaaaaaheaaaaaaaa
aaaaaakjaaadaaaaaaabaaaaaaaaaaleaaaaaaaafpedgpgmgphcaaklaaabaaad
aaabaaaeaaabaaaaaaaaaaaafpedhfhegpggggaaaaaaaaadaaabaaabaaabaaaa
aaaaaaaafpemgjghgiheedgpgmgphcdaaafpengbgjgofegfhiaaklklaaaeaaam
aaabaaabaaabaaaaaaaaaaaahahdfpddfpdaaadccodacodcdadddfddcodaaakl
aaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabeabpmaabaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaeaaaaaaaiebaaaadaaaaaaaaaeaaaaaaaaaaaacagd
aaahaaahaaaaaacbaaaadafaaaaahbfbaaaahcfcaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbaacaaaabcaameaaaaaa
aaaagaadbaajbcaaccaaaaaabaaidaabbpbppgiiaaaaeaaamiabaaaaaaloloaa
paabacaabebeaaaaaagmgmblkcaappadkichaaabaamamaaaibadababaabhaaab
aamamamgkbabaaaalibnabaaabpagmebmbabaaacmiaaaaaaaagmgmaahjppabaa
miapiaaaaajejeaaocaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
"sce_fp_rsx // 14 instructions using 2 registers
[Configuration]
24
ffffffff0001c0200007fff9000000000000848002000000
[Offsets]
3
_LightColor0 1 0
00000090
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
224
9e001700c8011c9dc8000001c8003fe11e800200c8001c9dc8020001c8000001
00000000000000000000000000000000037e4a80ff001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
10800140c9001c9dc8000001c8000001ce820140c8011c9dc8000001c8003fe1
0e800240c9001c9dc8020001c800000100000000000000000000000000000000
a2820540c8011c9dc9040001c8003fe102820900c9041c9d00020000c8000001
000000000000000000000000000000000e81024001041c9cc9001001c8000001
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" }
ConstBuffer "$Globals" 112 // 100 used size, 8 vars
Vector 16 [_LightColor0] 4
Vector 48 [_Color] 4
Float 96 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
// 12 instructions, 2 temp regs, 0 temp arrays:
// ALU 8 float, 0 int, 0 uint
// TEX 1 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecededhilneeelnjokogdmnhneahedfahjkgabaaaaaakaacaaaaadaaaaaa
cmaaaaaaleaaaaaaoiaaaaaaejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefclaabaaaaeaaaaaaagmaaaaaafjaaaaaeegiocaaa
aaaaaaaaahaaaaaafkaaaaadaagabaaaaaaaaaaafibiaaaeaahabaaaaaaaaaaa
ffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaad
hcbabaaaadaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacacaaaaaaefaaaaaj
pcaabaaaaaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaa
dcaaaaambcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaa
akiacaiaebaaaaaaaaaaaaaaagaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaa
aaaaaaaaegiocaaaaaaaaaaaadaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaa
abaaaaaaabeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaadiaaaaaihcaabaaa
aaaaaaaaegacbaaaaaaaaaaaegiccaaaaaaaaaaaabaaaaaadgaaaaaficcabaaa
aaaaaaaadkaabaaaaaaaaaaabaaaaaahicaabaaaaaaaaaaaegbcbaaaacaaaaaa
egbcbaaaadaaaaaadeaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaa
aaaaaaaaaaaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaahhccabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaadoaaaaab
"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" }
"!!GLES"
}

SubProgram "flash " {
Keywords { "DIRECTIONAL" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
"agal_ps
c3 0.0 1.0 2.0 0.0
[bc]
ciaaaaaaaaaaapacaaaaaaoeaeaaaaaaaaaaaaaaafaababb tex r0, v0, s0 <2d wrap linear point>
adaaaaaaabaaapacaaaaaaoeacaaaaaaabaaaaoeabaaaaaa mul r1, r0, c1
acaaaaaaaaaaabacabaaaappacaaaaaaacaaaaoeabaaaaaa sub r0.x, r1.w, c2
ckaaaaaaaaaaabacaaaaaaaaacaaaaaaadaaaaaaabaaaaaa slt r0.x, r0.x, c3.x
bfaaaaaaaaaaapacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r0, r0.x
adaaaaaaabaaahacabaaaakeacaaaaaaaaaaaaoeabaaaaaa mul r1.xyz, r1.xyzz, c0
chaaaaaaaaaaaaaaaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa kil a0.none, r0.x
aaaaaaaaaaaaahacacaaaaoeaeaaaaaaaaaaaaaaaaaaaaaa mov r0.xyz, v2
bcaaaaaaaaaaabacabaaaaoeaeaaaaaaaaaaaakeacaaaaaa dp3 r0.x, v1, r0.xyzz
ahaaaaaaaaaaabacaaaaaaaaacaaaaaaadaaaaoeabaaaaaa max r0.x, r0.x, c3
adaaaaaaaaaaahacaaaaaaaaacaaaaaaabaaaakeacaaaaaa mul r0.xyz, r0.x, r1.xyzz
adaaaaaaaaaaahacaaaaaakeacaaaaaaadaaaakkabaaaaaa mul r0.xyz, r0.xyzz, c3.z
aaaaaaaaaaaaaiacabaaaappacaaaaaaaaaaaaaaaaaaaaaa mov r0.w, r1.w
aaaaaaaaaaaaapadaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r0
"
}

SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" }
ConstBuffer "$Globals" 112 // 100 used size, 8 vars
Vector 16 [_LightColor0] 4
Vector 48 [_Color] 4
Float 96 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
// 12 instructions, 2 temp regs, 0 temp arrays:
// ALU 8 float, 0 int, 0 uint
// TEX 1 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefiecedhjegclijokfgbaibjcjkhgnkiknefanfabaaaaaapiadaaaaaeaaaaaa
daaaaaaaieabaaaadmadaaaameadaaaaebgpgodjemabaaaaemabaaaaaaacpppp
aaabaaaaemaaaaaaadaaciaaaaaaemaaaaaaemaaabaaceaaaaaaemaaaaaaaaaa
aaaaabaaabaaaaaaaaaaaaaaaaaaadaaabaaabaaaaaaaaaaaaaaagaaabaaacaa
aaaaaaaaaaacppppfbaaaaafadaaapkaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
bpaaaaacaaaaaaiaaaaaadlabpaaaaacaaaaaaiaabaachlabpaaaaacaaaaaaia
acaachlabpaaaaacaaaaaajaaaaiapkaecaaaaadaaaaapiaaaaaoelaaaaioeka
abaaaaacabaaaiiaabaappkaaeaaaaaeabaacpiaaaaappiaabaappiaacaaaakb
afaaaaadaaaacpiaaaaaoeiaabaaoekaebaaaaababaaapiaafaaaaadabaachia
aaaaoeiaaaaaoekaabaaaaacacaaahiaabaaoelaaiaaaaadabaaciiaacaaoeia
acaaoelaalaaaaadacaacbiaabaappiaadaaaakaacaaaaadabaaciiaacaaaaia
acaaaaiaafaaaaadaaaachiaabaappiaabaaoeiaabaaaaacaaaicpiaaaaaoeia
ppppaaaafdeieefclaabaaaaeaaaaaaagmaaaaaafjaaaaaeegiocaaaaaaaaaaa
ahaaaaaafkaaaaadaagabaaaaaaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
gcbaaaaddcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaa
adaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacacaaaaaaefaaaaajpcaabaaa
aaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaam
bcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaaakiacaia
ebaaaaaaaaaaaaaaagaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaa
egiocaaaaaaaaaaaadaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaadiaaaaaihcaabaaaaaaaaaaa
egacbaaaaaaaaaaaegiccaaaaaaaaaaaabaaaaaadgaaaaaficcabaaaaaaaaaaa
dkaabaaaaaaaaaaabaaaaaahicaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaa
adaaaaaadeaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaaaaa
aaaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaah
hccabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaadoaaaaabejfdeheo
iaaaaaaaaeaaaaaaaiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaa
apaaaaaaheaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadadaaaaheaaaaaa
abaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaaheaaaaaaacaaaaaaaaaaaaaa
adaaaaaaadaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL" }
"!!GLES3"
}

SubProgram "opengl " {
Keywords { "SPOT" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightTexture0] 2D
SetTexture 2 [_LightTextureB0] 2D
"!!ARBfp1.0
# 22 ALU, 3 TEX
PARAM c[4] = { program.local[0..2],
		{ 0, 0.5, 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEX R0, fragment.texcoord[0], texture[0], 2D;
MUL R2, R0, c[1];
SLT R0.w, R2, c[2].x;
DP3 R0.z, fragment.texcoord[3], fragment.texcoord[3];
RCP R0.x, fragment.texcoord[3].w;
MAD R0.xy, fragment.texcoord[3], R0.x, c[3].y;
MUL R1.xyz, R2, c[0];
MOV result.color.w, R2;
KIL -R0.w;
TEX R0.w, R0, texture[1], 2D;
TEX R1.w, R0.z, texture[2], 2D;
DP3 R0.x, fragment.texcoord[2], fragment.texcoord[2];
RSQ R0.x, R0.x;
MUL R0.xyz, R0.x, fragment.texcoord[2];
DP3 R0.x, fragment.texcoord[1], R0;
SLT R0.y, c[3].x, fragment.texcoord[3].z;
MUL R0.y, R0, R0.w;
MUL R0.y, R0, R1.w;
MAX R0.x, R0, c[3];
MUL R0.x, R0, R0.y;
MUL R0.xyz, R0.x, R1;
MUL result.color.xyz, R0, c[3].z;
END
# 22 instructions, 3 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "SPOT" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightTexture0] 2D
SetTexture 2 [_LightTextureB0] 2D
"ps_2_0
; 22 ALU, 4 TEX
dcl_2d s0
dcl_2d s1
dcl_2d s2
def c3, 0.00000000, 1.00000000, 0.50000000, 2.00000000
dcl t0.xy
dcl t1.xyz
dcl t2.xyz
dcl t3
texld r0, t0, s0
mul r2, r0, c1
add_pp r0.x, r2.w, -c2
cmp r0.x, r0, c3, c3.y
mov_pp r3, -r0.x
dp3 r1.x, t3, t3
rcp r0.x, t3.w
mad r0.xy, t3, r0.x, c3.z
mov r1.xy, r1.x
mul_pp r2.xyz, r2, c0
texld r0, r0, s1
texkill r3.xyzw
texld r3, r1, s2
dp3_pp r1.x, t2, t2
cmp r0.x, -t3.z, c3, c3.y
mul_pp r0.x, r0, r0.w
rsq_pp r1.x, r1.x
mul_pp r1.xyz, r1.x, t2
dp3_pp r1.x, t1, r1
mul_pp r0.x, r0, r3
max_pp r1.x, r1, c3
mul_pp r0.x, r1, r0
mul_pp r0.xyz, r0.x, r2
mul_pp r0.xyz, r0, c3.w
mov_pp r0.w, r2
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { "SPOT" }
Vector 1 [_Color]
Float 2 [_Cutoff]
Vector 0 [_LightColor0]
SetTexture 0 [_LightTexture0] 2D
SetTexture 1 [_LightTextureB0] 2D
SetTexture 2 [_MainTex] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 21.33 (16 instructions), vertex: 0, texture: 12,
//   sequencer: 10, interpolator: 16;    5 GPRs, 36 threads,
// Performance (if enough threads): ~21 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaabjmaaaaabfeaaaaaaaaaaaaaaceaaaaabeeaaaaabgmaaaaaaaa
aaaaaaaaaaaaabbmaaaaaabmaaaaabbappppadaaaaaaaaagaaaaaabmaaaaaaaa
aaaaabajaaaaaajeaaacaaabaaabaaaaaaaaaajmaaaaaaaaaaaaaakmaaacaaac
aaabaaaaaaaaaaleaaaaaaaaaaaaaameaaacaaaaaaabaaaaaaaaaajmaaaaaaaa
aaaaaanbaaadaaaaaaabaaaaaaaaaaoaaaaaaaaaaaaaaapaaaadaaabaaabaaaa
aaaaaaoaaaaaaaaaaaaaabaaaaadaaacaaabaaaaaaaaaaoaaaaaaaaafpedgpgm
gphcaaklaaabaaadaaabaaaeaaabaaaaaaaaaaaafpedhfhegpggggaaaaaaaaad
aaabaaabaaabaaaaaaaaaaaafpemgjghgiheedgpgmgphcdaaafpemgjghgihefe
gfhihehfhcgfdaaaaaaeaaamaaabaaabaaabaaaaaaaaaaaafpemgjghgihefegf
hihehfhcgfecdaaafpengbgjgofegfhiaahahdfpddfpdaaadccodacodcdadddf
ddcodaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabeabpmaabaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaabbebaaaaeaaaaaaaaaeaaaaaaaa
aaaadaieaaapaaapaaaaaacbaaaadafaaaaahbfbaaaahcfcaaaapdfdaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadpaaaaaaaaaaaaaaaaaaaaaaaaajgaad
caajbcaabcaaaaafaaaaaaaagaalmeaabcaaaaaaaaaafabbaaaaccaaaaaaaaaa
baciaaabbpbppgiiaaaaeaaaemiiacabaaloloblpaadadadmiadaaaeaabllalb
mlacadppmiaiaaaaaablblaakbaaabaaliibacadabmggmedifadppacmiaaaaaa
aagmblaahjppacaapmbicacbbpbppbppaaaaeaaabaaidaibbpbpppnpaaaaeaaa
miaiaaabaaloloaapaacacaamiabaaadaalbgmaaobadadaafiihabaaaalolobl
kbaaabibmiabaaadaagmblgmnbadacppkichadacaablmaebmbabacaakiebadab
aaloloicnaacabaakiibadabaagmgmmaicabppaamiafaaaaaabigmaaobadabaa
miaeaaaaaamggmaaobaaadaamiadaaaaaamfgmaaobadaaaamiapiaaaaaaaaaaa
ocaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "SPOT" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightTexture0] 2D
SetTexture 2 [_LightTextureB0] 2D
"sce_fp_rsx // 26 instructions using 3 registers
[Configuration]
24
ffffffff0003c020000ffff1000000000000848003000000
[Offsets]
3
_LightColor0 1 0
00000170
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
416
9e001700c8011c9dc8000001c8003fe11e840200c8001c9dc8020001c8000001
00000000000000000000000000000000037e4a80ff081c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
fe000100c8011c9dc8000001c8003fe102040500c8001c9dc8000001c8000001
18023a0080001c9cfe000001c8000001060003005c041c9d00020000c8000001
00003f0000000000000000000000000010001702c8001c9dc8000001c8000001
ce803940c8011c9dc8000029c800bfe110800d0054001c9d00020000c8000001
0000000000000000000000000000000010860240c9001c9dc8000001c8000001
a2860540c8011c9dc9000001c8003fe10200170400081c9cc8000001c8000001
02800240ff0c1c9dc8000001c800000110800900010c1c9c00020000c8000001
0000000000000000000000000000000010800240c9001c9d01000000c8000001
0e800240c9081c9dc8020001c800000100000000000000000000000000000000
0e800240ff001c9dc9001001c800000110810140c9081c9dc8000001c8000001
"
}

SubProgram "d3d11 " {
Keywords { "SPOT" }
ConstBuffer "$Globals" 176 // 164 used size, 9 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Float 160 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_LightTexture0] 2D 0
SetTexture 2 [_LightTextureB0] 2D 1
// 24 instructions, 3 temp regs, 0 temp arrays:
// ALU 17 float, 0 int, 1 uint
// TEX 3 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedbfemjonldaojpepemngecdpcgbjaphenabaaaaaagaaeaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapapaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcfiadaaaaeaaaaaaangaaaaaafjaaaaaeegiocaaaaaaaaaaaalaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaa
ffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaa
gcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadpcbabaaa
aeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacadaaaaaaefaaaaajpcaabaaa
aaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaacaaaaaadcaaaaam
bcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaahaaaaaaakiacaia
ebaaaaaaaaaaaaaaakaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaa
egiocaaaaaaaaaaaahaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaaaoaaaaahdcaabaaaabaaaaaa
egbabaaaaeaaaaaapgbpbaaaaeaaaaaaaaaaaaakdcaabaaaabaaaaaaegaabaaa
abaaaaaaaceaaaaaaaaaaadpaaaaaadpaaaaaaaaaaaaaaaaefaaaaajpcaabaaa
abaaaaaaegaabaaaabaaaaaaeghobaaaabaaaaaaaagabaaaaaaaaaaadbaaaaah
bcaabaaaabaaaaaaabeaaaaaaaaaaaaackbabaaaaeaaaaaaabaaaaahbcaabaaa
abaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaiadpdiaaaaahbcaabaaaabaaaaaa
dkaabaaaabaaaaaaakaabaaaabaaaaaabaaaaaahccaabaaaabaaaaaaegbcbaaa
aeaaaaaaegbcbaaaaeaaaaaaefaaaaajpcaabaaaacaaaaaafgafbaaaabaaaaaa
eghobaaaacaaaaaaaagabaaaabaaaaaadiaaaaahbcaabaaaabaaaaaaakaabaaa
abaaaaaaakaabaaaacaaaaaabaaaaaahccaabaaaabaaaaaaegbcbaaaadaaaaaa
egbcbaaaadaaaaaaeeaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaah
ocaabaaaabaaaaaafgafbaaaabaaaaaaagbjbaaaadaaaaaabaaaaaahccaabaaa
abaaaaaaegbcbaaaacaaaaaajgahbaaaabaaaaaadeaaaaahccaabaaaabaaaaaa
bkaabaaaabaaaaaaabeaaaaaaaaaaaaaapaaaaahbcaabaaaabaaaaaafgafbaaa
abaaaaaaagaabaaaabaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaa
egiccaaaaaaaaaaaabaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaahhccabaaaaaaaaaaaagaabaaaabaaaaaaegacbaaaaaaaaaaadoaaaaab
"
}

SubProgram "gles " {
Keywords { "SPOT" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "SPOT" }
"!!GLES"
}

SubProgram "flash " {
Keywords { "SPOT" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightTexture0] 2D
SetTexture 2 [_LightTextureB0] 2D
"agal_ps
c3 0.0 1.0 0.5 2.0
[bc]
ciaaaaaaaaaaapacaaaaaaoeaeaaaaaaaaaaaaaaafaababb tex r0, v0, s0 <2d wrap linear point>
adaaaaaaacaaapacaaaaaaoeacaaaaaaabaaaaoeabaaaaaa mul r2, r0, c1
acaaaaaaaaaaabacacaaaappacaaaaaaacaaaaoeabaaaaaa sub r0.x, r2.w, c2
ckaaaaaaaaaaabacaaaaaaaaacaaaaaaadaaaaaaabaaaaaa slt r0.x, r0.x, c3.x
bfaaaaaaadaaapacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r3, r0.x
bcaaaaaaabaaabacadaaaaoeaeaaaaaaadaaaaoeaeaaaaaa dp3 r1.x, v3, v3
afaaaaaaaaaaabacadaaaappaeaaaaaaaaaaaaaaaaaaaaaa rcp r0.x, v3.w
aaaaaaaaabaaadacabaaaaaaacaaaaaaaaaaaaaaaaaaaaaa mov r1.xy, r1.x
adaaaaaaaaaaadacadaaaaoeaeaaaaaaaaaaaaaaacaaaaaa mul r0.xy, v3, r0.x
abaaaaaaaaaaadacaaaaaafeacaaaaaaadaaaakkabaaaaaa add r0.xy, r0.xyyy, c3.z
adaaaaaaacaaahacacaaaakeacaaaaaaaaaaaaoeabaaaaaa mul r2.xyz, r2.xyzz, c0
ciaaaaaaaaaaapacaaaaaafeacaaaaaaabaaaaaaafaababb tex r0, r0.xyyy, s1 <2d wrap linear point>
ciaaaaaaabaaapacabaaaafeacaaaaaaacaaaaaaafaababb tex r1, r1.xyyy, s2 <2d wrap linear point>
chaaaaaaaaaaaaaaadaaaaaaacaaaaaaaaaaaaaaaaaaaaaa kil a0.none, r3.x
bcaaaaaaabaaabacacaaaaoeaeaaaaaaacaaaaoeaeaaaaaa dp3 r1.x, v2, v2
akaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaaaaaaaaaaaa rsq r1.x, r1.x
bfaaaaaaadaaaeacadaaaakkaeaaaaaaaaaaaaaaaaaaaaaa neg r3.z, v3.z
ckaaaaaaaaaaabacadaaaakkacaaaaaaadaaaaaaabaaaaaa slt r0.x, r3.z, c3.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaappacaaaaaa mul r0.x, r0.x, r0.w
adaaaaaaabaaahacabaaaaaaacaaaaaaacaaaaoeaeaaaaaa mul r1.xyz, r1.x, v2
bcaaaaaaabaaabacabaaaaoeaeaaaaaaabaaaakeacaaaaaa dp3 r1.x, v1, r1.xyzz
adaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaappacaaaaaa mul r0.x, r0.x, r1.w
ahaaaaaaabaaabacabaaaaaaacaaaaaaadaaaaoeabaaaaaa max r1.x, r1.x, c3
adaaaaaaaaaaabacabaaaaaaacaaaaaaaaaaaaaaacaaaaaa mul r0.x, r1.x, r0.x
adaaaaaaaaaaahacaaaaaaaaacaaaaaaacaaaakeacaaaaaa mul r0.xyz, r0.x, r2.xyzz
adaaaaaaaaaaahacaaaaaakeacaaaaaaadaaaappabaaaaaa mul r0.xyz, r0.xyzz, c3.w
aaaaaaaaaaaaaiacacaaaappacaaaaaaaaaaaaaaaaaaaaaa mov r0.w, r2.w
aaaaaaaaaaaaapadaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r0
"
}

SubProgram "d3d11_9x " {
Keywords { "SPOT" }
ConstBuffer "$Globals" 176 // 164 used size, 9 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Float 160 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_LightTexture0] 2D 0
SetTexture 2 [_LightTextureB0] 2D 1
// 24 instructions, 3 temp regs, 0 temp arrays:
// ALU 17 float, 0 int, 1 uint
// TEX 3 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefiecedldmmnnepahlodhmmohlkockhelbmebdcabaaaaaaheagaaaaaeaaaaaa
daaaaaaaeaacaaaakaafaaaaeaagaaaaebgpgodjaiacaaaaaiacaaaaaaacpppp
leabaaaafeaaaaaaadaadaaaaaaafeaaaaaafeaaadaaceaaaaaafeaaabaaaaaa
acababaaaaacacaaaaaaabaaabaaaaaaaaaaaaaaaaaaahaaabaaabaaaaaaaaaa
aaaaakaaabaaacaaaaaaaaaaaaacppppfbaaaaafadaaapkaaaaaaadpaaaaaaaa
aaaaaaaaaaaaaaaabpaaaaacaaaaaaiaaaaaadlabpaaaaacaaaaaaiaabaachla
bpaaaaacaaaaaaiaacaachlabpaaaaacaaaaaaiaadaaaplabpaaaaacaaaaaaja
aaaiapkabpaaaaacaaaaaajaabaiapkabpaaaaacaaaaaajaacaiapkaecaaaaad
aaaaapiaaaaaoelaacaioekaabaaaaacabaaaiiaabaappkaaeaaaaaeabaacpia
aaaappiaabaappiaacaaaakbafaaaaadaaaacpiaaaaaoeiaabaaoekaagaaaaac
acaaaiiaadaapplaaeaaaaaeacaaadiaadaaoelaacaappiaadaaaakaaiaaaaad
adaaaiiaadaaoelaadaaoelaabaaaaacadaaadiaadaappiaebaaaaababaaapia
ecaaaaadabaacpiaacaaoeiaaaaioekaecaaaaadacaacpiaadaaoeiaabaioeka
afaaaaadabaacbiaabaappiaacaaaaiafiaaaaaeabaacbiaadaakklbadaaffka
abaaaaiaceaaaaacacaachiaacaaoelaaiaaaaadabaacciaabaaoelaacaaoeia
alaaaaadacaacbiaabaaffiaadaaffkaafaaaaadabaacbiaabaaaaiaacaaaaia
acaaaaadabaacbiaabaaaaiaabaaaaiaafaaaaadabaacoiaaaaabliaaaaablka
afaaaaadaaaachiaabaaaaiaabaabliaabaaaaacaaaicpiaaaaaoeiappppaaaa
fdeieefcfiadaaaaeaaaaaaangaaaaaafjaaaaaeegiocaaaaaaaaaaaalaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaa
ffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaa
gcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadpcbabaaa
aeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacadaaaaaaefaaaaajpcaabaaa
aaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaacaaaaaadcaaaaam
bcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaahaaaaaaakiacaia
ebaaaaaaaaaaaaaaakaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaa
egiocaaaaaaaaaaaahaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaaaoaaaaahdcaabaaaabaaaaaa
egbabaaaaeaaaaaapgbpbaaaaeaaaaaaaaaaaaakdcaabaaaabaaaaaaegaabaaa
abaaaaaaaceaaaaaaaaaaadpaaaaaadpaaaaaaaaaaaaaaaaefaaaaajpcaabaaa
abaaaaaaegaabaaaabaaaaaaeghobaaaabaaaaaaaagabaaaaaaaaaaadbaaaaah
bcaabaaaabaaaaaaabeaaaaaaaaaaaaackbabaaaaeaaaaaaabaaaaahbcaabaaa
abaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaiadpdiaaaaahbcaabaaaabaaaaaa
dkaabaaaabaaaaaaakaabaaaabaaaaaabaaaaaahccaabaaaabaaaaaaegbcbaaa
aeaaaaaaegbcbaaaaeaaaaaaefaaaaajpcaabaaaacaaaaaafgafbaaaabaaaaaa
eghobaaaacaaaaaaaagabaaaabaaaaaadiaaaaahbcaabaaaabaaaaaaakaabaaa
abaaaaaaakaabaaaacaaaaaabaaaaaahccaabaaaabaaaaaaegbcbaaaadaaaaaa
egbcbaaaadaaaaaaeeaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaah
ocaabaaaabaaaaaafgafbaaaabaaaaaaagbjbaaaadaaaaaabaaaaaahccaabaaa
abaaaaaaegbcbaaaacaaaaaajgahbaaaabaaaaaadeaaaaahccaabaaaabaaaaaa
bkaabaaaabaaaaaaabeaaaaaaaaaaaaaapaaaaahbcaabaaaabaaaaaafgafbaaa
abaaaaaaagaabaaaabaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaa
egiccaaaaaaaaaaaabaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaahhccabaaaaaaaaaaaagaabaaaabaaaaaaegacbaaaaaaaaaaadoaaaaab
ejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadadaaaa
imaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaaimaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaapapaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl
epfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
aaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl"
}

SubProgram "gles3 " {
Keywords { "SPOT" }
"!!GLES3"
}

SubProgram "opengl " {
Keywords { "POINT_COOKIE" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightTextureB0] 2D
SetTexture 2 [_LightTexture0] CUBE
"!!ARBfp1.0
# 18 ALU, 3 TEX
PARAM c[4] = { program.local[0..2],
		{ 0, 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEX R0, fragment.texcoord[0], texture[0], 2D;
TEX R1.w, fragment.texcoord[3], texture[2], CUBE;
MUL R2, R0, c[1];
SLT R0.y, R2.w, c[2].x;
DP3 R0.x, fragment.texcoord[3], fragment.texcoord[3];
MUL R1.xyz, R2, c[0];
MOV result.color.w, R2;
TEX R0.w, R0.x, texture[1], 2D;
KIL -R0.y;
DP3 R0.x, fragment.texcoord[2], fragment.texcoord[2];
RSQ R0.x, R0.x;
MUL R0.xyz, R0.x, fragment.texcoord[2];
DP3 R0.x, fragment.texcoord[1], R0;
MUL R0.y, R0.w, R1.w;
MAX R0.x, R0, c[3];
MUL R0.x, R0, R0.y;
MUL R0.xyz, R0.x, R1;
MUL result.color.xyz, R0, c[3].y;
END
# 18 instructions, 3 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "POINT_COOKIE" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightTextureB0] 2D
SetTexture 2 [_LightTexture0] CUBE
"ps_2_0
; 18 ALU, 4 TEX
dcl_2d s0
dcl_2d s1
dcl_cube s2
def c3, 0.00000000, 1.00000000, 2.00000000, 0
dcl t0.xy
dcl t1.xyz
dcl t2.xyz
dcl t3.xyz
texld r0, t0, s0
mul r2, r0, c1
add_pp r0.x, r2.w, -c2
cmp r1.x, r0, c3, c3.y
dp3 r0.x, t3, t3
mov r3.xy, r0.x
mov_pp r1, -r1.x
mul_pp r2.xyz, r2, c0
texld r0, t3, s2
texkill r1.xyzw
texld r1, r3, s1
dp3_pp r0.x, t2, t2
rsq_pp r0.x, r0.x
mul_pp r3.xyz, r0.x, t2
mul r0.x, r1, r0.w
dp3_pp r1.x, t1, r3
max_pp r1.x, r1, c3
mul_pp r0.x, r1, r0
mul_pp r0.xyz, r0.x, r2
mul_pp r0.xyz, r0, c3.z
mov_pp r0.w, r2
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { "POINT_COOKIE" }
Vector 1 [_Color]
Float 2 [_Cutoff]
Vector 0 [_LightColor0]
SetTexture 0 [_LightTexture0] CUBE
SetTexture 1 [_LightTextureB0] 2D
SetTexture 2 [_MainTex] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 20.00 (15 instructions), vertex: 0, texture: 12,
//   sequencer: 10, interpolator: 16;    6 GPRs, 30 threads,
// Performance (if enough threads): ~20 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaabkmaaaaabeiaaaaaaaaaaaaaaceaaaaabfeaaaaabhmaaaaaaaa
aaaaaaaaaaaaabcmaaaaaabmaaaaabcappppadaaaaaaaaagaaaaaabmaaaaaaaa
aaaaabbjaaaaaajeaaacaaabaaabaaaaaaaaaajmaaaaaaaaaaaaaakmaaacaaac
aaabaaaaaaaaaaleaaaaaaaaaaaaaameaaacaaaaaaabaaaaaaaaaajmaaaaaaaa
aaaaaanbaaadaaaaaaabaaaaaaaaaaoaaaaaaaaaaaaaaapaaaadaaabaaabaaaa
aaaaabaaaaaaaaaaaaaaabbaaaadaaacaaabaaaaaaaaabaaaaaaaaaafpedgpgm
gphcaaklaaabaaadaaabaaaeaaabaaaaaaaaaaaafpedhfhegpggggaaaaaaaaad
aaabaaabaaabaaaaaaaaaaaafpemgjghgiheedgpgmgphcdaaafpemgjghgihefe
gfhihehfhcgfdaaaaaaeaaaoaaabaaabaaabaaaaaaaaaaaafpemgjghgihefegf
hihehfhcgfecdaaaaaaeaaamaaabaaabaaabaaaaaaaaaaaafpengbgjgofegfhi
aahahdfpddfpdaaadccodacodcdadddfddcodaaaaaaaaaaaaaaaaaabaaaaaaaa
aaaaaaaaaaaaaabeabpmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaea
aaaaabaibaaaafaaaaaaaaaeaaaaaaaaaaaacmieaaapaaapaaaaaacbaaaadafa
aaaahbfbaaaahcfcaaaahdfdaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadpmaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaajgaadcaajbcaabcaaaaafaaaaaaaagaalmeaa
bcaaaaaaaaaaeabbaaaaccaaaaaaaaaabacieaabbpbppgiiaaaaeaaamiapaaaa
aakgmnaapcadadaaemiiacabaablblmgkbaeabiamiadaaafaagnblgmmlaaacpp
lmbiadacabloloednaadadacbeeaafaaaalbgmblhjppadaajaaiaakbbpbpppnp
aaaamaaapmbiaaebbpbppppiaaaaeaaamiaiaaaaaaloloaapaacacaamiaiaaad
aalbgmlbnbaaaappfiihaaaaaaloloblkbaeabiakibhadacaablmaebmbaaacaa
kiciadaaaaloloicnaacabaakieiadaaaabllbmaicaappaamiadaaaaaabiblaa
obadaaaamiabaaabaagmblaaobaaadaamiagaaabaamblbaaobadaaaamiapiaaa
aaaaaaaaocababaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "POINT_COOKIE" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightTextureB0] 2D
SetTexture 2 [_LightTexture0] CUBE
"sce_fp_rsx // 21 instructions using 2 registers
[Configuration]
24
ffffffff0003c020000ffff1000000000000848002000000
[Offsets]
3
_LightColor0 1 0
00000120
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
336
9e001700c8011c9dc8000001c8003fe11e840200c8001c9dc8020001c8000001
00000000000000000000000000000000037e4a80ff081c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
ee000100c8011c9dc8000001c8003fe102000500c8001c9dc8000001c8000001
0200170200001c9cc8000001c8000001ce823940c8011c9dc8000029c800bfe1
1e7e7d00c8001c9dc8000001c8000001a8800540c8011c9dc9040001c8003fe1
f0001704c8011c9dc8000001c8003fe102800200c8001c9dfe000001c8000001
1080090055001c9d00020000c800000100000000000000000000000000000000
10800240c9001c9d01000000c80000010e800240c9081c9dc8020001c8000001
000000000000000000000000000000000e800240ff001c9dc9001001c8000001
10810140c9081c9dc8000001c8000001
"
}

SubProgram "d3d11 " {
Keywords { "POINT_COOKIE" }
ConstBuffer "$Globals" 176 // 164 used size, 9 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Float 160 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_LightTextureB0] 2D 1
SetTexture 2 [_LightTexture0] CUBE 0
// 19 instructions, 4 temp regs, 0 temp arrays:
// ALU 13 float, 0 int, 0 uint
// TEX 3 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedoniaanglcjeiadacdhcmdpfpobbonegnabaaaaaamiadaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcmaacaaaaeaaaaaaalaaaaaaafjaaaaaeegiocaaaaaaaaaaaalaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaa
ffffaaaafidaaaaeaahabaaaacaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaa
gcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaa
aeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaaefaaaaajpcaabaaa
aaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaacaaaaaadcaaaaam
bcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaahaaaaaaakiacaia
ebaaaaaaaaaaaaaaakaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaa
egiocaaaaaaaaaaaahaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaabaaaaaahbcaabaaaabaaaaaa
egbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaafbcaabaaaabaaaaaaakaabaaa
abaaaaaadiaaaaahhcaabaaaabaaaaaaagaabaaaabaaaaaaegbcbaaaadaaaaaa
baaaaaahbcaabaaaabaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadeaaaaah
bcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaabaaaaaahccaabaaa
abaaaaaaegbcbaaaaeaaaaaaegbcbaaaaeaaaaaaefaaaaajpcaabaaaacaaaaaa
fgafbaaaabaaaaaaeghobaaaabaaaaaaaagabaaaabaaaaaaefaaaaajpcaabaaa
adaaaaaaegbcbaaaaeaaaaaaeghobaaaacaaaaaaaagabaaaaaaaaaaadiaaaaah
ccaabaaaabaaaaaaakaabaaaacaaaaaadkaabaaaadaaaaaaapaaaaahbcaabaaa
abaaaaaaagaabaaaabaaaaaafgafbaaaabaaaaaadiaaaaaihcaabaaaaaaaaaaa
egacbaaaaaaaaaaaegiccaaaaaaaaaaaabaaaaaadgaaaaaficcabaaaaaaaaaaa
dkaabaaaaaaaaaaadiaaaaahhccabaaaaaaaaaaaagaabaaaabaaaaaaegacbaaa
aaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "POINT_COOKIE" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "POINT_COOKIE" }
"!!GLES"
}

SubProgram "flash " {
Keywords { "POINT_COOKIE" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightTextureB0] 2D
SetTexture 2 [_LightTexture0] CUBE
"agal_ps
c3 0.0 1.0 2.0 0.0
[bc]
ciaaaaaaaaaaapacaaaaaaoeaeaaaaaaaaaaaaaaafaababb tex r0, v0, s0 <2d wrap linear point>
adaaaaaaacaaapacaaaaaaoeacaaaaaaabaaaaoeabaaaaaa mul r2, r0, c1
acaaaaaaaaaaabacacaaaappacaaaaaaacaaaaoeabaaaaaa sub r0.x, r2.w, c2
ckaaaaaaabaaabacaaaaaaaaacaaaaaaadaaaaaaabaaaaaa slt r1.x, r0.x, c3.x
bcaaaaaaaaaaabacadaaaaoeaeaaaaaaadaaaaoeaeaaaaaa dp3 r0.x, v3, v3
bfaaaaaaabaaapacabaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r1, r1.x
aaaaaaaaadaaadacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa mov r3.xy, r0.x
adaaaaaaacaaahacacaaaakeacaaaaaaaaaaaaoeabaaaaaa mul r2.xyz, r2.xyzz, c0
ciaaaaaaaaaaapacadaaaaoeaeaaaaaaacaaaaaaafbababb tex r0, v3, s2 <cube wrap linear point>
chaaaaaaaaaaaaaaabaaaaaaacaaaaaaaaaaaaaaaaaaaaaa kil a0.none, r1.x
ciaaaaaaabaaapacadaaaafeacaaaaaaabaaaaaaafaababb tex r1, r3.xyyy, s1 <2d wrap linear point>
bcaaaaaaaaaaabacacaaaaoeaeaaaaaaacaaaaoeaeaaaaaa dp3 r0.x, v2, v2
akaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa rsq r0.x, r0.x
adaaaaaaabaaahacaaaaaaaaacaaaaaaacaaaaoeaeaaaaaa mul r1.xyz, r0.x, v2
adaaaaaaaaaaabacabaaaappacaaaaaaaaaaaappacaaaaaa mul r0.x, r1.w, r0.w
bcaaaaaaabaaabacabaaaaoeaeaaaaaaabaaaakeacaaaaaa dp3 r1.x, v1, r1.xyzz
ahaaaaaaabaaabacabaaaaaaacaaaaaaadaaaaoeabaaaaaa max r1.x, r1.x, c3
adaaaaaaaaaaabacabaaaaaaacaaaaaaaaaaaaaaacaaaaaa mul r0.x, r1.x, r0.x
adaaaaaaaaaaahacaaaaaaaaacaaaaaaacaaaakeacaaaaaa mul r0.xyz, r0.x, r2.xyzz
adaaaaaaaaaaahacaaaaaakeacaaaaaaadaaaakkabaaaaaa mul r0.xyz, r0.xyzz, c3.z
aaaaaaaaaaaaaiacacaaaappacaaaaaaaaaaaaaaaaaaaaaa mov r0.w, r2.w
aaaaaaaaaaaaapadaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r0
"
}

SubProgram "d3d11_9x " {
Keywords { "POINT_COOKIE" }
ConstBuffer "$Globals" 176 // 164 used size, 9 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Float 160 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_LightTextureB0] 2D 1
SetTexture 2 [_LightTexture0] CUBE 0
// 19 instructions, 4 temp regs, 0 temp arrays:
// ALU 13 float, 0 int, 0 uint
// TEX 3 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefiecedmnajldchmmnmgaafakmcnpgpfpmelcmgabaaaaaakiafaaaaaeaaaaaa
daaaaaaaamacaaaaneaeaaaaheafaaaaebgpgodjneabaaaaneabaaaaaaacpppp
iaabaaaafeaaaaaaadaadaaaaaaafeaaaaaafeaaadaaceaaaaaafeaaacaaaaaa
abababaaaaacacaaaaaaabaaabaaaaaaaaaaaaaaaaaaahaaabaaabaaaaaaaaaa
aaaaakaaabaaacaaaaaaaaaaaaacppppfbaaaaafadaaapkaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaabpaaaaacaaaaaaiaaaaaadlabpaaaaacaaaaaaiaabaachla
bpaaaaacaaaaaaiaacaachlabpaaaaacaaaaaaiaadaaahlabpaaaaacaaaaaaji
aaaiapkabpaaaaacaaaaaajaabaiapkabpaaaaacaaaaaajaacaiapkaecaaaaad
aaaaapiaaaaaoelaacaioekaabaaaaacabaaaiiaabaappkaaeaaaaaeabaacpia
aaaappiaabaappiaacaaaakbafaaaaadaaaacpiaaaaaoeiaabaaoekaaiaaaaad
acaaaiiaadaaoelaadaaoelaabaaaaacacaaadiaacaappiaebaaaaababaaapia
ecaaaaadabaaapiaacaaoeiaabaioekaecaaaaadacaaapiaadaaoelaaaaioeka
afaaaaadabaacbiaabaaaaiaacaappiaceaaaaacacaachiaacaaoelaaiaaaaad
abaacciaabaaoelaacaaoeiaalaaaaadacaacbiaabaaffiaadaaaakaafaaaaad
abaacbiaabaaaaiaacaaaaiaacaaaaadabaacbiaabaaaaiaabaaaaiaafaaaaad
abaacoiaaaaabliaaaaablkaafaaaaadaaaachiaabaaaaiaabaabliaabaaaaac
aaaicpiaaaaaoeiappppaaaafdeieefcmaacaaaaeaaaaaaalaaaaaaafjaaaaae
egiocaaaaaaaaaaaalaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaa
abaaaaaafkaaaaadaagabaaaacaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafidaaaaeaahabaaaacaaaaaaffffaaaa
gcbaaaaddcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaa
adaaaaaagcbaaaadhcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaac
aeaaaaaaefaaaaajpcaabaaaaaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaa
aagabaaaacaaaaaadcaaaaambcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaa
aaaaaaaaahaaaaaaakiacaiaebaaaaaaaaaaaaaaakaaaaaadiaaaaaipcaabaaa
aaaaaaaaegaobaaaaaaaaaaaegiocaaaaaaaaaaaahaaaaaadbaaaaahbcaabaaa
abaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaa
baaaaaahbcaabaaaabaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaaf
bcaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaaagaabaaa
abaaaaaaegbcbaaaadaaaaaabaaaaaahbcaabaaaabaaaaaaegbcbaaaacaaaaaa
egacbaaaabaaaaaadeaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaa
aaaaaaaabaaaaaahccaabaaaabaaaaaaegbcbaaaaeaaaaaaegbcbaaaaeaaaaaa
efaaaaajpcaabaaaacaaaaaafgafbaaaabaaaaaaeghobaaaabaaaaaaaagabaaa
abaaaaaaefaaaaajpcaabaaaadaaaaaaegbcbaaaaeaaaaaaeghobaaaacaaaaaa
aagabaaaaaaaaaaadiaaaaahccaabaaaabaaaaaaakaabaaaacaaaaaadkaabaaa
adaaaaaaapaaaaahbcaabaaaabaaaaaaagaabaaaabaaaaaafgafbaaaabaaaaaa
diaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaaegiccaaaaaaaaaaaabaaaaaa
dgaaaaaficcabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhccabaaaaaaaaaaa
agaabaaaabaaaaaaegacbaaaaaaaaaaadoaaaaabejfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadadaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahahaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklkl"
}

SubProgram "gles3 " {
Keywords { "POINT_COOKIE" }
"!!GLES3"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL_COOKIE" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightTexture0] 2D
"!!ARBfp1.0
# 13 ALU, 2 TEX
PARAM c[4] = { program.local[0..2],
		{ 0, 2 } };
TEMP R0;
TEMP R1;
TEX R0, fragment.texcoord[0], texture[0], 2D;
TEX R1.w, fragment.texcoord[3], texture[1], 2D;
MUL R0, R0, c[1];
SLT R1.x, R0.w, c[2];
MUL R0.xyz, R0, c[0];
MOV result.color.w, R0;
KIL -R1.x;
MOV R1.xyz, fragment.texcoord[2];
DP3 R1.x, fragment.texcoord[1], R1;
MAX R1.x, R1, c[3];
MUL R1.x, R1, R1.w;
MUL R0.xyz, R1.x, R0;
MUL result.color.xyz, R0, c[3].y;
END
# 13 instructions, 2 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL_COOKIE" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightTexture0] 2D
"ps_2_0
; 13 ALU, 3 TEX
dcl_2d s0
dcl_2d s1
def c3, 0.00000000, 1.00000000, 2.00000000, 0
dcl t0.xy
dcl t1.xyz
dcl t2.xyz
dcl t3.xy
texld r0, t0, s0
mul r1, r0, c1
add_pp r0.x, r1.w, -c2
cmp r0.x, r0, c3, c3.y
mov_pp r0, -r0.x
mul_pp r1.xyz, r1, c0
texkill r0.xyzw
texld r0, t3, s1
mov_pp r0.xyz, t2
dp3_pp r0.x, t1, r0
max_pp r0.x, r0, c3
mul_pp r0.x, r0, r0.w
mul_pp r0.xyz, r0.x, r1
mul_pp r0.xyz, r0, c3.z
mov_pp r0.w, r1
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL_COOKIE" }
Vector 1 [_Color]
Float 2 [_Cutoff]
Vector 0 [_LightColor0]
SetTexture 0 [_LightTexture0] 2D
SetTexture 1 [_MainTex] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 13.33 (10 instructions), vertex: 0, texture: 8,
//   sequencer: 8, interpolator: 16;    5 GPRs, 36 threads,
// Performance (if enough threads): ~16 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaabhiaaaaaapeaaaaaaaaaaaaaaceaaaaabcaaaaaabeiaaaaaaaa
aaaaaaaaaaaaaapiaaaaaabmaaaaaaomppppadaaaaaaaaafaaaaaabmaaaaaaaa
aaaaaaofaaaaaaiaaaacaaabaaabaaaaaaaaaaiiaaaaaaaaaaaaaajiaaacaaac
aaabaaaaaaaaaakaaaaaaaaaaaaaaalaaaacaaaaaaabaaaaaaaaaaiiaaaaaaaa
aaaaaalnaaadaaaaaaabaaaaaaaaaammaaaaaaaaaaaaaanmaaadaaabaaabaaaa
aaaaaammaaaaaaaafpedgpgmgphcaaklaaabaaadaaabaaaeaaabaaaaaaaaaaaa
fpedhfhegpggggaaaaaaaaadaaabaaabaaabaaaaaaaaaaaafpemgjghgiheedgp
gmgphcdaaafpemgjghgihefegfhihehfhcgfdaaaaaaeaaamaaabaaabaaabaaaa
aaaaaaaafpengbgjgofegfhiaahahdfpddfpdaaadccodacodcdadddfddcodaaa
aaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabeabpmaabaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaeaaaaaaalebaaaaeaaaaaaaaaeaaaaaaaaaaaaciie
aaapaaapaaaaaacbaaaadafaaaaahbfbaaaahcfcaaaaddfdaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabajfaacaaaabcaa
meaaaaaaaaaagaahbaanbcaaccaaaaaababiaaabbpbppefiaaaaeaaakicaaaaa
aaaaaaabmcaaaaablibhaaaeabbemaebibaaabacmiaaaaaaaagmgmaahjppaaaa
baaiaagbbpbppoppaaaaeaaamiabaaaaaaloloaapaabacaamiabaaaaaagmgmaa
kcaappaaaaihababaamamamgkbaeaaaamiafaaaaaabigmaaobabaaaamiabaaaa
aagmblaaobaaabaamiamaaaaaapbmgaaobabaaaamiapiaaaaajejeaaocaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL_COOKIE" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightTexture0] 2D
"sce_fp_rsx // 16 instructions using 2 registers
[Configuration]
24
ffffffff0003c020000ffff9000000000000848002000000
[Offsets]
3
_LightColor0 1 0
00000090
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
256
9e001700c8011c9dc8000001c8003fe11e800200c8001c9dc8020001c8000001
00000000000000000000000000000000037e4a80ff001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
10800140c9001c9dc8000001c8000001ce820140c8011c9dc8000001c8003fe1
0e800240c9001c9dc8020001c800000100000000000000000000000000000000
a2820540c8011c9dc9040001c8003fe1f0001702c8011c9dc8000001c8003fe1
02820900c9041c9d00020000c800000100000000000000000000000000000000
1082024001041c9cc8000001c80000010e810240ff041c9dc9001001c8000001
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL_COOKIE" }
ConstBuffer "$Globals" 176 // 164 used size, 9 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Float 160 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 0
// 13 instructions, 3 temp regs, 0 temp arrays:
// ALU 8 float, 0 int, 0 uint
// TEX 2 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedhnggpkoaaiimleijkmicplkeijdmpjlbabaaaaaaaeadaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaabaaaaaa
amamaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaaimaaaaaa
acaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcpmabaaaaeaaaaaaahpaaaaaafjaaaaaeegiocaaaaaaaaaaaalaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafibiaaaeaahabaaa
aaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaagcbaaaaddcbabaaa
abaaaaaagcbaaaadmcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaad
hcbabaaaadaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacadaaaaaaefaaaaaj
pcaabaaaaaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaabaaaaaa
dcaaaaambcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaahaaaaaa
akiacaiaebaaaaaaaaaaaaaaakaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaa
aaaaaaaaegiocaaaaaaaaaaaahaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaa
abaaaaaaabeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaabaaaaaahbcaabaaa
abaaaaaaegbcbaaaacaaaaaaegbcbaaaadaaaaaadeaaaaahbcaabaaaabaaaaaa
akaabaaaabaaaaaaabeaaaaaaaaaaaaaefaaaaajpcaabaaaacaaaaaaogbkbaaa
abaaaaaaeghobaaaabaaaaaaaagabaaaaaaaaaaaapaaaaahbcaabaaaabaaaaaa
agaabaaaabaaaaaapgapbaaaacaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaa
aaaaaaaaegiccaaaaaaaaaaaabaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaa
aaaaaaaadiaaaaahhccabaaaaaaaaaaaagaabaaaabaaaaaaegacbaaaaaaaaaaa
doaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL_COOKIE" }
"!!GLES"
}

SubProgram "flash " {
Keywords { "DIRECTIONAL_COOKIE" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightTexture0] 2D
"agal_ps
c3 0.0 1.0 2.0 0.0
[bc]
ciaaaaaaaaaaapacaaaaaaoeaeaaaaaaaaaaaaaaafaababb tex r0, v0, s0 <2d wrap linear point>
adaaaaaaabaaapacaaaaaaoeacaaaaaaabaaaaoeabaaaaaa mul r1, r0, c1
acaaaaaaaaaaabacabaaaappacaaaaaaacaaaaoeabaaaaaa sub r0.x, r1.w, c2
ckaaaaaaaaaaabacaaaaaaaaacaaaaaaadaaaaaaabaaaaaa slt r0.x, r0.x, c3.x
bfaaaaaaaaaaapacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r0, r0.x
adaaaaaaabaaahacabaaaakeacaaaaaaaaaaaaoeabaaaaaa mul r1.xyz, r1.xyzz, c0
chaaaaaaaaaaaaaaaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa kil a0.none, r0.x
ciaaaaaaaaaaapacadaaaaoeaeaaaaaaabaaaaaaafaababb tex r0, v3, s1 <2d wrap linear point>
aaaaaaaaaaaaahacacaaaaoeaeaaaaaaaaaaaaaaaaaaaaaa mov r0.xyz, v2
bcaaaaaaaaaaabacabaaaaoeaeaaaaaaaaaaaakeacaaaaaa dp3 r0.x, v1, r0.xyzz
ahaaaaaaaaaaabacaaaaaaaaacaaaaaaadaaaaoeabaaaaaa max r0.x, r0.x, c3
adaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaappacaaaaaa mul r0.x, r0.x, r0.w
adaaaaaaaaaaahacaaaaaaaaacaaaaaaabaaaakeacaaaaaa mul r0.xyz, r0.x, r1.xyzz
adaaaaaaaaaaahacaaaaaakeacaaaaaaadaaaakkabaaaaaa mul r0.xyz, r0.xyzz, c3.z
aaaaaaaaaaaaaiacabaaaappacaaaaaaaaaaaaaaaaaaaaaa mov r0.w, r1.w
aaaaaaaaaaaaapadaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r0
"
}

SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL_COOKIE" }
ConstBuffer "$Globals" 176 // 164 used size, 9 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Float 160 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_LightTexture0] 2D 0
// 13 instructions, 3 temp regs, 0 temp arrays:
// ALU 8 float, 0 int, 0 uint
// TEX 2 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefiecedeggcppdcjjekhmgmmflociigkfnlbgjbabaaaaaajmaeaaaaaeaaaaaa
daaaaaaameabaaaamiadaaaagiaeaaaaebgpgodjimabaaaaimabaaaaaaacpppp
dmabaaaafaaaaaaaadaacmaaaaaafaaaaaaafaaaacaaceaaaaaafaaaabaaaaaa
aaababaaaaaaabaaabaaaaaaaaaaaaaaaaaaahaaabaaabaaaaaaaaaaaaaaakaa
abaaacaaaaaaaaaaaaacppppfbaaaaafadaaapkaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaabpaaaaacaaaaaaiaaaaaaplabpaaaaacaaaaaaiaabaachlabpaaaaac
aaaaaaiaacaachlabpaaaaacaaaaaajaaaaiapkabpaaaaacaaaaaajaabaiapka
ecaaaaadaaaaapiaaaaaoelaabaioekaabaaaaacabaaaiiaabaappkaaeaaaaae
abaacpiaaaaappiaabaappiaacaaaakbafaaaaadaaaacpiaaaaaoeiaabaaoeka
abaaaaacacaaadiaaaaabllaebaaaaababaaapiaecaaaaadabaacpiaacaaoeia
aaaioekaabaaaaacabaaahiaabaaoelaaiaaaaadabaacbiaabaaoeiaacaaoela
afaaaaadabaacciaabaappiaabaaaaiafiaaaaaeabaacbiaabaaaaiaabaaffia
adaaaakaacaaaaadabaacbiaabaaaaiaabaaaaiaafaaaaadabaacoiaaaaablia
aaaablkaafaaaaadaaaachiaabaaaaiaabaabliaabaaaaacaaaicpiaaaaaoeia
ppppaaaafdeieefcpmabaaaaeaaaaaaahpaaaaaafjaaaaaeegiocaaaaaaaaaaa
alaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafibiaaae
aahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaagcbaaaad
dcbabaaaabaaaaaagcbaaaadmcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaa
gcbaaaadhcbabaaaadaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacadaaaaaa
efaaaaajpcaabaaaaaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaa
abaaaaaadcaaaaambcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaa
ahaaaaaaakiacaiaebaaaaaaaaaaaaaaakaaaaaadiaaaaaipcaabaaaaaaaaaaa
egaobaaaaaaaaaaaegiocaaaaaaaaaaaahaaaaaadbaaaaahbcaabaaaabaaaaaa
akaabaaaabaaaaaaabeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaabaaaaaah
bcaabaaaabaaaaaaegbcbaaaacaaaaaaegbcbaaaadaaaaaadeaaaaahbcaabaaa
abaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaaefaaaaajpcaabaaaacaaaaaa
ogbkbaaaabaaaaaaeghobaaaabaaaaaaaagabaaaaaaaaaaaapaaaaahbcaabaaa
abaaaaaaagaabaaaabaaaaaapgapbaaaacaaaaaadiaaaaaihcaabaaaaaaaaaaa
egacbaaaaaaaaaaaegiccaaaaaaaaaaaabaaaaaadgaaaaaficcabaaaaaaaaaaa
dkaabaaaaaaaaaaadiaaaaahhccabaaaaaaaaaaaagaabaaaabaaaaaaegacbaaa
aaaaaaaadoaaaaabejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaaaaaaaaaa
abaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
abaaaaaaadadaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaabaaaaaaamamaaaa
imaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaaimaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaafeeffied
epepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl"
}

SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" }
"!!GLES3"
}

}
	}
	Pass {
		Name "PREPASS"
		Tags { "LightMode" = "PrePassBase" }
		Fog {Mode Off}
Program "vp" {
// Vertex combos: 1
//   opengl - ALU: 73 to 73
//   d3d9 - ALU: 73 to 73
//   d3d11 - ALU: 22 to 22, TEX: 0 to 0, FLOW: 1 to 1
//   d3d11_9x - ALU: 22 to 22, TEX: 0 to 0, FLOW: 1 to 1
SubProgram "opengl " {
Keywords { }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 9 [_Time]
Matrix 5 [_Object2World]
Vector 10 [unity_Scale]
Float 11 [_WaveSpeed]
Float 12 [_Amplitude]
Vector 13 [_MainTex_ST]
"!!ARBvp1.0
# 73 ALU
PARAM c[19] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.mvp,
		program.local[5..13],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[11];
MUL R0.x, R0, c[9];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[14];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[15].xyxw, c[15].zwzw;
MAD R1.xyz, R1, R0, c[16].xyxw;
MAD R1.xyz, R1, R0, c[16].zwzw;
MAD R1.xyz, R1, R0, c[17].xyxw;
MAD R0.xyz, R1, R0, c[14].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[17].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[14].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[18].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[12];
MAD R0.w, -R0.x, c[18].x, vertex.position.z;
MAD R0.x, R1.w, c[18].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[14];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[15].xyxw, c[15].zwzw;
MAD R3.xyz, R2, R0, c[16].xyxw;
MAD R3.xyz, R3, R0, c[16].zwzw;
MAD R3.xyz, R3, R0, c[17].xyxw;
ADD R1.xyz, -R1.w, c[14];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[15].xyxw, c[15].zwzw;
MAD R2.xyz, R2, R1, c[16].xyxw;
MAD R2.xyz, R2, R1, c[16].zwzw;
MAD R3.xyz, R3, R0, c[14].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[17].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[14].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[17].xyxw;
MAD R1.xyz, R0, R1, c[14].wzww;
SGE R0.yz, R1.w, c[17].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[14].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R1.xyz, vertex.normal, c[10].w;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R0.x, R0, c[12];
MUL R0.y, -R0, c[18].z;
MAD R0.y, R0.x, c[14], R0;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R2.w, c[12];
MAD R0.x, R0, c[14].y, vertex.position;
DP4 result.position.w, R0.xywz, c[4];
DP4 result.position.z, R0.xywz, c[3];
DP4 result.position.y, R0.xywz, c[2];
DP4 result.position.x, R0.xywz, c[1];
DP3 result.texcoord[1].z, R1, c[7];
DP3 result.texcoord[1].y, R1, c[6];
DP3 result.texcoord[1].x, R1, c[5];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[13], c[13].zwzw;
END
# 73 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Matrix 4 [_Object2World]
Vector 9 [unity_Scale]
Float 10 [_WaveSpeed]
Float 11 [_Amplitude]
Vector 12 [_MainTex_ST]
"vs_2_0
; 73 ALU
def c13, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c14, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c15, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c16, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c17, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_normal0 v2
dcl_texcoord0 v3
add r0.w, v0.x, v0.y
mov r0.x, c8
mul r0.x, c10, r0
slt r0.y, r0.x, c15.x
max r0.y, -r0, r0
slt r0.y, c15.x, r0
add r0.z, -r0.y, c13
mul r0.z, r0.x, r0
mad r1.y, r0, -r0.x, r0.z
add r1.x, r0.w, v0.z
mad r0.x, r1.y, c15.y, r1
mad r0.x, r0, c15.z, c15.w
frc r0.x, r0
mad r1.z, r0.x, c16.x, c16.y
sincos r0.xy, r1.z, c14.xyzw, c13.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1, c17.x, r1.x
mul r0.x, r0, c11
mad r2.z, -r0.x, c17.y, v0
mad r0.x, r1.y, c16.z, r1
mad r0.x, r0, c15.z, c15.w
mad r0.y, r0, c15.z, c15.w
frc r0.y, r0
mov r2.w, v0
mad r1.y, r0, c16.x, c16
frc r1.x, r0
sincos r0.xy, r1.y, c14.xyzw, c13.xyzw
mad r0.x, r1, c16, c16.y
mul r0.z, v3.y, r0.y
sincos r1.xy, r0.x, c14.xyzw, c13.xyzw
mul r0.y, v3, v3.x
mul r0.x, v3.y, r1.y
mul r0.y, -r0, c16.w
mul r0.x, r0, c11
mad r2.y, r0.x, c13.w, r0
mul r0.x, r0.z, c11
mad r2.x, r0, c13.w, v0
mul r0.xyz, v2, c9.w
dp4 oPos.w, r2, c3
dp4 oPos.z, r2, c2
dp4 oPos.y, r2, c1
dp4 oPos.x, r2, c0
dp3 oT1.z, r0, c6
dp3 oT1.y, r0, c5
dp3 oT1.x, r0, c4
mad oT0.xy, v3, c12, c12.zwzw
"
}

SubProgram "xbox360 " {
Keywords { }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Float 10 [_Amplitude]
Vector 11 [_MainTex_ST]
Matrix 5 [_Object2World] 3
Vector 0 [_Time]
Float 9 [_WaveSpeed]
Matrix 1 [glstate_matrix_mvp] 4
Vector 8 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 33.33-34.67 (25-26 instructions), vertex: 32, texture: 0,
//   sequencer: 16,  5 GPRs, 31 threads,
// Performance (if enough threads): ~33-34 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaabniaaaaabniaaaaaaaaaaaaaaceaaaaabgmaaaaabjeaaaaaaaa
aaaaaaaaaaaaabeeaaaaaabmaaaaabdhpppoadaaaaaaaaahaaaaaabmaaaaaaaa
aaaaabdaaaaaaakiaaacaaakaaabaaaaaaaaaaleaaaaaaaaaaaaaameaaacaaal
aaabaaaaaaaaaanaaaaaaaaaaaaaaaoaaaacaaafaaadaaaaaaaaaapaaaaaaaaa
aaaaabaaaaacaaaaaaabaaaaaaaaaanaaaaaaaaaaaaaabagaaacaaajaaabaaaa
aaaaaaleaaaaaaaaaaaaabbbaaacaaabaaaeaaaaaaaaaapaaaaaaaaaaaaaabce
aaacaaaiaaabaaaaaaaaaanaaaaaaaaafpebgnhagmgjhehfgegfaaklaaaaaaad
aaabaaabaaabaaaaaaaaaaaafpengbgjgofegfhifpfdfeaaaaabaaadaaabaaae
aaabaaaaaaaaaaaafpepgcgkgfgdhedcfhgphcgmgeaaklklaaadaaadaaaeaaae
aaabaaaaaaaaaaaafpfegjgngfaafpfhgbhggffdhagfgfgeaaghgmhdhegbhegf
fpgngbhehcgjhifpgnhghaaahfgogjhehjfpfdgdgbgmgfaahghdfpddfpdaaadc
codacodcdadddfddcodaaaklaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabe
aapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaabjiaabbaaae
aaaaaaaaaaaaaaaaaaaabeecaaaaaaabaaaaaaadaaaaaaacaaaaacjaaabaaaae
aaaadaafaadafaagaaaadafaaaabhbfbaaaabacaaaaababpaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaadoccpjidlpiaaaaamaejapnldpiaaaaadpaaaaaadoemmmmn
eamjapnldpggggggdpljjjjkeaehkobeeaammmmndpaaaaaahajfgaaebaakbaaa
fgaaaaaaaaaaaaaagaalmcaabcaaaaaaaaaagabbfabhbcaabcaaaaaaaaaaaaaa
fabmmeaaccaaaaaaafpibaaaaaaaagiiaaaaaaaaafpicaaaaaaaaoiiaaaaaaaa
afpiaaaaaaaaaohiaaaaaaaamiacaaaaaagmlbaacbaapnaamiaiaaaaaagmgmaa
cbaaajaaheacaaababloblbllaabpnaakiiaaaaabiaaaaebmcaaaaajmiaiaaad
aamggmaaobaaaaaamiahaaadaablmalbklaappabmiahaaadaamagmbliladpnpp
miahaaadaamaaaaaoiadaaaamiapaaaeaadeagaakbadpoaamiahaaadaalemgaa
kaaepnaamabaadaaaaaaaagmocaaaaadmacaadaaaaaaaalbocaaaaadmaekadaa
aamglmmgkbaapoadmiahaaadaabbmaaaobaaadaamiahaaaeaamagmaakbadakaa
miacaaaaaagmgmaaoaaeabaabeapaaadaablaalbkbabaeaeaeibaaabafmgmgbl
oaaeabaemiapaaabaagmiiiiklabadadmiapaaabaabldejeklaaacabmiapiado
aalbaadeklaaababmialaaabaagfblaakbacaiaamiahaaacaalbleaakbabahaa
miahaaabaagmlemaklabagacmiahiaabaablmaleklabafabmiadiaaaaamelabk
ilaaalalaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_Time]
Matrix 260 [_Object2World]
Vector 466 [unity_Scale]
Float 465 [_WaveSpeed]
Float 464 [_Amplitude]
Vector 463 [_MainTex_ST]
"sce_vp_rsx // 30 instructions using 4 registers
[Configuration]
8
0000001e01050400
[Defaults]
2
462 4
400ccccd3e4ccccd4047ae143f000000
461 2
3f6666663fb9999a
[Microcode]
480
00009c6c009d220c013fc0c36041dffc401f9c6c011cf808010400d740619f9c
00001c6c0040007f8106c08360403ffc00011c6c0080082a8100008360411ffc
00001c6c00c000000106c08aa0409ffc00001c6c005d10000186c08360411ffc
401f9c6c0150600c028600c360405fa000001c6c009d3000008000c360411ffc
201fdc6c004000000086c08360411ffc00009c6c00c000550106c08aa0203ffc
00001c6c004000000086c08360405ffc00002400004000800086c08360405ffc
00001c6c011ce055008800dfe0a19ffc00001c6c011cd055009540dfe0a05ffc
401f9c6c7950500c028600caa028802000009c6c789cd080048000c00030207c
00019c6c7880082a811540554031017c00001c6c008008000095408360409ffc
00001c6c0080082a8100024360411ffc00001c6c009d0000008000c360411ffc
00001c6c009d002a808000c360405ffc00001c6c009d0000068000c360409ffc
00001c6c011ce02a80bfc0dfe0a09ffc00001c6c011ce0d5009540d540405ffc
00001c6c011ce00000bfc0c000411ffc401f9c6c0150400c028600c360411fa0
401f9c6c01d0300d8086c0c360403f80401f9c6c01d0200d8086c0c360405f80
401f9c6c01d0100d8086c0c360409f80401f9c6c01d0000d8086c0c360411f81
"
}

SubProgram "d3d11 " {
Keywords { }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 112 // 96 used size, 8 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityPerDraw" 2
// 24 instructions, 2 temp regs, 0 temp arrays:
// ALU 22 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedlfamhfbpdpncdobjkbnbebjgehbajnkdabaaaaaacaafaaaaadaaaaaa
cmaaaaaapeaaaaaageabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheogiaaaaaaadaaaaaa
aiaaaaaafaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaafmaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaafmaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklfdeieefcleadaaaaeaaaabaaonaaaaaafjaaaaaeegiocaaaaaaaaaaa
agaaaaaafjaaaaaeegiocaaaabaaaaaaabaaaaaafjaaaaaeegiocaaaacaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaad
dcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadhccabaaaacaaaaaagiaaaaacacaaaaaadiaaaaajbcaabaaa
aaaaaaaaakiacaaaaaaaaaaaaeaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaah
ccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaa
aaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaa
aaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaah
ccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaa
aaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaa
fgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaa
diaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaai
hcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaaaaaaaaaaaeaaaaaadiaaaaah
ccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaa
aaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaa
dkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaai
pcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaadcaaaaaj
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaa
dcaaaaakccaabaaaaaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdo
ckbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaacaaaaaaaaaaaaaa
agaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
acaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaa
aaaaaaaaegiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaafaaaaaa
ogikcaaaaaaaaaaaafaaaaaadiaaaaaihcaabaaaaaaaaaaaegbcbaaaacaaaaaa
pgipcaaaacaaaaaabeaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaa
egiccaaaacaaaaaaanaaaaaadcaaaaaklcaabaaaaaaaaaaaegiicaaaacaaaaaa
amaaaaaaagaabaaaaaaaaaaaegaibaaaabaaaaaadcaaaaakhccabaaaacaaaaaa
egiccaaaacaaaaaaaoaaaaaakgakbaaaaaaaaaaaegadbaaaaaaaaaaadoaaaaab
"
}

SubProgram "gles " {
Keywords { }
"!!GLES


#ifdef VERTEX

varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  lowp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = _glesVertex;
  highp float t_4;
  highp float tmpvar_5;
  tmpvar_5 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_6;
  tmpvar_6 = (_Time * _WaveSpeed).x;
  t_4 = tmpvar_6;
  if ((tmpvar_6 < 0.0)) {
    t_4 = (tmpvar_6 * -1.0);
  };
  tmpvar_3.x = (_glesVertex.x + (((sin(((t_4 * 1.45) + tmpvar_5)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_3.y = ((((sin(((t_4 * 3.12) + tmpvar_5)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_3.z = (_glesVertex.z - (((sin(((t_4 * 2.2) + tmpvar_5)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (tmpvar_1 * unity_Scale.w));
  tmpvar_2 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * tmpvar_3);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
void main ()
{
  lowp vec4 res_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float x_5;
  x_5 = (c_2.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  res_1.xyz = ((xlv_TEXCOORD1 * 0.5) + 0.5);
  res_1.w = 0.0;
  gl_FragData[0] = res_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { }
"!!GLES


#ifdef VERTEX

varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  lowp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = _glesVertex;
  highp float t_4;
  highp float tmpvar_5;
  tmpvar_5 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_6;
  tmpvar_6 = (_Time * _WaveSpeed).x;
  t_4 = tmpvar_6;
  if ((tmpvar_6 < 0.0)) {
    t_4 = (tmpvar_6 * -1.0);
  };
  tmpvar_3.x = (_glesVertex.x + (((sin(((t_4 * 1.45) + tmpvar_5)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_3.y = ((((sin(((t_4 * 3.12) + tmpvar_5)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_3.z = (_glesVertex.z - (((sin(((t_4 * 2.2) + tmpvar_5)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (tmpvar_1 * unity_Scale.w));
  tmpvar_2 = tmpvar_8;
  gl_Position = (glstate_matrix_mvp * tmpvar_3);
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

varying lowp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
void main ()
{
  lowp vec4 res_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float x_5;
  x_5 = (c_2.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  res_1.xyz = ((xlv_TEXCOORD1 * 0.5) + 0.5);
  res_1.w = 0.0;
  gl_FragData[0] = res_1;
}



#endif"
}

SubProgram "d3d11_9x " {
Keywords { }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 112 // 96 used size, 8 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityPerDraw" 2
// 24 instructions, 2 temp regs, 0 temp arrays:
// ALU 22 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecedeaemdlocbadmodbcfjcklmolmfkhfohpabaaaaaakmaiaaaaaeaaaaaa
daaaaaaaliadaaaaheahaaaadmaiaaaaebgpgodjiaadaaaaiaadaaaaaaacpopp
bmadaaaageaaaaaaafaaceaaaaaagaaaaaaagaaaaaaaceaaabaagaaaaaaaaeaa
acaaabaaaaaaaaaaabaaaaaaabaaadaaaaaaaaaaacaaaaaaaeaaaeaaaaaaaaaa
acaaamaaadaaaiaaaaaaaaaaacaabeaaabaaalaaaaaaaaaaaaaaaaaaaaacpopp
fbaaaaafamaaapkajkjjljdpbekoeheamnmmameaggggggdpfbaaaaafanaaapka
aaaaaaaaaaaaaamaidpjccdoaaaaaadpfbaaaaafaoaaapkanlapmjeanlapejma
mnmmemdoaaaaaaaafbaaaaafapaaapkaabannalfgballglhklkkckdlijiiiidj
fbaaaaafbaaaapkaklkkkklmaaaaaaloaaaaiadpaaaaaadpbpaaaaacafaaaaia
aaaaapjabpaaaaacafaaaciaacaaapjabpaaaaacafaaadiaadaaapjaaeaaaaae
aaaaadoaadaaoejaacaaoekaacaaookaafaaaaadaaaaahiaacaaoejaalaappka
afaaaaadabaaahiaaaaaffiaajaaoekaaeaaaaaeaaaaaliaaiaakekaaaaaaaia
abaakeiaaeaaaaaeabaaahoaakaaoekaaaaakkiaaaaapeiaabaaaaacaaaaabia
abaaaakaafaaaaadaaaaabiaaaaaaaiaadaaaakaamaaaaadaaaaaciaaaaaaaia
anaaaakaafaaaaadaaaaaciaaaaaffiaaaaaaaiaaeaaaaaeaaaaabiaaaaaffia
anaaffkaaaaaaaiaacaaaaadaaaaaciaaaaaffjaaaaaaajaacaaaaadaaaaacia
aaaaffiaaaaakkjaaeaaaaaeaaaaahiaaaaaaaiaamaaoekaaaaaffiaaeaaaaae
aaaaahiaaaaaoeiaanaakkkaanaappkabdaaaaacaaaaahiaaaaaoeiaaeaaaaae
aaaaahiaaaaaoeiaaoaaaakaaoaaffkacfaaaaaeabaaaciaaaaaffiaapaaoeka
baaaoekaafaaaaadaaaaaciaabaaffiaadaaffjaafaaaaadaaaaaciaaaaaffia
abaaffkaafaaaaadaaaaaiiaadaaaajaadaaffjaafaaaaadaaaaaiiaaaaappia
amaappkaaeaaaaaeaaaaaciaaaaaffiaanaappkaaaaappibafaaaaadabaaapia
aaaaffiaafaaoekacfaaaaaeacaaaciaaaaaaaiaapaaoekabaaaoekacfaaaaae
adaaaciaaaaakkiaapaaoekabaaaoekaafaaaaadaaaaabiaadaaffiaadaaffja
afaaaaadaaaaabiaaaaaaaiaabaaffkaaeaaaaaeaaaaabiaaaaaaaiaaoaakkkb
aaaakkjaafaaaaadaaaaaciaacaaffiaadaaffjaafaaaaadaaaaaciaaaaaffia
abaaffkaaeaaaaaeaaaaaciaaaaaffiaanaappkaaaaaaajaaeaaaaaeabaaapia
aeaaoekaaaaaffiaabaaoeiaaeaaaaaeaaaaapiaagaaoekaaaaaaaiaabaaoeia
aeaaaaaeaaaaapiaahaaoekaaaaappjaaaaaoeiaaeaaaaaeaaaaadmaaaaappia
aaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeiappppaaaafdeieefcleadaaaa
eaaaabaaonaaaaaafjaaaaaeegiocaaaaaaaaaaaagaaaaaafjaaaaaeegiocaaa
abaaaaaaabaaaaaafjaaaaaeegiocaaaacaaaaaabfaaaaaafpaaaaadpcbabaaa
aaaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaae
pccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaadhccabaaa
acaaaaaagiaaaaacacaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaa
aeaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaa
aceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaag
hcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaa
aaaaaaaafgifcaaaaaaaaaaaaeaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaa
bkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaa
abeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaa
aaaaaaaaegiocaaaacaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaa
ckaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaacaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaafgafbaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaacaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaafaaaaaaogikcaaaaaaaaaaaafaaaaaa
diaaaaaihcaabaaaaaaaaaaaegbcbaaaacaaaaaapgipcaaaacaaaaaabeaaaaaa
diaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaaacaaaaaaanaaaaaa
dcaaaaaklcaabaaaaaaaaaaaegiicaaaacaaaaaaamaaaaaaagaabaaaaaaaaaaa
egaibaaaabaaaaaadcaaaaakhccabaaaacaaaaaaegiccaaaacaaaaaaaoaaaaaa
kgakbaaaaaaaaaaaegadbaaaaaaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaa
apadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeo
ehefeofeaaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheo
giaaaaaaadaaaaaaaiaaaaaafaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaa
apaaaaaafmaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaafmaaaaaa
abaaaaaaaaaaaaaaadaaaaaaacaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklkl"
}

SubProgram "gles3 " {
Keywords { }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 424
uniform highp vec4 _MainTex_ST;
uniform lowp float _Cutoff;
#line 400
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 404
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 408
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 425
v2f_surf vert_surf( in appdata_full v ) {
    v2f_surf o;
    #line 428
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    o.normal = (mat3( _Object2World) * (v.normal * unity_Scale.w));
    #line 432
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out lowp vec3 xlv_TEXCOORD1;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec3(xl_retval.normal);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    lowp vec3 normal;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 424
uniform highp vec4 _MainTex_ST;
uniform lowp float _Cutoff;
#line 411
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 413
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 435
lowp vec4 frag_surf( in v2f_surf IN ) {
    #line 437
    Input surfIN;
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    #line 441
    o.Emission = vec3( 0.0);
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    #line 445
    o.Normal = IN.normal;
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    lowp vec4 res;
    #line 449
    res.xyz = ((o.Normal * 0.5) + 0.5);
    res.w = o.Specular;
    return res;
}
in highp vec2 xlv_TEXCOORD0;
in lowp vec3 xlv_TEXCOORD1;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.normal = vec3(xlv_TEXCOORD1);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

}
Program "fp" {
// Fragment combos: 1
//   opengl - ALU: 6 to 6, TEX: 1 to 1
//   d3d9 - ALU: 7 to 7, TEX: 2 to 2
//   d3d11 - ALU: 3 to 3, TEX: 1 to 1, FLOW: 1 to 1
//   d3d11_9x - ALU: 3 to 3, TEX: 1 to 1, FLOW: 1 to 1
SubProgram "opengl " {
Keywords { }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
"!!ARBfp1.0
# 6 ALU, 1 TEX
PARAM c[3] = { program.local[0..1],
		{ 0, 0.5 } };
TEMP R0;
TEX R0.w, fragment.texcoord[0], texture[0], 2D;
MUL R0.x, R0.w, c[0].w;
SLT R0.x, R0, c[1];
MAD result.color.xyz, fragment.texcoord[1], c[2].y, c[2].y;
MOV result.color.w, c[2].x;
KIL -R0.x;
END
# 6 instructions, 1 R-regs
"
}

SubProgram "d3d9 " {
Keywords { }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
"ps_2_0
; 7 ALU, 2 TEX
dcl_2d s0
def c2, 0.00000000, 1.00000000, 0.50000000, 0
dcl t0.xy
dcl t1.xyz
texld r0, t0, s0
mul r0.w, r0, c0
add_pp r0.x, r0.w, -c1
cmp r0.x, r0, c2, c2.y
mov_pp r0, -r0.x
texkill r0.xyzw
mad_pp r0.xyz, t1, c2.z, c2.z
mov_pp r0.w, c2.x
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 4.00 (3 instructions), vertex: 0, texture: 4,
//   sequencer: 6, interpolator: 8;    2 GPRs, 63 threads,
// Performance (if enough threads): ~8 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaabdaaaaaaajeaaaaaaaaaaaaaaceaaaaaaoaaaaaabaiaaaaaaaa
aaaaaaaaaaaaaaliaaaaaabmaaaaaaklppppadaaaaaaaaadaaaaaabmaaaaaaaa
aaaaaakeaaaaaafiaaacaaaaaaabaaaaaaaaaagaaaaaaaaaaaaaaahaaaacaaab
aaabaaaaaaaaaahiaaaaaaaaaaaaaaiiaaadaaaaaaabaaaaaaaaaajeaaaaaaaa
fpedgpgmgphcaaklaaabaaadaaabaaaeaaabaaaaaaaaaaaafpedhfhegpggggaa
aaaaaaadaaabaaabaaabaaaaaaaaaaaafpengbgjgofegfhiaaklklklaaaeaaam
aaabaaabaaabaaaaaaaaaaaahahdfpddfpdaaadccodacodcdadddfddcodaaakl
aaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabeabpmaabaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaeaaaaaaafebaaaabaaaaaaaaaeaaaaaaaaaaaabeec
aaadaaadaaaaaacbaaaadafaaaaahbfbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaadpaaaaaaaaaaaaaaaaaaaaaaaaabbaacaaaabcaameaaaaaaaaaadaad
aaaaccaaaaaaaaaabaaiaaabbpbpppplaaaaeaaamiabaaaaabgmblgmilaaaaab
miaaaaaaaagmgmaahjppaaaamiahmaaaaamalblbilabppppaaaaaaaaaaaaaaaa
aaaaaaaa"
}

SubProgram "ps3 " {
Keywords { }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
"sce_fp_rsx // 9 instructions using 2 registers
[Configuration]
24
ffffffff0000c0200003fffd000000000000848002000000
[Offsets]
2
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
144
90001700c8011c9dc8000001c8003fe102800200fe001c9dfe020001c8000001
00000000000000000000000000000000037e4a80c9001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
ae800140c8011c9dc8000001c8003fe10e810440c9001c9d0002000000020000
00003f00000000000000000000000000
"
}

SubProgram "d3d11 " {
Keywords { }
ConstBuffer "$Globals" 112 // 100 used size, 8 vars
Vector 48 [_Color] 4
Float 96 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
// 7 instructions, 1 temp regs, 0 temp arrays:
// ALU 3 float, 0 int, 0 uint
// TEX 1 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedcpghiffdpnamfnhngcbgamlbaocbfmohabaaaaaaaiacaaaaadaaaaaa
cmaaaaaajmaaaaaanaaaaaaaejfdeheogiaaaaaaadaaaaaaaiaaaaaafaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaafmaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaafmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheo
cmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaa
apaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcdaabaaaaeaaaaaaaemaaaaaa
fjaaaaaeegiocaaaaaaaaaaaahaaaaaafkaaaaadaagabaaaaaaaaaaafibiaaae
aahabaaaaaaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaadhcbabaaa
acaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacabaaaaaaefaaaaajpcaabaaa
aaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaam
bcaabaaaaaaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaaakiacaia
ebaaaaaaaaaaaaaaagaaaaaadbaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
abeaaaaaaaaaaaaaanaaaeadakaabaaaaaaaaaaadcaaaaaphccabaaaaaaaaaaa
egbcbaaaacaaaaaaaceaaaaaaaaaaadpaaaaaadpaaaaaadpaaaaaaaaaceaaaaa
aaaaaadpaaaaaadpaaaaaadpaaaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaa
aaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { }
"!!GLES"
}

SubProgram "d3d11_9x " {
Keywords { }
ConstBuffer "$Globals" 112 // 100 used size, 8 vars
Vector 48 [_Color] 4
Float 96 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
// 7 instructions, 1 temp regs, 0 temp arrays:
// ALU 3 float, 0 int, 0 uint
// TEX 1 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefiecedbfdpodndaooljdkoleafmidnjmfkmeneabaaaaaapmacaaaaaeaaaaaa
daaaaaaacaabaaaafiacaaaamiacaaaaebgpgodjoiaaaaaaoiaaaaaaaaacpppp
kiaaaaaaeaaaaaaaacaaciaaaaaaeaaaaaaaeaaaabaaceaaaaaaeaaaaaaaaaaa
aaaaadaaabaaaaaaaaaaaaaaaaaaagaaabaaabaaaaaaaaaaaaacppppfbaaaaaf
acaaapkaaaaaaadpaaaaaaaaaaaaaaaaaaaaaaaabpaaaaacaaaaaaiaaaaaadla
bpaaaaacaaaaaaiaabaachlabpaaaaacaaaaaajaaaaiapkaecaaaaadaaaaapia
aaaaoelaaaaioekaabaaaaacabaaaiiaaaaappkaaeaaaaaeaaaacpiaaaaappia
abaappiaabaaaakbebaaaaabaaaaapiaaeaaaaaeaaaachiaabaaoelaacaaaaka
acaaaakaabaaaaacaaaaciiaacaaffkaabaaaaacaaaicpiaaaaaoeiappppaaaa
fdeieefcdaabaaaaeaaaaaaaemaaaaaafjaaaaaeegiocaaaaaaaaaaaahaaaaaa
fkaaaaadaagabaaaaaaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaagcbaaaad
dcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagfaaaaadpccabaaaaaaaaaaa
giaaaaacabaaaaaaefaaaaajpcaabaaaaaaaaaaaegbabaaaabaaaaaaeghobaaa
aaaaaaaaaagabaaaaaaaaaaadcaaaaambcaabaaaaaaaaaaadkaabaaaaaaaaaaa
dkiacaaaaaaaaaaaadaaaaaaakiacaiaebaaaaaaaaaaaaaaagaaaaaadbaaaaah
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaaanaaaeadakaabaaa
aaaaaaaadcaaaaaphccabaaaaaaaaaaaegbcbaaaacaaaaaaaceaaaaaaaaaaadp
aaaaaadpaaaaaadpaaaaaaaaaceaaaaaaaaaaadpaaaaaadpaaaaaadpaaaaaaaa
dgaaaaaficcabaaaaaaaaaaaabeaaaaaaaaaaaaadoaaaaabejfdeheogiaaaaaa
adaaaaaaaiaaaaaafaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaa
fmaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadadaaaafmaaaaaaabaaaaaa
aaaaaaaaadaaaaaaacaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaafeeffied
epepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl"
}

SubProgram "gles3 " {
Keywords { }
"!!GLES3"
}

}
	}
	Pass {
		Name "PREPASS"
		Tags { "LightMode" = "PrePassFinal" }
		ZWrite Off
Program "vp" {
// Vertex combos: 6
//   opengl - ALU: 75 to 92
//   d3d9 - ALU: 75 to 92
//   d3d11 - ALU: 22 to 36, TEX: 0 to 0, FLOW: 1 to 1
//   d3d11_9x - ALU: 22 to 36, TEX: 0 to 0, FLOW: 1 to 1
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 9 [_Time]
Vector 10 [_ProjectionParams]
Vector 11 [unity_SHAr]
Vector 12 [unity_SHAg]
Vector 13 [unity_SHAb]
Vector 14 [unity_SHBr]
Vector 15 [unity_SHBg]
Vector 16 [unity_SHBb]
Vector 17 [unity_SHC]
Matrix 5 [_Object2World]
Vector 18 [unity_Scale]
Float 19 [_WaveSpeed]
Float 20 [_Amplitude]
Vector 21 [_MainTex_ST]
"!!ARBvp1.0
# 92 ALU
PARAM c[27] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.mvp,
		program.local[5..21],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[19];
MUL R0.x, R0, c[9];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[22];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[23].xyxw, c[23].zwzw;
MAD R1.xyz, R1, R0, c[24].xyxw;
MAD R1.xyz, R1, R0, c[24].zwzw;
MAD R1.xyz, R1, R0, c[25].xyxw;
MAD R0.xyz, R1, R0, c[22].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[25].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[22].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[26].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[20];
MAD R0.w, -R0.x, c[26].x, vertex.position.z;
MAD R0.x, R1.w, c[26].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[22];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[23].xyxw, c[23].zwzw;
MAD R3.xyz, R2, R0, c[24].xyxw;
MAD R3.xyz, R3, R0, c[24].zwzw;
MAD R3.xyz, R3, R0, c[25].xyxw;
ADD R1.xyz, -R1.w, c[22];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[23].xyxw, c[23].zwzw;
MAD R2.xyz, R2, R1, c[24].xyxw;
MAD R2.xyz, R2, R1, c[24].zwzw;
MAD R3.xyz, R3, R0, c[22].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[25].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[22].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[25].xyxw;
MAD R1.xyz, R0, R1, c[22].wzww;
SGE R0.yz, R1.w, c[25].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[22].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R0, c[20];
MUL R0.y, -R0, c[26].z;
MAD R0.y, R0.x, c[22], R0;
MUL R0.x, R2.w, c[20];
MAD R0.x, R0, c[22].y, vertex.position;
DP4 R1.w, R0.xywz, c[4];
DP4 R1.z, R0.xywz, c[3];
DP4 R1.x, R0.xywz, c[1];
DP4 R1.y, R0.xywz, c[2];
MUL R2.xyz, R1.xyww, c[22].y;
MUL R2.y, R2, c[10].x;
ADD result.texcoord[1].xy, R2, R2.z;
MUL R2.xyz, vertex.normal, c[18].w;
DP3 R2.w, R2, c[6];
DP3 R0.x, R2, c[5];
DP3 R0.z, R2, c[7];
MOV R0.y, R2.w;
MOV R0.w, c[22].z;
DP4 R2.z, R0, c[13];
DP4 R2.y, R0, c[12];
DP4 R2.x, R0, c[11];
MUL R0.w, R2, R2;
MAD R0.w, R0.x, R0.x, -R0;
MOV result.position, R1;
MOV result.texcoord[1].zw, R1;
MUL R1, R0.xyzz, R0.yzzx;
DP4 R0.z, R1, c[16];
DP4 R0.y, R1, c[15];
DP4 R0.x, R1, c[14];
MUL R1.xyz, R0.w, c[17];
ADD R0.xyz, R2, R0;
ADD result.texcoord[2].xyz, R0, R1;
MAD result.texcoord[0].xy, vertex.texcoord[0], c[21], c[21].zwzw;
END
# 92 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Vector 9 [_ProjectionParams]
Vector 10 [_ScreenParams]
Vector 11 [unity_SHAr]
Vector 12 [unity_SHAg]
Vector 13 [unity_SHAb]
Vector 14 [unity_SHBr]
Vector 15 [unity_SHBg]
Vector 16 [unity_SHBb]
Vector 17 [unity_SHC]
Matrix 4 [_Object2World]
Vector 18 [unity_Scale]
Float 19 [_WaveSpeed]
Float 20 [_Amplitude]
Vector 21 [_MainTex_ST]
"vs_2_0
; 92 ALU
def c22, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c23, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c24, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c25, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c26, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_normal0 v2
dcl_texcoord0 v3
add r0.w, v0.x, v0.y
mov r0.x, c8
mul r0.x, c19, r0
slt r0.y, r0.x, c24.x
max r0.y, -r0, r0
slt r0.y, c24.x, r0
add r0.z, -r0.y, c22
mul r0.z, r0.x, r0
mad r1.x, r0.y, -r0, r0.z
add r1.y, r0.w, v0.z
mad r0.x, r1, c24.y, r1.y
mad r0.x, r0, c24.z, c24.w
frc r0.x, r0
mad r1.z, r0.x, c25.x, c25.y
sincos r0.xy, r1.z, c23.xyzw, c22.xyzw
mul r0.x, r0.y, v3.y
mul r0.x, r0, c20
mad r0.z, -r0.x, c26.y, v0
mad r0.y, r1.x, c26.x, r1
mad r0.x, r1, c25.z, r1.y
mad r0.y, r0, c24.z, c24.w
frc r0.y, r0
mad r0.y, r0, c25.x, c25
sincos r1.xy, r0.y, c23.xyzw, c22.xyzw
mad r0.x, r0, c24.z, c24.w
frc r0.x, r0
mad r0.x, r0, c25, c25.y
sincos r2.xy, r0.x, c23.xyzw, c22.xyzw
mul r0.x, v3.y, r2.y
mul r2.xyz, v2, c18.w
mul r0.y, v3, v3.x
mov r1.w, c22.z
mul r0.w, v3.y, r1.y
dp3 r3.z, r2, c5
mul r0.x, r0, c20
mul r0.y, -r0, c25.w
mad r0.y, r0.x, c22.w, r0
mul r0.x, r0.w, c20
mov r0.w, v0
mad r0.x, r0, c22.w, v0
dp4 r3.w, r0, c3
dp4 r3.x, r0, c0
dp4 r3.y, r0, c1
mul r1.xyz, r3.xyww, c22.w
mul r1.y, r1, c9.x
mad oT1.xy, r1.z, c10.zwzw, r1
mov r1.y, r3.z
dp3 r1.x, r2, c4
dp3 r1.z, r2, c6
mul r2, r1.xyzz, r1.yzzx
dp4 r4.z, r1, c13
dp4 r4.y, r1, c12
dp4 r4.x, r1, c11
dp4 r1.w, r2, c16
dp4 r1.z, r2, c15
dp4 r1.y, r2, c14
mul r3.z, r3, r3
mad r2.x, r1, r1, -r3.z
dp4 r3.z, r0, c2
add r1.xyz, r4, r1.yzww
mul r2.xyz, r2.x, c17
add oT2.xyz, r1, r2
mov oPos, r3
mov oT1.zw, r3
mad oT0.xy, v3, c21, c21.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Float 19 [_Amplitude]
Vector 20 [_MainTex_ST]
Matrix 14 [_Object2World] 3
Vector 1 [_ProjectionParams]
Vector 2 [_ScreenParams]
Vector 0 [_Time]
Float 18 [_WaveSpeed]
Matrix 10 [glstate_matrix_mvp] 4
Vector 5 [unity_SHAb]
Vector 4 [unity_SHAg]
Vector 3 [unity_SHAr]
Vector 8 [unity_SHBb]
Vector 7 [unity_SHBg]
Vector 6 [unity_SHBr]
Vector 9 [unity_SHC]
Vector 17 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 52.00-53.33 (39-40 instructions), vertex: 32, texture: 0,
//   sequencer: 20,  6 GPRs, 30 threads,
// Performance (if enough threads): ~52-53 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaadaeaaaaacimaaaaaaaaaaaaaaceaaaaacimaaaaacleaaaaaaaa
aaaaaaaaaaaaacgeaaaaaabmaaaaacfhpppoadaaaaaaaabaaaaaaabmaaaaaaaa
aaaaacfaaaaaabfmaaacaabdaaabaaaaaaaaabgiaaaaaaaaaaaaabhiaaacaabe
aaabaaaaaaaaabieaaaaaaaaaaaaabjeaaacaaaoaaadaaaaaaaaabkeaaaaaaaa
aaaaableaaacaaabaaabaaaaaaaaabieaaaaaaaaaaaaabmgaaacaaacaaabaaaa
aaaaabieaaaaaaaaaaaaabneaaacaaaaaaabaaaaaaaaabieaaaaaaaaaaaaabnk
aaacaabcaaabaaaaaaaaabgiaaaaaaaaaaaaabofaaacaaakaaaeaaaaaaaaabke
aaaaaaaaaaaaabpiaaacaaafaaabaaaaaaaaabieaaaaaaaaaaaaacadaaacaaae
aaabaaaaaaaaabieaaaaaaaaaaaaacaoaaacaaadaaabaaaaaaaaabieaaaaaaaa
aaaaacbjaaacaaaiaaabaaaaaaaaabieaaaaaaaaaaaaacceaaacaaahaaabaaaa
aaaaabieaaaaaaaaaaaaaccpaaacaaagaaabaaaaaaaaabieaaaaaaaaaaaaacdk
aaacaaajaaabaaaaaaaaabieaaaaaaaaaaaaaceeaaacaabbaaabaaaaaaaaabie
aaaaaaaafpebgnhagmgjhehfgegfaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaa
fpengbgjgofegfhifpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpepgcgk
gfgdhedcfhgphcgmgeaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpfahcgp
gkgfgdhegjgpgofagbhcgbgnhdaafpfdgdhcgfgfgofagbhcgbgnhdaafpfegjgn
gfaafpfhgbhggffdhagfgfgeaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaa
hfgogjhehjfpfdeiebgcaahfgogjhehjfpfdeiebghaahfgogjhehjfpfdeiebhc
aahfgogjhehjfpfdeiecgcaahfgogjhehjfpfdeiecghaahfgogjhehjfpfdeiec
hcaahfgogjhehjfpfdeiedaahfgogjhehjfpfdgdgbgmgfaahghdfpddfpdaaadc
codacodcdadddfddcodaaaklaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabe
aapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaacemaacbaaaf
aaaaaaaaaaaaaaaaaaaacegdaaaaaaabaaaaaaadaaaaaaaeaaaaacjaaabaaaaf
aaaadaagaacafaahaaaadafaaaabpbfbaaadhcfcaaaabacnaaaaaaclaaaabacp
aaaabacmaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadoccpjidlpiaaaaamaejapnl
dpiaaaaadpaaaaaadoemmmmndpggggggeamjapnldpljjjjkeaehkobeeaammmmn
dpaaaaaahajfgaafbaalbaaafgaaaaaaaaaaaaaagaammcaabcaaaaaaaaaagabc
gabibcaabcaaaaaaaaaaaaaagabomeaabcaaaaaaaaaagacegackbcaaccaaaaaa
afpicaaaaaaaagiiaaaaaaaaafpidaaaaaaaaoiiaaaaaaaaafpibaaaaaaaapmi
aaaaaaaamiacaaaaaagmlbaacbaapnaamiabaaaaaagmgmaacbaabcaaheaeaaaa
abloblgmlaacpnaakibaaaaabiaaaaebmcaaaabcmiabaaaeaalbgmaaobababaa
miahaaaaaagmmamgklaappaamiahaaaaaamagmblilaapnppmiaoaaaeaapmaaaa
oiaaaaaamiapaaaeaanabkaakbaepoaamiahaaaaaamjmgaakaaepnaamabaaaaa
aaaaaagmocaaaaaamacaaaaaaaaaaalbocaaaaaamaemaaabaalbkmmgkbabpoaa
miahaaaaaabgmaaaobabaaaamiaoaaaeaapmgmaakbaabdaamiaeaaabaalbgmaa
oaaeacaabeapaaaaaablaamgkbacanaeaeibabacafblmggmoaaeacaemiapaaaa
aagmnanaklacamaamiapaaaaaabldepiklabalaamiapaaaeaamgnajeklabakaa
miapiadoaananaaaocaeaeaamialaaaaaagfblaakbadbbaamiahaaacaalbleaa
kbaabaaamiahaaaaaagmlemaklaaapacmiahaaaaaabllemaklaaaoaaceipaaaf
aalehcgmobaaaaiamiabaaadaadoanaagpadaaaamiacaaadaadoanaagpaeaaaa
miaeaaadaadoanaagpafaaaamiabaaacaakhkhaakpafagaamiacaaacaakhkhaa
kpafahaaaieeabacaakhkhgmkpafaiaaaiihabacaalolomgoaadacaageihaaaa
aamablmlkbaeppabmiamiaabaanlnlaaocaeaeaamiahiaacaablmagfklaaajac
miadiaaaaalalabkilabbebekiiaaaaaaaaaaaebmcaaaaabmiadiaabaamgbkbi
klaaacaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_Time]
Vector 466 [_ProjectionParams]
Vector 465 [unity_SHAr]
Vector 464 [unity_SHAg]
Vector 463 [unity_SHAb]
Vector 462 [unity_SHBr]
Vector 461 [unity_SHBg]
Vector 460 [unity_SHBb]
Vector 459 [unity_SHC]
Matrix 260 [_Object2World]
Vector 458 [unity_Scale]
Float 457 [_WaveSpeed]
Float 456 [_Amplitude]
Vector 455 [_MainTex_ST]
"sce_vp_rsx // 48 instructions using 4 registers
[Configuration]
8
0000003001050400
[Defaults]
2
454 4
400ccccd3e4ccccd4047ae143f000000
453 2
3f6666663fb9999a
[Microcode]
768
00009c6c009ca20c013fc0c36041dffc401f9c6c011c7808010400d740619f9c
00009c6c0040007f8106c08360403ffc00001c6c005c90000186c08360409ffc
00001c6c00c000000106c08aa0403ffc00001c6c0150400c028600c360411ffc
00001c6c0150600c028600c360405ffc00009c6c0150500c028600c360411ffc
00019c6c00c000550106c09fe0209ffc00019c6c009d302a808000c360405ffc
201fdc6c004000550686c08360411ffc00019c6c004000550686c08360411ffc
00001c6c008000000280014360403ffc00001c6c004000000286c08360409ffc
00009c6c019cf00c0086c0c360405ffc00009c6c019d000c0086c0c360409ffc
00009c6c019d100c0086c0c360411ffc00011c6c010000000080007fe0203ffc
00001c6c0080000d009a00436041fffc00011c6c01dcc00d8086c0c360405ffc
00011c6c01dcd00d8086c0c360409ffc00011c6c01dce00d8086c0c360411ffc
0001a46c004000d50686c08360411ffc00011c6c00c0000c0286c0830121dffc
00001c6c011c6000068800caa1a19ffc00001c6c011c5000069540caa1a05ffc
00009c6c7880082a8100008aa029007c00009c6c789c5080028000c00031007c
00019c6c7880082a81154055402900fc00001c6c008008000095408360409ffc
00001c6c0080082a8115414360411ffc00001c6c009c8000008000c360411ffc
00001c6c009c802a808000c360409ffc00001c6c009c8000068000c360405ffc
00009c6c011c605500bfc0c000a09ffc00009c6c011c60aa809540d540405ffc
00009c6c011c600000bfc0c000411ffc00019c6c009cb07f848600c36041dffc
00001c6c01d0300d8286c0c360403ffc00001c6c01d0200d8286c0c360405ffc
00001c6c01d0100d8286c0c360409ffc00001c6c01d0000d8286c0c360411ffc
401f9c6c00c0000c0686c0830121dfa4401f9c6c0040000d8086c0836041ff80
401f9c6c004000558086c08360407fa000001c6c009c600e00bfc0c36041dffc
00001c6c009d202a808000c360409ffc401f9c6c00c000080086c09540219fa1
"
}

SubProgram "d3d11 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 128 // 96 used size, 9 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 0 [_Time] 4
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityLighting" 720 // 720 used size, 17 vars
Vector 608 [unity_SHAr] 4
Vector 624 [unity_SHAg] 4
Vector 640 [unity_SHAb] 4
Vector 656 [unity_SHBr] 4
Vector 672 [unity_SHBg] 4
Vector 688 [unity_SHBb] 4
Vector 704 [unity_SHC] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 41 instructions, 4 temp regs, 0 temp arrays:
// ALU 36 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedefempmioogckfponphacegkajldcljogabaaaaaafiahaaaaadaaaaaa
cmaaaaaapeaaaaaahmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaa
aiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaheaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaapaaaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefc
neafaaaaeaaaabaahfabaaaafjaaaaaeegiocaaaaaaaaaaaagaaaaaafjaaaaae
egiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaacnaaaaaafjaaaaae
egiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaa
acaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaaddccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaadhccabaaa
adaaaaaagiaaaaacaeaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaa
aeaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaa
aceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaag
hcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaa
aaaaaaaafgifcaaaaaaaaaaaaeaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaa
bkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaa
abeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaa
aaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaa
ckaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaafgafbaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaafaaaaaaogikcaaaaaaaaaaaafaaaaaadiaaaaaiccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaa
agahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaaf
mccabaaaacaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaacaaaaaakgakbaaa
abaaaaaamgaabaaaabaaaaaadiaaaaaihcaabaaaaaaaaaaaegbcbaaaacaaaaaa
pgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaa
egiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaaaaaaaaaegiicaaaadaaaaaa
amaaaaaaagaabaaaaaaaaaaaegaibaaaabaaaaaadcaaaaakhcaabaaaaaaaaaaa
egiccaaaadaaaaaaaoaaaaaakgakbaaaaaaaaaaaegadbaaaaaaaaaaadgaaaaaf
icaabaaaaaaaaaaaabeaaaaaaaaaiadpbbaaaaaibcaabaaaabaaaaaaegiocaaa
acaaaaaacgaaaaaaegaobaaaaaaaaaaabbaaaaaiccaabaaaabaaaaaaegiocaaa
acaaaaaachaaaaaaegaobaaaaaaaaaaabbaaaaaiecaabaaaabaaaaaaegiocaaa
acaaaaaaciaaaaaaegaobaaaaaaaaaaadiaaaaahpcaabaaaacaaaaaajgacbaaa
aaaaaaaaegakbaaaaaaaaaaabbaaaaaibcaabaaaadaaaaaaegiocaaaacaaaaaa
cjaaaaaaegaobaaaacaaaaaabbaaaaaiccaabaaaadaaaaaaegiocaaaacaaaaaa
ckaaaaaaegaobaaaacaaaaaabbaaaaaiecaabaaaadaaaaaaegiocaaaacaaaaaa
claaaaaaegaobaaaacaaaaaaaaaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaa
egacbaaaadaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaabkaabaaa
aaaaaaaadcaaaaakbcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaaaaaaaaa
bkaabaiaebaaaaaaaaaaaaaadcaaaaakhccabaaaadaaaaaaegiccaaaacaaaaaa
cmaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = _glesVertex;
  highp float t_4;
  highp float tmpvar_5;
  tmpvar_5 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_6;
  tmpvar_6 = (_Time * _WaveSpeed).x;
  t_4 = tmpvar_6;
  if ((tmpvar_6 < 0.0)) {
    t_4 = (tmpvar_6 * -1.0);
  };
  tmpvar_3.x = (_glesVertex.x + (((sin(((t_4 * 1.45) + tmpvar_5)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_3.y = ((((sin(((t_4 * 3.12) + tmpvar_5)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_3.z = (_glesVertex.z - (((sin(((t_4 * 2.2) + tmpvar_5)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_mvp * tmpvar_3);
  highp vec4 o_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (tmpvar_7 * 0.5);
  highp vec2 tmpvar_10;
  tmpvar_10.x = tmpvar_9.x;
  tmpvar_10.y = (tmpvar_9.y * _ProjectionParams.x);
  o_8.xy = (tmpvar_10 + tmpvar_9.w);
  o_8.zw = tmpvar_7.zw;
  mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = (tmpvar_11 * (tmpvar_1 * unity_Scale.w));
  mediump vec3 tmpvar_13;
  mediump vec4 normal_14;
  normal_14 = tmpvar_12;
  highp float vC_15;
  mediump vec3 x3_16;
  mediump vec3 x2_17;
  mediump vec3 x1_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAr, normal_14);
  x1_18.x = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAg, normal_14);
  x1_18.y = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAb, normal_14);
  x1_18.z = tmpvar_21;
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_14.xyzz * normal_14.yzzx);
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBr, tmpvar_22);
  x2_17.x = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBg, tmpvar_22);
  x2_17.y = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBb, tmpvar_22);
  x2_17.z = tmpvar_25;
  mediump float tmpvar_26;
  tmpvar_26 = ((normal_14.x * normal_14.x) - (normal_14.y * normal_14.y));
  vC_15 = tmpvar_26;
  highp vec3 tmpvar_27;
  tmpvar_27 = (unity_SHC.xyz * vC_15);
  x3_16 = tmpvar_27;
  tmpvar_13 = ((x1_18 + x2_17) + x3_16);
  tmpvar_2 = tmpvar_13;
  gl_Position = tmpvar_7;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = o_8;
  xlv_TEXCOORD2 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec4 c_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  c_4 = tmpvar_6;
  lowp float x_7;
  x_7 = (c_4.w - _Cutoff);
  if ((x_7 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.w = tmpvar_9.w;
  highp vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_9.xyz + xlv_TEXCOORD2);
  light_3.xyz = tmpvar_10;
  lowp vec4 c_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (c_4.xyz * light_3.xyz);
  c_11.xyz = tmpvar_12;
  c_11.w = c_4.w;
  c_2 = c_11;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = _glesVertex;
  highp float t_4;
  highp float tmpvar_5;
  tmpvar_5 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_6;
  tmpvar_6 = (_Time * _WaveSpeed).x;
  t_4 = tmpvar_6;
  if ((tmpvar_6 < 0.0)) {
    t_4 = (tmpvar_6 * -1.0);
  };
  tmpvar_3.x = (_glesVertex.x + (((sin(((t_4 * 1.45) + tmpvar_5)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_3.y = ((((sin(((t_4 * 3.12) + tmpvar_5)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_3.z = (_glesVertex.z - (((sin(((t_4 * 2.2) + tmpvar_5)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_mvp * tmpvar_3);
  highp vec4 o_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (tmpvar_7 * 0.5);
  highp vec2 tmpvar_10;
  tmpvar_10.x = tmpvar_9.x;
  tmpvar_10.y = (tmpvar_9.y * _ProjectionParams.x);
  o_8.xy = (tmpvar_10 + tmpvar_9.w);
  o_8.zw = tmpvar_7.zw;
  mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = (tmpvar_11 * (tmpvar_1 * unity_Scale.w));
  mediump vec3 tmpvar_13;
  mediump vec4 normal_14;
  normal_14 = tmpvar_12;
  highp float vC_15;
  mediump vec3 x3_16;
  mediump vec3 x2_17;
  mediump vec3 x1_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAr, normal_14);
  x1_18.x = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAg, normal_14);
  x1_18.y = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAb, normal_14);
  x1_18.z = tmpvar_21;
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_14.xyzz * normal_14.yzzx);
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBr, tmpvar_22);
  x2_17.x = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBg, tmpvar_22);
  x2_17.y = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBb, tmpvar_22);
  x2_17.z = tmpvar_25;
  mediump float tmpvar_26;
  tmpvar_26 = ((normal_14.x * normal_14.x) - (normal_14.y * normal_14.y));
  vC_15 = tmpvar_26;
  highp vec3 tmpvar_27;
  tmpvar_27 = (unity_SHC.xyz * vC_15);
  x3_16 = tmpvar_27;
  tmpvar_13 = ((x1_18 + x2_17) + x3_16);
  tmpvar_2 = tmpvar_13;
  gl_Position = tmpvar_7;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = o_8;
  xlv_TEXCOORD2 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec4 c_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  c_4 = tmpvar_6;
  lowp float x_7;
  x_7 = (c_4.w - _Cutoff);
  if ((x_7 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.w = tmpvar_9.w;
  highp vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_9.xyz + xlv_TEXCOORD2);
  light_3.xyz = tmpvar_10;
  lowp vec4 c_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (c_4.xyz * light_3.xyz);
  c_11.xyz = tmpvar_12;
  c_11.w = c_4.w;
  c_2 = c_11;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "d3d11_9x " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 128 // 96 used size, 9 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 0 [_Time] 4
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityLighting" 720 // 720 used size, 17 vars
Vector 608 [unity_SHAr] 4
Vector 624 [unity_SHAg] 4
Vector 640 [unity_SHAb] 4
Vector 656 [unity_SHBr] 4
Vector 672 [unity_SHBg] 4
Vector 688 [unity_SHBb] 4
Vector 704 [unity_SHC] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 41 instructions, 4 temp regs, 0 temp arrays:
// ALU 36 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecedifmokmgejgoemkigbaiigdepneekibahabaaaaaaamamaaaaaeaaaaaa
daaaaaaaoaaeaaaalmakaaaaiealaaaaebgpgodjkiaeaaaakiaeaaaaaaacpopp
cmaeaaaahmaaaaaaahaaceaaaaaahiaaaaaahiaaaaaaceaaabaahiaaaaaaaeaa
acaaabaaaaaaaaaaabaaaaaaabaaadaaaaaaaaaaabaaafaaabaaaeaaaaaaaaaa
acaacgaaahaaafaaaaaaaaaaadaaaaaaaeaaamaaaaaaaaaaadaaamaaadaabaaa
aaaaaaaaadaabeaaabaabdaaaaaaaaaaaaaaaaaaaaacpoppfbaaaaafbeaaapka
jkjjljdpbekoeheamnmmameaggggggdpfbaaaaafbfaaapkaaaaaaaaaaaaaaama
idpjccdoaaaaaadpfbaaaaafbgaaapkanlapmjeanlapejmamnmmemdoaaaaiadp
fbaaaaafbhaaapkaabannalfgballglhklkkckdlijiiiidjfbaaaaafbiaaapka
klkkkklmaaaaaaloaaaaiadpaaaaaadpbpaaaaacafaaaaiaaaaaapjabpaaaaac
afaaaciaacaaapjabpaaaaacafaaadiaadaaapjaaeaaaaaeaaaaadoaadaaoeja
acaaoekaacaaookaabaaaaacaaaaabiaabaaaakaafaaaaadaaaaabiaaaaaaaia
adaaaakaamaaaaadaaaaaciaaaaaaaiabfaaaakaafaaaaadaaaaaciaaaaaffia
aaaaaaiaaeaaaaaeaaaaabiaaaaaffiabfaaffkaaaaaaaiaacaaaaadaaaaacia
aaaaffjaaaaaaajaacaaaaadaaaaaciaaaaaffiaaaaakkjaaeaaaaaeaaaaahia
aaaaaaiabeaaoekaaaaaffiaaeaaaaaeaaaaahiaaaaaoeiabfaakkkabfaappka
bdaaaaacaaaaahiaaaaaoeiaaeaaaaaeaaaaahiaaaaaoeiabgaaaakabgaaffka
cfaaaaaeabaaaciaaaaaffiabhaaoekabiaaoekaafaaaaadaaaaaciaabaaffia
adaaffjaafaaaaadaaaaaciaaaaaffiaabaaffkaafaaaaadaaaaaiiaadaaaaja
adaaffjaafaaaaadaaaaaiiaaaaappiabeaappkaaeaaaaaeaaaaaciaaaaaffia
bfaappkaaaaappibafaaaaadabaaapiaaaaaffiaanaaoekacfaaaaaeacaaacia
aaaaaaiabhaaoekabiaaoekacfaaaaaeadaaaciaaaaakkiabhaaoekabiaaoeka
afaaaaadaaaaabiaadaaffiaadaaffjaafaaaaadaaaaabiaaaaaaaiaabaaffka
aeaaaaaeaaaaabiaaaaaaaiabgaakkkbaaaakkjaafaaaaadaaaaaciaacaaffia
adaaffjaafaaaaadaaaaaciaaaaaffiaabaaffkaaeaaaaaeaaaaaciaaaaaffia
bfaappkaaaaaaajaaeaaaaaeabaaapiaamaaoekaaaaaffiaabaaoeiaaeaaaaae
aaaaapiaaoaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaapiaapaaoekaaaaappja
aaaaoeiaafaaaaadabaaabiaaaaaffiaaeaaaakaafaaaaadabaaaiiaabaaaaia
bfaappkaafaaaaadabaaafiaaaaapeiabfaappkaacaaaaadabaaadoaabaakkia
abaaomiaafaaaaadabaaahiaacaaoejabdaappkaafaaaaadacaaahiaabaaffia
bbaaoekaaeaaaaaeabaaaliabaaakekaabaaaaiaacaakeiaaeaaaaaeabaaahia
bcaaoekaabaakkiaabaapeiaabaaaaacabaaaiiabgaappkaajaaaaadacaaabia
afaaoekaabaaoeiaajaaaaadacaaaciaagaaoekaabaaoeiaajaaaaadacaaaeia
ahaaoekaabaaoeiaafaaaaadadaaapiaabaacjiaabaakeiaajaaaaadaeaaabia
aiaaoekaadaaoeiaajaaaaadaeaaaciaajaaoekaadaaoeiaajaaaaadaeaaaeia
akaaoekaadaaoeiaacaaaaadacaaahiaacaaoeiaaeaaoeiaafaaaaadabaaacia
abaaffiaabaaffiaaeaaaaaeabaaabiaabaaaaiaabaaaaiaabaaffibaeaaaaae
acaaahoaalaaoekaabaaaaiaacaaoeiaaeaaaaaeaaaaadmaaaaappiaaaaaoeka
aaaaoeiaabaaaaacaaaaammaaaaaoeiaabaaaaacabaaamoaaaaaoeiappppaaaa
fdeieefcneafaaaaeaaaabaahfabaaaafjaaaaaeegiocaaaaaaaaaaaagaaaaaa
fjaaaaaeegiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaacnaaaaaa
fjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagiaaaaacaeaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaa
aaaaaaaaaeaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaa
aaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaa
aaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaa
aaaaaaaaaceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaa
enaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgifcaaaaaaaaaaaaeaaaaaadiaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaa
adaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaa
aaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakccaabaaa
aaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaa
dcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaa
fgafbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaa
egiacaaaaaaaaaaaafaaaaaaogikcaaaaaaaaaaaafaaaaaadiaaaaaiccaabaaa
aaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaa
abaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadp
dgaaaaafmccabaaaacaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaacaaaaaa
kgakbaaaabaaaaaamgaabaaaabaaaaaadiaaaaaihcaabaaaaaaaaaaaegbcbaaa
acaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaa
aaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaaaaaaaaaegiicaaa
adaaaaaaamaaaaaaagaabaaaaaaaaaaaegaibaaaabaaaaaadcaaaaakhcaabaaa
aaaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaaaaaaaaaegadbaaaaaaaaaaa
dgaaaaaficaabaaaaaaaaaaaabeaaaaaaaaaiadpbbaaaaaibcaabaaaabaaaaaa
egiocaaaacaaaaaacgaaaaaaegaobaaaaaaaaaaabbaaaaaiccaabaaaabaaaaaa
egiocaaaacaaaaaachaaaaaaegaobaaaaaaaaaaabbaaaaaiecaabaaaabaaaaaa
egiocaaaacaaaaaaciaaaaaaegaobaaaaaaaaaaadiaaaaahpcaabaaaacaaaaaa
jgacbaaaaaaaaaaaegakbaaaaaaaaaaabbaaaaaibcaabaaaadaaaaaaegiocaaa
acaaaaaacjaaaaaaegaobaaaacaaaaaabbaaaaaiccaabaaaadaaaaaaegiocaaa
acaaaaaackaaaaaaegaobaaaacaaaaaabbaaaaaiecaabaaaadaaaaaaegiocaaa
acaaaaaaclaaaaaaegaobaaaacaaaaaaaaaaaaahhcaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaaaadaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaa
bkaabaaaaaaaaaaadcaaaaakbcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaa
aaaaaaaabkaabaiaebaaaaaaaaaaaaaadcaaaaakhccabaaaadaaaaaaegiccaaa
acaaaaaacmaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadoaaaaabejfdeheo
maaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaa
apapaaaakbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakjaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaalaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaadaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaa
apaaaaaaljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdej
feejepeoaafeebeoehefeofeaaeoepfcenebemaafeeffiedepepfceeaaedepem
epfcaaklepfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaaaaaaaaaaabaaaaaa
adaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaa
adamaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaaheaaaaaa
acaaaaaaaaaaaaaaadaaaaaaadaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklkl"
}

SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec4 screen;
    highp vec3 vlight;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 425
uniform highp vec4 _MainTex_ST;
#line 437
uniform sampler2D _LightBuffer;
uniform lowp vec4 unity_Ambient;
uniform lowp float _Cutoff;
#line 284
highp vec4 ComputeScreenPos( in highp vec4 pos ) {
    #line 286
    highp vec4 o = (pos * 0.5);
    o.xy = (vec2( o.x, (o.y * _ProjectionParams.x)) + o.w);
    o.zw = pos.zw;
    return o;
}
#line 137
mediump vec3 ShadeSH9( in mediump vec4 normal ) {
    mediump vec3 x1;
    mediump vec3 x2;
    mediump vec3 x3;
    x1.x = dot( unity_SHAr, normal);
    #line 141
    x1.y = dot( unity_SHAg, normal);
    x1.z = dot( unity_SHAb, normal);
    mediump vec4 vB = (normal.xyzz * normal.yzzx);
    x2.x = dot( unity_SHBr, vB);
    #line 145
    x2.y = dot( unity_SHBg, vB);
    x2.z = dot( unity_SHBb, vB);
    highp float vC = ((normal.x * normal.x) - (normal.y * normal.y));
    x3 = (unity_SHC.xyz * vC);
    #line 149
    return ((x1 + x2) + x3);
}
#line 400
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 404
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 408
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 426
v2f_surf vert_surf( in appdata_full v ) {
    v2f_surf o;
    #line 429
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    o.screen = ComputeScreenPos( o.pos);
    #line 433
    highp vec3 worldN = (mat3( _Object2World) * (v.normal * unity_Scale.w));
    o.vlight = ShadeSH9( vec4( worldN, 1.0));
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec4(xl_retval.screen);
    xlv_TEXCOORD2 = vec3(xl_retval.vlight);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec4 screen;
    highp vec3 vlight;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 425
uniform highp vec4 _MainTex_ST;
#line 437
uniform sampler2D _LightBuffer;
uniform lowp vec4 unity_Ambient;
uniform lowp float _Cutoff;
#line 346
lowp vec4 LightingLambert_PrePass( in SurfaceOutput s, in mediump vec4 light ) {
    lowp vec4 c;
    c.xyz = (s.Albedo * light.xyz);
    #line 350
    c.w = s.Alpha;
    return c;
}
#line 411
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 413
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 440
lowp vec4 frag_surf( in v2f_surf IN ) {
    #line 442
    Input surfIN;
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    #line 446
    o.Emission = vec3( 0.0);
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    #line 450
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    mediump vec4 light = textureProj( _LightBuffer, IN.screen);
    light = max( light, vec4( 0.001));
    #line 454
    light = (-log2(light));
    light.xyz += IN.vlight;
    mediump vec4 c = LightingLambert_PrePass( o, light);
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.screen = vec4(xlv_TEXCOORD1);
    xlt_IN.vlight = vec3(xlv_TEXCOORD2);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "opengl " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 13 [_Time]
Vector 14 [_ProjectionParams]
Vector 15 [unity_ShadowFadeCenterAndType]
Matrix 9 [_Object2World]
Float 16 [_WaveSpeed]
Float 17 [_Amplitude]
Vector 18 [unity_LightmapST]
Vector 19 [_MainTex_ST]
"!!ARBvp1.0
# 84 ALU
PARAM c[25] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.modelview[0],
		state.matrix.mvp,
		program.local[9..19],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[16];
MUL R0.x, R0, c[13];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[20];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[21].xyxw, c[21].zwzw;
MAD R1.xyz, R1, R0, c[22].xyxw;
MAD R1.xyz, R1, R0, c[22].zwzw;
MAD R1.xyz, R1, R0, c[23].xyxw;
MAD R0.xyz, R1, R0, c[20].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[23].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[20].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[24].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[17];
MAD R0.w, -R0.x, c[24].x, vertex.position.z;
MAD R0.x, R1.w, c[24].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[20];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[21].xyxw, c[21].zwzw;
MAD R3.xyz, R2, R0, c[22].xyxw;
MAD R3.xyz, R3, R0, c[22].zwzw;
MAD R3.xyz, R3, R0, c[23].xyxw;
ADD R1.xyz, -R1.w, c[20];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[21].xyxw, c[21].zwzw;
MAD R2.xyz, R2, R1, c[22].xyxw;
MAD R2.xyz, R2, R1, c[22].zwzw;
MAD R3.xyz, R3, R0, c[20].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[23].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[20].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[23].xyxw;
MAD R1.xyz, R0, R1, c[20].wzww;
SGE R0.yz, R1.w, c[23].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[20].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R0.x, R0, c[17];
MUL R0.y, -R0, c[24].z;
MAD R0.y, R0.x, c[20], R0;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R2.w, c[17];
MAD R0.x, R0, c[20].y, vertex.position;
DP4 R1.w, R0.xywz, c[8];
DP4 R1.z, R0.xywz, c[7];
DP4 R1.x, R0.xywz, c[5];
DP4 R1.y, R0.xywz, c[6];
MUL R2.xyz, R1.xyww, c[20].y;
MOV result.position, R1;
MUL R2.y, R2, c[14].x;
MOV result.texcoord[1].zw, R1;
DP4 R1.x, R0.xywz, c[9];
DP4 R1.z, R0.xywz, c[11];
DP4 R1.y, R0.xywz, c[10];
ADD result.texcoord[1].xy, R2, R2.z;
ADD R2.xyz, R1, -c[15];
MOV R1.x, c[20].z;
ADD R1.x, R1, -c[15].w;
DP4 R0.x, R0.xywz, c[3];
MUL result.texcoord[3].xyz, R2, c[15].w;
MUL result.texcoord[3].w, -R0.x, R1.x;
MAD result.texcoord[0].xy, vertex.texcoord[0], c[19], c[19].zwzw;
MAD result.texcoord[2].xy, vertex.texcoord[1], c[18], c[18].zwzw;
END
# 84 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 0 [glstate_matrix_modelview0]
Matrix 4 [glstate_matrix_mvp]
Vector 12 [_Time]
Vector 13 [_ProjectionParams]
Vector 14 [_ScreenParams]
Vector 15 [unity_ShadowFadeCenterAndType]
Matrix 8 [_Object2World]
Float 16 [_WaveSpeed]
Float 17 [_Amplitude]
Vector 18 [unity_LightmapST]
Vector 19 [_MainTex_ST]
"vs_2_0
; 84 ALU
def c20, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c21, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c22, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c23, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c24, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_texcoord0 v3
dcl_texcoord1 v4
add r0.w, v0.x, v0.y
mov r0.x, c12
mul r0.x, c16, r0
slt r0.y, r0.x, c22.x
max r0.y, -r0, r0
slt r0.y, c22.x, r0
add r0.z, -r0.y, c20
mul r0.z, r0.x, r0
mov r1.w, v0
mad r1.y, r0, -r0.x, r0.z
add r1.x, r0.w, v0.z
mad r0.x, r1.y, c22.y, r1
mad r0.x, r0, c22.z, c22.w
frc r0.x, r0
mad r1.z, r0.x, c23.x, c23.y
sincos r0.xy, r1.z, c21.xyzw, c20.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1, c24.x, r1.x
mul r0.x, r0, c17
mad r1.z, -r0.x, c24.y, v0
mad r0.x, r1.y, c23.z, r1
mad r0.x, r0, c22.z, c22.w
mad r0.y, r0, c22.z, c22.w
frc r0.y, r0
mad r1.y, r0, c23.x, c23
frc r1.x, r0
sincos r0.xy, r1.y, c21.xyzw, c20.xyzw
mad r0.x, r1, c23, c23.y
sincos r2.xy, r0.x, c21.xyzw, c20.xyzw
mul r0.z, v3.y, r0.y
mul r0.x, v3.y, r2.y
mul r0.y, v3, v3.x
mul r0.y, -r0, c23.w
mul r0.x, r0, c17
mad r1.y, r0.x, c20.w, r0
mul r0.x, r0.z, c17
mad r1.x, r0, c20.w, v0
dp4 r0.w, r1, c7
dp4 r0.z, r1, c6
dp4 r0.x, r1, c4
dp4 r0.y, r1, c5
mul r2.xyz, r0.xyww, c20.w
mov oPos, r0
mov oT1.zw, r0
mul r2.y, r2, c13.x
dp4 r0.z, r1, c10
dp4 r0.x, r1, c8
dp4 r0.y, r1, c9
add r0.xyz, r0, -c15
mul oT3.xyz, r0, c15.w
mov r0.w, c15
add r0.y, c20.z, -r0.w
dp4 r0.x, r1, c2
mad oT1.xy, r2.z, c14.zwzw, r2
mul oT3.w, -r0.x, r0.y
mad oT0.xy, v3, c19, c19.zwzw
mad oT2.xy, v4, c18, c18.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Float 17 [_Amplitude]
Vector 19 [_MainTex_ST]
Matrix 12 [_Object2World] 4
Vector 1 [_ProjectionParams]
Vector 2 [_ScreenParams]
Vector 0 [_Time]
Float 16 [_WaveSpeed]
Matrix 8 [glstate_matrix_modelview0] 4
Matrix 4 [glstate_matrix_mvp] 4
Vector 18 [unity_LightmapST]
Vector 3 [unity_ShadowFadeCenterAndType]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 46.67-48.00 (35-36 instructions), vertex: 32, texture: 0,
//   sequencer: 20,  7 GPRs, 27 threads,
// Performance (if enough threads): ~46-48 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacjiaaaaacfmaaaaaaaaaaaaaaceaaaaacbiaaaaaceaaaaaaaaa
aaaaaaaaaaaaabpaaaaaaabmaaaaaboepppoadaaaaaaaaalaaaaaabmaaaaaaaa
aaaaabnnaaaaaapiaaacaabbaaabaaaaaaaaabaeaaaaaaaaaaaaabbeaaacaabd
aaabaaaaaaaaabcaaaaaaaaaaaaaabdaaaacaaamaaaeaaaaaaaaabeaaaaaaaaa
aaaaabfaaaacaaabaaabaaaaaaaaabcaaaaaaaaaaaaaabgcaaacaaacaaabaaaa
aaaaabcaaaaaaaaaaaaaabhaaaacaaaaaaabaaaaaaaaabcaaaaaaaaaaaaaabhg
aaacaabaaaabaaaaaaaaabaeaaaaaaaaaaaaabibaaacaaaiaaaeaaaaaaaaabea
aaaaaaaaaaaaabjlaaacaaaeaaaeaaaaaaaaabeaaaaaaaaaaaaaabkoaaacaabc
aaabaaaaaaaaabcaaaaaaaaaaaaaablpaaacaaadaaabaaaaaaaaabcaaaaaaaaa
fpebgnhagmgjhehfgegfaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaafpengbgj
gofegfhifpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpepgcgkgfgdhedc
fhgphcgmgeaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpfahcgpgkgfgdhe
gjgpgofagbhcgbgnhdaafpfdgdhcgfgfgofagbhcgbgnhdaafpfegjgngfaafpfh
gbhggffdhagfgfgeaaghgmhdhegbhegffpgngbhehcgjhifpgngpgegfgmhggjgf
hhdaaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaahfgogjhehjfpemgjghgi
hegngbhafdfeaahfgogjhehjfpfdgigbgegphheggbgegfedgfgohegfhcebgoge
fehjhagfaahghdfpddfpdaaadccodacodcdadddfddcodaaaaaaaaaaaaaaaaaab
aaaaaaaaaaaaaaaaaaaaaabeaapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaeaaaaaacbmaadbaaagaaaaaaaaaaaaaaaaaaaadaieaaaaaaabaaaaaaad
aaaaaaafaaaaacjaaabaaaafaaaafaagaacbfaahaaaadafaaaabpbfbaaaddcfc
aaaepdfdaaaabacfaaaaaaceaaaabaclaaaabacgaaaabackaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaadoccpjidmaejapnldpiaaaaaaaaaaaaadpaaaaaadoemmmmn
eamjapnldpggggggdpljjjjkeaehkobeeaammmmnlpiaaaaahajfgaafbaalbaaa
fgaaaaaaaaaaaaaagaammcaabcaaaaaaaaaagabcgabibcaabcaaaaaaaaaaaaaa
gabomeaabcaaaaaaaaaagacecackbcaaccaaaaaaafpicaaaaaaaagiiaaaaaaaa
afpibaaaaaaaacdpaaaaaaaaafpibaaaaaaaapmiaaaaaaaamiacaaaaaagmblaa
cbaappaamiabaaaaaagmgmaacbaabaaaheaeaaaaablomggmlaacpnaakibaaaaa
biaaaaebmcaaaabamiaiaaadaablmgaaobababaamiahaaaaaagmmamgklaappaa
miahaaaaaamagmgmilaapnpomiahaaadaamaaaaaoiaaaaaamiapaaaaaapimkaa
kbadpoaamianaaaaaaaelbaakaaapnaamacaadaaaaaaaamgocaaaaaamaedadae
aabllablkbabpoaamabcadacaeblmggmcaadpnaamiahaaadaalmmaaaobaeadaa
mianaaaaaapagmaakbadbbaamiabaaaaaagmgmaaoaaaacaabeapaaadaablaamg
kbacahaaaeciaaaaafblmglboaaaacaamiapaaadaablnanaklaaagadmiapaaad
aalbdepiklaaafadmiapaaafaagmnajeklaaaeadmiapiadoaananaaaocafafaa
kiiiagaeaalbmgmaibaaajaikibhaeadaablmaedibacapaokichaeagaalblemd
ibaaanaomiahaaagaagmmaleklaaamagkiehaeaaaamagmidibafpoaokiipadae
aadeaamdmaagaeakmiamiaabaanlnlaaocafafaamiadiaaaaabklabkilabbdbd
miadiaacaalalabkilabbcbckiipaaabaadeaaebmaaeadabmiaiaaabaablmgbl
klacalabbeahaaabadmamablkaabadabamihiaadaamabllbkbabadacmiadiaab
aamgbkbiklaaacaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Matrix 256 [glstate_matrix_modelview0]
Matrix 260 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 467 [_Time]
Vector 466 [_ProjectionParams]
Vector 465 [unity_ShadowFadeCenterAndType]
Matrix 264 [_Object2World]
Float 464 [_WaveSpeed]
Float 463 [_Amplitude]
Vector 462 [unity_LightmapST]
Vector 461 [_MainTex_ST]
"sce_vp_rsx // 41 instructions using 4 registers
[Configuration]
8
0000002903010400
[Defaults]
2
460 4
400ccccd3e4ccccd4047ae143f000000
459 3
3f6666663fb9999a3f800000
[Microcode]
656
401f9c6c011cd808010400d740619f9c401f9c6c011ce908010400d740619fa4
00009c6c0040007f8106c08360403ffc00001c6c005cb0550186c08360411ffc
00001c6c00c000000106c08aa0409ffc00001c6c005d00000186c08360405ffc
00001c6c009d3055008000c360405ffc201fdc6c004000550086c08360411ffc
00009c6c00c000550106c08aa0211ffc00001c6c004000550086c08360409ffc
00002400004000d50086c08360409ffc00001c6c011cc02a808080c000a07ffc
00001c6c011cb02a809540c000a09ffc00009c6c7880082a8100009fe023007c
00009c6c789cb080028000d54025007c00011c6c7880082a813fc04aa02900fc
00001c6c008008550095408360405ffc00001c6c0080082a8115414360409ffc
00001c6c009cf02a808000c360409ffc00001c6c009cf055008000c360405ffc
00001c6c009cf000048000c360403ffc00009c6c011cc07f80bfc0c000a09ffc
00009c6c011cc0d5009540d540405ffc00009c6c011cc02a80bfc0c000411ffc
00019c6c00dd10ff8186c08000211ffc00011c6c01d0200d8286c0c360403ffc
00001c6c01d0700d8286c0c360403ffc00001c6c01d0600d8286c0c360405ffc
00001c6c01d0500d8286c0c360409ffc00001c6c01d0400d8286c0c360411ffc
00011c6c01d0a00d8286c0c360405ffc00011c6c01d0900d8286c0c360409ffc
00011c6c01d0800d8286c0c360411ffc00009c6c00dd108c0186c0830121dffc
401f9c6c0040000d8086c0836041ff80401f9c6c004000558086c08360407fa0
401f9c6c008000ff8480034360403fa800001c6c009cc00e00bfc0c36041dffc
401f9c6c009d100c02bfc0c36041dfa800001c6c009d202a808000c360409ffc
401f9c6c00c000080086c09540219fa1
"
}

SubProgram "d3d11 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "color" Color
ConstBuffer "$Globals" 160 // 112 used size, 11 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [unity_LightmapST] 4
Vector 96 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 0 [_Time] 4
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityShadows" 416 // 416 used size, 8 vars
Vector 400 [unity_ShadowFadeCenterAndType] 4
ConstBuffer "UnityPerDraw" 336 // 256 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 64 [glstate_matrix_modelview0] 4
Matrix 192 [_Object2World] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityShadows" 2
BindCB "UnityPerDraw" 3
// 39 instructions, 3 temp regs, 0 temp arrays:
// ALU 35 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedkjohckaddpkfeijjkiihjoaellglollpabaaaaaaheahaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaimaaaaaaacaaaaaaaaaaaaaa
adaaaaaaabaaaaaaamadaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apaaaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaadaaaaaaapaaaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcniafaaaaeaaaabaa
hgabaaaafjaaaaaeegiocaaaaaaaaaaaahaaaaaafjaaaaaeegiocaaaabaaaaaa
agaaaaaafjaaaaaeegiocaaaacaaaaaabkaaaaaafjaaaaaeegiocaaaadaaaaaa
baaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaaddcbabaaaadaaaaaafpaaaaad
dcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadmccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaad
pccabaaaadaaaaaagiaaaaacadaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaa
aaaaaaaaaeaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaa
aaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaa
aaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaa
aaaaaaaaaceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaa
enaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgifcaaaaaaaaaaaaeaaaaaadiaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaa
adaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaa
aaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakecaabaaa
aaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaa
dcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaacaaaaaa
kgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
adaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaabaaaaaadgaaaaafpccabaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaa
egiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaadcaaaaalmccabaaa
abaaaaaaagbebaaaaeaaaaaaagiecaaaaaaaaaaaafaaaaaakgiocaaaaaaaaaaa
afaaaaaadiaaaaaiicaabaaaaaaaaaaabkaabaaaabaaaaaaakiacaaaabaaaaaa
afaaaaaadiaaaaahicaabaaaacaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaaadp
diaaaaakfcaabaaaacaaaaaaagadbaaaabaaaaaaaceaaaaaaaaaaadpaaaaaaaa
aaaaaadpaaaaaaaadgaaaaafmccabaaaacaaaaaakgaobaaaabaaaaaaaaaaaaah
dccabaaaacaaaaaakgakbaaaacaaaaaamgaabaaaacaaaaaadiaaaaaihcaabaaa
abaaaaaafgafbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadiaaaaaiccaabaaa
aaaaaaaabkaabaaaaaaaaaaackiacaaaadaaaaaaafaaaaaadcaaaaakccaabaaa
aaaaaaaackiacaaaadaaaaaaaeaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaa
dcaaaaakhcaabaaaabaaaaaaegiccaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaadaaaaaaaoaaaaaa
kgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakbcaabaaaaaaaaaaackiacaaa
adaaaaaaagaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaadcaaaaakbcaabaaa
aaaaaaaackiacaaaadaaaaaaahaaaaaadkbabaaaaaaaaaaaakaabaaaaaaaaaaa
dcaaaaakocaabaaaaaaaaaaaagijcaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaa
agajbaaaabaaaaaaaaaaaaajocaabaaaaaaaaaaafgaobaaaaaaaaaaaagijcaia
ebaaaaaaacaaaaaabjaaaaaadiaaaaaihccabaaaadaaaaaajgahbaaaaaaaaaaa
pgipcaaaacaaaaaabjaaaaaaaaaaaaajccaabaaaaaaaaaaadkiacaiaebaaaaaa
acaaaaaabjaaaaaaabeaaaaaaaaaiadpdiaaaaaiiccabaaaadaaaaaabkaabaaa
aaaaaaaaakaabaiaebaaaaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

varying highp vec4 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = _glesVertex;
  highp float t_3;
  highp float tmpvar_4;
  tmpvar_4 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_5;
  tmpvar_5 = (_Time * _WaveSpeed).x;
  t_3 = tmpvar_5;
  if ((tmpvar_5 < 0.0)) {
    t_3 = (tmpvar_5 * -1.0);
  };
  tmpvar_2.x = (_glesVertex.x + (((sin(((t_3 * 1.45) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_2.y = ((((sin(((t_3 * 3.12) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_2.z = (_glesVertex.z - (((sin(((t_3 * 2.2) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_mvp * tmpvar_2);
  highp vec4 o_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (tmpvar_6 * 0.5);
  highp vec2 tmpvar_9;
  tmpvar_9.x = tmpvar_8.x;
  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
  o_7.xy = (tmpvar_9 + tmpvar_8.w);
  o_7.zw = tmpvar_6.zw;
  tmpvar_1.xyz = (((_Object2World * tmpvar_2).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_1.w = (-((glstate_matrix_modelview0 * tmpvar_2).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_6;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = o_7;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = tmpvar_1;
}



#endif
#ifdef FRAGMENT

varying highp vec4 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform highp vec4 unity_LightmapFade;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_Lightmap;
uniform sampler2D _LightBuffer;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec4 c_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * _Color);
  c_7 = tmpvar_9;
  lowp float x_10;
  x_10 = (c_7.w - _Cutoff);
  if ((x_10 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_6 = tmpvar_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = -(log2(max (light_6, vec4(0.001, 0.001, 0.001, 0.001))));
  light_6.w = tmpvar_12.w;
  highp float tmpvar_13;
  tmpvar_13 = ((sqrt(dot (xlv_TEXCOORD3, xlv_TEXCOORD3)) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_13;
  lowp vec3 tmpvar_14;
  tmpvar_14 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lmFull_4 = tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD2).xyz);
  lmIndirect_3 = tmpvar_15;
  light_6.xyz = (tmpvar_12.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_16;
  mediump vec3 tmpvar_17;
  tmpvar_17 = (c_7.xyz * light_6.xyz);
  c_16.xyz = tmpvar_17;
  c_16.w = c_7.w;
  c_2 = c_16;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

varying highp vec4 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = _glesVertex;
  highp float t_3;
  highp float tmpvar_4;
  tmpvar_4 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_5;
  tmpvar_5 = (_Time * _WaveSpeed).x;
  t_3 = tmpvar_5;
  if ((tmpvar_5 < 0.0)) {
    t_3 = (tmpvar_5 * -1.0);
  };
  tmpvar_2.x = (_glesVertex.x + (((sin(((t_3 * 1.45) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_2.y = ((((sin(((t_3 * 3.12) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_2.z = (_glesVertex.z - (((sin(((t_3 * 2.2) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_mvp * tmpvar_2);
  highp vec4 o_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (tmpvar_6 * 0.5);
  highp vec2 tmpvar_9;
  tmpvar_9.x = tmpvar_8.x;
  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
  o_7.xy = (tmpvar_9 + tmpvar_8.w);
  o_7.zw = tmpvar_6.zw;
  tmpvar_1.xyz = (((_Object2World * tmpvar_2).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_1.w = (-((glstate_matrix_modelview0 * tmpvar_2).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_6;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = o_7;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = tmpvar_1;
}



#endif
#ifdef FRAGMENT

varying highp vec4 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform highp vec4 unity_LightmapFade;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_Lightmap;
uniform sampler2D _LightBuffer;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec4 c_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * _Color);
  c_7 = tmpvar_9;
  lowp float x_10;
  x_10 = (c_7.w - _Cutoff);
  if ((x_10 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_6 = tmpvar_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = -(log2(max (light_6, vec4(0.001, 0.001, 0.001, 0.001))));
  light_6.w = tmpvar_12.w;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (unity_Lightmap, xlv_TEXCOORD2);
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (unity_LightmapInd, xlv_TEXCOORD2);
  highp float tmpvar_15;
  tmpvar_15 = ((sqrt(dot (xlv_TEXCOORD3, xlv_TEXCOORD3)) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_15;
  lowp vec3 tmpvar_16;
  tmpvar_16 = ((8.0 * tmpvar_13.w) * tmpvar_13.xyz);
  lmFull_4 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((8.0 * tmpvar_14.w) * tmpvar_14.xyz);
  lmIndirect_3 = tmpvar_17;
  light_6.xyz = (tmpvar_12.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = (c_7.xyz * light_6.xyz);
  c_18.xyz = tmpvar_19;
  c_18.w = c_7.w;
  c_2 = c_18;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "d3d11_9x " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "color" Color
ConstBuffer "$Globals" 160 // 112 used size, 11 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [unity_LightmapST] 4
Vector 96 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 0 [_Time] 4
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityShadows" 416 // 416 used size, 8 vars
Vector 400 [unity_ShadowFadeCenterAndType] 4
ConstBuffer "UnityPerDraw" 336 // 256 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 64 [glstate_matrix_modelview0] 4
Matrix 192 [_Object2World] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityShadows" 2
BindCB "UnityPerDraw" 3
// 39 instructions, 3 temp regs, 0 temp arrays:
// ALU 35 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecedjcgoacknjajcnhoflbkopajbgbhjcnjiabaaaaaaaiamaaaaaeaaaaaa
daaaaaaamaaeaaaakaakaaaagialaaaaebgpgodjiiaeaaaaiiaeaaaaaaacpopp
biaeaaaahaaaaaaaagaaceaaaaaagmaaaaaagmaaaaaaceaaabaagmaaaaaaaeaa
adaaabaaaaaaaaaaabaaaaaaabaaaeaaaaaaaaaaabaaafaaabaaafaaaaaaaaaa
acaabjaaabaaagaaaaaaaaaaadaaaaaaaiaaahaaaaaaaaaaadaaamaaaeaaapaa
aaaaaaaaaaaaaaaaaaacpoppfbaaaaafbdaaapkajkjjljdpbekoeheamnmmamea
ggggggdpfbaaaaafbeaaapkaaaaaaaaaaaaaaamaidpjccdoaaaaaadpfbaaaaaf
bfaaapkanlapmjeanlapejmamnmmemdoaaaaiadpfbaaaaafbgaaapkaabannalf
gballglhklkkckdlijiiiidjfbaaaaafbhaaapkaklkkkklmaaaaaaloaaaaiadp
aaaaaadpbpaaaaacafaaaaiaaaaaapjabpaaaaacafaaadiaadaaapjabpaaaaac
afaaaeiaaeaaapjaaeaaaaaeaaaaadoaadaaoejaadaaoekaadaaookaabaaaaac
aaaaabiaabaaaakaafaaaaadaaaaabiaaaaaaaiaaeaaaakaamaaaaadaaaaacia
aaaaaaiabeaaaakaafaaaaadaaaaaciaaaaaffiaaaaaaaiaaeaaaaaeaaaaabia
aaaaffiabeaaffkaaaaaaaiaacaaaaadaaaaaciaaaaaffjaaaaaaajaacaaaaad
aaaaaciaaaaaffiaaaaakkjaaeaaaaaeaaaaahiaaaaaaaiabdaaoekaaaaaffia
aeaaaaaeaaaaahiaaaaaoeiabeaakkkabeaappkabdaaaaacaaaaahiaaaaaoeia
aeaaaaaeaaaaahiaaaaaoeiabfaaaakabfaaffkacfaaaaaeabaaaciaaaaaffia
bgaaoekabhaaoekaafaaaaadaaaaaciaabaaffiaadaaffjaafaaaaadaaaaacia
aaaaffiaabaaffkaafaaaaadaaaaaiiaadaaaajaadaaffjaafaaaaadaaaaaiia
aaaappiabdaappkaaeaaaaaeaaaaaciaaaaaffiabeaappkaaaaappibafaaaaad
abaaapiaaaaaffiaaiaaoekacfaaaaaeacaaaciaaaaaaaiabgaaoekabhaaoeka
cfaaaaaeadaaaciaaaaakkiabgaaoekabhaaoekaafaaaaadaaaaabiaadaaffia
adaaffjaafaaaaadaaaaabiaaaaaaaiaabaaffkaaeaaaaaeaaaaabiaaaaaaaia
bfaakkkbaaaakkjaafaaaaadaaaaaeiaacaaffiaadaaffjaafaaaaadaaaaaeia
aaaakkiaabaaffkaaeaaaaaeaaaaaeiaaaaakkiabeaappkaaaaaaajaaeaaaaae
abaaapiaahaaoekaaaaakkiaabaaoeiaaeaaaaaeabaaapiaajaaoekaaaaaaaia
abaaoeiaaeaaaaaeabaaapiaakaaoekaaaaappjaabaaoeiaafaaaaadaaaaaiia
abaaffiaafaaaakaafaaaaadacaaaiiaaaaappiabeaappkaafaaaaadacaaafia
abaapeiabeaappkaacaaaaadabaaadoaacaakkiaacaaomiaaeaaaaaeaaaaamoa
aeaabejaacaabekaacaalekaafaaaaadacaaahiaaaaaffiabaaaoekaafaaaaad
aaaaaciaaaaaffiaamaakkkaaeaaaaaeaaaaaciaalaakkkaaaaakkiaaaaaffia
aeaaaaaeacaaahiaapaaoekaaaaakkiaacaaoeiaaeaaaaaeacaaahiabbaaoeka
aaaaaaiaacaaoeiaaeaaaaaeaaaaabiaanaakkkaaaaaaaiaaaaaffiaaeaaaaae
aaaaabiaaoaakkkaaaaappjaaaaaaaiaaeaaaaaeaaaaaoiabcaajakaaaaappja
acaajaiaacaaaaadaaaaaoiaaaaaoeiaagaajakbafaaaaadacaaahoaaaaapjia
agaappkaabaaaaacaaaaaiiabfaappkaacaaaaadaaaaaciaaaaappiaagaappkb
afaaaaadacaaaioaaaaaffiaaaaaaaibaeaaaaaeaaaaadmaabaappiaaaaaoeka
abaaoeiaabaaaaacaaaaammaabaaoeiaabaaaaacabaaamoaabaaoeiappppaaaa
fdeieefcniafaaaaeaaaabaahgabaaaafjaaaaaeegiocaaaaaaaaaaaahaaaaaa
fjaaaaaeegiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaabkaaaaaa
fjaaaaaeegiocaaaadaaaaaabaaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaad
dcbabaaaadaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaadmccabaaaabaaaaaagfaaaaad
pccabaaaacaaaaaagfaaaaadpccabaaaadaaaaaagiaaaaacadaaaaaadiaaaaaj
bcaabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaaakiacaaaabaaaaaaaaaaaaaa
dbaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaak
bcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaa
aaaaaaaaaaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaa
aaaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaam
hcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdpbekoeheamnmmamea
aaaaaaaafgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaa
aaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaa
diaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaaaaaaaaaaaeaaaaaa
diaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaah
icaabaaaaaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaa
aaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaa
diaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaa
dcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaa
aaaaaaaadcaaaaakecaabaaaaaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaa
mnmmemdockbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaa
aaaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaa
egiocaaaadaaaaaaacaaaaaakgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaa
abaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaaldccabaaa
abaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaa
agaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaaeaaaaaaagiecaaaaaaaaaaa
afaaaaaakgiocaaaaaaaaaaaafaaaaaadiaaaaaiicaabaaaaaaaaaaabkaabaaa
abaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaahicaabaaaacaaaaaadkaabaaa
aaaaaaaaabeaaaaaaaaaaadpdiaaaaakfcaabaaaacaaaaaaagadbaaaabaaaaaa
aceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaaaadgaaaaafmccabaaaacaaaaaa
kgaobaaaabaaaaaaaaaaaaahdccabaaaacaaaaaakgakbaaaacaaaaaamgaabaaa
acaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaaadaaaaaa
anaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaaaaaaaaaackiacaaaadaaaaaa
afaaaaaadcaaaaakccaabaaaaaaaaaaackiacaaaadaaaaaaaeaaaaaaakaabaaa
aaaaaaaabkaabaaaaaaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaadaaaaaa
amaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaadaaaaaaaoaaaaaakgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaak
bcaabaaaaaaaaaaackiacaaaadaaaaaaagaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaadcaaaaakbcaabaaaaaaaaaaackiacaaaadaaaaaaahaaaaaadkbabaaa
aaaaaaaaakaabaaaaaaaaaaadcaaaaakocaabaaaaaaaaaaaagijcaaaadaaaaaa
apaaaaaapgbpbaaaaaaaaaaaagajbaaaabaaaaaaaaaaaaajocaabaaaaaaaaaaa
fgaobaaaaaaaaaaaagijcaiaebaaaaaaacaaaaaabjaaaaaadiaaaaaihccabaaa
adaaaaaajgahbaaaaaaaaaaapgipcaaaacaaaaaabjaaaaaaaaaaaaajccaabaaa
aaaaaaaadkiacaiaebaaaaaaacaaaaaabjaaaaaaabeaaaaaaaaaiadpdiaaaaai
iccabaaaadaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaadoaaaaab
ejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
aaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaa
kjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaaahaaaaaalaaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaa
faepfdejfeejepeoaafeebeoehefeofeaaeoepfcenebemaafeeffiedepepfcee
aaedepemepfcaaklepfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaaaaaaaaaa
abaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
abaaaaaaadamaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaabaaaaaaamadaaaa
imaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaaimaaaaaaadaaaaaa
aaaaaaaaadaaaaaaadaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaafeeffied
epepfceeaaklklkl"
}

SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec4 screen;
    highp vec2 lmap;
    highp vec4 lmapFadePos;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 426
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
#line 442
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
uniform lowp vec4 unity_Ambient;
uniform lowp float _Cutoff;
#line 446
#line 284
highp vec4 ComputeScreenPos( in highp vec4 pos ) {
    #line 286
    highp vec4 o = (pos * 0.5);
    o.xy = (vec2( o.x, (o.y * _ProjectionParams.x)) + o.w);
    o.zw = pos.zw;
    return o;
}
#line 400
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 404
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 408
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 428
v2f_surf vert_surf( in appdata_full v ) {
    #line 430
    v2f_surf o;
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    #line 434
    o.screen = ComputeScreenPos( o.pos);
    o.lmap.xy = ((v.texcoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    o.lmapFadePos.xyz = (((_Object2World * v.vertex).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
    o.lmapFadePos.w = ((-(glstate_matrix_modelview0 * v.vertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
    #line 438
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec2 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec4(xl_retval.screen);
    xlv_TEXCOORD2 = vec2(xl_retval.lmap);
    xlv_TEXCOORD3 = vec4(xl_retval.lmapFadePos);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
float xll_saturate_f( float x) {
  return clamp( x, 0.0, 1.0);
}
vec2 xll_saturate_vf2( vec2 x) {
  return clamp( x, 0.0, 1.0);
}
vec3 xll_saturate_vf3( vec3 x) {
  return clamp( x, 0.0, 1.0);
}
vec4 xll_saturate_vf4( vec4 x) {
  return clamp( x, 0.0, 1.0);
}
mat2 xll_saturate_mf2x2(mat2 m) {
  return mat2( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0));
}
mat3 xll_saturate_mf3x3(mat3 m) {
  return mat3( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0));
}
mat4 xll_saturate_mf4x4(mat4 m) {
  return mat4( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0), clamp(m[3], 0.0, 1.0));
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec4 screen;
    highp vec2 lmap;
    highp vec4 lmapFadePos;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 426
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
#line 442
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
uniform lowp vec4 unity_Ambient;
uniform lowp float _Cutoff;
#line 446
#line 177
lowp vec3 DecodeLightmap( in lowp vec4 color ) {
    #line 179
    return (2.0 * color.xyz);
}
#line 346
lowp vec4 LightingLambert_PrePass( in SurfaceOutput s, in mediump vec4 light ) {
    lowp vec4 c;
    c.xyz = (s.Albedo * light.xyz);
    #line 350
    c.w = s.Alpha;
    return c;
}
#line 411
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 413
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 446
lowp vec4 frag_surf( in v2f_surf IN ) {
    Input surfIN;
    surfIN.uv_MainTex = IN.pack0.xy;
    #line 450
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    o.Emission = vec3( 0.0);
    o.Specular = 0.0;
    #line 454
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    #line 458
    mediump vec4 light = textureProj( _LightBuffer, IN.screen);
    light = max( light, vec4( 0.001));
    light = (-log2(light));
    lowp vec4 lmtex = texture( unity_Lightmap, IN.lmap.xy);
    #line 462
    lowp vec4 lmtex2 = texture( unity_LightmapInd, IN.lmap.xy);
    mediump float lmFade = ((length(IN.lmapFadePos) * unity_LightmapFade.z) + unity_LightmapFade.w);
    mediump vec3 lmFull = DecodeLightmap( lmtex);
    mediump vec3 lmIndirect = DecodeLightmap( lmtex2);
    #line 466
    mediump vec3 lm = mix( lmIndirect, lmFull, vec3( xll_saturate_f(lmFade)));
    light.xyz += lm;
    mediump vec4 c = LightingLambert_PrePass( o, light);
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec2 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.screen = vec4(xlv_TEXCOORD1);
    xlt_IN.lmap = vec2(xlv_TEXCOORD2);
    xlt_IN.lmapFadePos = vec4(xlv_TEXCOORD3);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "opengl " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 5 [_Time]
Vector 6 [_ProjectionParams]
Float 7 [_WaveSpeed]
Float 8 [_Amplitude]
Vector 9 [unity_LightmapST]
Vector 10 [_MainTex_ST]
"!!ARBvp1.0
# 75 ALU
PARAM c[16] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.mvp,
		program.local[5..10],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[7];
MUL R0.x, R0, c[5];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[11];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[12].xyxw, c[12].zwzw;
MAD R1.xyz, R1, R0, c[13].xyxw;
MAD R1.xyz, R1, R0, c[13].zwzw;
MAD R1.xyz, R1, R0, c[14].xyxw;
MAD R0.xyz, R1, R0, c[11].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[14].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[11].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[15].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[8];
MAD R0.w, -R0.x, c[15].x, vertex.position.z;
MAD R0.x, R1.w, c[15].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[11];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[12].xyxw, c[12].zwzw;
MAD R3.xyz, R2, R0, c[13].xyxw;
MAD R3.xyz, R3, R0, c[13].zwzw;
MAD R3.xyz, R3, R0, c[14].xyxw;
ADD R1.xyz, -R1.w, c[11];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[12].xyxw, c[12].zwzw;
MAD R2.xyz, R2, R1, c[13].xyxw;
MAD R2.xyz, R2, R1, c[13].zwzw;
MAD R3.xyz, R3, R0, c[11].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[14].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[11].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[14].xyxw;
MAD R1.xyz, R0, R1, c[11].wzww;
SGE R0.yz, R1.w, c[14].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[11].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R0.x, R0, c[8];
MUL R0.y, -R0, c[15].z;
MAD R0.y, R0.x, c[11], R0;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R2.w, c[8];
MAD R0.x, R0, c[11].y, vertex.position;
DP4 R1.w, R0.xywz, c[4];
DP4 R1.z, R0.xywz, c[3];
DP4 R1.x, R0.xywz, c[1];
DP4 R1.y, R0.xywz, c[2];
MUL R2.xyz, R1.xyww, c[11].y;
MUL R2.y, R2, c[6].x;
ADD result.texcoord[1].xy, R2, R2.z;
MOV result.position, R1;
MOV result.texcoord[1].zw, R1;
MAD result.texcoord[0].xy, vertex.texcoord[0], c[10], c[10].zwzw;
MAD result.texcoord[2].xy, vertex.texcoord[1], c[9], c[9].zwzw;
END
# 75 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 0 [glstate_matrix_mvp]
Vector 4 [_Time]
Vector 5 [_ProjectionParams]
Vector 6 [_ScreenParams]
Float 7 [_WaveSpeed]
Float 8 [_Amplitude]
Vector 9 [unity_LightmapST]
Vector 10 [_MainTex_ST]
"vs_2_0
; 75 ALU
def c11, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c12, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c13, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c14, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c15, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_texcoord0 v3
dcl_texcoord1 v4
add r0.w, v0.x, v0.y
mov r0.x, c4
mul r0.x, c7, r0
slt r0.y, r0.x, c13.x
max r0.y, -r0, r0
slt r0.y, c13.x, r0
add r0.z, -r0.y, c11
mul r0.z, r0.x, r0
mad r1.y, r0, -r0.x, r0.z
add r1.x, r0.w, v0.z
mad r0.x, r1.y, c13.y, r1
mad r0.x, r0, c13.z, c13.w
frc r0.x, r0
mad r1.z, r0.x, c14.x, c14.y
sincos r0.xy, r1.z, c12.xyzw, c11.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1, c15.x, r1.x
mul r0.x, r0, c8
mad r1.z, -r0.x, c15.y, v0
mad r0.x, r1.y, c14.z, r1
mad r0.x, r0, c13.z, c13.w
mad r0.y, r0, c13.z, c13.w
frc r0.y, r0
mov r1.w, v0
mad r1.y, r0, c14.x, c14
frc r1.x, r0
sincos r0.xy, r1.y, c12.xyzw, c11.xyzw
mad r0.x, r1, c14, c14.y
sincos r2.xy, r0.x, c12.xyzw, c11.xyzw
mul r0.z, v3.y, r0.y
mul r0.x, v3.y, r2.y
mul r0.y, v3, v3.x
mul r0.y, -r0, c14.w
mul r0.x, r0, c8
mad r1.y, r0.x, c11.w, r0
mul r0.x, r0.z, c8
mad r1.x, r0, c11.w, v0
dp4 r0.w, r1, c3
dp4 r0.z, r1, c2
dp4 r0.x, r1, c0
dp4 r0.y, r1, c1
mul r2.xyz, r0.xyww, c11.w
mul r2.y, r2, c5.x
mad oT1.xy, r2.z, c6.zwzw, r2
mov oPos, r0
mov oT1.zw, r0
mad oT0.xy, v3, c10, c10.zwzw
mad oT2.xy, v4, c9, c9.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Float 8 [_Amplitude]
Vector 10 [_MainTex_ST]
Vector 1 [_ProjectionParams]
Vector 2 [_ScreenParams]
Vector 0 [_Time]
Float 7 [_WaveSpeed]
Matrix 3 [glstate_matrix_mvp] 4
Vector 9 [unity_LightmapST]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 36.00-37.33 (27-28 instructions), vertex: 32, texture: 0,
//   sequencer: 16,  5 GPRs, 31 threads,
// Performance (if enough threads): ~36-37 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacamaaaaabpaaaaaaaaaaaaaaaceaaaaabjeaaaaablmaaaaaaaa
aaaaaaaaaaaaabgmaaaaaabmaaaaabgapppoadaaaaaaaaaiaaaaaabmaaaaaaaa
aaaaabfjaaaaaalmaaacaaaiaaabaaaaaaaaaamiaaaaaaaaaaaaaaniaaacaaak
aaabaaaaaaaaaaoeaaaaaaaaaaaaaapeaaacaaabaaabaaaaaaaaaaoeaaaaaaaa
aaaaabagaaacaaacaaabaaaaaaaaaaoeaaaaaaaaaaaaabbeaaacaaaaaaabaaaa
aaaaaaoeaaaaaaaaaaaaabbkaaacaaahaaabaaaaaaaaaamiaaaaaaaaaaaaabcf
aaacaaadaaaeaaaaaaaaabdiaaaaaaaaaaaaabeiaaacaaajaaabaaaaaaaaaaoe
aaaaaaaafpebgnhagmgjhehfgegfaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaa
fpengbgjgofegfhifpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpfahcgp
gkgfgdhegjgpgofagbhcgbgnhdaafpfdgdhcgfgfgofagbhcgbgnhdaafpfegjgn
gfaafpfhgbhggffdhagfgfgeaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaa
aaadaaadaaaeaaaeaaabaaaaaaaaaaaahfgogjhehjfpemgjghgihegngbhafdfe
aahghdfpddfpdaaadccodacodcdadddfddcodaaaaaaaaaaaaaaaaaabaaaaaaaa
aaaaaaaaaaaaaabeaapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaea
aaaaablaaacbaaaeaaaaaaaaaaaaaaaaaaaacagdaaaaaaabaaaaaaadaaaaaaae
aaaaacjaaabaaaaeaaaafaafaacbfaagaaaadafaaaabpbfbaaaddcfcaaaababp
aaaaaaboaaaabaccaaaabacaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeamjapnl
lpiaaaaamaejapnldpiaaaaadpaaaaaadoemmmmndoccpjiddpggggggdpljjjjk
eaehkobeeaammmmndpaaaaaahajfgaaebaakbaaafgaaaaaaaaaaaaaagaalmcaa
bcaaaaaaaaaagabbgabhbcaabcaaaaaaaaaaaaaagabnmeaaccaaaaaaafpicaaa
aaaaagiiaaaaaaaaafpibaaaaaaaacdpaaaaaaaaafpibaaaaaaaapmiaaaaaaaa
miacaaaaaagmlbaacbaapnaamiabaaaaaagmgmaacbaaahaaheaeaaaaabloblgm
laacpnaakibaaaaabiaaaaebmcaaaaahmiaiaaadaablmgaaobababaamiahaaad
aagmmamgklaappaamiapaaadaaaaagaakbadpoaamiahaaaaaamablaakaadppaa
miahaaaaaamaaaaaoiaaaaaamiahaaaaaamagmmgilaapnpnmabaaaaaaaaaaagm
ocaaaaaamacaaaaaaaaaaalbocaaaaaamaedaaaeaabllamgkbabpoaamiahaaaa
aalmmaaaobaeaaaamiahaaadaamagmaakbaaaiaamiabaaacaagmgmaaoaadacaa
beapaaaaaablaalbkbacagadaeceacacafmgmgbloaadacadmiapaaaaaamgnana
klacafaamiapaaaaaalbdepiklacaeaamiapaaacaagmnajeklacadaamiapiado
aananaaaocacacaamiahaaaaaamablaakbacppaamiamiaabaanlnlaaocacacaa
miadiaaaaabklabkilabakakmiadiaacaalalabkilabajajkiiaaaaaaaaaaaeb
mcaaaaabmiadiaabaamgbkbiklaaacaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 467 [_Time]
Vector 466 [_ProjectionParams]
Float 465 [_WaveSpeed]
Float 464 [_Amplitude]
Vector 463 [unity_LightmapST]
Vector 462 [_MainTex_ST]
"sce_vp_rsx // 32 instructions using 3 registers
[Configuration]
8
0000002003010300
[Defaults]
2
461 4
400ccccd3e4ccccd4047ae143f000000
460 2
3f6666663fb9999a
[Microcode]
512
401f9c6c011ce808010400d740619f9c00001c6c00c000000106c08aa0409ffc
00001c6c005d10000186c08360411ffc00001c6c009d3000008000c360411ffc
201fdc6c004000000086c08360411ffc00001c6c00c000550106c08aa0203ffc
00001c6c004000000086c08360405ffc00002400004000800086c08360405ffc
00001c6c011cd055008800dfe0219ffc00001c6c011cc055009540dfe0205ffc
00009c6c7880082a8100008aa029007c00009c6c789cc080028000c00031007c
00011c6c7880082a81154055402900fc00001c6c008008000095408360409ffc
00001c6c0080082a8115414360411ffc00001c6c009d0000008000c360411ffc
00001c6c009d002a808000c360409ffc00001c6c009d0000048000c360405ffc
00009c6c011cd05500bfc0c000a09ffc00009c6c011cd0aa809540d540405ffc
00009c6c011cd00000bfc0c000411ffc00009c6c0040007f8106c08360403ffc
00001c6c01d0300d8286c0c360403ffc00001c6c01d0200d8286c0c360405ffc
00001c6c01d0100d8286c0c360409ffc00001c6c01d0000d8286c0c360411ffc
401f9c6c011cf908010400d740619fa4401f9c6c0040000d8086c0836041ff80
401f9c6c004000558086c08360407fa000001c6c009cd00e00bfc0c36041dffc
00001c6c009d202a808000c360409ffc401f9c6c00c000080086c09540219fa1
"
}

SubProgram "d3d11 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "color" Color
ConstBuffer "$Globals" 160 // 112 used size, 11 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [unity_LightmapST] 4
Vector 96 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 0 [_Time] 4
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityPerDraw" 336 // 64 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityPerDraw" 2
// 26 instructions, 2 temp regs, 0 temp arrays:
// ALU 22 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedefcfnibbcmpoobjbmbidfmhojnfceccfabaaaaaagmafaaaaadaaaaaa
cmaaaaaapeaaaaaahmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaa
aiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaheaaaaaaacaaaaaaaaaaaaaa
adaaaaaaabaaaaaaamadaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apaaaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefc
oiadaaaaeaaaabaapkaaaaaafjaaaaaeegiocaaaaaaaaaaaahaaaaaafjaaaaae
egiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaaaeaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaaddcbabaaaadaaaaaafpaaaaaddcbabaaaaeaaaaaa
ghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaad
mccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagiaaaaacacaaaaaadiaaaaaj
bcaabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaaakiacaaaabaaaaaaaaaaaaaa
dbaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaak
bcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaa
aaaaaaaaaaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaa
aaaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaam
hcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdpbekoeheamnmmamea
aaaaaaaafgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaa
aaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaa
diaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaaaaaaaaaaaeaaaaaa
diaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaah
icaabaaaaaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaa
aaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaa
diaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaa
dcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaa
aaaaaaaadcaaaaakccaabaaaaaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaa
mnmmemdockbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaacaaaaaa
aaaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaacaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaa
aaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaa
abaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaa
agaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaaeaaaaaaagiecaaaaaaaaaaa
afaaaaaakgiocaaaaaaaaaaaafaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaa
aaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaa
aaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaa
acaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaacaaaaaakgakbaaaabaaaaaa
mgaabaaaabaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp float t_2;
  highp float tmpvar_3;
  tmpvar_3 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_4;
  tmpvar_4 = (_Time * _WaveSpeed).x;
  t_2 = tmpvar_4;
  if ((tmpvar_4 < 0.0)) {
    t_2 = (tmpvar_4 * -1.0);
  };
  tmpvar_1.x = (_glesVertex.x + (((sin(((t_2 * 1.45) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_1.y = ((((sin(((t_2 * 3.12) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_1.z = (_glesVertex.z - (((sin(((t_2 * 2.2) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_mvp * tmpvar_1);
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_5.zw;
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = o_6;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D unity_Lightmap;
uniform sampler2D _LightBuffer;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec4 c_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  c_4 = tmpvar_6;
  lowp float x_7;
  x_7 = (c_4.w - _Cutoff);
  if ((x_7 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_8;
  mediump vec3 lm_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_9 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11.w = 0.0;
  tmpvar_11.xyz = lm_9;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (-(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001)))) + tmpvar_11);
  light_3 = tmpvar_12;
  lowp vec4 c_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (c_4.xyz * tmpvar_12.xyz);
  c_13.xyz = tmpvar_14;
  c_13.w = c_4.w;
  c_2 = c_13;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp float t_2;
  highp float tmpvar_3;
  tmpvar_3 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_4;
  tmpvar_4 = (_Time * _WaveSpeed).x;
  t_2 = tmpvar_4;
  if ((tmpvar_4 < 0.0)) {
    t_2 = (tmpvar_4 * -1.0);
  };
  tmpvar_1.x = (_glesVertex.x + (((sin(((t_2 * 1.45) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_1.y = ((((sin(((t_2 * 3.12) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_1.z = (_glesVertex.z - (((sin(((t_2 * 2.2) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_mvp * tmpvar_1);
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_5.zw;
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = o_6;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D unity_Lightmap;
uniform sampler2D _LightBuffer;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec4 c_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  c_4 = tmpvar_6;
  lowp float x_7;
  x_7 = (c_4.w - _Cutoff);
  if ((x_7 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (unity_Lightmap, xlv_TEXCOORD2);
  mediump vec3 lm_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((8.0 * tmpvar_9.w) * tmpvar_9.xyz);
  lm_10 = tmpvar_11;
  mediump vec4 tmpvar_12;
  tmpvar_12.w = 0.0;
  tmpvar_12.xyz = lm_10;
  mediump vec4 tmpvar_13;
  tmpvar_13 = (-(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001)))) + tmpvar_12);
  light_3 = tmpvar_13;
  lowp vec4 c_14;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (c_4.xyz * tmpvar_13.xyz);
  c_14.xyz = tmpvar_15;
  c_14.w = c_4.w;
  c_2 = c_14;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "d3d11_9x " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "color" Color
ConstBuffer "$Globals" 160 // 112 used size, 11 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [unity_LightmapST] 4
Vector 96 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 0 [_Time] 4
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityPerDraw" 336 // 64 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityPerDraw" 2
// 26 instructions, 2 temp regs, 0 temp arrays:
// ALU 22 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecedoccnffiphfdackjfpkedidlodbpjpcobabaaaaaaaeajaaaaaeaaaaaa
daaaaaaameadaaaaleahaaaahmaiaaaaebgpgodjimadaaaaimadaaaaaaacpopp
deadaaaafiaaaaaaaeaaceaaaaaafeaaaaaafeaaaaaaceaaabaafeaaaaaaaeaa
adaaabaaaaaaaaaaabaaaaaaabaaaeaaaaaaaaaaabaaafaaabaaafaaaaaaaaaa
acaaaaaaaeaaagaaaaaaaaaaaaaaaaaaaaacpoppfbaaaaafakaaapkajkjjljdp
bekoeheamnmmameaggggggdpfbaaaaafalaaapkaaaaaaaaaaaaaaamaidpjccdo
aaaaaadpfbaaaaafamaaapkanlapmjeanlapejmamnmmemdoaaaaaaaafbaaaaaf
anaaapkaabannalfgballglhklkkckdlijiiiidjfbaaaaafaoaaapkaklkkkklm
aaaaaaloaaaaiadpaaaaaadpbpaaaaacafaaaaiaaaaaapjabpaaaaacafaaadia
adaaapjabpaaaaacafaaaeiaaeaaapjaaeaaaaaeaaaaadoaadaaoejaadaaoeka
adaaookaabaaaaacaaaaabiaabaaaakaafaaaaadaaaaabiaaaaaaaiaaeaaaaka
amaaaaadaaaaaciaaaaaaaiaalaaaakaafaaaaadaaaaaciaaaaaffiaaaaaaaia
aeaaaaaeaaaaabiaaaaaffiaalaaffkaaaaaaaiaacaaaaadaaaaaciaaaaaffja
aaaaaajaacaaaaadaaaaaciaaaaaffiaaaaakkjaaeaaaaaeaaaaahiaaaaaaaia
akaaoekaaaaaffiaaeaaaaaeaaaaahiaaaaaoeiaalaakkkaalaappkabdaaaaac
aaaaahiaaaaaoeiaaeaaaaaeaaaaahiaaaaaoeiaamaaaakaamaaffkacfaaaaae
abaaaciaaaaaffiaanaaoekaaoaaoekaafaaaaadaaaaaciaabaaffiaadaaffja
afaaaaadaaaaaciaaaaaffiaabaaffkaafaaaaadaaaaaiiaadaaaajaadaaffja
afaaaaadaaaaaiiaaaaappiaakaappkaaeaaaaaeaaaaaciaaaaaffiaalaappka
aaaappibafaaaaadabaaapiaaaaaffiaahaaoekacfaaaaaeacaaaciaaaaaaaia
anaaoekaaoaaoekacfaaaaaeadaaaciaaaaakkiaanaaoekaaoaaoekaafaaaaad
aaaaabiaadaaffiaadaaffjaafaaaaadaaaaabiaaaaaaaiaabaaffkaaeaaaaae
aaaaabiaaaaaaaiaamaakkkbaaaakkjaafaaaaadaaaaaciaacaaffiaadaaffja
afaaaaadaaaaaciaaaaaffiaabaaffkaaeaaaaaeaaaaaciaaaaaffiaalaappka
aaaaaajaaeaaaaaeabaaapiaagaaoekaaaaaffiaabaaoeiaaeaaaaaeaaaaapia
aiaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaapiaajaaoekaaaaappjaaaaaoeia
afaaaaadabaaabiaaaaaffiaafaaaakaafaaaaadabaaaiiaabaaaaiaalaappka
afaaaaadabaaafiaaaaapeiaalaappkaacaaaaadabaaadoaabaakkiaabaaomia
aeaaaaaeaaaaamoaaeaabejaacaabekaacaalekaaeaaaaaeaaaaadmaaaaappia
aaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeiaabaaaaacabaaamoaaaaaoeia
ppppaaaafdeieefcoiadaaaaeaaaabaapkaaaaaafjaaaaaeegiocaaaaaaaaaaa
ahaaaaaafjaaaaaeegiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaa
aeaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaaddcbabaaaadaaaaaafpaaaaad
dcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadmccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagiaaaaac
acaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaaakiacaaa
abaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaa
aaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaa
aaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaa
akbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaa
aaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdp
bekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaa
aanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaa
fgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaa
aaaaaaaaaeaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaa
aaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaa
dcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdp
bkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaa
acaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaa
aaaaaadpakbabaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaackaabaiaebaaaaaa
aaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaa
egiocaaaacaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaapgbpbaaa
aaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaagaaaaaa
ogikcaaaaaaaaaaaagaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaaeaaaaaa
agiecaaaaaaaaaaaafaaaaaakgiocaaaaaaaaaaaafaaaaaadiaaaaaiccaabaaa
aaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaa
abaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadp
dgaaaaafmccabaaaacaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaacaaaaaa
kgakbaaaabaaaaaamgaabaaaabaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaa
apadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeo
ehefeofeaaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheo
iaaaaaaaaeaaaaaaaiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaa
apaaaaaaheaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaheaaaaaa
acaaaaaaaaaaaaaaadaaaaaaabaaaaaaamadaaaaheaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklkl"
}

SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec4 screen;
    highp vec2 lmap;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 425
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
#line 437
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
#line 441
uniform lowp vec4 unity_Ambient;
uniform lowp float _Cutoff;
#line 284
highp vec4 ComputeScreenPos( in highp vec4 pos ) {
    #line 286
    highp vec4 o = (pos * 0.5);
    o.xy = (vec2( o.x, (o.y * _ProjectionParams.x)) + o.w);
    o.zw = pos.zw;
    return o;
}
#line 400
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 404
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 408
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 427
v2f_surf vert_surf( in appdata_full v ) {
    #line 429
    v2f_surf o;
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    #line 433
    o.screen = ComputeScreenPos( o.pos);
    o.lmap.xy = ((v.texcoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec2 xlv_TEXCOORD2;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec4(xl_retval.screen);
    xlv_TEXCOORD2 = vec2(xl_retval.lmap);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
mat2 xll_transpose_mf2x2(mat2 m) {
  return mat2( m[0][0], m[1][0], m[0][1], m[1][1]);
}
mat3 xll_transpose_mf3x3(mat3 m) {
  return mat3( m[0][0], m[1][0], m[2][0],
               m[0][1], m[1][1], m[2][1],
               m[0][2], m[1][2], m[2][2]);
}
mat4 xll_transpose_mf4x4(mat4 m) {
  return mat4( m[0][0], m[1][0], m[2][0], m[3][0],
               m[0][1], m[1][1], m[2][1], m[3][1],
               m[0][2], m[1][2], m[2][2], m[3][2],
               m[0][3], m[1][3], m[2][3], m[3][3]);
}
float xll_saturate_f( float x) {
  return clamp( x, 0.0, 1.0);
}
vec2 xll_saturate_vf2( vec2 x) {
  return clamp( x, 0.0, 1.0);
}
vec3 xll_saturate_vf3( vec3 x) {
  return clamp( x, 0.0, 1.0);
}
vec4 xll_saturate_vf4( vec4 x) {
  return clamp( x, 0.0, 1.0);
}
mat2 xll_saturate_mf2x2(mat2 m) {
  return mat2( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0));
}
mat3 xll_saturate_mf3x3(mat3 m) {
  return mat3( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0));
}
mat4 xll_saturate_mf4x4(mat4 m) {
  return mat4( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0), clamp(m[3], 0.0, 1.0));
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec4 screen;
    highp vec2 lmap;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 425
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
#line 437
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
#line 441
uniform lowp vec4 unity_Ambient;
uniform lowp float _Cutoff;
#line 177
lowp vec3 DecodeLightmap( in lowp vec4 color ) {
    #line 179
    return (2.0 * color.xyz);
}
#line 325
mediump vec3 DirLightmapDiffuse( in mediump mat3 dirBasis, in lowp vec4 color, in lowp vec4 scale, in mediump vec3 normal, in bool surfFuncWritesNormal, out mediump vec3 scalePerBasisVector ) {
    mediump vec3 lm = DecodeLightmap( color);
    scalePerBasisVector = DecodeLightmap( scale);
    #line 329
    if (surfFuncWritesNormal){
        mediump vec3 normalInRnmBasis = xll_saturate_vf3((dirBasis * normal));
        lm *= dot( normalInRnmBasis, scalePerBasisVector);
    }
    #line 334
    return lm;
}
#line 353
mediump vec4 LightingLambert_DirLightmap( in SurfaceOutput s, in lowp vec4 color, in lowp vec4 scale, in bool surfFuncWritesNormal ) {
    #line 355
    highp mat3 unity_DirBasis = xll_transpose_mf3x3(mat3( vec3( 0.816497, 0.0, 0.57735), vec3( -0.408248, 0.707107, 0.57735), vec3( -0.408248, -0.707107, 0.57735)));
    mediump vec3 scalePerBasisVector;
    mediump vec3 lm = DirLightmapDiffuse( unity_DirBasis, color, scale, s.Normal, surfFuncWritesNormal, scalePerBasisVector);
    return vec4( lm, 0.0);
}
#line 346
lowp vec4 LightingLambert_PrePass( in SurfaceOutput s, in mediump vec4 light ) {
    lowp vec4 c;
    c.xyz = (s.Albedo * light.xyz);
    #line 350
    c.w = s.Alpha;
    return c;
}
#line 411
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 413
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 443
lowp vec4 frag_surf( in v2f_surf IN ) {
    #line 445
    Input surfIN;
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    #line 449
    o.Emission = vec3( 0.0);
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    #line 453
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    mediump vec4 light = textureProj( _LightBuffer, IN.screen);
    light = max( light, vec4( 0.001));
    #line 457
    light = (-log2(light));
    lowp vec4 lmtex = texture( unity_Lightmap, IN.lmap.xy);
    lowp vec4 lmIndTex = texture( unity_LightmapInd, IN.lmap.xy);
    mediump vec4 lm = LightingLambert_DirLightmap( o, lmtex, lmIndTex, false);
    #line 461
    light += lm;
    mediump vec4 c = LightingLambert_PrePass( o, light);
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec2 xlv_TEXCOORD2;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.screen = vec4(xlv_TEXCOORD1);
    xlt_IN.lmap = vec2(xlv_TEXCOORD2);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 9 [_Time]
Vector 10 [_ProjectionParams]
Vector 11 [unity_SHAr]
Vector 12 [unity_SHAg]
Vector 13 [unity_SHAb]
Vector 14 [unity_SHBr]
Vector 15 [unity_SHBg]
Vector 16 [unity_SHBb]
Vector 17 [unity_SHC]
Matrix 5 [_Object2World]
Vector 18 [unity_Scale]
Float 19 [_WaveSpeed]
Float 20 [_Amplitude]
Vector 21 [_MainTex_ST]
"!!ARBvp1.0
# 92 ALU
PARAM c[27] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.mvp,
		program.local[5..21],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[19];
MUL R0.x, R0, c[9];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[22];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[23].xyxw, c[23].zwzw;
MAD R1.xyz, R1, R0, c[24].xyxw;
MAD R1.xyz, R1, R0, c[24].zwzw;
MAD R1.xyz, R1, R0, c[25].xyxw;
MAD R0.xyz, R1, R0, c[22].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[25].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[22].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[26].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[20];
MAD R0.w, -R0.x, c[26].x, vertex.position.z;
MAD R0.x, R1.w, c[26].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[22];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[23].xyxw, c[23].zwzw;
MAD R3.xyz, R2, R0, c[24].xyxw;
MAD R3.xyz, R3, R0, c[24].zwzw;
MAD R3.xyz, R3, R0, c[25].xyxw;
ADD R1.xyz, -R1.w, c[22];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[23].xyxw, c[23].zwzw;
MAD R2.xyz, R2, R1, c[24].xyxw;
MAD R2.xyz, R2, R1, c[24].zwzw;
MAD R3.xyz, R3, R0, c[22].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[25].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[22].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[25].xyxw;
MAD R1.xyz, R0, R1, c[22].wzww;
SGE R0.yz, R1.w, c[25].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[22].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R0, c[20];
MUL R0.y, -R0, c[26].z;
MAD R0.y, R0.x, c[22], R0;
MUL R0.x, R2.w, c[20];
MAD R0.x, R0, c[22].y, vertex.position;
DP4 R1.w, R0.xywz, c[4];
DP4 R1.z, R0.xywz, c[3];
DP4 R1.x, R0.xywz, c[1];
DP4 R1.y, R0.xywz, c[2];
MUL R2.xyz, R1.xyww, c[22].y;
MUL R2.y, R2, c[10].x;
ADD result.texcoord[1].xy, R2, R2.z;
MUL R2.xyz, vertex.normal, c[18].w;
DP3 R2.w, R2, c[6];
DP3 R0.x, R2, c[5];
DP3 R0.z, R2, c[7];
MOV R0.y, R2.w;
MOV R0.w, c[22].z;
DP4 R2.z, R0, c[13];
DP4 R2.y, R0, c[12];
DP4 R2.x, R0, c[11];
MUL R0.w, R2, R2;
MAD R0.w, R0.x, R0.x, -R0;
MOV result.position, R1;
MOV result.texcoord[1].zw, R1;
MUL R1, R0.xyzz, R0.yzzx;
DP4 R0.z, R1, c[16];
DP4 R0.y, R1, c[15];
DP4 R0.x, R1, c[14];
MUL R1.xyz, R0.w, c[17];
ADD R0.xyz, R2, R0;
ADD result.texcoord[2].xyz, R0, R1;
MAD result.texcoord[0].xy, vertex.texcoord[0], c[21], c[21].zwzw;
END
# 92 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Vector 9 [_ProjectionParams]
Vector 10 [_ScreenParams]
Vector 11 [unity_SHAr]
Vector 12 [unity_SHAg]
Vector 13 [unity_SHAb]
Vector 14 [unity_SHBr]
Vector 15 [unity_SHBg]
Vector 16 [unity_SHBb]
Vector 17 [unity_SHC]
Matrix 4 [_Object2World]
Vector 18 [unity_Scale]
Float 19 [_WaveSpeed]
Float 20 [_Amplitude]
Vector 21 [_MainTex_ST]
"vs_2_0
; 92 ALU
def c22, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c23, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c24, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c25, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c26, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_normal0 v2
dcl_texcoord0 v3
add r0.w, v0.x, v0.y
mov r0.x, c8
mul r0.x, c19, r0
slt r0.y, r0.x, c24.x
max r0.y, -r0, r0
slt r0.y, c24.x, r0
add r0.z, -r0.y, c22
mul r0.z, r0.x, r0
mad r1.x, r0.y, -r0, r0.z
add r1.y, r0.w, v0.z
mad r0.x, r1, c24.y, r1.y
mad r0.x, r0, c24.z, c24.w
frc r0.x, r0
mad r1.z, r0.x, c25.x, c25.y
sincos r0.xy, r1.z, c23.xyzw, c22.xyzw
mul r0.x, r0.y, v3.y
mul r0.x, r0, c20
mad r0.z, -r0.x, c26.y, v0
mad r0.y, r1.x, c26.x, r1
mad r0.x, r1, c25.z, r1.y
mad r0.y, r0, c24.z, c24.w
frc r0.y, r0
mad r0.y, r0, c25.x, c25
sincos r1.xy, r0.y, c23.xyzw, c22.xyzw
mad r0.x, r0, c24.z, c24.w
frc r0.x, r0
mad r0.x, r0, c25, c25.y
sincos r2.xy, r0.x, c23.xyzw, c22.xyzw
mul r0.x, v3.y, r2.y
mul r2.xyz, v2, c18.w
mul r0.y, v3, v3.x
mov r1.w, c22.z
mul r0.w, v3.y, r1.y
dp3 r3.z, r2, c5
mul r0.x, r0, c20
mul r0.y, -r0, c25.w
mad r0.y, r0.x, c22.w, r0
mul r0.x, r0.w, c20
mov r0.w, v0
mad r0.x, r0, c22.w, v0
dp4 r3.w, r0, c3
dp4 r3.x, r0, c0
dp4 r3.y, r0, c1
mul r1.xyz, r3.xyww, c22.w
mul r1.y, r1, c9.x
mad oT1.xy, r1.z, c10.zwzw, r1
mov r1.y, r3.z
dp3 r1.x, r2, c4
dp3 r1.z, r2, c6
mul r2, r1.xyzz, r1.yzzx
dp4 r4.z, r1, c13
dp4 r4.y, r1, c12
dp4 r4.x, r1, c11
dp4 r1.w, r2, c16
dp4 r1.z, r2, c15
dp4 r1.y, r2, c14
mul r3.z, r3, r3
mad r2.x, r1, r1, -r3.z
dp4 r3.z, r0, c2
add r1.xyz, r4, r1.yzww
mul r2.xyz, r2.x, c17
add oT2.xyz, r1, r2
mov oPos, r3
mov oT1.zw, r3
mad oT0.xy, v3, c21, c21.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Float 19 [_Amplitude]
Vector 20 [_MainTex_ST]
Matrix 14 [_Object2World] 3
Vector 1 [_ProjectionParams]
Vector 2 [_ScreenParams]
Vector 0 [_Time]
Float 18 [_WaveSpeed]
Matrix 10 [glstate_matrix_mvp] 4
Vector 5 [unity_SHAb]
Vector 4 [unity_SHAg]
Vector 3 [unity_SHAr]
Vector 8 [unity_SHBb]
Vector 7 [unity_SHBg]
Vector 6 [unity_SHBr]
Vector 9 [unity_SHC]
Vector 17 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 52.00-53.33 (39-40 instructions), vertex: 32, texture: 0,
//   sequencer: 20,  6 GPRs, 30 threads,
// Performance (if enough threads): ~52-53 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaadaeaaaaacimaaaaaaaaaaaaaaceaaaaacimaaaaacleaaaaaaaa
aaaaaaaaaaaaacgeaaaaaabmaaaaacfhpppoadaaaaaaaabaaaaaaabmaaaaaaaa
aaaaacfaaaaaabfmaaacaabdaaabaaaaaaaaabgiaaaaaaaaaaaaabhiaaacaabe
aaabaaaaaaaaabieaaaaaaaaaaaaabjeaaacaaaoaaadaaaaaaaaabkeaaaaaaaa
aaaaableaaacaaabaaabaaaaaaaaabieaaaaaaaaaaaaabmgaaacaaacaaabaaaa
aaaaabieaaaaaaaaaaaaabneaaacaaaaaaabaaaaaaaaabieaaaaaaaaaaaaabnk
aaacaabcaaabaaaaaaaaabgiaaaaaaaaaaaaabofaaacaaakaaaeaaaaaaaaabke
aaaaaaaaaaaaabpiaaacaaafaaabaaaaaaaaabieaaaaaaaaaaaaacadaaacaaae
aaabaaaaaaaaabieaaaaaaaaaaaaacaoaaacaaadaaabaaaaaaaaabieaaaaaaaa
aaaaacbjaaacaaaiaaabaaaaaaaaabieaaaaaaaaaaaaacceaaacaaahaaabaaaa
aaaaabieaaaaaaaaaaaaaccpaaacaaagaaabaaaaaaaaabieaaaaaaaaaaaaacdk
aaacaaajaaabaaaaaaaaabieaaaaaaaaaaaaaceeaaacaabbaaabaaaaaaaaabie
aaaaaaaafpebgnhagmgjhehfgegfaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaa
fpengbgjgofegfhifpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpepgcgk
gfgdhedcfhgphcgmgeaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpfahcgp
gkgfgdhegjgpgofagbhcgbgnhdaafpfdgdhcgfgfgofagbhcgbgnhdaafpfegjgn
gfaafpfhgbhggffdhagfgfgeaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaa
hfgogjhehjfpfdeiebgcaahfgogjhehjfpfdeiebghaahfgogjhehjfpfdeiebhc
aahfgogjhehjfpfdeiecgcaahfgogjhehjfpfdeiecghaahfgogjhehjfpfdeiec
hcaahfgogjhehjfpfdeiedaahfgogjhehjfpfdgdgbgmgfaahghdfpddfpdaaadc
codacodcdadddfddcodaaaklaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabe
aapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaacemaacbaaaf
aaaaaaaaaaaaaaaaaaaacegdaaaaaaabaaaaaaadaaaaaaaeaaaaacjaaabaaaaf
aaaadaagaacafaahaaaadafaaaabpbfbaaadhcfcaaaabacnaaaaaaclaaaabacp
aaaabacmaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadoccpjidlpiaaaaamaejapnl
dpiaaaaadpaaaaaadoemmmmndpggggggeamjapnldpljjjjkeaehkobeeaammmmn
dpaaaaaahajfgaafbaalbaaafgaaaaaaaaaaaaaagaammcaabcaaaaaaaaaagabc
gabibcaabcaaaaaaaaaaaaaagabomeaabcaaaaaaaaaagacegackbcaaccaaaaaa
afpicaaaaaaaagiiaaaaaaaaafpidaaaaaaaaoiiaaaaaaaaafpibaaaaaaaapmi
aaaaaaaamiacaaaaaagmlbaacbaapnaamiabaaaaaagmgmaacbaabcaaheaeaaaa
abloblgmlaacpnaakibaaaaabiaaaaebmcaaaabcmiabaaaeaalbgmaaobababaa
miahaaaaaagmmamgklaappaamiahaaaaaamagmblilaapnppmiaoaaaeaapmaaaa
oiaaaaaamiapaaaeaanabkaakbaepoaamiahaaaaaamjmgaakaaepnaamabaaaaa
aaaaaagmocaaaaaamacaaaaaaaaaaalbocaaaaaamaemaaabaalbkmmgkbabpoaa
miahaaaaaabgmaaaobabaaaamiaoaaaeaapmgmaakbaabdaamiaeaaabaalbgmaa
oaaeacaabeapaaaaaablaamgkbacanaeaeibabacafblmggmoaaeacaemiapaaaa
aagmnanaklacamaamiapaaaaaabldepiklabalaamiapaaaeaamgnajeklabakaa
miapiadoaananaaaocaeaeaamialaaaaaagfblaakbadbbaamiahaaacaalbleaa
kbaabaaamiahaaaaaagmlemaklaaapacmiahaaaaaabllemaklaaaoaaceipaaaf
aalehcgmobaaaaiamiabaaadaadoanaagpadaaaamiacaaadaadoanaagpaeaaaa
miaeaaadaadoanaagpafaaaamiabaaacaakhkhaakpafagaamiacaaacaakhkhaa
kpafahaaaieeabacaakhkhgmkpafaiaaaiihabacaalolomgoaadacaageihaaaa
aamablmlkbaeppabmiamiaabaanlnlaaocaeaeaamiahiaacaablmagfklaaajac
miadiaaaaalalabkilabbebekiiaaaaaaaaaaaebmcaaaaabmiadiaabaamgbkbi
klaaacaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_Time]
Vector 466 [_ProjectionParams]
Vector 465 [unity_SHAr]
Vector 464 [unity_SHAg]
Vector 463 [unity_SHAb]
Vector 462 [unity_SHBr]
Vector 461 [unity_SHBg]
Vector 460 [unity_SHBb]
Vector 459 [unity_SHC]
Matrix 260 [_Object2World]
Vector 458 [unity_Scale]
Float 457 [_WaveSpeed]
Float 456 [_Amplitude]
Vector 455 [_MainTex_ST]
"sce_vp_rsx // 48 instructions using 4 registers
[Configuration]
8
0000003001050400
[Defaults]
2
454 4
400ccccd3e4ccccd4047ae143f000000
453 2
3f6666663fb9999a
[Microcode]
768
00009c6c009ca20c013fc0c36041dffc401f9c6c011c7808010400d740619f9c
00009c6c0040007f8106c08360403ffc00001c6c005c90000186c08360409ffc
00001c6c00c000000106c08aa0403ffc00001c6c0150400c028600c360411ffc
00001c6c0150600c028600c360405ffc00009c6c0150500c028600c360411ffc
00019c6c00c000550106c09fe0209ffc00019c6c009d302a808000c360405ffc
201fdc6c004000550686c08360411ffc00019c6c004000550686c08360411ffc
00001c6c008000000280014360403ffc00001c6c004000000286c08360409ffc
00009c6c019cf00c0086c0c360405ffc00009c6c019d000c0086c0c360409ffc
00009c6c019d100c0086c0c360411ffc00011c6c010000000080007fe0203ffc
00001c6c0080000d009a00436041fffc00011c6c01dcc00d8086c0c360405ffc
00011c6c01dcd00d8086c0c360409ffc00011c6c01dce00d8086c0c360411ffc
0001a46c004000d50686c08360411ffc00011c6c00c0000c0286c0830121dffc
00001c6c011c6000068800caa1a19ffc00001c6c011c5000069540caa1a05ffc
00009c6c7880082a8100008aa029007c00009c6c789c5080028000c00031007c
00019c6c7880082a81154055402900fc00001c6c008008000095408360409ffc
00001c6c0080082a8115414360411ffc00001c6c009c8000008000c360411ffc
00001c6c009c802a808000c360409ffc00001c6c009c8000068000c360405ffc
00009c6c011c605500bfc0c000a09ffc00009c6c011c60aa809540d540405ffc
00009c6c011c600000bfc0c000411ffc00019c6c009cb07f848600c36041dffc
00001c6c01d0300d8286c0c360403ffc00001c6c01d0200d8286c0c360405ffc
00001c6c01d0100d8286c0c360409ffc00001c6c01d0000d8286c0c360411ffc
401f9c6c00c0000c0686c0830121dfa4401f9c6c0040000d8086c0836041ff80
401f9c6c004000558086c08360407fa000001c6c009c600e00bfc0c36041dffc
00001c6c009d202a808000c360409ffc401f9c6c00c000080086c09540219fa1
"
}

SubProgram "d3d11 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 128 // 96 used size, 9 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 0 [_Time] 4
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityLighting" 720 // 720 used size, 17 vars
Vector 608 [unity_SHAr] 4
Vector 624 [unity_SHAg] 4
Vector 640 [unity_SHAb] 4
Vector 656 [unity_SHBr] 4
Vector 672 [unity_SHBg] 4
Vector 688 [unity_SHBb] 4
Vector 704 [unity_SHC] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 41 instructions, 4 temp regs, 0 temp arrays:
// ALU 36 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedefempmioogckfponphacegkajldcljogabaaaaaafiahaaaaadaaaaaa
cmaaaaaapeaaaaaahmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaa
aiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaheaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaapaaaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefc
neafaaaaeaaaabaahfabaaaafjaaaaaeegiocaaaaaaaaaaaagaaaaaafjaaaaae
egiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaacnaaaaaafjaaaaae
egiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaa
acaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaaddccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaadhccabaaa
adaaaaaagiaaaaacaeaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaa
aeaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaa
aceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaag
hcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaa
aaaaaaaafgifcaaaaaaaaaaaaeaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaa
bkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaa
abeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaa
aaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaa
ckaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaafgafbaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaafaaaaaaogikcaaaaaaaaaaaafaaaaaadiaaaaaiccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaa
agahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaaf
mccabaaaacaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaacaaaaaakgakbaaa
abaaaaaamgaabaaaabaaaaaadiaaaaaihcaabaaaaaaaaaaaegbcbaaaacaaaaaa
pgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaa
egiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaaaaaaaaaegiicaaaadaaaaaa
amaaaaaaagaabaaaaaaaaaaaegaibaaaabaaaaaadcaaaaakhcaabaaaaaaaaaaa
egiccaaaadaaaaaaaoaaaaaakgakbaaaaaaaaaaaegadbaaaaaaaaaaadgaaaaaf
icaabaaaaaaaaaaaabeaaaaaaaaaiadpbbaaaaaibcaabaaaabaaaaaaegiocaaa
acaaaaaacgaaaaaaegaobaaaaaaaaaaabbaaaaaiccaabaaaabaaaaaaegiocaaa
acaaaaaachaaaaaaegaobaaaaaaaaaaabbaaaaaiecaabaaaabaaaaaaegiocaaa
acaaaaaaciaaaaaaegaobaaaaaaaaaaadiaaaaahpcaabaaaacaaaaaajgacbaaa
aaaaaaaaegakbaaaaaaaaaaabbaaaaaibcaabaaaadaaaaaaegiocaaaacaaaaaa
cjaaaaaaegaobaaaacaaaaaabbaaaaaiccaabaaaadaaaaaaegiocaaaacaaaaaa
ckaaaaaaegaobaaaacaaaaaabbaaaaaiecaabaaaadaaaaaaegiocaaaacaaaaaa
claaaaaaegaobaaaacaaaaaaaaaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaa
egacbaaaadaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaabkaabaaa
aaaaaaaadcaaaaakbcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaaaaaaaaa
bkaabaiaebaaaaaaaaaaaaaadcaaaaakhccabaaaadaaaaaaegiccaaaacaaaaaa
cmaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES


#ifdef VERTEX

varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = _glesVertex;
  highp float t_4;
  highp float tmpvar_5;
  tmpvar_5 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_6;
  tmpvar_6 = (_Time * _WaveSpeed).x;
  t_4 = tmpvar_6;
  if ((tmpvar_6 < 0.0)) {
    t_4 = (tmpvar_6 * -1.0);
  };
  tmpvar_3.x = (_glesVertex.x + (((sin(((t_4 * 1.45) + tmpvar_5)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_3.y = ((((sin(((t_4 * 3.12) + tmpvar_5)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_3.z = (_glesVertex.z - (((sin(((t_4 * 2.2) + tmpvar_5)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_mvp * tmpvar_3);
  highp vec4 o_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (tmpvar_7 * 0.5);
  highp vec2 tmpvar_10;
  tmpvar_10.x = tmpvar_9.x;
  tmpvar_10.y = (tmpvar_9.y * _ProjectionParams.x);
  o_8.xy = (tmpvar_10 + tmpvar_9.w);
  o_8.zw = tmpvar_7.zw;
  mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = (tmpvar_11 * (tmpvar_1 * unity_Scale.w));
  mediump vec3 tmpvar_13;
  mediump vec4 normal_14;
  normal_14 = tmpvar_12;
  highp float vC_15;
  mediump vec3 x3_16;
  mediump vec3 x2_17;
  mediump vec3 x1_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAr, normal_14);
  x1_18.x = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAg, normal_14);
  x1_18.y = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAb, normal_14);
  x1_18.z = tmpvar_21;
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_14.xyzz * normal_14.yzzx);
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBr, tmpvar_22);
  x2_17.x = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBg, tmpvar_22);
  x2_17.y = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBb, tmpvar_22);
  x2_17.z = tmpvar_25;
  mediump float tmpvar_26;
  tmpvar_26 = ((normal_14.x * normal_14.x) - (normal_14.y * normal_14.y));
  vC_15 = tmpvar_26;
  highp vec3 tmpvar_27;
  tmpvar_27 = (unity_SHC.xyz * vC_15);
  x3_16 = tmpvar_27;
  tmpvar_13 = ((x1_18 + x2_17) + x3_16);
  tmpvar_2 = tmpvar_13;
  gl_Position = tmpvar_7;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = o_8;
  xlv_TEXCOORD2 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec4 c_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  c_4 = tmpvar_6;
  lowp float x_7;
  x_7 = (c_4.w - _Cutoff);
  if ((x_7 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_9.w;
  highp vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_9.xyz + xlv_TEXCOORD2);
  light_3.xyz = tmpvar_10;
  lowp vec4 c_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (c_4.xyz * light_3.xyz);
  c_11.xyz = tmpvar_12;
  c_11.w = c_4.w;
  c_2 = c_11;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES


#ifdef VERTEX

varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp vec4 unity_Scale;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = normalize(_glesNormal);
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = _glesVertex;
  highp float t_4;
  highp float tmpvar_5;
  tmpvar_5 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_6;
  tmpvar_6 = (_Time * _WaveSpeed).x;
  t_4 = tmpvar_6;
  if ((tmpvar_6 < 0.0)) {
    t_4 = (tmpvar_6 * -1.0);
  };
  tmpvar_3.x = (_glesVertex.x + (((sin(((t_4 * 1.45) + tmpvar_5)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_3.y = ((((sin(((t_4 * 3.12) + tmpvar_5)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_3.z = (_glesVertex.z - (((sin(((t_4 * 2.2) + tmpvar_5)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_mvp * tmpvar_3);
  highp vec4 o_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (tmpvar_7 * 0.5);
  highp vec2 tmpvar_10;
  tmpvar_10.x = tmpvar_9.x;
  tmpvar_10.y = (tmpvar_9.y * _ProjectionParams.x);
  o_8.xy = (tmpvar_10 + tmpvar_9.w);
  o_8.zw = tmpvar_7.zw;
  mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = (tmpvar_11 * (tmpvar_1 * unity_Scale.w));
  mediump vec3 tmpvar_13;
  mediump vec4 normal_14;
  normal_14 = tmpvar_12;
  highp float vC_15;
  mediump vec3 x3_16;
  mediump vec3 x2_17;
  mediump vec3 x1_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAr, normal_14);
  x1_18.x = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAg, normal_14);
  x1_18.y = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAb, normal_14);
  x1_18.z = tmpvar_21;
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_14.xyzz * normal_14.yzzx);
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBr, tmpvar_22);
  x2_17.x = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBg, tmpvar_22);
  x2_17.y = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBb, tmpvar_22);
  x2_17.z = tmpvar_25;
  mediump float tmpvar_26;
  tmpvar_26 = ((normal_14.x * normal_14.x) - (normal_14.y * normal_14.y));
  vC_15 = tmpvar_26;
  highp vec3 tmpvar_27;
  tmpvar_27 = (unity_SHC.xyz * vC_15);
  x3_16 = tmpvar_27;
  tmpvar_13 = ((x1_18 + x2_17) + x3_16);
  tmpvar_2 = tmpvar_13;
  gl_Position = tmpvar_7;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = o_8;
  xlv_TEXCOORD2 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _LightBuffer;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec4 c_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  c_4 = tmpvar_6;
  lowp float x_7;
  x_7 = (c_4.w - _Cutoff);
  if ((x_7 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_9 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_9.w;
  highp vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_9.xyz + xlv_TEXCOORD2);
  light_3.xyz = tmpvar_10;
  lowp vec4 c_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (c_4.xyz * light_3.xyz);
  c_11.xyz = tmpvar_12;
  c_11.w = c_4.w;
  c_2 = c_11;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "d3d11_9x " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 128 // 96 used size, 9 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 0 [_Time] 4
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityLighting" 720 // 720 used size, 17 vars
Vector 608 [unity_SHAr] 4
Vector 624 [unity_SHAg] 4
Vector 640 [unity_SHAb] 4
Vector 656 [unity_SHBr] 4
Vector 672 [unity_SHBg] 4
Vector 688 [unity_SHBb] 4
Vector 704 [unity_SHC] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 41 instructions, 4 temp regs, 0 temp arrays:
// ALU 36 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecedifmokmgejgoemkigbaiigdepneekibahabaaaaaaamamaaaaaeaaaaaa
daaaaaaaoaaeaaaalmakaaaaiealaaaaebgpgodjkiaeaaaakiaeaaaaaaacpopp
cmaeaaaahmaaaaaaahaaceaaaaaahiaaaaaahiaaaaaaceaaabaahiaaaaaaaeaa
acaaabaaaaaaaaaaabaaaaaaabaaadaaaaaaaaaaabaaafaaabaaaeaaaaaaaaaa
acaacgaaahaaafaaaaaaaaaaadaaaaaaaeaaamaaaaaaaaaaadaaamaaadaabaaa
aaaaaaaaadaabeaaabaabdaaaaaaaaaaaaaaaaaaaaacpoppfbaaaaafbeaaapka
jkjjljdpbekoeheamnmmameaggggggdpfbaaaaafbfaaapkaaaaaaaaaaaaaaama
idpjccdoaaaaaadpfbaaaaafbgaaapkanlapmjeanlapejmamnmmemdoaaaaiadp
fbaaaaafbhaaapkaabannalfgballglhklkkckdlijiiiidjfbaaaaafbiaaapka
klkkkklmaaaaaaloaaaaiadpaaaaaadpbpaaaaacafaaaaiaaaaaapjabpaaaaac
afaaaciaacaaapjabpaaaaacafaaadiaadaaapjaaeaaaaaeaaaaadoaadaaoeja
acaaoekaacaaookaabaaaaacaaaaabiaabaaaakaafaaaaadaaaaabiaaaaaaaia
adaaaakaamaaaaadaaaaaciaaaaaaaiabfaaaakaafaaaaadaaaaaciaaaaaffia
aaaaaaiaaeaaaaaeaaaaabiaaaaaffiabfaaffkaaaaaaaiaacaaaaadaaaaacia
aaaaffjaaaaaaajaacaaaaadaaaaaciaaaaaffiaaaaakkjaaeaaaaaeaaaaahia
aaaaaaiabeaaoekaaaaaffiaaeaaaaaeaaaaahiaaaaaoeiabfaakkkabfaappka
bdaaaaacaaaaahiaaaaaoeiaaeaaaaaeaaaaahiaaaaaoeiabgaaaakabgaaffka
cfaaaaaeabaaaciaaaaaffiabhaaoekabiaaoekaafaaaaadaaaaaciaabaaffia
adaaffjaafaaaaadaaaaaciaaaaaffiaabaaffkaafaaaaadaaaaaiiaadaaaaja
adaaffjaafaaaaadaaaaaiiaaaaappiabeaappkaaeaaaaaeaaaaaciaaaaaffia
bfaappkaaaaappibafaaaaadabaaapiaaaaaffiaanaaoekacfaaaaaeacaaacia
aaaaaaiabhaaoekabiaaoekacfaaaaaeadaaaciaaaaakkiabhaaoekabiaaoeka
afaaaaadaaaaabiaadaaffiaadaaffjaafaaaaadaaaaabiaaaaaaaiaabaaffka
aeaaaaaeaaaaabiaaaaaaaiabgaakkkbaaaakkjaafaaaaadaaaaaciaacaaffia
adaaffjaafaaaaadaaaaaciaaaaaffiaabaaffkaaeaaaaaeaaaaaciaaaaaffia
bfaappkaaaaaaajaaeaaaaaeabaaapiaamaaoekaaaaaffiaabaaoeiaaeaaaaae
aaaaapiaaoaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaapiaapaaoekaaaaappja
aaaaoeiaafaaaaadabaaabiaaaaaffiaaeaaaakaafaaaaadabaaaiiaabaaaaia
bfaappkaafaaaaadabaaafiaaaaapeiabfaappkaacaaaaadabaaadoaabaakkia
abaaomiaafaaaaadabaaahiaacaaoejabdaappkaafaaaaadacaaahiaabaaffia
bbaaoekaaeaaaaaeabaaaliabaaakekaabaaaaiaacaakeiaaeaaaaaeabaaahia
bcaaoekaabaakkiaabaapeiaabaaaaacabaaaiiabgaappkaajaaaaadacaaabia
afaaoekaabaaoeiaajaaaaadacaaaciaagaaoekaabaaoeiaajaaaaadacaaaeia
ahaaoekaabaaoeiaafaaaaadadaaapiaabaacjiaabaakeiaajaaaaadaeaaabia
aiaaoekaadaaoeiaajaaaaadaeaaaciaajaaoekaadaaoeiaajaaaaadaeaaaeia
akaaoekaadaaoeiaacaaaaadacaaahiaacaaoeiaaeaaoeiaafaaaaadabaaacia
abaaffiaabaaffiaaeaaaaaeabaaabiaabaaaaiaabaaaaiaabaaffibaeaaaaae
acaaahoaalaaoekaabaaaaiaacaaoeiaaeaaaaaeaaaaadmaaaaappiaaaaaoeka
aaaaoeiaabaaaaacaaaaammaaaaaoeiaabaaaaacabaaamoaaaaaoeiappppaaaa
fdeieefcneafaaaaeaaaabaahfabaaaafjaaaaaeegiocaaaaaaaaaaaagaaaaaa
fjaaaaaeegiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaacnaaaaaa
fjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagiaaaaacaeaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaa
aaaaaaaaaeaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaa
aaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaa
aaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaa
aaaaaaaaaceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaa
enaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgifcaaaaaaaaaaaaeaaaaaadiaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaa
adaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaa
aaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakccaabaaa
aaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaa
dcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaa
fgafbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaa
egiacaaaaaaaaaaaafaaaaaaogikcaaaaaaaaaaaafaaaaaadiaaaaaiccaabaaa
aaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaa
abaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadp
dgaaaaafmccabaaaacaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaacaaaaaa
kgakbaaaabaaaaaamgaabaaaabaaaaaadiaaaaaihcaabaaaaaaaaaaaegbcbaaa
acaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaa
aaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaaaaaaaaaegiicaaa
adaaaaaaamaaaaaaagaabaaaaaaaaaaaegaibaaaabaaaaaadcaaaaakhcaabaaa
aaaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaaaaaaaaaegadbaaaaaaaaaaa
dgaaaaaficaabaaaaaaaaaaaabeaaaaaaaaaiadpbbaaaaaibcaabaaaabaaaaaa
egiocaaaacaaaaaacgaaaaaaegaobaaaaaaaaaaabbaaaaaiccaabaaaabaaaaaa
egiocaaaacaaaaaachaaaaaaegaobaaaaaaaaaaabbaaaaaiecaabaaaabaaaaaa
egiocaaaacaaaaaaciaaaaaaegaobaaaaaaaaaaadiaaaaahpcaabaaaacaaaaaa
jgacbaaaaaaaaaaaegakbaaaaaaaaaaabbaaaaaibcaabaaaadaaaaaaegiocaaa
acaaaaaacjaaaaaaegaobaaaacaaaaaabbaaaaaiccaabaaaadaaaaaaegiocaaa
acaaaaaackaaaaaaegaobaaaacaaaaaabbaaaaaiecaabaaaadaaaaaaegiocaaa
acaaaaaaclaaaaaaegaobaaaacaaaaaaaaaaaaahhcaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaaaadaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaa
bkaabaaaaaaaaaaadcaaaaakbcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaa
aaaaaaaabkaabaiaebaaaaaaaaaaaaaadcaaaaakhccabaaaadaaaaaaegiccaaa
acaaaaaacmaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadoaaaaabejfdeheo
maaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaa
apapaaaakbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakjaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaalaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaadaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaa
apaaaaaaljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdej
feejepeoaafeebeoehefeofeaaeoepfcenebemaafeeffiedepepfceeaaedepem
epfcaaklepfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaaaaaaaaaaabaaaaaa
adaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaa
adamaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaaheaaaaaa
acaaaaaaaaaaaaaaadaaaaaaadaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklkl"
}

SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec4 screen;
    highp vec3 vlight;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 425
uniform highp vec4 _MainTex_ST;
#line 437
uniform sampler2D _LightBuffer;
uniform lowp vec4 unity_Ambient;
uniform lowp float _Cutoff;
#line 284
highp vec4 ComputeScreenPos( in highp vec4 pos ) {
    #line 286
    highp vec4 o = (pos * 0.5);
    o.xy = (vec2( o.x, (o.y * _ProjectionParams.x)) + o.w);
    o.zw = pos.zw;
    return o;
}
#line 137
mediump vec3 ShadeSH9( in mediump vec4 normal ) {
    mediump vec3 x1;
    mediump vec3 x2;
    mediump vec3 x3;
    x1.x = dot( unity_SHAr, normal);
    #line 141
    x1.y = dot( unity_SHAg, normal);
    x1.z = dot( unity_SHAb, normal);
    mediump vec4 vB = (normal.xyzz * normal.yzzx);
    x2.x = dot( unity_SHBr, vB);
    #line 145
    x2.y = dot( unity_SHBg, vB);
    x2.z = dot( unity_SHBb, vB);
    highp float vC = ((normal.x * normal.x) - (normal.y * normal.y));
    x3 = (unity_SHC.xyz * vC);
    #line 149
    return ((x1 + x2) + x3);
}
#line 400
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 404
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 408
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 426
v2f_surf vert_surf( in appdata_full v ) {
    v2f_surf o;
    #line 429
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    o.screen = ComputeScreenPos( o.pos);
    #line 433
    highp vec3 worldN = (mat3( _Object2World) * (v.normal * unity_Scale.w));
    o.vlight = ShadeSH9( vec4( worldN, 1.0));
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec4(xl_retval.screen);
    xlv_TEXCOORD2 = vec3(xl_retval.vlight);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec4 screen;
    highp vec3 vlight;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 425
uniform highp vec4 _MainTex_ST;
#line 437
uniform sampler2D _LightBuffer;
uniform lowp vec4 unity_Ambient;
uniform lowp float _Cutoff;
#line 346
lowp vec4 LightingLambert_PrePass( in SurfaceOutput s, in mediump vec4 light ) {
    lowp vec4 c;
    c.xyz = (s.Albedo * light.xyz);
    #line 350
    c.w = s.Alpha;
    return c;
}
#line 411
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 413
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 440
lowp vec4 frag_surf( in v2f_surf IN ) {
    #line 442
    Input surfIN;
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    #line 446
    o.Emission = vec3( 0.0);
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    #line 450
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    mediump vec4 light = textureProj( _LightBuffer, IN.screen);
    light = max( light, vec4( 0.001));
    #line 454
    light.xyz += IN.vlight;
    mediump vec4 c = LightingLambert_PrePass( o, light);
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.screen = vec4(xlv_TEXCOORD1);
    xlt_IN.vlight = vec3(xlv_TEXCOORD2);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "opengl " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 13 [_Time]
Vector 14 [_ProjectionParams]
Vector 15 [unity_ShadowFadeCenterAndType]
Matrix 9 [_Object2World]
Float 16 [_WaveSpeed]
Float 17 [_Amplitude]
Vector 18 [unity_LightmapST]
Vector 19 [_MainTex_ST]
"!!ARBvp1.0
# 84 ALU
PARAM c[25] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.modelview[0],
		state.matrix.mvp,
		program.local[9..19],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[16];
MUL R0.x, R0, c[13];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[20];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[21].xyxw, c[21].zwzw;
MAD R1.xyz, R1, R0, c[22].xyxw;
MAD R1.xyz, R1, R0, c[22].zwzw;
MAD R1.xyz, R1, R0, c[23].xyxw;
MAD R0.xyz, R1, R0, c[20].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[23].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[20].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[24].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[17];
MAD R0.w, -R0.x, c[24].x, vertex.position.z;
MAD R0.x, R1.w, c[24].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[20];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[21].xyxw, c[21].zwzw;
MAD R3.xyz, R2, R0, c[22].xyxw;
MAD R3.xyz, R3, R0, c[22].zwzw;
MAD R3.xyz, R3, R0, c[23].xyxw;
ADD R1.xyz, -R1.w, c[20];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[21].xyxw, c[21].zwzw;
MAD R2.xyz, R2, R1, c[22].xyxw;
MAD R2.xyz, R2, R1, c[22].zwzw;
MAD R3.xyz, R3, R0, c[20].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[23].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[20].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[23].xyxw;
MAD R1.xyz, R0, R1, c[20].wzww;
SGE R0.yz, R1.w, c[23].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[20].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R0.x, R0, c[17];
MUL R0.y, -R0, c[24].z;
MAD R0.y, R0.x, c[20], R0;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R2.w, c[17];
MAD R0.x, R0, c[20].y, vertex.position;
DP4 R1.w, R0.xywz, c[8];
DP4 R1.z, R0.xywz, c[7];
DP4 R1.x, R0.xywz, c[5];
DP4 R1.y, R0.xywz, c[6];
MUL R2.xyz, R1.xyww, c[20].y;
MOV result.position, R1;
MUL R2.y, R2, c[14].x;
MOV result.texcoord[1].zw, R1;
DP4 R1.x, R0.xywz, c[9];
DP4 R1.z, R0.xywz, c[11];
DP4 R1.y, R0.xywz, c[10];
ADD result.texcoord[1].xy, R2, R2.z;
ADD R2.xyz, R1, -c[15];
MOV R1.x, c[20].z;
ADD R1.x, R1, -c[15].w;
DP4 R0.x, R0.xywz, c[3];
MUL result.texcoord[3].xyz, R2, c[15].w;
MUL result.texcoord[3].w, -R0.x, R1.x;
MAD result.texcoord[0].xy, vertex.texcoord[0], c[19], c[19].zwzw;
MAD result.texcoord[2].xy, vertex.texcoord[1], c[18], c[18].zwzw;
END
# 84 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 0 [glstate_matrix_modelview0]
Matrix 4 [glstate_matrix_mvp]
Vector 12 [_Time]
Vector 13 [_ProjectionParams]
Vector 14 [_ScreenParams]
Vector 15 [unity_ShadowFadeCenterAndType]
Matrix 8 [_Object2World]
Float 16 [_WaveSpeed]
Float 17 [_Amplitude]
Vector 18 [unity_LightmapST]
Vector 19 [_MainTex_ST]
"vs_2_0
; 84 ALU
def c20, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c21, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c22, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c23, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c24, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_texcoord0 v3
dcl_texcoord1 v4
add r0.w, v0.x, v0.y
mov r0.x, c12
mul r0.x, c16, r0
slt r0.y, r0.x, c22.x
max r0.y, -r0, r0
slt r0.y, c22.x, r0
add r0.z, -r0.y, c20
mul r0.z, r0.x, r0
mov r1.w, v0
mad r1.y, r0, -r0.x, r0.z
add r1.x, r0.w, v0.z
mad r0.x, r1.y, c22.y, r1
mad r0.x, r0, c22.z, c22.w
frc r0.x, r0
mad r1.z, r0.x, c23.x, c23.y
sincos r0.xy, r1.z, c21.xyzw, c20.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1, c24.x, r1.x
mul r0.x, r0, c17
mad r1.z, -r0.x, c24.y, v0
mad r0.x, r1.y, c23.z, r1
mad r0.x, r0, c22.z, c22.w
mad r0.y, r0, c22.z, c22.w
frc r0.y, r0
mad r1.y, r0, c23.x, c23
frc r1.x, r0
sincos r0.xy, r1.y, c21.xyzw, c20.xyzw
mad r0.x, r1, c23, c23.y
sincos r2.xy, r0.x, c21.xyzw, c20.xyzw
mul r0.z, v3.y, r0.y
mul r0.x, v3.y, r2.y
mul r0.y, v3, v3.x
mul r0.y, -r0, c23.w
mul r0.x, r0, c17
mad r1.y, r0.x, c20.w, r0
mul r0.x, r0.z, c17
mad r1.x, r0, c20.w, v0
dp4 r0.w, r1, c7
dp4 r0.z, r1, c6
dp4 r0.x, r1, c4
dp4 r0.y, r1, c5
mul r2.xyz, r0.xyww, c20.w
mov oPos, r0
mov oT1.zw, r0
mul r2.y, r2, c13.x
dp4 r0.z, r1, c10
dp4 r0.x, r1, c8
dp4 r0.y, r1, c9
add r0.xyz, r0, -c15
mul oT3.xyz, r0, c15.w
mov r0.w, c15
add r0.y, c20.z, -r0.w
dp4 r0.x, r1, c2
mad oT1.xy, r2.z, c14.zwzw, r2
mul oT3.w, -r0.x, r0.y
mad oT0.xy, v3, c19, c19.zwzw
mad oT2.xy, v4, c18, c18.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Float 17 [_Amplitude]
Vector 19 [_MainTex_ST]
Matrix 12 [_Object2World] 4
Vector 1 [_ProjectionParams]
Vector 2 [_ScreenParams]
Vector 0 [_Time]
Float 16 [_WaveSpeed]
Matrix 8 [glstate_matrix_modelview0] 4
Matrix 4 [glstate_matrix_mvp] 4
Vector 18 [unity_LightmapST]
Vector 3 [unity_ShadowFadeCenterAndType]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 46.67-48.00 (35-36 instructions), vertex: 32, texture: 0,
//   sequencer: 20,  7 GPRs, 27 threads,
// Performance (if enough threads): ~46-48 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacjiaaaaacfmaaaaaaaaaaaaaaceaaaaacbiaaaaaceaaaaaaaaa
aaaaaaaaaaaaabpaaaaaaabmaaaaaboepppoadaaaaaaaaalaaaaaabmaaaaaaaa
aaaaabnnaaaaaapiaaacaabbaaabaaaaaaaaabaeaaaaaaaaaaaaabbeaaacaabd
aaabaaaaaaaaabcaaaaaaaaaaaaaabdaaaacaaamaaaeaaaaaaaaabeaaaaaaaaa
aaaaabfaaaacaaabaaabaaaaaaaaabcaaaaaaaaaaaaaabgcaaacaaacaaabaaaa
aaaaabcaaaaaaaaaaaaaabhaaaacaaaaaaabaaaaaaaaabcaaaaaaaaaaaaaabhg
aaacaabaaaabaaaaaaaaabaeaaaaaaaaaaaaabibaaacaaaiaaaeaaaaaaaaabea
aaaaaaaaaaaaabjlaaacaaaeaaaeaaaaaaaaabeaaaaaaaaaaaaaabkoaaacaabc
aaabaaaaaaaaabcaaaaaaaaaaaaaablpaaacaaadaaabaaaaaaaaabcaaaaaaaaa
fpebgnhagmgjhehfgegfaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaafpengbgj
gofegfhifpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpepgcgkgfgdhedc
fhgphcgmgeaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpfahcgpgkgfgdhe
gjgpgofagbhcgbgnhdaafpfdgdhcgfgfgofagbhcgbgnhdaafpfegjgngfaafpfh
gbhggffdhagfgfgeaaghgmhdhegbhegffpgngbhehcgjhifpgngpgegfgmhggjgf
hhdaaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaahfgogjhehjfpemgjghgi
hegngbhafdfeaahfgogjhehjfpfdgigbgegphheggbgegfedgfgohegfhcebgoge
fehjhagfaahghdfpddfpdaaadccodacodcdadddfddcodaaaaaaaaaaaaaaaaaab
aaaaaaaaaaaaaaaaaaaaaabeaapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaeaaaaaacbmaadbaaagaaaaaaaaaaaaaaaaaaaadaieaaaaaaabaaaaaaad
aaaaaaafaaaaacjaaabaaaafaaaafaagaacbfaahaaaadafaaaabpbfbaaaddcfc
aaaepdfdaaaabacfaaaaaaceaaaabaclaaaabacgaaaabackaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaadoccpjidmaejapnldpiaaaaaaaaaaaaadpaaaaaadoemmmmn
eamjapnldpggggggdpljjjjkeaehkobeeaammmmnlpiaaaaahajfgaafbaalbaaa
fgaaaaaaaaaaaaaagaammcaabcaaaaaaaaaagabcgabibcaabcaaaaaaaaaaaaaa
gabomeaabcaaaaaaaaaagacecackbcaaccaaaaaaafpicaaaaaaaagiiaaaaaaaa
afpibaaaaaaaacdpaaaaaaaaafpibaaaaaaaapmiaaaaaaaamiacaaaaaagmblaa
cbaappaamiabaaaaaagmgmaacbaabaaaheaeaaaaablomggmlaacpnaakibaaaaa
biaaaaebmcaaaabamiaiaaadaablmgaaobababaamiahaaaaaagmmamgklaappaa
miahaaaaaamagmgmilaapnpomiahaaadaamaaaaaoiaaaaaamiapaaaaaapimkaa
kbadpoaamianaaaaaaaelbaakaaapnaamacaadaaaaaaaamgocaaaaaamaedadae
aabllablkbabpoaamabcadacaeblmggmcaadpnaamiahaaadaalmmaaaobaeadaa
mianaaaaaapagmaakbadbbaamiabaaaaaagmgmaaoaaaacaabeapaaadaablaamg
kbacahaaaeciaaaaafblmglboaaaacaamiapaaadaablnanaklaaagadmiapaaad
aalbdepiklaaafadmiapaaafaagmnajeklaaaeadmiapiadoaananaaaocafafaa
kiiiagaeaalbmgmaibaaajaikibhaeadaablmaedibacapaokichaeagaalblemd
ibaaanaomiahaaagaagmmaleklaaamagkiehaeaaaamagmidibafpoaokiipadae
aadeaamdmaagaeakmiamiaabaanlnlaaocafafaamiadiaaaaabklabkilabbdbd
miadiaacaalalabkilabbcbckiipaaabaadeaaebmaaeadabmiaiaaabaablmgbl
klacalabbeahaaabadmamablkaabadabamihiaadaamabllbkbabadacmiadiaab
aamgbkbiklaaacaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Matrix 256 [glstate_matrix_modelview0]
Matrix 260 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 467 [_Time]
Vector 466 [_ProjectionParams]
Vector 465 [unity_ShadowFadeCenterAndType]
Matrix 264 [_Object2World]
Float 464 [_WaveSpeed]
Float 463 [_Amplitude]
Vector 462 [unity_LightmapST]
Vector 461 [_MainTex_ST]
"sce_vp_rsx // 41 instructions using 4 registers
[Configuration]
8
0000002903010400
[Defaults]
2
460 4
400ccccd3e4ccccd4047ae143f000000
459 3
3f6666663fb9999a3f800000
[Microcode]
656
401f9c6c011cd808010400d740619f9c401f9c6c011ce908010400d740619fa4
00009c6c0040007f8106c08360403ffc00001c6c005cb0550186c08360411ffc
00001c6c00c000000106c08aa0409ffc00001c6c005d00000186c08360405ffc
00001c6c009d3055008000c360405ffc201fdc6c004000550086c08360411ffc
00009c6c00c000550106c08aa0211ffc00001c6c004000550086c08360409ffc
00002400004000d50086c08360409ffc00001c6c011cc02a808080c000a07ffc
00001c6c011cb02a809540c000a09ffc00009c6c7880082a8100009fe023007c
00009c6c789cb080028000d54025007c00011c6c7880082a813fc04aa02900fc
00001c6c008008550095408360405ffc00001c6c0080082a8115414360409ffc
00001c6c009cf02a808000c360409ffc00001c6c009cf055008000c360405ffc
00001c6c009cf000048000c360403ffc00009c6c011cc07f80bfc0c000a09ffc
00009c6c011cc0d5009540d540405ffc00009c6c011cc02a80bfc0c000411ffc
00019c6c00dd10ff8186c08000211ffc00011c6c01d0200d8286c0c360403ffc
00001c6c01d0700d8286c0c360403ffc00001c6c01d0600d8286c0c360405ffc
00001c6c01d0500d8286c0c360409ffc00001c6c01d0400d8286c0c360411ffc
00011c6c01d0a00d8286c0c360405ffc00011c6c01d0900d8286c0c360409ffc
00011c6c01d0800d8286c0c360411ffc00009c6c00dd108c0186c0830121dffc
401f9c6c0040000d8086c0836041ff80401f9c6c004000558086c08360407fa0
401f9c6c008000ff8480034360403fa800001c6c009cc00e00bfc0c36041dffc
401f9c6c009d100c02bfc0c36041dfa800001c6c009d202a808000c360409ffc
401f9c6c00c000080086c09540219fa1
"
}

SubProgram "d3d11 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "color" Color
ConstBuffer "$Globals" 160 // 112 used size, 11 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [unity_LightmapST] 4
Vector 96 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 0 [_Time] 4
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityShadows" 416 // 416 used size, 8 vars
Vector 400 [unity_ShadowFadeCenterAndType] 4
ConstBuffer "UnityPerDraw" 336 // 256 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 64 [glstate_matrix_modelview0] 4
Matrix 192 [_Object2World] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityShadows" 2
BindCB "UnityPerDraw" 3
// 39 instructions, 3 temp regs, 0 temp arrays:
// ALU 35 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedkjohckaddpkfeijjkiihjoaellglollpabaaaaaaheahaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaimaaaaaaacaaaaaaaaaaaaaa
adaaaaaaabaaaaaaamadaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apaaaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaadaaaaaaapaaaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcniafaaaaeaaaabaa
hgabaaaafjaaaaaeegiocaaaaaaaaaaaahaaaaaafjaaaaaeegiocaaaabaaaaaa
agaaaaaafjaaaaaeegiocaaaacaaaaaabkaaaaaafjaaaaaeegiocaaaadaaaaaa
baaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaaddcbabaaaadaaaaaafpaaaaad
dcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadmccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaad
pccabaaaadaaaaaagiaaaaacadaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaa
aaaaaaaaaeaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaa
aaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaa
aaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaa
aaaaaaaaaceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaa
enaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgifcaaaaaaaaaaaaeaaaaaadiaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaa
adaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaa
aaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakecaabaaa
aaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaa
dcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaacaaaaaa
kgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
adaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaabaaaaaadgaaaaafpccabaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaa
egiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaadcaaaaalmccabaaa
abaaaaaaagbebaaaaeaaaaaaagiecaaaaaaaaaaaafaaaaaakgiocaaaaaaaaaaa
afaaaaaadiaaaaaiicaabaaaaaaaaaaabkaabaaaabaaaaaaakiacaaaabaaaaaa
afaaaaaadiaaaaahicaabaaaacaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaaadp
diaaaaakfcaabaaaacaaaaaaagadbaaaabaaaaaaaceaaaaaaaaaaadpaaaaaaaa
aaaaaadpaaaaaaaadgaaaaafmccabaaaacaaaaaakgaobaaaabaaaaaaaaaaaaah
dccabaaaacaaaaaakgakbaaaacaaaaaamgaabaaaacaaaaaadiaaaaaihcaabaaa
abaaaaaafgafbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadiaaaaaiccaabaaa
aaaaaaaabkaabaaaaaaaaaaackiacaaaadaaaaaaafaaaaaadcaaaaakccaabaaa
aaaaaaaackiacaaaadaaaaaaaeaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaa
dcaaaaakhcaabaaaabaaaaaaegiccaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaadaaaaaaaoaaaaaa
kgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakbcaabaaaaaaaaaaackiacaaa
adaaaaaaagaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaadcaaaaakbcaabaaa
aaaaaaaackiacaaaadaaaaaaahaaaaaadkbabaaaaaaaaaaaakaabaaaaaaaaaaa
dcaaaaakocaabaaaaaaaaaaaagijcaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaa
agajbaaaabaaaaaaaaaaaaajocaabaaaaaaaaaaafgaobaaaaaaaaaaaagijcaia
ebaaaaaaacaaaaaabjaaaaaadiaaaaaihccabaaaadaaaaaajgahbaaaaaaaaaaa
pgipcaaaacaaaaaabjaaaaaaaaaaaaajccaabaaaaaaaaaaadkiacaiaebaaaaaa
acaaaaaabjaaaaaaabeaaaaaaaaaiadpdiaaaaaiiccabaaaadaaaaaabkaabaaa
aaaaaaaaakaabaiaebaaaaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES


#ifdef VERTEX

varying highp vec4 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = _glesVertex;
  highp float t_3;
  highp float tmpvar_4;
  tmpvar_4 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_5;
  tmpvar_5 = (_Time * _WaveSpeed).x;
  t_3 = tmpvar_5;
  if ((tmpvar_5 < 0.0)) {
    t_3 = (tmpvar_5 * -1.0);
  };
  tmpvar_2.x = (_glesVertex.x + (((sin(((t_3 * 1.45) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_2.y = ((((sin(((t_3 * 3.12) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_2.z = (_glesVertex.z - (((sin(((t_3 * 2.2) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_mvp * tmpvar_2);
  highp vec4 o_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (tmpvar_6 * 0.5);
  highp vec2 tmpvar_9;
  tmpvar_9.x = tmpvar_8.x;
  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
  o_7.xy = (tmpvar_9 + tmpvar_8.w);
  o_7.zw = tmpvar_6.zw;
  tmpvar_1.xyz = (((_Object2World * tmpvar_2).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_1.w = (-((glstate_matrix_modelview0 * tmpvar_2).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_6;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = o_7;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = tmpvar_1;
}



#endif
#ifdef FRAGMENT

varying highp vec4 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform highp vec4 unity_LightmapFade;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_Lightmap;
uniform sampler2D _LightBuffer;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec4 c_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * _Color);
  c_7 = tmpvar_9;
  lowp float x_10;
  x_10 = (c_7.w - _Cutoff);
  if ((x_10 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_6 = tmpvar_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = max (light_6, vec4(0.001, 0.001, 0.001, 0.001));
  light_6.w = tmpvar_12.w;
  highp float tmpvar_13;
  tmpvar_13 = ((sqrt(dot (xlv_TEXCOORD3, xlv_TEXCOORD3)) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_13;
  lowp vec3 tmpvar_14;
  tmpvar_14 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lmFull_4 = tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD2).xyz);
  lmIndirect_3 = tmpvar_15;
  light_6.xyz = (tmpvar_12.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_16;
  mediump vec3 tmpvar_17;
  tmpvar_17 = (c_7.xyz * light_6.xyz);
  c_16.xyz = tmpvar_17;
  c_16.w = c_7.w;
  c_2 = c_16;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES


#ifdef VERTEX

varying highp vec4 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = _glesVertex;
  highp float t_3;
  highp float tmpvar_4;
  tmpvar_4 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_5;
  tmpvar_5 = (_Time * _WaveSpeed).x;
  t_3 = tmpvar_5;
  if ((tmpvar_5 < 0.0)) {
    t_3 = (tmpvar_5 * -1.0);
  };
  tmpvar_2.x = (_glesVertex.x + (((sin(((t_3 * 1.45) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_2.y = ((((sin(((t_3 * 3.12) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_2.z = (_glesVertex.z - (((sin(((t_3 * 2.2) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_mvp * tmpvar_2);
  highp vec4 o_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (tmpvar_6 * 0.5);
  highp vec2 tmpvar_9;
  tmpvar_9.x = tmpvar_8.x;
  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
  o_7.xy = (tmpvar_9 + tmpvar_8.w);
  o_7.zw = tmpvar_6.zw;
  tmpvar_1.xyz = (((_Object2World * tmpvar_2).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_1.w = (-((glstate_matrix_modelview0 * tmpvar_2).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_6;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = o_7;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = tmpvar_1;
}



#endif
#ifdef FRAGMENT

varying highp vec4 xlv_TEXCOORD3;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform highp vec4 unity_LightmapFade;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_Lightmap;
uniform sampler2D _LightBuffer;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec4 c_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * _Color);
  c_7 = tmpvar_9;
  lowp float x_10;
  x_10 = (c_7.w - _Cutoff);
  if ((x_10 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_6 = tmpvar_11;
  mediump vec4 tmpvar_12;
  tmpvar_12 = max (light_6, vec4(0.001, 0.001, 0.001, 0.001));
  light_6.w = tmpvar_12.w;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (unity_Lightmap, xlv_TEXCOORD2);
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (unity_LightmapInd, xlv_TEXCOORD2);
  highp float tmpvar_15;
  tmpvar_15 = ((sqrt(dot (xlv_TEXCOORD3, xlv_TEXCOORD3)) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_15;
  lowp vec3 tmpvar_16;
  tmpvar_16 = ((8.0 * tmpvar_13.w) * tmpvar_13.xyz);
  lmFull_4 = tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = ((8.0 * tmpvar_14.w) * tmpvar_14.xyz);
  lmIndirect_3 = tmpvar_17;
  light_6.xyz = (tmpvar_12.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = (c_7.xyz * light_6.xyz);
  c_18.xyz = tmpvar_19;
  c_18.w = c_7.w;
  c_2 = c_18;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "d3d11_9x " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "color" Color
ConstBuffer "$Globals" 160 // 112 used size, 11 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [unity_LightmapST] 4
Vector 96 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 0 [_Time] 4
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityShadows" 416 // 416 used size, 8 vars
Vector 400 [unity_ShadowFadeCenterAndType] 4
ConstBuffer "UnityPerDraw" 336 // 256 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 64 [glstate_matrix_modelview0] 4
Matrix 192 [_Object2World] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityShadows" 2
BindCB "UnityPerDraw" 3
// 39 instructions, 3 temp regs, 0 temp arrays:
// ALU 35 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecedjcgoacknjajcnhoflbkopajbgbhjcnjiabaaaaaaaiamaaaaaeaaaaaa
daaaaaaamaaeaaaakaakaaaagialaaaaebgpgodjiiaeaaaaiiaeaaaaaaacpopp
biaeaaaahaaaaaaaagaaceaaaaaagmaaaaaagmaaaaaaceaaabaagmaaaaaaaeaa
adaaabaaaaaaaaaaabaaaaaaabaaaeaaaaaaaaaaabaaafaaabaaafaaaaaaaaaa
acaabjaaabaaagaaaaaaaaaaadaaaaaaaiaaahaaaaaaaaaaadaaamaaaeaaapaa
aaaaaaaaaaaaaaaaaaacpoppfbaaaaafbdaaapkajkjjljdpbekoeheamnmmamea
ggggggdpfbaaaaafbeaaapkaaaaaaaaaaaaaaamaidpjccdoaaaaaadpfbaaaaaf
bfaaapkanlapmjeanlapejmamnmmemdoaaaaiadpfbaaaaafbgaaapkaabannalf
gballglhklkkckdlijiiiidjfbaaaaafbhaaapkaklkkkklmaaaaaaloaaaaiadp
aaaaaadpbpaaaaacafaaaaiaaaaaapjabpaaaaacafaaadiaadaaapjabpaaaaac
afaaaeiaaeaaapjaaeaaaaaeaaaaadoaadaaoejaadaaoekaadaaookaabaaaaac
aaaaabiaabaaaakaafaaaaadaaaaabiaaaaaaaiaaeaaaakaamaaaaadaaaaacia
aaaaaaiabeaaaakaafaaaaadaaaaaciaaaaaffiaaaaaaaiaaeaaaaaeaaaaabia
aaaaffiabeaaffkaaaaaaaiaacaaaaadaaaaaciaaaaaffjaaaaaaajaacaaaaad
aaaaaciaaaaaffiaaaaakkjaaeaaaaaeaaaaahiaaaaaaaiabdaaoekaaaaaffia
aeaaaaaeaaaaahiaaaaaoeiabeaakkkabeaappkabdaaaaacaaaaahiaaaaaoeia
aeaaaaaeaaaaahiaaaaaoeiabfaaaakabfaaffkacfaaaaaeabaaaciaaaaaffia
bgaaoekabhaaoekaafaaaaadaaaaaciaabaaffiaadaaffjaafaaaaadaaaaacia
aaaaffiaabaaffkaafaaaaadaaaaaiiaadaaaajaadaaffjaafaaaaadaaaaaiia
aaaappiabdaappkaaeaaaaaeaaaaaciaaaaaffiabeaappkaaaaappibafaaaaad
abaaapiaaaaaffiaaiaaoekacfaaaaaeacaaaciaaaaaaaiabgaaoekabhaaoeka
cfaaaaaeadaaaciaaaaakkiabgaaoekabhaaoekaafaaaaadaaaaabiaadaaffia
adaaffjaafaaaaadaaaaabiaaaaaaaiaabaaffkaaeaaaaaeaaaaabiaaaaaaaia
bfaakkkbaaaakkjaafaaaaadaaaaaeiaacaaffiaadaaffjaafaaaaadaaaaaeia
aaaakkiaabaaffkaaeaaaaaeaaaaaeiaaaaakkiabeaappkaaaaaaajaaeaaaaae
abaaapiaahaaoekaaaaakkiaabaaoeiaaeaaaaaeabaaapiaajaaoekaaaaaaaia
abaaoeiaaeaaaaaeabaaapiaakaaoekaaaaappjaabaaoeiaafaaaaadaaaaaiia
abaaffiaafaaaakaafaaaaadacaaaiiaaaaappiabeaappkaafaaaaadacaaafia
abaapeiabeaappkaacaaaaadabaaadoaacaakkiaacaaomiaaeaaaaaeaaaaamoa
aeaabejaacaabekaacaalekaafaaaaadacaaahiaaaaaffiabaaaoekaafaaaaad
aaaaaciaaaaaffiaamaakkkaaeaaaaaeaaaaaciaalaakkkaaaaakkiaaaaaffia
aeaaaaaeacaaahiaapaaoekaaaaakkiaacaaoeiaaeaaaaaeacaaahiabbaaoeka
aaaaaaiaacaaoeiaaeaaaaaeaaaaabiaanaakkkaaaaaaaiaaaaaffiaaeaaaaae
aaaaabiaaoaakkkaaaaappjaaaaaaaiaaeaaaaaeaaaaaoiabcaajakaaaaappja
acaajaiaacaaaaadaaaaaoiaaaaaoeiaagaajakbafaaaaadacaaahoaaaaapjia
agaappkaabaaaaacaaaaaiiabfaappkaacaaaaadaaaaaciaaaaappiaagaappkb
afaaaaadacaaaioaaaaaffiaaaaaaaibaeaaaaaeaaaaadmaabaappiaaaaaoeka
abaaoeiaabaaaaacaaaaammaabaaoeiaabaaaaacabaaamoaabaaoeiappppaaaa
fdeieefcniafaaaaeaaaabaahgabaaaafjaaaaaeegiocaaaaaaaaaaaahaaaaaa
fjaaaaaeegiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaabkaaaaaa
fjaaaaaeegiocaaaadaaaaaabaaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaad
dcbabaaaadaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaadmccabaaaabaaaaaagfaaaaad
pccabaaaacaaaaaagfaaaaadpccabaaaadaaaaaagiaaaaacadaaaaaadiaaaaaj
bcaabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaaakiacaaaabaaaaaaaaaaaaaa
dbaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaak
bcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaa
aaaaaaaaaaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaa
aaaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaam
hcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdpbekoeheamnmmamea
aaaaaaaafgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaa
aaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaa
diaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaaaaaaaaaaaeaaaaaa
diaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaah
icaabaaaaaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaa
aaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaa
diaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaa
dcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaa
aaaaaaaadcaaaaakecaabaaaaaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaa
mnmmemdockbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaa
aaaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaa
egiocaaaadaaaaaaacaaaaaakgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaa
abaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaaldccabaaa
abaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaa
agaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaaeaaaaaaagiecaaaaaaaaaaa
afaaaaaakgiocaaaaaaaaaaaafaaaaaadiaaaaaiicaabaaaaaaaaaaabkaabaaa
abaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaahicaabaaaacaaaaaadkaabaaa
aaaaaaaaabeaaaaaaaaaaadpdiaaaaakfcaabaaaacaaaaaaagadbaaaabaaaaaa
aceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaaaadgaaaaafmccabaaaacaaaaaa
kgaobaaaabaaaaaaaaaaaaahdccabaaaacaaaaaakgakbaaaacaaaaaamgaabaaa
acaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaaadaaaaaa
anaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaaaaaaaaaackiacaaaadaaaaaa
afaaaaaadcaaaaakccaabaaaaaaaaaaackiacaaaadaaaaaaaeaaaaaaakaabaaa
aaaaaaaabkaabaaaaaaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaadaaaaaa
amaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaadaaaaaaaoaaaaaakgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaak
bcaabaaaaaaaaaaackiacaaaadaaaaaaagaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaadcaaaaakbcaabaaaaaaaaaaackiacaaaadaaaaaaahaaaaaadkbabaaa
aaaaaaaaakaabaaaaaaaaaaadcaaaaakocaabaaaaaaaaaaaagijcaaaadaaaaaa
apaaaaaapgbpbaaaaaaaaaaaagajbaaaabaaaaaaaaaaaaajocaabaaaaaaaaaaa
fgaobaaaaaaaaaaaagijcaiaebaaaaaaacaaaaaabjaaaaaadiaaaaaihccabaaa
adaaaaaajgahbaaaaaaaaaaapgipcaaaacaaaaaabjaaaaaaaaaaaaajccaabaaa
aaaaaaaadkiacaiaebaaaaaaacaaaaaabjaaaaaaabeaaaaaaaaaiadpdiaaaaai
iccabaaaadaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaadoaaaaab
ejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
aaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaa
kjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaaahaaaaaalaaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaa
faepfdejfeejepeoaafeebeoehefeofeaaeoepfcenebemaafeeffiedepepfcee
aaedepemepfcaaklepfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaaaaaaaaaa
abaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
abaaaaaaadamaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaabaaaaaaamadaaaa
imaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaaimaaaaaaadaaaaaa
aaaaaaaaadaaaaaaadaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaafeeffied
epepfceeaaklklkl"
}

SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec4 screen;
    highp vec2 lmap;
    highp vec4 lmapFadePos;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 426
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
#line 442
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
uniform lowp vec4 unity_Ambient;
uniform lowp float _Cutoff;
#line 446
#line 284
highp vec4 ComputeScreenPos( in highp vec4 pos ) {
    #line 286
    highp vec4 o = (pos * 0.5);
    o.xy = (vec2( o.x, (o.y * _ProjectionParams.x)) + o.w);
    o.zw = pos.zw;
    return o;
}
#line 400
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 404
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 408
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 428
v2f_surf vert_surf( in appdata_full v ) {
    #line 430
    v2f_surf o;
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    #line 434
    o.screen = ComputeScreenPos( o.pos);
    o.lmap.xy = ((v.texcoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    o.lmapFadePos.xyz = (((_Object2World * v.vertex).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
    o.lmapFadePos.w = ((-(glstate_matrix_modelview0 * v.vertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
    #line 438
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec2 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec4(xl_retval.screen);
    xlv_TEXCOORD2 = vec2(xl_retval.lmap);
    xlv_TEXCOORD3 = vec4(xl_retval.lmapFadePos);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
float xll_saturate_f( float x) {
  return clamp( x, 0.0, 1.0);
}
vec2 xll_saturate_vf2( vec2 x) {
  return clamp( x, 0.0, 1.0);
}
vec3 xll_saturate_vf3( vec3 x) {
  return clamp( x, 0.0, 1.0);
}
vec4 xll_saturate_vf4( vec4 x) {
  return clamp( x, 0.0, 1.0);
}
mat2 xll_saturate_mf2x2(mat2 m) {
  return mat2( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0));
}
mat3 xll_saturate_mf3x3(mat3 m) {
  return mat3( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0));
}
mat4 xll_saturate_mf4x4(mat4 m) {
  return mat4( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0), clamp(m[3], 0.0, 1.0));
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec4 screen;
    highp vec2 lmap;
    highp vec4 lmapFadePos;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 426
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
#line 442
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
uniform lowp vec4 unity_Ambient;
uniform lowp float _Cutoff;
#line 446
#line 177
lowp vec3 DecodeLightmap( in lowp vec4 color ) {
    #line 179
    return (2.0 * color.xyz);
}
#line 346
lowp vec4 LightingLambert_PrePass( in SurfaceOutput s, in mediump vec4 light ) {
    lowp vec4 c;
    c.xyz = (s.Albedo * light.xyz);
    #line 350
    c.w = s.Alpha;
    return c;
}
#line 411
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 413
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 446
lowp vec4 frag_surf( in v2f_surf IN ) {
    Input surfIN;
    surfIN.uv_MainTex = IN.pack0.xy;
    #line 450
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    o.Emission = vec3( 0.0);
    o.Specular = 0.0;
    #line 454
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    #line 458
    mediump vec4 light = textureProj( _LightBuffer, IN.screen);
    light = max( light, vec4( 0.001));
    lowp vec4 lmtex = texture( unity_Lightmap, IN.lmap.xy);
    lowp vec4 lmtex2 = texture( unity_LightmapInd, IN.lmap.xy);
    #line 462
    mediump float lmFade = ((length(IN.lmapFadePos) * unity_LightmapFade.z) + unity_LightmapFade.w);
    mediump vec3 lmFull = DecodeLightmap( lmtex);
    mediump vec3 lmIndirect = DecodeLightmap( lmtex2);
    mediump vec3 lm = mix( lmIndirect, lmFull, vec3( xll_saturate_f(lmFade)));
    #line 466
    light.xyz += lm;
    mediump vec4 c = LightingLambert_PrePass( o, light);
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec2 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.screen = vec4(xlv_TEXCOORD1);
    xlt_IN.lmap = vec2(xlv_TEXCOORD2);
    xlt_IN.lmapFadePos = vec4(xlv_TEXCOORD3);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "opengl " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 5 [_Time]
Vector 6 [_ProjectionParams]
Float 7 [_WaveSpeed]
Float 8 [_Amplitude]
Vector 9 [unity_LightmapST]
Vector 10 [_MainTex_ST]
"!!ARBvp1.0
# 75 ALU
PARAM c[16] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.mvp,
		program.local[5..10],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[7];
MUL R0.x, R0, c[5];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[11];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[12].xyxw, c[12].zwzw;
MAD R1.xyz, R1, R0, c[13].xyxw;
MAD R1.xyz, R1, R0, c[13].zwzw;
MAD R1.xyz, R1, R0, c[14].xyxw;
MAD R0.xyz, R1, R0, c[11].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[14].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[11].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[15].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[8];
MAD R0.w, -R0.x, c[15].x, vertex.position.z;
MAD R0.x, R1.w, c[15].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[11];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[12].xyxw, c[12].zwzw;
MAD R3.xyz, R2, R0, c[13].xyxw;
MAD R3.xyz, R3, R0, c[13].zwzw;
MAD R3.xyz, R3, R0, c[14].xyxw;
ADD R1.xyz, -R1.w, c[11];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[12].xyxw, c[12].zwzw;
MAD R2.xyz, R2, R1, c[13].xyxw;
MAD R2.xyz, R2, R1, c[13].zwzw;
MAD R3.xyz, R3, R0, c[11].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[14].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[11].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[14].xyxw;
MAD R1.xyz, R0, R1, c[11].wzww;
SGE R0.yz, R1.w, c[14].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[11].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R0.x, R0, c[8];
MUL R0.y, -R0, c[15].z;
MAD R0.y, R0.x, c[11], R0;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R2.w, c[8];
MAD R0.x, R0, c[11].y, vertex.position;
DP4 R1.w, R0.xywz, c[4];
DP4 R1.z, R0.xywz, c[3];
DP4 R1.x, R0.xywz, c[1];
DP4 R1.y, R0.xywz, c[2];
MUL R2.xyz, R1.xyww, c[11].y;
MUL R2.y, R2, c[6].x;
ADD result.texcoord[1].xy, R2, R2.z;
MOV result.position, R1;
MOV result.texcoord[1].zw, R1;
MAD result.texcoord[0].xy, vertex.texcoord[0], c[10], c[10].zwzw;
MAD result.texcoord[2].xy, vertex.texcoord[1], c[9], c[9].zwzw;
END
# 75 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 0 [glstate_matrix_mvp]
Vector 4 [_Time]
Vector 5 [_ProjectionParams]
Vector 6 [_ScreenParams]
Float 7 [_WaveSpeed]
Float 8 [_Amplitude]
Vector 9 [unity_LightmapST]
Vector 10 [_MainTex_ST]
"vs_2_0
; 75 ALU
def c11, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c12, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c13, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c14, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c15, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_texcoord0 v3
dcl_texcoord1 v4
add r0.w, v0.x, v0.y
mov r0.x, c4
mul r0.x, c7, r0
slt r0.y, r0.x, c13.x
max r0.y, -r0, r0
slt r0.y, c13.x, r0
add r0.z, -r0.y, c11
mul r0.z, r0.x, r0
mad r1.y, r0, -r0.x, r0.z
add r1.x, r0.w, v0.z
mad r0.x, r1.y, c13.y, r1
mad r0.x, r0, c13.z, c13.w
frc r0.x, r0
mad r1.z, r0.x, c14.x, c14.y
sincos r0.xy, r1.z, c12.xyzw, c11.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1, c15.x, r1.x
mul r0.x, r0, c8
mad r1.z, -r0.x, c15.y, v0
mad r0.x, r1.y, c14.z, r1
mad r0.x, r0, c13.z, c13.w
mad r0.y, r0, c13.z, c13.w
frc r0.y, r0
mov r1.w, v0
mad r1.y, r0, c14.x, c14
frc r1.x, r0
sincos r0.xy, r1.y, c12.xyzw, c11.xyzw
mad r0.x, r1, c14, c14.y
sincos r2.xy, r0.x, c12.xyzw, c11.xyzw
mul r0.z, v3.y, r0.y
mul r0.x, v3.y, r2.y
mul r0.y, v3, v3.x
mul r0.y, -r0, c14.w
mul r0.x, r0, c8
mad r1.y, r0.x, c11.w, r0
mul r0.x, r0.z, c8
mad r1.x, r0, c11.w, v0
dp4 r0.w, r1, c3
dp4 r0.z, r1, c2
dp4 r0.x, r1, c0
dp4 r0.y, r1, c1
mul r2.xyz, r0.xyww, c11.w
mul r2.y, r2, c5.x
mad oT1.xy, r2.z, c6.zwzw, r2
mov oPos, r0
mov oT1.zw, r0
mad oT0.xy, v3, c10, c10.zwzw
mad oT2.xy, v4, c9, c9.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Float 8 [_Amplitude]
Vector 10 [_MainTex_ST]
Vector 1 [_ProjectionParams]
Vector 2 [_ScreenParams]
Vector 0 [_Time]
Float 7 [_WaveSpeed]
Matrix 3 [glstate_matrix_mvp] 4
Vector 9 [unity_LightmapST]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 36.00-37.33 (27-28 instructions), vertex: 32, texture: 0,
//   sequencer: 16,  5 GPRs, 31 threads,
// Performance (if enough threads): ~36-37 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacamaaaaabpaaaaaaaaaaaaaaaceaaaaabjeaaaaablmaaaaaaaa
aaaaaaaaaaaaabgmaaaaaabmaaaaabgapppoadaaaaaaaaaiaaaaaabmaaaaaaaa
aaaaabfjaaaaaalmaaacaaaiaaabaaaaaaaaaamiaaaaaaaaaaaaaaniaaacaaak
aaabaaaaaaaaaaoeaaaaaaaaaaaaaapeaaacaaabaaabaaaaaaaaaaoeaaaaaaaa
aaaaabagaaacaaacaaabaaaaaaaaaaoeaaaaaaaaaaaaabbeaaacaaaaaaabaaaa
aaaaaaoeaaaaaaaaaaaaabbkaaacaaahaaabaaaaaaaaaamiaaaaaaaaaaaaabcf
aaacaaadaaaeaaaaaaaaabdiaaaaaaaaaaaaabeiaaacaaajaaabaaaaaaaaaaoe
aaaaaaaafpebgnhagmgjhehfgegfaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaa
fpengbgjgofegfhifpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpfahcgp
gkgfgdhegjgpgofagbhcgbgnhdaafpfdgdhcgfgfgofagbhcgbgnhdaafpfegjgn
gfaafpfhgbhggffdhagfgfgeaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaa
aaadaaadaaaeaaaeaaabaaaaaaaaaaaahfgogjhehjfpemgjghgihegngbhafdfe
aahghdfpddfpdaaadccodacodcdadddfddcodaaaaaaaaaaaaaaaaaabaaaaaaaa
aaaaaaaaaaaaaabeaapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaea
aaaaablaaacbaaaeaaaaaaaaaaaaaaaaaaaacagdaaaaaaabaaaaaaadaaaaaaae
aaaaacjaaabaaaaeaaaafaafaacbfaagaaaadafaaaabpbfbaaaddcfcaaaababp
aaaaaaboaaaabaccaaaabacaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeamjapnl
lpiaaaaamaejapnldpiaaaaadpaaaaaadoemmmmndoccpjiddpggggggdpljjjjk
eaehkobeeaammmmndpaaaaaahajfgaaebaakbaaafgaaaaaaaaaaaaaagaalmcaa
bcaaaaaaaaaagabbgabhbcaabcaaaaaaaaaaaaaagabnmeaaccaaaaaaafpicaaa
aaaaagiiaaaaaaaaafpibaaaaaaaacdpaaaaaaaaafpibaaaaaaaapmiaaaaaaaa
miacaaaaaagmlbaacbaapnaamiabaaaaaagmgmaacbaaahaaheaeaaaaabloblgm
laacpnaakibaaaaabiaaaaebmcaaaaahmiaiaaadaablmgaaobababaamiahaaad
aagmmamgklaappaamiapaaadaaaaagaakbadpoaamiahaaaaaamablaakaadppaa
miahaaaaaamaaaaaoiaaaaaamiahaaaaaamagmmgilaapnpnmabaaaaaaaaaaagm
ocaaaaaamacaaaaaaaaaaalbocaaaaaamaedaaaeaabllamgkbabpoaamiahaaaa
aalmmaaaobaeaaaamiahaaadaamagmaakbaaaiaamiabaaacaagmgmaaoaadacaa
beapaaaaaablaalbkbacagadaeceacacafmgmgbloaadacadmiapaaaaaamgnana
klacafaamiapaaaaaalbdepiklacaeaamiapaaacaagmnajeklacadaamiapiado
aananaaaocacacaamiahaaaaaamablaakbacppaamiamiaabaanlnlaaocacacaa
miadiaaaaabklabkilabakakmiadiaacaalalabkilabajajkiiaaaaaaaaaaaeb
mcaaaaabmiadiaabaamgbkbiklaaacaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 467 [_Time]
Vector 466 [_ProjectionParams]
Float 465 [_WaveSpeed]
Float 464 [_Amplitude]
Vector 463 [unity_LightmapST]
Vector 462 [_MainTex_ST]
"sce_vp_rsx // 32 instructions using 3 registers
[Configuration]
8
0000002003010300
[Defaults]
2
461 4
400ccccd3e4ccccd4047ae143f000000
460 2
3f6666663fb9999a
[Microcode]
512
401f9c6c011ce808010400d740619f9c00001c6c00c000000106c08aa0409ffc
00001c6c005d10000186c08360411ffc00001c6c009d3000008000c360411ffc
201fdc6c004000000086c08360411ffc00001c6c00c000550106c08aa0203ffc
00001c6c004000000086c08360405ffc00002400004000800086c08360405ffc
00001c6c011cd055008800dfe0219ffc00001c6c011cc055009540dfe0205ffc
00009c6c7880082a8100008aa029007c00009c6c789cc080028000c00031007c
00011c6c7880082a81154055402900fc00001c6c008008000095408360409ffc
00001c6c0080082a8115414360411ffc00001c6c009d0000008000c360411ffc
00001c6c009d002a808000c360409ffc00001c6c009d0000048000c360405ffc
00009c6c011cd05500bfc0c000a09ffc00009c6c011cd0aa809540d540405ffc
00009c6c011cd00000bfc0c000411ffc00009c6c0040007f8106c08360403ffc
00001c6c01d0300d8286c0c360403ffc00001c6c01d0200d8286c0c360405ffc
00001c6c01d0100d8286c0c360409ffc00001c6c01d0000d8286c0c360411ffc
401f9c6c011cf908010400d740619fa4401f9c6c0040000d8086c0836041ff80
401f9c6c004000558086c08360407fa000001c6c009cd00e00bfc0c36041dffc
00001c6c009d202a808000c360409ffc401f9c6c00c000080086c09540219fa1
"
}

SubProgram "d3d11 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "color" Color
ConstBuffer "$Globals" 160 // 112 used size, 11 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [unity_LightmapST] 4
Vector 96 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 0 [_Time] 4
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityPerDraw" 336 // 64 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityPerDraw" 2
// 26 instructions, 2 temp regs, 0 temp arrays:
// ALU 22 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedefcfnibbcmpoobjbmbidfmhojnfceccfabaaaaaagmafaaaaadaaaaaa
cmaaaaaapeaaaaaahmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaa
aiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaheaaaaaaacaaaaaaaaaaaaaa
adaaaaaaabaaaaaaamadaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apaaaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefc
oiadaaaaeaaaabaapkaaaaaafjaaaaaeegiocaaaaaaaaaaaahaaaaaafjaaaaae
egiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaaaeaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaaddcbabaaaadaaaaaafpaaaaaddcbabaaaaeaaaaaa
ghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaagfaaaaad
mccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagiaaaaacacaaaaaadiaaaaaj
bcaabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaaakiacaaaabaaaaaaaaaaaaaa
dbaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaak
bcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaa
aaaaaaaaaaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaa
aaaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaam
hcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdpbekoeheamnmmamea
aaaaaaaafgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaa
aaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaa
diaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaaaaaaaaaaaeaaaaaa
diaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaah
icaabaaaaaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaa
aaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaa
diaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaa
dcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaa
aaaaaaaadcaaaaakccaabaaaaaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaa
mnmmemdockbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaacaaaaaa
aaaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaacaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaa
aaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaa
abaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaa
agaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaaeaaaaaaagiecaaaaaaaaaaa
afaaaaaakgiocaaaaaaaaaaaafaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaa
aaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaa
aaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaa
acaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaacaaaaaakgakbaaaabaaaaaa
mgaabaaaabaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
"!!GLES


#ifdef VERTEX

varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp float t_2;
  highp float tmpvar_3;
  tmpvar_3 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_4;
  tmpvar_4 = (_Time * _WaveSpeed).x;
  t_2 = tmpvar_4;
  if ((tmpvar_4 < 0.0)) {
    t_2 = (tmpvar_4 * -1.0);
  };
  tmpvar_1.x = (_glesVertex.x + (((sin(((t_2 * 1.45) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_1.y = ((((sin(((t_2 * 3.12) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_1.z = (_glesVertex.z - (((sin(((t_2 * 2.2) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_mvp * tmpvar_1);
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_5.zw;
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = o_6;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D unity_Lightmap;
uniform sampler2D _LightBuffer;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec4 c_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  c_4 = tmpvar_6;
  lowp float x_7;
  x_7 = (c_4.w - _Cutoff);
  if ((x_7 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_8;
  mediump vec3 lm_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_9 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11.w = 0.0;
  tmpvar_11.xyz = lm_9;
  mediump vec4 tmpvar_12;
  tmpvar_12 = (max (light_3, vec4(0.001, 0.001, 0.001, 0.001)) + tmpvar_11);
  light_3 = tmpvar_12;
  lowp vec4 c_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (c_4.xyz * tmpvar_12.xyz);
  c_13.xyz = tmpvar_14;
  c_13.w = c_4.w;
  c_2 = c_13;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
"!!GLES


#ifdef VERTEX

varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp float t_2;
  highp float tmpvar_3;
  tmpvar_3 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_4;
  tmpvar_4 = (_Time * _WaveSpeed).x;
  t_2 = tmpvar_4;
  if ((tmpvar_4 < 0.0)) {
    t_2 = (tmpvar_4 * -1.0);
  };
  tmpvar_1.x = (_glesVertex.x + (((sin(((t_2 * 1.45) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_1.y = ((((sin(((t_2 * 3.12) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_1.z = (_glesVertex.z - (((sin(((t_2 * 2.2) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_mvp * tmpvar_1);
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_5.zw;
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_TEXCOORD1 = o_6;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D unity_Lightmap;
uniform sampler2D _LightBuffer;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec4 c_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  c_4 = tmpvar_6;
  lowp float x_7;
  x_7 = (c_4.w - _Cutoff);
  if ((x_7 < 0.0)) {
    discard;
  };
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (unity_Lightmap, xlv_TEXCOORD2);
  mediump vec3 lm_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((8.0 * tmpvar_9.w) * tmpvar_9.xyz);
  lm_10 = tmpvar_11;
  mediump vec4 tmpvar_12;
  tmpvar_12.w = 0.0;
  tmpvar_12.xyz = lm_10;
  mediump vec4 tmpvar_13;
  tmpvar_13 = (max (light_3, vec4(0.001, 0.001, 0.001, 0.001)) + tmpvar_12);
  light_3 = tmpvar_13;
  lowp vec4 c_14;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (c_4.xyz * tmpvar_13.xyz);
  c_14.xyz = tmpvar_15;
  c_14.w = c_4.w;
  c_2 = c_14;
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "d3d11_9x " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "color" Color
ConstBuffer "$Globals" 160 // 112 used size, 11 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [unity_LightmapST] 4
Vector 96 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 0 [_Time] 4
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityPerDraw" 336 // 64 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityPerDraw" 2
// 26 instructions, 2 temp regs, 0 temp arrays:
// ALU 22 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecedoccnffiphfdackjfpkedidlodbpjpcobabaaaaaaaeajaaaaaeaaaaaa
daaaaaaameadaaaaleahaaaahmaiaaaaebgpgodjimadaaaaimadaaaaaaacpopp
deadaaaafiaaaaaaaeaaceaaaaaafeaaaaaafeaaaaaaceaaabaafeaaaaaaaeaa
adaaabaaaaaaaaaaabaaaaaaabaaaeaaaaaaaaaaabaaafaaabaaafaaaaaaaaaa
acaaaaaaaeaaagaaaaaaaaaaaaaaaaaaaaacpoppfbaaaaafakaaapkajkjjljdp
bekoeheamnmmameaggggggdpfbaaaaafalaaapkaaaaaaaaaaaaaaamaidpjccdo
aaaaaadpfbaaaaafamaaapkanlapmjeanlapejmamnmmemdoaaaaaaaafbaaaaaf
anaaapkaabannalfgballglhklkkckdlijiiiidjfbaaaaafaoaaapkaklkkkklm
aaaaaaloaaaaiadpaaaaaadpbpaaaaacafaaaaiaaaaaapjabpaaaaacafaaadia
adaaapjabpaaaaacafaaaeiaaeaaapjaaeaaaaaeaaaaadoaadaaoejaadaaoeka
adaaookaabaaaaacaaaaabiaabaaaakaafaaaaadaaaaabiaaaaaaaiaaeaaaaka
amaaaaadaaaaaciaaaaaaaiaalaaaakaafaaaaadaaaaaciaaaaaffiaaaaaaaia
aeaaaaaeaaaaabiaaaaaffiaalaaffkaaaaaaaiaacaaaaadaaaaaciaaaaaffja
aaaaaajaacaaaaadaaaaaciaaaaaffiaaaaakkjaaeaaaaaeaaaaahiaaaaaaaia
akaaoekaaaaaffiaaeaaaaaeaaaaahiaaaaaoeiaalaakkkaalaappkabdaaaaac
aaaaahiaaaaaoeiaaeaaaaaeaaaaahiaaaaaoeiaamaaaakaamaaffkacfaaaaae
abaaaciaaaaaffiaanaaoekaaoaaoekaafaaaaadaaaaaciaabaaffiaadaaffja
afaaaaadaaaaaciaaaaaffiaabaaffkaafaaaaadaaaaaiiaadaaaajaadaaffja
afaaaaadaaaaaiiaaaaappiaakaappkaaeaaaaaeaaaaaciaaaaaffiaalaappka
aaaappibafaaaaadabaaapiaaaaaffiaahaaoekacfaaaaaeacaaaciaaaaaaaia
anaaoekaaoaaoekacfaaaaaeadaaaciaaaaakkiaanaaoekaaoaaoekaafaaaaad
aaaaabiaadaaffiaadaaffjaafaaaaadaaaaabiaaaaaaaiaabaaffkaaeaaaaae
aaaaabiaaaaaaaiaamaakkkbaaaakkjaafaaaaadaaaaaciaacaaffiaadaaffja
afaaaaadaaaaaciaaaaaffiaabaaffkaaeaaaaaeaaaaaciaaaaaffiaalaappka
aaaaaajaaeaaaaaeabaaapiaagaaoekaaaaaffiaabaaoeiaaeaaaaaeaaaaapia
aiaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaapiaajaaoekaaaaappjaaaaaoeia
afaaaaadabaaabiaaaaaffiaafaaaakaafaaaaadabaaaiiaabaaaaiaalaappka
afaaaaadabaaafiaaaaapeiaalaappkaacaaaaadabaaadoaabaakkiaabaaomia
aeaaaaaeaaaaamoaaeaabejaacaabekaacaalekaaeaaaaaeaaaaadmaaaaappia
aaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeiaabaaaaacabaaamoaaaaaoeia
ppppaaaafdeieefcoiadaaaaeaaaabaapkaaaaaafjaaaaaeegiocaaaaaaaaaaa
ahaaaaaafjaaaaaeegiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaa
aeaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaaddcbabaaaadaaaaaafpaaaaad
dcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaa
abaaaaaagfaaaaadmccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagiaaaaac
acaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaaakiacaaa
abaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaa
aaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaa
aaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaa
akbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaa
aaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdp
bekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaa
aanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaa
fgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaa
aaaaaaaaaeaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaa
aaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaa
dcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdp
bkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaa
acaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaa
aaaaaadpakbabaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaackaabaiaebaaaaaa
aaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaa
egiocaaaacaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaapgbpbaaa
aaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaagaaaaaa
ogikcaaaaaaaaaaaagaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaaeaaaaaa
agiecaaaaaaaaaaaafaaaaaakgiocaaaaaaaaaaaafaaaaaadiaaaaaiccaabaaa
aaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaa
abaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadp
dgaaaaafmccabaaaacaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaacaaaaaa
kgakbaaaabaaaaaamgaabaaaabaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaa
apadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeo
ehefeofeaaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheo
iaaaaaaaaeaaaaaaaiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaa
apaaaaaaheaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaaheaaaaaa
acaaaaaaaaaaaaaaadaaaaaaabaaaaaaamadaaaaheaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklkl"
}

SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec4 screen;
    highp vec2 lmap;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 425
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
#line 437
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
#line 441
uniform lowp vec4 unity_Ambient;
uniform lowp float _Cutoff;
#line 284
highp vec4 ComputeScreenPos( in highp vec4 pos ) {
    #line 286
    highp vec4 o = (pos * 0.5);
    o.xy = (vec2( o.x, (o.y * _ProjectionParams.x)) + o.w);
    o.zw = pos.zw;
    return o;
}
#line 400
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 404
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 408
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 427
v2f_surf vert_surf( in appdata_full v ) {
    #line 429
    v2f_surf o;
    vert( v);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    #line 433
    o.screen = ComputeScreenPos( o.pos);
    o.lmap.xy = ((v.texcoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
    return o;
}

out highp vec2 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec2 xlv_TEXCOORD2;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.pack0);
    xlv_TEXCOORD1 = vec4(xl_retval.screen);
    xlv_TEXCOORD2 = vec2(xl_retval.lmap);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
mat2 xll_transpose_mf2x2(mat2 m) {
  return mat2( m[0][0], m[1][0], m[0][1], m[1][1]);
}
mat3 xll_transpose_mf3x3(mat3 m) {
  return mat3( m[0][0], m[1][0], m[2][0],
               m[0][1], m[1][1], m[2][1],
               m[0][2], m[1][2], m[2][2]);
}
mat4 xll_transpose_mf4x4(mat4 m) {
  return mat4( m[0][0], m[1][0], m[2][0], m[3][0],
               m[0][1], m[1][1], m[2][1], m[3][1],
               m[0][2], m[1][2], m[2][2], m[3][2],
               m[0][3], m[1][3], m[2][3], m[3][3]);
}
float xll_saturate_f( float x) {
  return clamp( x, 0.0, 1.0);
}
vec2 xll_saturate_vf2( vec2 x) {
  return clamp( x, 0.0, 1.0);
}
vec3 xll_saturate_vf3( vec3 x) {
  return clamp( x, 0.0, 1.0);
}
vec4 xll_saturate_vf4( vec4 x) {
  return clamp( x, 0.0, 1.0);
}
mat2 xll_saturate_mf2x2(mat2 m) {
  return mat2( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0));
}
mat3 xll_saturate_mf3x3(mat3 m) {
  return mat3( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0));
}
mat4 xll_saturate_mf4x4(mat4 m) {
  return mat4( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0), clamp(m[3], 0.0, 1.0));
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
    highp vec4 screen;
    highp vec2 lmap;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 425
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
#line 437
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
#line 441
uniform lowp vec4 unity_Ambient;
uniform lowp float _Cutoff;
#line 177
lowp vec3 DecodeLightmap( in lowp vec4 color ) {
    #line 179
    return (2.0 * color.xyz);
}
#line 325
mediump vec3 DirLightmapDiffuse( in mediump mat3 dirBasis, in lowp vec4 color, in lowp vec4 scale, in mediump vec3 normal, in bool surfFuncWritesNormal, out mediump vec3 scalePerBasisVector ) {
    mediump vec3 lm = DecodeLightmap( color);
    scalePerBasisVector = DecodeLightmap( scale);
    #line 329
    if (surfFuncWritesNormal){
        mediump vec3 normalInRnmBasis = xll_saturate_vf3((dirBasis * normal));
        lm *= dot( normalInRnmBasis, scalePerBasisVector);
    }
    #line 334
    return lm;
}
#line 353
mediump vec4 LightingLambert_DirLightmap( in SurfaceOutput s, in lowp vec4 color, in lowp vec4 scale, in bool surfFuncWritesNormal ) {
    #line 355
    highp mat3 unity_DirBasis = xll_transpose_mf3x3(mat3( vec3( 0.816497, 0.0, 0.57735), vec3( -0.408248, 0.707107, 0.57735), vec3( -0.408248, -0.707107, 0.57735)));
    mediump vec3 scalePerBasisVector;
    mediump vec3 lm = DirLightmapDiffuse( unity_DirBasis, color, scale, s.Normal, surfFuncWritesNormal, scalePerBasisVector);
    return vec4( lm, 0.0);
}
#line 346
lowp vec4 LightingLambert_PrePass( in SurfaceOutput s, in mediump vec4 light ) {
    lowp vec4 c;
    c.xyz = (s.Albedo * light.xyz);
    #line 350
    c.w = s.Alpha;
    return c;
}
#line 411
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 413
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 443
lowp vec4 frag_surf( in v2f_surf IN ) {
    #line 445
    Input surfIN;
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    #line 449
    o.Emission = vec3( 0.0);
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    #line 453
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    mediump vec4 light = textureProj( _LightBuffer, IN.screen);
    light = max( light, vec4( 0.001));
    #line 457
    lowp vec4 lmtex = texture( unity_Lightmap, IN.lmap.xy);
    lowp vec4 lmIndTex = texture( unity_LightmapInd, IN.lmap.xy);
    mediump vec4 lm = LightingLambert_DirLightmap( o, lmtex, lmIndTex, false);
    light += lm;
    #line 461
    mediump vec4 c = LightingLambert_PrePass( o, light);
    return c;
}
in highp vec2 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec2 xlv_TEXCOORD2;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD0);
    xlt_IN.screen = vec4(xlv_TEXCOORD1);
    xlt_IN.lmap = vec2(xlv_TEXCOORD2);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

}
Program "fp" {
// Fragment combos: 6
//   opengl - ALU: 8 to 22, TEX: 2 to 4
//   d3d9 - ALU: 8 to 20, TEX: 3 to 5
//   d3d11 - ALU: 6 to 15, TEX: 2 to 4, FLOW: 1 to 1
//   d3d11_9x - ALU: 6 to 15, TEX: 2 to 4, FLOW: 1 to 1
SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
"!!ARBfp1.0
# 11 ALU, 2 TEX
PARAM c[2] = { program.local[0..1] };
TEMP R0;
TEMP R1;
TEX R0, fragment.texcoord[0], texture[0], 2D;
MUL R1, R0, c[0];
SLT R0.w, R1, c[1].x;
MOV result.color.w, R1;
TXP R0.xyz, fragment.texcoord[1], texture[1], 2D;
KIL -R0.w;
LG2 R0.x, R0.x;
LG2 R0.z, R0.z;
LG2 R0.y, R0.y;
ADD R0.xyz, -R0, fragment.texcoord[2];
MUL result.color.xyz, R1, R0;
END
# 11 instructions, 2 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
"ps_2_0
; 11 ALU, 3 TEX
dcl_2d s0
dcl_2d s1
def c2, 0.00000000, 1.00000000, 0, 0
dcl t0.xy
dcl t1
dcl t2.xyz
texld r0, t0, s0
mul r1, r0, c0
add_pp r0.x, r1.w, -c1
cmp r0.x, r0, c2, c2.y
mov_pp r2, -r0.x
texldp r0, t1, s1
texkill r2.xyzw
log_pp r0.x, r0.x
log_pp r0.z, r0.z
log_pp r0.y, r0.y
add_pp r0.xyz, -r0, t2
mul_pp r0.xyz, r1, r0
mov_pp r0.w, r1
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 12.00 (9 instructions), vertex: 0, texture: 8,
//   sequencer: 6, interpolator: 12;    4 GPRs, 48 threads,
// Performance (if enough threads): ~12 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaabfeaaaaaaoiaaaaaaaaaaaaaaceaaaaabaaaaaaabciaaaaaaaa
aaaaaaaaaaaaaaniaaaaaabmaaaaaammppppadaaaaaaaaaeaaaaaabmaaaaaaaa
aaaaaamfaaaaaagmaaacaaaaaaabaaaaaaaaaaheaaaaaaaaaaaaaaieaaacaaab
aaabaaaaaaaaaaimaaaaaaaaaaaaaajmaaadaaabaaabaaaaaaaaaakmaaaaaaaa
aaaaaalmaaadaaaaaaabaaaaaaaaaakmaaaaaaaafpedgpgmgphcaaklaaabaaad
aaabaaaeaaabaaaaaaaaaaaafpedhfhegpggggaaaaaaaaadaaabaaabaaabaaaa
aaaaaaaafpemgjghgiheechfgggggfhcaaklklklaaaeaaamaaabaaabaaabaaaa
aaaaaaaafpengbgjgofegfhiaahahdfpddfpdaaadccodacodcdadddfddcodaaa
aaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabeabpmaabaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaeaaaaaaakibaaaadaaaaaaaaaeaaaaaaaaaaaacegd
aaahaaahaaaaaacbaaaadafaaaaapbfbaaaahcfcaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabajfaacaaaabcaameaaaaaa
aaaagaahaaaaccaaaaaaaaaabaaidaabbpbppgiiaaaaeaaaembcaaaaaablblbl
kbadaaabliifaaaaabgmlaebmbaaababmiaaaaaaaagmblaahjppaaaacabiaaab
bpbppehiaaaaeaaaeabaaaaaaaaaaagmocaaaaiaeaeaaaaaaaaaaamgocaaaaia
eaihaaabaamamablkbadaaiamianaaaaaeaepaaaoaaaacaamianaaaaaapaaeaa
obabaaaamiapiaaaaajejeaaocaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
"sce_fp_rsx // 13 instructions using 2 registers
[Configuration]
24
ffffffff0001c0200007fff9000000000000848002000000
[Offsets]
2
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
208
9e001700c8011c9dc8000001c8003fe11e800200c8001c9dc8020001c8000001
00000000000000000000000000000000037e4a80ff001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
10800140c9001c9dc8000001c8000001ae021802c8011c9dc8000001c8003fe1
02821d40c8041c9dc8000001c800000104821d40aa041c9cc8000001c8000001
08821d4054041c9dc8000001c8000001ce820300c8011c9dc9040003c8003fe1
0e810240c9001c9dc9040001c8000001
"
}

SubProgram "d3d11 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
ConstBuffer "$Globals" 128 // 116 used size, 9 vars
Vector 48 [_Color] 4
Float 112 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightBuffer] 2D 1
// 12 instructions, 2 temp regs, 0 temp arrays:
// ALU 7 float, 0 int, 0 uint
// TEX 2 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedmndbjdohpfdmbicdefekinbligomhidmabaaaaaalmacaaaaadaaaaaa
cmaaaaaaleaaaaaaoiaaaaaaejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apalaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcmmabaaaaeaaaaaaahdaaaaaafjaaaaaeegiocaaa
aaaaaaaaaiaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaa
gcbaaaaddcbabaaaabaaaaaagcbaaaadlcbabaaaacaaaaaagcbaaaadhcbabaaa
adaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacacaaaaaaefaaaaajpcaabaaa
aaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaam
bcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaaakiacaia
ebaaaaaaaaaaaaaaahaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaa
egiocaaaaaaaaaaaadaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaaaoaaaaahdcaabaaaabaaaaaa
egbabaaaacaaaaaapgbpbaaaacaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaa
abaaaaaaeghobaaaabaaaaaaaagabaaaabaaaaaacpaaaaafhcaabaaaabaaaaaa
egacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaiaebaaaaaaabaaaaaa
egbcbaaaadaaaaaadiaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaa
abaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}

SubProgram "d3d11_9x " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
ConstBuffer "$Globals" 128 // 116 used size, 9 vars
Vector 48 [_Color] 4
Float 112 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightBuffer] 2D 1
// 12 instructions, 2 temp regs, 0 temp arrays:
// ALU 7 float, 0 int, 0 uint
// TEX 2 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefiecedondkohkpdejjcahffkacdicbghlhnmkiabaaaaaabeaeaaaaaeaaaaaa
daaaaaaaieabaaaafiadaaaaoaadaaaaebgpgodjemabaaaaemabaaaaaaacpppp
aiabaaaaeeaaaaaaacaacmaaaaaaeeaaaaaaeeaaacaaceaaaaaaeeaaaaaaaaaa
abababaaaaaaadaaabaaaaaaaaaaaaaaaaaaahaaabaaabaaaaaaaaaaaaacpppp
bpaaaaacaaaaaaiaaaaaadlabpaaaaacaaaaaaiaabaaaplabpaaaaacaaaaaaia
acaaahlabpaaaaacaaaaaajaaaaiapkabpaaaaacaaaaaajaabaiapkaecaaaaad
aaaaapiaaaaaoelaaaaioekaabaaaaacabaaaiiaaaaappkaaeaaaaaeabaacpia
aaaappiaabaappiaabaaaakbafaaaaadaaaacpiaaaaaoeiaaaaaoekaagaaaaac
acaaaiiaabaapplaafaaaaadacaaadiaacaappiaabaaoelaebaaaaababaaapia
ecaaaaadabaacpiaacaaoeiaabaioekaapaaaaacacaacbiaabaaaaiaapaaaaac
acaacciaabaaffiaapaaaaacacaaceiaabaakkiaacaaaaadabaachiaacaaoeib
acaaoelaafaaaaadaaaachiaaaaaoeiaabaaoeiaabaaaaacaaaicpiaaaaaoeia
ppppaaaafdeieefcmmabaaaaeaaaaaaahdaaaaaafjaaaaaeegiocaaaaaaaaaaa
aiaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafibiaaae
aahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaagcbaaaad
dcbabaaaabaaaaaagcbaaaadlcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaa
gfaaaaadpccabaaaaaaaaaaagiaaaaacacaaaaaaefaaaaajpcaabaaaaaaaaaaa
egbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaambcaabaaa
abaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaaakiacaiaebaaaaaa
aaaaaaaaahaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaaegiocaaa
aaaaaaaaadaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaa
aaaaaaaaanaaaeadakaabaaaabaaaaaaaoaaaaahdcaabaaaabaaaaaaegbabaaa
acaaaaaapgbpbaaaacaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaaabaaaaaa
eghobaaaabaaaaaaaagabaaaabaaaaaacpaaaaafhcaabaaaabaaaaaaegacbaaa
abaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaiaebaaaaaaabaaaaaaegbcbaaa
adaaaaaadiaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaa
dgaaaaaficcabaaaaaaaaaaadkaabaaaaaaaaaaadoaaaaabejfdeheoiaaaaaaa
aeaaaaaaaiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaa
heaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadadaaaaheaaaaaaabaaaaaa
aaaaaaaaadaaaaaaacaaaaaaapalaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaa
adaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl
epfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
aaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl"
}

SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES3"
}

SubProgram "opengl " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_Color]
Vector 1 [unity_LightmapFade]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
SetTexture 2 [unity_Lightmap] 2D
SetTexture 3 [unity_LightmapInd] 2D
"!!ARBfp1.0
# 22 ALU, 4 TEX
PARAM c[4] = { program.local[0..2],
		{ 8 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEX R0, fragment.texcoord[0], texture[0], 2D;
TEX R1, fragment.texcoord[2], texture[2], 2D;
TXP R3.xyz, fragment.texcoord[1], texture[1], 2D;
MUL R2, R0, c[0];
SLT R0.x, R2.w, c[2];
MUL R1.xyz, R1.w, R1;
DP4 R1.w, fragment.texcoord[3], fragment.texcoord[3];
MOV result.color.w, R2;
KIL -R0.x;
TEX R0, fragment.texcoord[2], texture[3], 2D;
MUL R0.xyz, R0.w, R0;
MUL R0.xyz, R0, c[3].x;
RSQ R0.w, R1.w;
RCP R0.w, R0.w;
MAD R1.xyz, R1, c[3].x, -R0;
MAD_SAT R0.w, R0, c[1].z, c[1];
MAD R0.xyz, R0.w, R1, R0;
LG2 R1.x, R3.x;
LG2 R1.y, R3.y;
LG2 R1.z, R3.z;
ADD R0.xyz, -R1, R0;
MUL result.color.xyz, R2, R0;
END
# 22 instructions, 4 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_Color]
Vector 1 [unity_LightmapFade]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
SetTexture 2 [unity_Lightmap] 2D
SetTexture 3 [unity_LightmapInd] 2D
"ps_2_0
; 20 ALU, 5 TEX
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
def c3, 0.00000000, 1.00000000, 8.00000000, 0
dcl t0.xy
dcl t1
dcl t2.xy
dcl t3
texld r0, t0, s0
texldp r2, t1, s1
texld r3, t2, s2
mul r1, r0, c0
add_pp r0.x, r1.w, -c2
cmp r0.x, r0, c3, c3.y
mov_pp r0, -r0.x
mul_pp r3.xyz, r3.w, r3
log_pp r2.x, r2.x
log_pp r2.y, r2.y
log_pp r2.z, r2.z
texkill r0.xyzw
texld r0, t2, s3
mul_pp r4.xyz, r0.w, r0
mul_pp r4.xyz, r4, c3.z
dp4 r0.x, t3, t3
rsq r0.x, r0.x
rcp r0.x, r0.x
mad_pp r3.xyz, r3, c3.z, -r4
mad_sat r0.x, r0, c1.z, c1.w
mad_pp r0.xyz, r0.x, r3, r4
add_pp r0.xyz, -r2, r0
mul_pp r0.xyz, r1, r0
mov_pp r0.w, r1
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_Color]
Float 2 [_Cutoff]
Vector 1 [unity_LightmapFade]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
SetTexture 2 [unity_Lightmap] 2D
SetTexture 3 [unity_LightmapInd] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 18.67 (14 instructions), vertex: 0, texture: 16,
//   sequencer: 10, interpolator: 16;    7 GPRs, 27 threads,
// Performance (if enough threads): ~18 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaabmiaaaaabeiaaaaaaaaaaaaaaceaaaaabhaaaaaabjiaaaaaaaa
aaaaaaaaaaaaabeiaaaaaabmaaaaabdmppppadaaaaaaaaahaaaaaabmaaaaaaaa
aaaaabdfaaaaaakiaaacaaaaaaabaaaaaaaaaalaaaaaaaaaaaaaaamaaaacaaac
aaabaaaaaaaaaamiaaaaaaaaaaaaaaniaaadaaabaaabaaaaaaaaaaoiaaaaaaaa
aaaaaapiaaadaaaaaaabaaaaaaaaaaoiaaaaaaaaaaaaababaaadaaacaaabaaaa
aaaaaaoiaaaaaaaaaaaaabbaaaacaaabaaabaaaaaaaaaalaaaaaaaaaaaaaabcd
aaadaaadaaabaaaaaaaaaaoiaaaaaaaafpedgpgmgphcaaklaaabaaadaaabaaae
aaabaaaaaaaaaaaafpedhfhegpggggaaaaaaaaadaaabaaabaaabaaaaaaaaaaaa
fpemgjghgiheechfgggggfhcaaklklklaaaeaaamaaabaaabaaabaaaaaaaaaaaa
fpengbgjgofegfhiaahfgogjhehjfpemgjghgihegngbhaaahfgogjhehjfpemgj
ghgihegngbhaeggbgegfaahfgogjhehjfpemgjghgihegngbhaejgogeaahahdfp
ddfpdaaadccodacodcdadddfddcodaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaa
aaaaaabeabpmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaabai
baaaagaaaaaaaaaeaaaaaaaaaaaadaieaaapaaapaaaaaacbaaaadafaaaaapbfb
aaaadcfcaaaapdfdaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaebaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaafajgaadbaajbcaabcaaaaabaaaaaaaagaakmeaabcaaaaaa
aaaafabaaaaaccaaaaaaaaaabaaigaabbpbppgiiaaaaeaaaembcaaaaaablblbl
kbagaaabliifaaaaabgmlaebmbaaabacmiaaaaaaaalbblaahjppaaaabadifaeb
bpbppgiiaaaaeaaabacieaebbpbppgiiaaaaeaaacabiaaabbpbppehiaaaaeaaa
miaiaaabaakhkhaaopadadaaeabhaaabaamamagmkbagaaiaeaeiaaacaablgmmg
kbaeppiakaibabacaablgmblkbafppibmjaiaaabaablmgblilabababeaihaaac
aagmmablobacafiamiahaaadabblmamaolacaeacmiahaaacaamablmaoladabac
mianaaaaacpaaeaaoaacaaaamianaaaaaapaaeaaobabaaaamiapiaaaaajejeaa
ocaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_Color]
Vector 1 [unity_LightmapFade]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
SetTexture 2 [unity_Lightmap] 2D
SetTexture 3 [unity_LightmapInd] 2D
"sce_fp_rsx // 30 instructions using 4 registers
[Configuration]
24
ffffffff0003c020000ffff5000000000000848004000000
[Offsets]
3
_Color 1 0
00000020
unity_LightmapFade 2 0
00000110000000f0
_Cutoff 1 0
00000040
[Microcode]
480
9e001700c8011c9dc8000001c8003fe11e800200c8001c9dc8020001c8000001
00000000000000000000000000000000037e4a80ff001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
10800140c9001c9dc8000001c8000001fe020100c8011c9dc8000001c8003fe1
08000600c8041c9dc8040001c8000001de041706c8011c9dc8000001c8003fe1
0e880240fe081c9dc8083001c8000001de061704c8011c9dc8000001c8003fe1
10880140c80c1c9dc8003001c800000110001b0054001c9dc8000001c8000001
08043a00c8021c9dfe000001c800000100000000000000000000000000000000
1082830054081c9dc8020001c800000100000000000000000000000000000000
ae021802c8011c9dc8000001c8003fe102821d40c8041c9dc8000001c8000001
1e7e7d00c8001c9dc8000001c800000106020100c8041c9dc8000001c8000001
04821d40aa041c9cc8000001c80000010e840440ff101c9dc80c0001c9100003
06040100c8081c9dc8000001c80000010e840440ff041c9dc9080001c9100001
1e7e7d00c8001c9dc8000001c800000108821d4054041c9dc8000001c8000001
0e820340c9041c9fc9080001c80000010e810240c9001c9dc9040001c8000001
"
}

SubProgram "d3d11 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
ConstBuffer "$Globals" 160 // 148 used size, 11 vars
Vector 48 [_Color] 4
Vector 112 [unity_LightmapFade] 4
Float 144 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightBuffer] 2D 1
SetTexture 2 [unity_Lightmap] 2D 2
SetTexture 3 [unity_LightmapInd] 2D 3
// 22 instructions, 3 temp regs, 0 temp arrays:
// ALU 15 float, 0 int, 0 uint
// TEX 4 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedahbcckkbknjbddagadmadpobeepocmigabaaaaaafmaeaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaabaaaaaa
amamaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapalaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaadaaaaaaapapaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcfeadaaaaeaaaaaaanfaaaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaa
fibiaaaeaahabaaaadaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaad
mcbabaaaabaaaaaagcbaaaadlcbabaaaacaaaaaagcbaaaadpcbabaaaadaaaaaa
gfaaaaadpccabaaaaaaaaaaagiaaaaacadaaaaaaefaaaaajpcaabaaaaaaaaaaa
egbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaambcaabaaa
abaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaaakiacaiaebaaaaaa
aaaaaaaaajaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaaegiocaaa
aaaaaaaaadaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaa
aaaaaaaaanaaaeadakaabaaaabaaaaaabbaaaaahbcaabaaaabaaaaaaegbobaaa
adaaaaaaegbobaaaadaaaaaaelaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaa
dccaaaalbcaabaaaabaaaaaaakaabaaaabaaaaaackiacaaaaaaaaaaaahaaaaaa
dkiacaaaaaaaaaaaahaaaaaaefaaaaajpcaabaaaacaaaaaaogbkbaaaabaaaaaa
eghobaaaadaaaaaaaagabaaaadaaaaaadiaaaaahccaabaaaabaaaaaadkaabaaa
acaaaaaaabeaaaaaaaaaaaebdiaaaaahocaabaaaabaaaaaaagajbaaaacaaaaaa
fgafbaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaogbkbaaaabaaaaaaeghobaaa
acaaaaaaaagabaaaacaaaaaadiaaaaahicaabaaaacaaaaaadkaabaaaacaaaaaa
abeaaaaaaaaaaaebdcaaaaakhcaabaaaacaaaaaapgapbaaaacaaaaaaegacbaaa
acaaaaaajgahbaiaebaaaaaaabaaaaaadcaaaaajhcaabaaaabaaaaaaagaabaaa
abaaaaaaegacbaaaacaaaaaajgahbaaaabaaaaaaaoaaaaahdcaabaaaacaaaaaa
egbabaaaacaaaaaapgbpbaaaacaaaaaaefaaaaajpcaabaaaacaaaaaaegaabaaa
acaaaaaaeghobaaaabaaaaaaaagabaaaabaaaaaacpaaaaafhcaabaaaacaaaaaa
egacbaaaacaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegacbaia
ebaaaaaaacaaaaaadiaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaa
abaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}

SubProgram "d3d11_9x " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
ConstBuffer "$Globals" 160 // 148 used size, 11 vars
Vector 48 [_Color] 4
Vector 112 [unity_LightmapFade] 4
Float 144 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightBuffer] 2D 1
SetTexture 2 [unity_Lightmap] 2D 2
SetTexture 3 [unity_LightmapInd] 2D 3
// 22 instructions, 3 temp regs, 0 temp arrays:
// ALU 15 float, 0 int, 0 uint
// TEX 4 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefiecednkcbadcfjpmpblcepecaedlakfphgkamabaaaaaaliagaaaaaeaaaaaa
daaaaaaaiiacaaaaoeafaaaaieagaaaaebgpgodjfaacaaaafaacaaaaaaacpppp
piabaaaafiaaaaaaadaadeaaaaaafiaaaaaafiaaaeaaceaaaaaafiaaaaaaaaaa
abababaaacacacaaadadadaaaaaaadaaabaaaaaaaaaaaaaaaaaaahaaabaaabaa
aaaaaaaaaaaaajaaabaaacaaaaaaaaaaaaacppppfbaaaaafadaaapkaaaaaaaeb
aaaaaaaaaaaaaaaaaaaaaaaabpaaaaacaaaaaaiaaaaaaplabpaaaaacaaaaaaia
abaaaplabpaaaaacaaaaaaiaacaaaplabpaaaaacaaaaaajaaaaiapkabpaaaaac
aaaaaajaabaiapkabpaaaaacaaaaaajaacaiapkabpaaaaacaaaaaajaadaiapka
ecaaaaadaaaaapiaaaaaoelaaaaioekaabaaaaacabaaaiiaaaaappkaaeaaaaae
abaacpiaaaaappiaabaappiaacaaaakbafaaaaadaaaacpiaaaaaoeiaaaaaoeka
abaaaaacacaaadiaaaaabllaagaaaaacacaaaeiaabaapplaafaaaaadadaaadia
acaakkiaabaaoelaebaaaaababaaapiaecaaaaadabaacpiaacaaoeiaadaioeka
ecaaaaadacaacpiaacaaoeiaacaioekaecaaaaadadaacpiaadaaoeiaabaioeka
ajaaaaadadaaaiiaacaaoelaacaaoelaahaaaaacadaaaiiaadaappiaagaaaaac
adaaaiiaadaappiaaeaaaaaeadaadiiaadaappiaabaakkkaabaappkaafaaaaad
abaaciiaabaappiaadaaaakaafaaaaadabaachiaabaaoeiaabaappiaafaaaaad
abaaciiaacaappiaadaaaakaaeaaaaaeacaachiaabaappiaacaaoeiaabaaoeib
aeaaaaaeabaachiaadaappiaacaaoeiaabaaoeiaapaaaaacacaacbiaadaaaaia
apaaaaacacaacciaadaaffiaapaaaaacacaaceiaadaakkiaacaaaaadabaachia
abaaoeiaacaaoeibafaaaaadaaaachiaaaaaoeiaabaaoeiaabaaaaacaaaicpia
aaaaoeiappppaaaafdeieefcfeadaaaaeaaaaaaanfaaaaaafjaaaaaeegiocaaa
aaaaaaaaakaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafibiaaaeaahabaaa
aaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaa
acaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaagcbaaaaddcbabaaa
abaaaaaagcbaaaadmcbabaaaabaaaaaagcbaaaadlcbabaaaacaaaaaagcbaaaad
pcbabaaaadaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacadaaaaaaefaaaaaj
pcaabaaaaaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaa
dcaaaaambcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaa
akiacaiaebaaaaaaaaaaaaaaajaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaa
aaaaaaaaegiocaaaaaaaaaaaadaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaa
abaaaaaaabeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaabbaaaaahbcaabaaa
abaaaaaaegbobaaaadaaaaaaegbobaaaadaaaaaaelaaaaafbcaabaaaabaaaaaa
akaabaaaabaaaaaadccaaaalbcaabaaaabaaaaaaakaabaaaabaaaaaackiacaaa
aaaaaaaaahaaaaaadkiacaaaaaaaaaaaahaaaaaaefaaaaajpcaabaaaacaaaaaa
ogbkbaaaabaaaaaaeghobaaaadaaaaaaaagabaaaadaaaaaadiaaaaahccaabaaa
abaaaaaadkaabaaaacaaaaaaabeaaaaaaaaaaaebdiaaaaahocaabaaaabaaaaaa
agajbaaaacaaaaaafgafbaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaogbkbaaa
abaaaaaaeghobaaaacaaaaaaaagabaaaacaaaaaadiaaaaahicaabaaaacaaaaaa
dkaabaaaacaaaaaaabeaaaaaaaaaaaebdcaaaaakhcaabaaaacaaaaaapgapbaaa
acaaaaaaegacbaaaacaaaaaajgahbaiaebaaaaaaabaaaaaadcaaaaajhcaabaaa
abaaaaaaagaabaaaabaaaaaaegacbaaaacaaaaaajgahbaaaabaaaaaaaoaaaaah
dcaabaaaacaaaaaaegbabaaaacaaaaaapgbpbaaaacaaaaaaefaaaaajpcaabaaa
acaaaaaaegaabaaaacaaaaaaeghobaaaabaaaaaaaagabaaaabaaaaaacpaaaaaf
hcaabaaaacaaaaaaegacbaaaacaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaiaebaaaaaaacaaaaaadiaaaaahhccabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaaaaaaaaaa
doaaaaabejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaaaaaaaaaaabaaaaaa
adaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaa
adadaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaabaaaaaaamamaaaaimaaaaaa
abaaaaaaaaaaaaaaadaaaaaaacaaaaaaapalaaaaimaaaaaaadaaaaaaaaaaaaaa
adaaaaaaadaaaaaaapapaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl"
}

SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES3"
}

SubProgram "opengl " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
SetTexture 2 [unity_Lightmap] 2D
"!!ARBfp1.0
# 13 ALU, 3 TEX
PARAM c[3] = { program.local[0..1],
		{ 8 } };
TEMP R0;
TEMP R1;
TEMP R2;
TXP R2.xyz, fragment.texcoord[1], texture[1], 2D;
TEX R0, fragment.texcoord[0], texture[0], 2D;
MUL R1, R0, c[0];
SLT R0.x, R1.w, c[1];
LG2 R2.x, R2.x;
LG2 R2.z, R2.z;
LG2 R2.y, R2.y;
MOV result.color.w, R1;
KIL -R0.x;
TEX R0, fragment.texcoord[2], texture[2], 2D;
MUL R0.xyz, R0.w, R0;
MAD R0.xyz, R0, c[2].x, -R2;
MUL result.color.xyz, R1, R0;
END
# 13 instructions, 3 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
SetTexture 2 [unity_Lightmap] 2D
"ps_2_0
; 12 ALU, 4 TEX
dcl_2d s0
dcl_2d s1
dcl_2d s2
def c2, 0.00000000, 1.00000000, 8.00000000, 0
dcl t0.xy
dcl t1
dcl t2.xy
texld r0, t0, s0
texldp r1, t1, s1
mul r2, r0, c0
add_pp r0.x, r2.w, -c1
cmp r0.x, r0, c2, c2.y
mov_pp r0, -r0.x
log_pp r1.x, r1.x
log_pp r1.z, r1.z
log_pp r1.y, r1.y
texkill r0.xyzw
texld r0, t2, s2
mul_pp r0.xyz, r0.w, r0
mad_pp r0.xyz, r0, c2.z, -r1
mul_pp r0.xyz, r2, r0
mov_pp r0.w, r2
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
SetTexture 2 [unity_Lightmap] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 12.00 (9 instructions), vertex: 0, texture: 12,
//   sequencer: 6, interpolator: 12;    4 GPRs, 48 threads,
// Performance (if enough threads): ~12 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaabhiaaaaaapeaaaaaaaaaaaaaaceaaaaabceaaaaabemaaaaaaaa
aaaaaaaaaaaaaapmaaaaaabmaaaaaaopppppadaaaaaaaaafaaaaaabmaaaaaaaa
aaaaaaoiaaaaaaiaaaacaaaaaaabaaaaaaaaaaiiaaaaaaaaaaaaaajiaaacaaab
aaabaaaaaaaaaakaaaaaaaaaaaaaaalaaaadaaabaaabaaaaaaaaaamaaaaaaaaa
aaaaaanaaaadaaaaaaabaaaaaaaaaamaaaaaaaaaaaaaaanjaaadaaacaaabaaaa
aaaaaamaaaaaaaaafpedgpgmgphcaaklaaabaaadaaabaaaeaaabaaaaaaaaaaaa
fpedhfhegpggggaaaaaaaaadaaabaaabaaabaaaaaaaaaaaafpemgjghgiheechf
gggggfhcaaklklklaaaeaaamaaabaaabaaabaaaaaaaaaaaafpengbgjgofegfhi
aahfgogjhehjfpemgjghgihegngbhaaahahdfpddfpdaaadccodacodcdadddfdd
codaaaklaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabeabpmaabaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaaalebaaaadaaaaaaaaaeaaaaaaaa
aaaacagdaaahaaahaaaaaacbaaaadafaaaaapbfbaaaadcfcaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaebaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaafajgaacaaaabcaa
meaaaaaaaaaagaaiaaaaccaaaaaaaaaabaaidaabbpbppgiiaaaaeaaaembcaaaa
aablblblkbadaaabliifaaaaabgmlaebmbaaababmiaaaaaaaalbblaahjppaaaa
bacicaebbpbppgiiaaaaeaaacabiaaabbpbppehiaaaaeaaaeabaaaaaaaaaaagm
ocaaaaiaeaeiaaabaablgmmgkbacppiaeaihaaabaamamablkbadaaiamianaaaa
abblpaaeolabacaamianaaaaaapaaeaaobabaaaamiapiaaaaajejeaaocaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
SetTexture 2 [unity_Lightmap] 2D
"sce_fp_rsx // 15 instructions using 3 registers
[Configuration]
24
ffffffff0001c0200007fffd000000000000848003000000
[Offsets]
2
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
240
9e001700c8011c9dc8000001c8003fe11e800200c8001c9dc8020001c8000001
00000000000000000000000000000000037e4a80ff001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
10800140c9001c9dc8000001c8000001ae041802c8011c9dc8000001c8003fe1
02881d40c8081c9dc8000001c8000001de021704c8011c9dc8000001c8003fe1
04881d40aa081c9cc8000001c800000108860140fe041c9dc8003001c8000001
08881d4054081c9dc8000001c80000010e820440550c1c9dc8040001c9100003
0e810240c9001c9dc9040001c8000001
"
}

SubProgram "d3d11 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
ConstBuffer "$Globals" 160 // 148 used size, 11 vars
Vector 48 [_Color] 4
Float 144 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightBuffer] 2D 1
SetTexture 2 [unity_Lightmap] 2D 2
// 14 instructions, 3 temp regs, 0 temp arrays:
// ALU 8 float, 0 int, 0 uint
// TEX 3 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecednhdpagekpbebjmkaieoekafiekjlfkpdabaaaaaacaadaaaaadaaaaaa
cmaaaaaaleaaaaaaoiaaaaaaejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaabaaaaaa
amamaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapalaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcdaacaaaaeaaaaaaaimaaaaaafjaaaaaeegiocaaa
aaaaaaaaakaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaae
aahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaagcbaaaad
dcbabaaaabaaaaaagcbaaaadmcbabaaaabaaaaaagcbaaaadlcbabaaaacaaaaaa
gfaaaaadpccabaaaaaaaaaaagiaaaaacadaaaaaaefaaaaajpcaabaaaaaaaaaaa
egbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaambcaabaaa
abaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaaakiacaiaebaaaaaa
aaaaaaaaajaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaaegiocaaa
aaaaaaaaadaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaa
aaaaaaaaanaaaeadakaabaaaabaaaaaaaoaaaaahdcaabaaaabaaaaaaegbabaaa
acaaaaaapgbpbaaaacaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaaabaaaaaa
eghobaaaabaaaaaaaagabaaaabaaaaaacpaaaaafhcaabaaaabaaaaaaegacbaaa
abaaaaaaefaaaaajpcaabaaaacaaaaaaogbkbaaaabaaaaaaeghobaaaacaaaaaa
aagabaaaacaaaaaadiaaaaahicaabaaaabaaaaaadkaabaaaacaaaaaaabeaaaaa
aaaaaaebdcaaaaakhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaacaaaaaa
egacbaiaebaaaaaaabaaaaaadiaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaa
egacbaaaabaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaaaaaaaaaadoaaaaab
"
}

SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}

SubProgram "d3d11_9x " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
ConstBuffer "$Globals" 160 // 148 used size, 11 vars
Vector 48 [_Color] 4
Float 144 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightBuffer] 2D 1
SetTexture 2 [unity_Lightmap] 2D 2
// 14 instructions, 3 temp regs, 0 temp arrays:
// ALU 8 float, 0 int, 0 uint
// TEX 3 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefiecedbhadnadbgjfhndmijbmlhpmmijiikahdabaaaaaameaeaaaaaeaaaaaa
daaaaaaanaabaaaaaiaeaaaajaaeaaaaebgpgodjjiabaaaajiabaaaaaaacpppp
faabaaaaeiaaaaaaacaadaaaaaaaeiaaaaaaeiaaadaaceaaaaaaeiaaaaaaaaaa
abababaaacacacaaaaaaadaaabaaaaaaaaaaaaaaaaaaajaaabaaabaaaaaaaaaa
aaacppppfbaaaaafacaaapkaaaaaaaebaaaaaaaaaaaaaaaaaaaaaaaabpaaaaac
aaaaaaiaaaaaaplabpaaaaacaaaaaaiaabaaaplabpaaaaacaaaaaajaaaaiapka
bpaaaaacaaaaaajaabaiapkabpaaaaacaaaaaajaacaiapkaecaaaaadaaaaapia
aaaaoelaaaaioekaabaaaaacabaaaiiaaaaappkaaeaaaaaeabaacpiaaaaappia
abaappiaabaaaakbafaaaaadaaaacpiaaaaaoeiaaaaaoekaabaaaaacacaaadia
aaaabllaagaaaaacacaaaeiaabaapplaafaaaaadadaaadiaacaakkiaabaaoela
ebaaaaababaaapiaecaaaaadabaacpiaacaaoeiaacaioekaecaaaaadacaacpia
adaaoeiaabaioekaafaaaaadabaaciiaabaappiaacaaaakaapaaaaacadaacbia
acaaaaiaapaaaaacadaacciaacaaffiaapaaaaacadaaceiaacaakkiaaeaaaaae
abaachiaabaappiaabaaoeiaadaaoeibafaaaaadaaaachiaaaaaoeiaabaaoeia
abaaaaacaaaicpiaaaaaoeiappppaaaafdeieefcdaacaaaaeaaaaaaaimaaaaaa
fjaaaaaeegiocaaaaaaaaaaaakaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafibiaaaeaahabaaaaaaaaaaa
ffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaa
ffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaadmcbabaaaabaaaaaagcbaaaad
lcbabaaaacaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacadaaaaaaefaaaaaj
pcaabaaaaaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaa
dcaaaaambcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaa
akiacaiaebaaaaaaaaaaaaaaajaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaa
aaaaaaaaegiocaaaaaaaaaaaadaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaa
abaaaaaaabeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaaaoaaaaahdcaabaaa
abaaaaaaegbabaaaacaaaaaapgbpbaaaacaaaaaaefaaaaajpcaabaaaabaaaaaa
egaabaaaabaaaaaaeghobaaaabaaaaaaaagabaaaabaaaaaacpaaaaafhcaabaaa
abaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaogbkbaaaabaaaaaa
eghobaaaacaaaaaaaagabaaaacaaaaaadiaaaaahicaabaaaabaaaaaadkaabaaa
acaaaaaaabeaaaaaaaaaaaebdcaaaaakhcaabaaaabaaaaaapgapbaaaabaaaaaa
egacbaaaacaaaaaaegacbaiaebaaaaaaabaaaaaadiaaaaahhccabaaaaaaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaa
aaaaaaaadoaaaaabejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaaaaaaaaaa
abaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
abaaaaaaadadaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaabaaaaaaamamaaaa
heaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapalaaaafdfgfpfaepfdejfe
ejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaa
caaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgf
heaaklkl"
}

SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES3"
}

SubProgram "opengl " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
"!!ARBfp1.0
# 8 ALU, 2 TEX
PARAM c[2] = { program.local[0..1] };
TEMP R0;
TEMP R1;
TEX R0, fragment.texcoord[0], texture[0], 2D;
MUL R1, R0, c[0];
SLT R0.w, R1, c[1].x;
MOV result.color.w, R1;
TXP R0.xyz, fragment.texcoord[1], texture[1], 2D;
KIL -R0.w;
ADD R0.xyz, R0, fragment.texcoord[2];
MUL result.color.xyz, R1, R0;
END
# 8 instructions, 2 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
"ps_2_0
; 8 ALU, 3 TEX
dcl_2d s0
dcl_2d s1
def c2, 0.00000000, 1.00000000, 0, 0
dcl t0.xy
dcl t1
dcl t2.xyz
texld r0, t0, s0
mul r1, r0, c0
add_pp r0.x, r1.w, -c1
cmp r0.x, r0, c2, c2.y
mov_pp r2, -r0.x
texldp r0, t1, s1
texkill r2.xyzw
add_pp r0.xyz, r0, t2
mul_pp r0.xyz, r1, r0
mov_pp r0.w, r1
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 9.33 (7 instructions), vertex: 0, texture: 8,
//   sequencer: 6, interpolator: 12;    4 GPRs, 48 threads,
// Performance (if enough threads): ~12 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaabfeaaaaaanaaaaaaaaaaaaaaaceaaaaabaaaaaaabciaaaaaaaa
aaaaaaaaaaaaaaniaaaaaabmaaaaaammppppadaaaaaaaaaeaaaaaabmaaaaaaaa
aaaaaamfaaaaaagmaaacaaaaaaabaaaaaaaaaaheaaaaaaaaaaaaaaieaaacaaab
aaabaaaaaaaaaaimaaaaaaaaaaaaaajmaaadaaabaaabaaaaaaaaaakmaaaaaaaa
aaaaaalmaaadaaaaaaabaaaaaaaaaakmaaaaaaaafpedgpgmgphcaaklaaabaaad
aaabaaaeaaabaaaaaaaaaaaafpedhfhegpggggaaaaaaaaadaaabaaabaaabaaaa
aaaaaaaafpemgjghgiheechfgggggfhcaaklklklaaaeaaamaaabaaabaaabaaaa
aaaaaaaafpengbgjgofegfhiaahahdfpddfpdaaadccodacodcdadddfddcodaaa
aaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabeabpmaabaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaeaaaaaaajabaaaadaaaaaaaaaeaaaaaaaaaaaacegd
aaahaaahaaaaaacbaaaadafaaaaapbfbaaaahcfcaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabajfaacaaaabcaameaaaaaa
aaaaeaahaaaaccaaaaaaaaaabaaidaabbpbppgiiaaaaeaaaembcaaaaaablblbl
kbadaaabliifaaaaabgmlaebmbaaababmiaaaaaaaagmblaahjppaaaacabiaaab
bpbppehiaaaaeaaamiahaaabaamamaaakbadaaaamianaaaaaaaepaaaoaaaacaa
mianaaaaaapaaeaaobabaaaamiapiaaaaajejeaaocaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
"sce_fp_rsx // 11 instructions using 2 registers
[Configuration]
24
ffffffff0001c0200007fff9000000000000848002000000
[Offsets]
2
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
176
9e001700c8011c9dc8000001c8003fe11e800200c8001c9dc8020001c8000001
00000000000000000000000000000000037e4a80ff001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
10800140c9001c9dc8000001c8000001ae021802c8011c9dc8000001c8003fe1
1e7e7d00c8001c9dc8000001c8000001ce820300c8011c9dc8040001c8003fe1
0e810240c9001c9dc9040001c8000001
"
}

SubProgram "d3d11 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
ConstBuffer "$Globals" 128 // 116 used size, 9 vars
Vector 48 [_Color] 4
Float 112 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightBuffer] 2D 1
// 11 instructions, 2 temp regs, 0 temp arrays:
// ALU 6 float, 0 int, 0 uint
// TEX 2 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedahclhfpmpemafkgmoilnkedceblpoemaabaaaaaakeacaaaaadaaaaaa
cmaaaaaaleaaaaaaoiaaaaaaejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apalaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcleabaaaaeaaaaaaagnaaaaaafjaaaaaeegiocaaa
aaaaaaaaaiaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaa
gcbaaaaddcbabaaaabaaaaaagcbaaaadlcbabaaaacaaaaaagcbaaaadhcbabaaa
adaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacacaaaaaaefaaaaajpcaabaaa
aaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaam
bcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaaakiacaia
ebaaaaaaaaaaaaaaahaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaa
egiocaaaaaaaaaaaadaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaaaoaaaaahdcaabaaaabaaaaaa
egbabaaaacaaaaaapgbpbaaaacaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaa
abaaaaaaeghobaaaabaaaaaaaagabaaaabaaaaaaaaaaaaahhcaabaaaabaaaaaa
egacbaaaabaaaaaaegbcbaaaadaaaaaadiaaaaahhccabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaaaaaaaaaa
doaaaaab"
}

SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES"
}

SubProgram "d3d11_9x " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
ConstBuffer "$Globals" 128 // 116 used size, 9 vars
Vector 48 [_Color] 4
Float 112 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightBuffer] 2D 1
// 11 instructions, 2 temp regs, 0 temp arrays:
// ALU 6 float, 0 int, 0 uint
// TEX 2 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefiecedenfejklhhinpfoogglljoecilaehoacnabaaaaaaniadaaaaaeaaaaaa
daaaaaaagaabaaaabmadaaaakeadaaaaebgpgodjciabaaaaciabaaaaaaacpppp
oeaaaaaaeeaaaaaaacaacmaaaaaaeeaaaaaaeeaaacaaceaaaaaaeeaaaaaaaaaa
abababaaaaaaadaaabaaaaaaaaaaaaaaaaaaahaaabaaabaaaaaaaaaaaaacpppp
bpaaaaacaaaaaaiaaaaaadlabpaaaaacaaaaaaiaabaaaplabpaaaaacaaaaaaia
acaaahlabpaaaaacaaaaaajaaaaiapkabpaaaaacaaaaaajaabaiapkaecaaaaad
aaaaapiaaaaaoelaaaaioekaabaaaaacabaaaiiaaaaappkaaeaaaaaeabaacpia
aaaappiaabaappiaabaaaakbafaaaaadaaaacpiaaaaaoeiaaaaaoekaagaaaaac
acaaaiiaabaapplaafaaaaadacaaadiaacaappiaabaaoelaebaaaaababaaapia
ecaaaaadabaacpiaacaaoeiaabaioekaacaaaaadabaachiaabaaoeiaacaaoela
afaaaaadaaaachiaaaaaoeiaabaaoeiaabaaaaacaaaicpiaaaaaoeiappppaaaa
fdeieefcleabaaaaeaaaaaaagnaaaaaafjaaaaaeegiocaaaaaaaaaaaaiaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafibiaaaeaahabaaa
aaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaagcbaaaaddcbabaaa
abaaaaaagcbaaaadlcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagfaaaaad
pccabaaaaaaaaaaagiaaaaacacaaaaaaefaaaaajpcaabaaaaaaaaaaaegbabaaa
abaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaambcaabaaaabaaaaaa
dkaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaaakiacaiaebaaaaaaaaaaaaaa
ahaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaaegiocaaaaaaaaaaa
adaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaa
anaaaeadakaabaaaabaaaaaaaoaaaaahdcaabaaaabaaaaaaegbabaaaacaaaaaa
pgbpbaaaacaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaaabaaaaaaeghobaaa
abaaaaaaaagabaaaabaaaaaaaaaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaa
egbcbaaaadaaaaaadiaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaa
abaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaaaaaaaaaadoaaaaabejfdeheo
iaaaaaaaaeaaaaaaaiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaa
apaaaaaaheaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadadaaaaheaaaaaa
abaaaaaaaaaaaaaaadaaaaaaacaaaaaaapalaaaaheaaaaaaacaaaaaaaaaaaaaa
adaaaaaaadaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl"
}

SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES3"
}

SubProgram "opengl " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_Color]
Vector 1 [unity_LightmapFade]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
SetTexture 2 [unity_Lightmap] 2D
SetTexture 3 [unity_LightmapInd] 2D
"!!ARBfp1.0
# 19 ALU, 4 TEX
PARAM c[4] = { program.local[0..2],
		{ 8 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEX R0, fragment.texcoord[0], texture[0], 2D;
TEX R1, fragment.texcoord[2], texture[2], 2D;
TXP R3.xyz, fragment.texcoord[1], texture[1], 2D;
MUL R2, R0, c[0];
SLT R0.x, R2.w, c[2];
MUL R1.xyz, R1.w, R1;
DP4 R1.w, fragment.texcoord[3], fragment.texcoord[3];
MOV result.color.w, R2;
KIL -R0.x;
TEX R0, fragment.texcoord[2], texture[3], 2D;
MUL R0.xyz, R0.w, R0;
MUL R0.xyz, R0, c[3].x;
RSQ R0.w, R1.w;
RCP R0.w, R0.w;
MAD R1.xyz, R1, c[3].x, -R0;
MAD_SAT R0.w, R0, c[1].z, c[1];
MAD R0.xyz, R0.w, R1, R0;
ADD R0.xyz, R3, R0;
MUL result.color.xyz, R2, R0;
END
# 19 instructions, 4 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_Color]
Vector 1 [unity_LightmapFade]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
SetTexture 2 [unity_Lightmap] 2D
SetTexture 3 [unity_LightmapInd] 2D
"ps_2_0
; 17 ALU, 5 TEX
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
def c3, 0.00000000, 1.00000000, 8.00000000, 0
dcl t0.xy
dcl t1
dcl t2.xy
dcl t3
texld r0, t0, s0
texldp r2, t1, s1
texld r3, t2, s3
mul r1, r0, c0
add_pp r0.x, r1.w, -c2
cmp r0.x, r0, c3, c3.y
mov_pp r0, -r0.x
mul_pp r3.xyz, r3.w, r3
mul_pp r3.xyz, r3, c3.z
texkill r0.xyzw
texld r0, t2, s2
mul_pp r4.xyz, r0.w, r0
dp4 r0.x, t3, t3
rsq r0.x, r0.x
rcp r0.x, r0.x
mad_pp r4.xyz, r4, c3.z, -r3
mad_sat r0.x, r0, c1.z, c1.w
mad_pp r0.xyz, r0.x, r4, r3
add_pp r0.xyz, r2, r0
mul_pp r0.xyz, r1, r0
mov_pp r0.w, r1
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_Color]
Float 2 [_Cutoff]
Vector 1 [unity_LightmapFade]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
SetTexture 2 [unity_Lightmap] 2D
SetTexture 3 [unity_LightmapInd] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 17.33 (13 instructions), vertex: 0, texture: 16,
//   sequencer: 10, interpolator: 16;    8 GPRs, 24 threads,
// Performance (if enough threads): ~17 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaabmiaaaaabdmaaaaaaaaaaaaaaceaaaaabhaaaaaabjiaaaaaaaa
aaaaaaaaaaaaabeiaaaaaabmaaaaabdmppppadaaaaaaaaahaaaaaabmaaaaaaaa
aaaaabdfaaaaaakiaaacaaaaaaabaaaaaaaaaalaaaaaaaaaaaaaaamaaaacaaac
aaabaaaaaaaaaamiaaaaaaaaaaaaaaniaaadaaabaaabaaaaaaaaaaoiaaaaaaaa
aaaaaapiaaadaaaaaaabaaaaaaaaaaoiaaaaaaaaaaaaababaaadaaacaaabaaaa
aaaaaaoiaaaaaaaaaaaaabbaaaacaaabaaabaaaaaaaaaalaaaaaaaaaaaaaabcd
aaadaaadaaabaaaaaaaaaaoiaaaaaaaafpedgpgmgphcaaklaaabaaadaaabaaae
aaabaaaaaaaaaaaafpedhfhegpggggaaaaaaaaadaaabaaabaaabaaaaaaaaaaaa
fpemgjghgiheechfgggggfhcaaklklklaaaeaaamaaabaaabaaabaaaaaaaaaaaa
fpengbgjgofegfhiaahfgogjhehjfpemgjghgihegngbhaaahfgogjhehjfpemgj
ghgihegngbhaeggbgegfaahfgogjhehjfpemgjghgihegngbhaejgogeaahahdfp
ddfpdaaadccodacodcdadddfddcodaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaa
aaaaaabeabpmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaaapm
baaaahaaaaaaaaaeaaaaaaaaaaaadaieaaapaaapaaaaaacbaaaadafaaaaapbfb
aaaadcfcaaaapdfdaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaebaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaafajgaadbaajbcaabcaaaaabaaaaaaaagaakmeaabcaaaaaa
aaaaeabaaaaaccaaaaaaaaaabaaihaabbpbppgiiaaaaeaaaembeaaaaaablblbl
kbahaaabliidaaaaabgmlaecmbaaabacmiaaaaaaaalbblaahjppaaaababieaab
bpbppoiiaaaaeaaabadigaebbpbppgiiaaaaeaaabacifaebbpbppgiiaaaaeaaa
miabaaaaaakhkhaaopadadaabeciaaaaaablgmblkbagppafkabhaaabaamamagm
kbahaaiamjabaaaaaagmmgblilaaababkichaaacaablmaebmbaaagppmiahaaad
ablbmamaolaaafacmialaaaaaamagmmaoladaaacmialaaaaaabamaaaoaaaaeaa
mialaaaaaamabaaaobabaaaamiapiaaaaananaaaocaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_Color]
Vector 1 [unity_LightmapFade]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
SetTexture 2 [unity_Lightmap] 2D
SetTexture 3 [unity_LightmapInd] 2D
"sce_fp_rsx // 23 instructions using 3 registers
[Configuration]
24
ffffffff0003c020000ffff5000000000000848003000000
[Offsets]
3
_Color 1 0
00000020
unity_LightmapFade 2 0
0000012000000100
_Cutoff 1 0
00000040
[Microcode]
368
9e001700c8011c9dc8000001c8003fe11e800200c8001c9dc8020001c8000001
00000000000000000000000000000000037e4a80ff001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
10800140c9001c9dc8000001c8000001fe020100c8011c9dc8000001c8003fe1
08000600c8041c9dc8040001c8000001de041704c8011c9dc8000001c8003fe1
10820140c8081c9dc8003001c800000110041b0054001c9dc8000001c8000001
de021706c8011c9dc8000001c8003fe10e820240fe041c9dc8043001c8000001
0e840440ff041c9dc8080001c904000310023a0054021c9dfe080001c8000001
0000000000000000000000000000000010828300c8041c9dc8020001c8000001
000000000000000000000000000000000e820440ff041c9dc9080001c9040001
ae041802c8011c9dc8000001c8003fe10e820340c8081c9dc9040001c8000001
0e810240c9001c9dc9040001c8000001
"
}

SubProgram "d3d11 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
ConstBuffer "$Globals" 160 // 148 used size, 11 vars
Vector 48 [_Color] 4
Vector 112 [unity_LightmapFade] 4
Float 144 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightBuffer] 2D 1
SetTexture 2 [unity_Lightmap] 2D 2
SetTexture 3 [unity_LightmapInd] 2D 3
// 21 instructions, 3 temp regs, 0 temp arrays:
// ALU 14 float, 0 int, 0 uint
// TEX 4 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedieiehjcjikpgjamdoiciciboophoojehabaaaaaaeeaeaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaabaaaaaa
amamaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapalaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaadaaaaaaapapaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcdmadaaaaeaaaaaaampaaaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaa
fibiaaaeaahabaaaadaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaad
mcbabaaaabaaaaaagcbaaaadlcbabaaaacaaaaaagcbaaaadpcbabaaaadaaaaaa
gfaaaaadpccabaaaaaaaaaaagiaaaaacadaaaaaaefaaaaajpcaabaaaaaaaaaaa
egbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaambcaabaaa
abaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaaakiacaiaebaaaaaa
aaaaaaaaajaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaaegiocaaa
aaaaaaaaadaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaa
aaaaaaaaanaaaeadakaabaaaabaaaaaabbaaaaahbcaabaaaabaaaaaaegbobaaa
adaaaaaaegbobaaaadaaaaaaelaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaa
dccaaaalbcaabaaaabaaaaaaakaabaaaabaaaaaackiacaaaaaaaaaaaahaaaaaa
dkiacaaaaaaaaaaaahaaaaaaefaaaaajpcaabaaaacaaaaaaogbkbaaaabaaaaaa
eghobaaaadaaaaaaaagabaaaadaaaaaadiaaaaahccaabaaaabaaaaaadkaabaaa
acaaaaaaabeaaaaaaaaaaaebdiaaaaahocaabaaaabaaaaaaagajbaaaacaaaaaa
fgafbaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaogbkbaaaabaaaaaaeghobaaa
acaaaaaaaagabaaaacaaaaaadiaaaaahicaabaaaacaaaaaadkaabaaaacaaaaaa
abeaaaaaaaaaaaebdcaaaaakhcaabaaaacaaaaaapgapbaaaacaaaaaaegacbaaa
acaaaaaajgahbaiaebaaaaaaabaaaaaadcaaaaajhcaabaaaabaaaaaaagaabaaa
abaaaaaaegacbaaaacaaaaaajgahbaaaabaaaaaaaoaaaaahdcaabaaaacaaaaaa
egbabaaaacaaaaaapgbpbaaaacaaaaaaefaaaaajpcaabaaaacaaaaaaegaabaaa
acaaaaaaeghobaaaabaaaaaaaagabaaaabaaaaaaaaaaaaahhcaabaaaabaaaaaa
egacbaaaabaaaaaaegacbaaaacaaaaaadiaaaaahhccabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaaaaaaaaaa
doaaaaab"
}

SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES"
}

SubProgram "d3d11_9x " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
ConstBuffer "$Globals" 160 // 148 used size, 11 vars
Vector 48 [_Color] 4
Vector 112 [unity_LightmapFade] 4
Float 144 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightBuffer] 2D 1
SetTexture 2 [unity_Lightmap] 2D 2
SetTexture 3 [unity_LightmapInd] 2D 3
// 21 instructions, 3 temp regs, 0 temp arrays:
// ALU 14 float, 0 int, 0 uint
// TEX 4 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefiecedpgfpcknbmnfnkhekolgpijmapdnnmfgmabaaaaaahmagaaaaaeaaaaaa
daaaaaaageacaaaakiafaaaaeiagaaaaebgpgodjcmacaaaacmacaaaaaaacpppp
neabaaaafiaaaaaaadaadeaaaaaafiaaaaaafiaaaeaaceaaaaaafiaaaaaaaaaa
abababaaacacacaaadadadaaaaaaadaaabaaaaaaaaaaaaaaaaaaahaaabaaabaa
aaaaaaaaaaaaajaaabaaacaaaaaaaaaaaaacppppfbaaaaafadaaapkaaaaaaaeb
aaaaaaaaaaaaaaaaaaaaaaaabpaaaaacaaaaaaiaaaaaaplabpaaaaacaaaaaaia
abaaaplabpaaaaacaaaaaaiaacaaaplabpaaaaacaaaaaajaaaaiapkabpaaaaac
aaaaaajaabaiapkabpaaaaacaaaaaajaacaiapkabpaaaaacaaaaaajaadaiapka
ecaaaaadaaaaapiaaaaaoelaaaaioekaabaaaaacabaaaiiaaaaappkaaeaaaaae
abaacpiaaaaappiaabaappiaacaaaakbafaaaaadaaaacpiaaaaaoeiaaaaaoeka
abaaaaacacaaadiaaaaabllaagaaaaacacaaaeiaabaapplaafaaaaadadaaadia
acaakkiaabaaoelaebaaaaababaaapiaecaaaaadabaacpiaacaaoeiaadaioeka
ecaaaaadacaacpiaacaaoeiaacaioekaecaaaaadadaacpiaadaaoeiaabaioeka
ajaaaaadadaaaiiaacaaoelaacaaoelaahaaaaacadaaaiiaadaappiaagaaaaac
adaaaiiaadaappiaaeaaaaaeadaadiiaadaappiaabaakkkaabaappkaafaaaaad
abaaciiaabaappiaadaaaakaafaaaaadabaachiaabaaoeiaabaappiaafaaaaad
abaaciiaacaappiaadaaaakaaeaaaaaeacaachiaabaappiaacaaoeiaabaaoeib
aeaaaaaeabaachiaadaappiaacaaoeiaabaaoeiaacaaaaadabaachiaabaaoeia
adaaoeiaafaaaaadaaaachiaaaaaoeiaabaaoeiaabaaaaacaaaicpiaaaaaoeia
ppppaaaafdeieefcdmadaaaaeaaaaaaampaaaaaafjaaaaaeegiocaaaaaaaaaaa
akaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaad
aagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafibiaaaeaahabaaaaaaaaaaa
ffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaa
ffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaa
gcbaaaadmcbabaaaabaaaaaagcbaaaadlcbabaaaacaaaaaagcbaaaadpcbabaaa
adaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacadaaaaaaefaaaaajpcaabaaa
aaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaam
bcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaaakiacaia
ebaaaaaaaaaaaaaaajaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaa
egiocaaaaaaaaaaaadaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaabbaaaaahbcaabaaaabaaaaaa
egbobaaaadaaaaaaegbobaaaadaaaaaaelaaaaafbcaabaaaabaaaaaaakaabaaa
abaaaaaadccaaaalbcaabaaaabaaaaaaakaabaaaabaaaaaackiacaaaaaaaaaaa
ahaaaaaadkiacaaaaaaaaaaaahaaaaaaefaaaaajpcaabaaaacaaaaaaogbkbaaa
abaaaaaaeghobaaaadaaaaaaaagabaaaadaaaaaadiaaaaahccaabaaaabaaaaaa
dkaabaaaacaaaaaaabeaaaaaaaaaaaebdiaaaaahocaabaaaabaaaaaaagajbaaa
acaaaaaafgafbaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaogbkbaaaabaaaaaa
eghobaaaacaaaaaaaagabaaaacaaaaaadiaaaaahicaabaaaacaaaaaadkaabaaa
acaaaaaaabeaaaaaaaaaaaebdcaaaaakhcaabaaaacaaaaaapgapbaaaacaaaaaa
egacbaaaacaaaaaajgahbaiaebaaaaaaabaaaaaadcaaaaajhcaabaaaabaaaaaa
agaabaaaabaaaaaaegacbaaaacaaaaaajgahbaaaabaaaaaaaoaaaaahdcaabaaa
acaaaaaaegbabaaaacaaaaaapgbpbaaaacaaaaaaefaaaaajpcaabaaaacaaaaaa
egaabaaaacaaaaaaeghobaaaabaaaaaaaagabaaaabaaaaaaaaaaaaahhcaabaaa
abaaaaaaegacbaaaabaaaaaaegacbaaaacaaaaaadiaaaaahhccabaaaaaaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaa
aaaaaaaadoaaaaabejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaaaaaaaaaa
abaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
abaaaaaaadadaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaabaaaaaaamamaaaa
imaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapalaaaaimaaaaaaadaaaaaa
aaaaaaaaadaaaaaaadaaaaaaapapaaaafdfgfpfaepfdejfeejepeoaafeeffied
epepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl"
}

SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES3"
}

SubProgram "opengl " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
SetTexture 2 [unity_Lightmap] 2D
"!!ARBfp1.0
# 10 ALU, 3 TEX
PARAM c[3] = { program.local[0..1],
		{ 8 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEX R0, fragment.texcoord[0], texture[0], 2D;
TXP R2.xyz, fragment.texcoord[1], texture[1], 2D;
MUL R1, R0, c[0];
SLT R0.x, R1.w, c[1];
MOV result.color.w, R1;
KIL -R0.x;
TEX R0, fragment.texcoord[2], texture[2], 2D;
MUL R0.xyz, R0.w, R0;
MAD R0.xyz, R0, c[2].x, R2;
MUL result.color.xyz, R1, R0;
END
# 10 instructions, 3 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
SetTexture 2 [unity_Lightmap] 2D
"ps_2_0
; 9 ALU, 4 TEX
dcl_2d s0
dcl_2d s1
dcl_2d s2
def c2, 0.00000000, 1.00000000, 8.00000000, 0
dcl t0.xy
dcl t1
dcl t2.xy
texld r0, t0, s0
texldp r1, t1, s1
mul r2, r0, c0
add_pp r0.x, r2.w, -c1
cmp r0.x, r0, c2, c2.y
mov_pp r0, -r0.x
texkill r0.xyzw
texld r0, t2, s2
mul_pp r0.xyz, r0.w, r0
mad_pp r0.xyz, r0, c2.z, r1
mul_pp r0.xyz, r2, r0
mov_pp r0.w, r2
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
SetTexture 2 [unity_Lightmap] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 9.33 (7 instructions), vertex: 0, texture: 12,
//   sequencer: 6, interpolator: 12;    4 GPRs, 48 threads,
// Performance (if enough threads): ~12 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaabhiaaaaaanmaaaaaaaaaaaaaaceaaaaabceaaaaabemaaaaaaaa
aaaaaaaaaaaaaapmaaaaaabmaaaaaaopppppadaaaaaaaaafaaaaaabmaaaaaaaa
aaaaaaoiaaaaaaiaaaacaaaaaaabaaaaaaaaaaiiaaaaaaaaaaaaaajiaaacaaab
aaabaaaaaaaaaakaaaaaaaaaaaaaaalaaaadaaabaaabaaaaaaaaaamaaaaaaaaa
aaaaaanaaaadaaaaaaabaaaaaaaaaamaaaaaaaaaaaaaaanjaaadaaacaaabaaaa
aaaaaamaaaaaaaaafpedgpgmgphcaaklaaabaaadaaabaaaeaaabaaaaaaaaaaaa
fpedhfhegpggggaaaaaaaaadaaabaaabaaabaaaaaaaaaaaafpemgjghgiheechf
gggggfhcaaklklklaaaeaaamaaabaaabaaabaaaaaaaaaaaafpengbgjgofegfhi
aahfgogjhehjfpemgjghgihegngbhaaahahdfpddfpdaaadccodacodcdadddfdd
codaaaklaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabeabpmaabaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaaajmbaaaadaaaaaaaaaeaaaaaaaa
aaaacagdaaahaaahaaaaaacbaaaadafaaaaapbfbaaaadcfcaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaebaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaafajgaacaaaabcaa
meaaaaaaaaaaeaaiaaaaccaaaaaaaaaabaaidaabbpbppgiiaaaaeaaaembcaaaa
aablblblkbadaaabliifaaaaabgmlaebmbaaababmiaaaaaaaalbblaahjppaaaa
cabiaaabbpbppehiaaaaeaaabacicaebbpbppgiiaaaaeaaakiihababaamamaed
kbadaappmianaaaaaablpaaeolabacaamianaaaaaapaaeaaobabaaaamiapiaaa
aajejeaaocaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_LightBuffer] 2D
SetTexture 2 [unity_Lightmap] 2D
"sce_fp_rsx // 12 instructions using 3 registers
[Configuration]
24
ffffffff0001c0200007fffd000000000000848003000000
[Offsets]
2
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
192
9e001700c8011c9dc8000001c8003fe11e800200c8001c9dc8020001c8000001
00000000000000000000000000000000037e4a80ff001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
10800140c9001c9dc8000001c8000001de021704c8011c9dc8000001c8003fe1
02820140fe041c9dc8003001c8000001ae041802c8011c9dc8000001c8003fe1
0e82044001041c9cc8040001c80800010e810240c9001c9dc9040001c8000001
"
}

SubProgram "d3d11 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
ConstBuffer "$Globals" 160 // 148 used size, 11 vars
Vector 48 [_Color] 4
Float 144 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightBuffer] 2D 1
SetTexture 2 [unity_Lightmap] 2D 2
// 13 instructions, 3 temp regs, 0 temp arrays:
// ALU 7 float, 0 int, 0 uint
// TEX 3 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedlanidpipaidolebkmdlchfemfcaagcneabaaaaaaaiadaaaaadaaaaaa
cmaaaaaaleaaaaaaoiaaaaaaejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaabaaaaaa
amamaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapalaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcbiacaaaaeaaaaaaaigaaaaaafjaaaaaeegiocaaa
aaaaaaaaakaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaae
aahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaagcbaaaad
dcbabaaaabaaaaaagcbaaaadmcbabaaaabaaaaaagcbaaaadlcbabaaaacaaaaaa
gfaaaaadpccabaaaaaaaaaaagiaaaaacadaaaaaaefaaaaajpcaabaaaaaaaaaaa
egbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaambcaabaaa
abaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaaakiacaiaebaaaaaa
aaaaaaaaajaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaaegiocaaa
aaaaaaaaadaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaa
aaaaaaaaanaaaeadakaabaaaabaaaaaaaoaaaaahdcaabaaaabaaaaaaegbabaaa
acaaaaaapgbpbaaaacaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaaabaaaaaa
eghobaaaabaaaaaaaagabaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaogbkbaaa
abaaaaaaeghobaaaacaaaaaaaagabaaaacaaaaaadiaaaaahicaabaaaabaaaaaa
dkaabaaaacaaaaaaabeaaaaaaaaaaaebdcaaaaajhcaabaaaabaaaaaapgapbaaa
abaaaaaaegacbaaaacaaaaaaegacbaaaabaaaaaadiaaaaahhccabaaaaaaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaa
aaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
"!!GLES"
}

SubProgram "d3d11_9x " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
ConstBuffer "$Globals" 160 // 148 used size, 11 vars
Vector 48 [_Color] 4
Float 144 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_LightBuffer] 2D 1
SetTexture 2 [unity_Lightmap] 2D 2
// 13 instructions, 3 temp regs, 0 temp arrays:
// ALU 7 float, 0 int, 0 uint
// TEX 3 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefiecedjcndmnjmklkfeekoacpihcmlgclepbamabaaaaaaiiaeaaaaaeaaaaaa
daaaaaaakmabaaaammadaaaafeaeaaaaebgpgodjheabaaaaheabaaaaaaacpppp
cmabaaaaeiaaaaaaacaadaaaaaaaeiaaaaaaeiaaadaaceaaaaaaeiaaaaaaaaaa
abababaaacacacaaaaaaadaaabaaaaaaaaaaaaaaaaaaajaaabaaabaaaaaaaaaa
aaacppppfbaaaaafacaaapkaaaaaaaebaaaaaaaaaaaaaaaaaaaaaaaabpaaaaac
aaaaaaiaaaaaaplabpaaaaacaaaaaaiaabaaaplabpaaaaacaaaaaajaaaaiapka
bpaaaaacaaaaaajaabaiapkabpaaaaacaaaaaajaacaiapkaecaaaaadaaaaapia
aaaaoelaaaaioekaabaaaaacabaaaiiaaaaappkaaeaaaaaeabaacpiaaaaappia
abaappiaabaaaakbafaaaaadaaaacpiaaaaaoeiaaaaaoekaagaaaaacacaaaiia
abaapplaafaaaaadacaaadiaacaappiaabaaoelaabaaaaacadaaadiaaaaablla
ebaaaaababaaapiaecaaaaadabaacpiaacaaoeiaabaioekaecaaaaadacaacpia
adaaoeiaacaioekaafaaaaadabaaciiaacaappiaacaaaakaaeaaaaaeabaachia
abaappiaacaaoeiaabaaoeiaafaaaaadaaaachiaaaaaoeiaabaaoeiaabaaaaac
aaaicpiaaaaaoeiappppaaaafdeieefcbiacaaaaeaaaaaaaigaaaaaafjaaaaae
egiocaaaaaaaaaaaakaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaa
abaaaaaafkaaaaadaagabaaaacaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaa
gcbaaaaddcbabaaaabaaaaaagcbaaaadmcbabaaaabaaaaaagcbaaaadlcbabaaa
acaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacadaaaaaaefaaaaajpcaabaaa
aaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaam
bcaabaaaabaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaaakiacaia
ebaaaaaaaaaaaaaaajaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaa
egiocaaaaaaaaaaaadaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaaanaaaeadakaabaaaabaaaaaaaoaaaaahdcaabaaaabaaaaaa
egbabaaaacaaaaaapgbpbaaaacaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaa
abaaaaaaeghobaaaabaaaaaaaagabaaaabaaaaaaefaaaaajpcaabaaaacaaaaaa
ogbkbaaaabaaaaaaeghobaaaacaaaaaaaagabaaaacaaaaaadiaaaaahicaabaaa
abaaaaaadkaabaaaacaaaaaaabeaaaaaaaaaaaebdcaaaaajhcaabaaaabaaaaaa
pgapbaaaabaaaaaaegacbaaaacaaaaaaegacbaaaabaaaaaadiaaaaahhccabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadgaaaaaficcabaaaaaaaaaaa
dkaabaaaaaaaaaaadoaaaaabejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaabaaaaaa
amamaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapalaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklkl"
}

SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
"!!GLES3"
}

}
	}
	Pass {
		Name "ShadowCaster"
		Tags { "LightMode" = "ShadowCaster" }
		Fog {Mode Off}
		ZWrite On ZTest LEqual Cull Off
		Offset 1, 1
Program "vp" {
// Vertex combos: 2
//   opengl - ALU: 73 to 74
//   d3d9 - ALU: 73 to 75
//   d3d11 - ALU: 22 to 23, TEX: 0 to 0, FLOW: 1 to 1
//   d3d11_9x - ALU: 22 to 23, TEX: 0 to 0, FLOW: 1 to 1
SubProgram "opengl " {
Keywords { "SHADOWS_DEPTH" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Vector 5 [_Time]
Vector 6 [unity_LightShadowBias]
Float 7 [_WaveSpeed]
Float 8 [_Amplitude]
Vector 9 [_MainTex_ST]
"!!ARBvp1.0
# 74 ALU
PARAM c[15] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.mvp,
		program.local[5..9],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[7];
MUL R0.x, R0, c[5];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[10];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[11].xyxw, c[11].zwzw;
MAD R1.xyz, R1, R0, c[12].xyxw;
MAD R1.xyz, R1, R0, c[12].zwzw;
MAD R1.xyz, R1, R0, c[13].xyxw;
MAD R0.xyz, R1, R0, c[10].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[13].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[10].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[14].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[8];
MAD R0.w, -R0.x, c[14].x, vertex.position.z;
MAD R0.x, R1.w, c[14].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[10];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[11].xyxw, c[11].zwzw;
MAD R3.xyz, R2, R0, c[12].xyxw;
MAD R3.xyz, R3, R0, c[12].zwzw;
MAD R3.xyz, R3, R0, c[13].xyxw;
ADD R1.xyz, -R1.w, c[10];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[11].xyxw, c[11].zwzw;
MAD R2.xyz, R2, R1, c[12].xyxw;
MAD R2.xyz, R2, R1, c[12].zwzw;
MAD R3.xyz, R3, R0, c[10].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[13].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[10].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[13].xyxw;
MAD R1.xyz, R0, R1, c[10].wzww;
SGE R0.yz, R1.w, c[13].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[10].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R0.x, R0, c[8];
MUL R0.y, -R0, c[14].z;
MAD R0.y, R0.x, c[10], R0;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R2.w, c[8];
MAD R0.x, R0, c[10].y, vertex.position;
DP4 R1.y, R0.xywz, c[4];
DP4 R1.x, R0.xywz, c[3];
ADD R1.x, R1, c[6];
MAX R1.z, R1.x, -R1.y;
ADD R1.z, R1, -R1.x;
MAD result.position.z, R1, c[6].y, R1.x;
MOV result.position.w, R1.y;
DP4 result.position.y, R0.xywz, c[2];
DP4 result.position.x, R0.xywz, c[1];
MAD result.texcoord[1].xy, vertex.texcoord[0], c[9], c[9].zwzw;
END
# 74 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "SHADOWS_DEPTH" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 4 [_Time]
Vector 5 [unity_LightShadowBias]
Float 6 [_WaveSpeed]
Float 7 [_Amplitude]
Vector 8 [_MainTex_ST]
"vs_2_0
; 75 ALU
def c9, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c10, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c11, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c12, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c13, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_texcoord0 v3
add r0.w, v0.x, v0.y
mov r0.x, c4
mul r0.x, c6, r0
slt r0.y, r0.x, c11.x
max r0.y, -r0, r0
slt r0.y, c11.x, r0
add r0.z, -r0.y, c9
mul r0.z, r0.x, r0
mad r1.y, r0, -r0.x, r0.z
add r1.x, r0.w, v0.z
mad r0.x, r1.y, c11.y, r1
mad r0.x, r0, c11.z, c11.w
frc r0.x, r0
mad r1.z, r0.x, c12.x, c12.y
sincos r0.xy, r1.z, c10.xyzw, c9.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1, c13.x, r1.x
mul r0.x, r0, c7
mad r1.z, -r0.x, c13.y, v0
mad r0.x, r1.y, c12.z, r1
mad r0.x, r0, c11.z, c11.w
mad r0.y, r0, c11.z, c11.w
frc r0.y, r0
mov r1.w, v0
mad r1.y, r0, c12.x, c12
frc r1.x, r0
sincos r0.xy, r1.y, c10.xyzw, c9.xyzw
mad r0.x, r1, c12, c12.y
mul r0.z, v3.y, r0.y
sincos r2.xy, r0.x, c10.xyzw, c9.xyzw
mul r0.y, v3, v3.x
mul r0.x, v3.y, r2.y
mul r0.y, -r0, c12.w
mul r0.x, r0, c7
mad r1.y, r0.x, c9.w, r0
mul r0.x, r0.z, c7
mad r1.x, r0, c9.w, v0
dp4 r0.x, r1, c2
add r0.x, r0, c5
max r0.y, r0.x, c11.x
add r0.y, r0, -r0.x
mad r0.z, r0.y, c5.y, r0.x
dp4 r0.w, r1, c3
dp4 r0.x, r1, c0
dp4 r0.y, r1, c1
mov oPos, r0
mov oT0, r0
mad oT1.xy, v3, c8, c8.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "SHADOWS_DEPTH" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Float 7 [_Amplitude]
Vector 8 [_MainTex_ST]
Vector 0 [_Time]
Float 6 [_WaveSpeed]
Matrix 2 [glstate_matrix_mvp] 4
Vector 1 [unity_LightShadowBias]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 36.00 (27 instructions), vertex: 32, texture: 0,
//   sequencer: 16,  4 GPRs, 31 threads,
// Performance (if enough threads): ~36 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaableaaaaabniaaaaaaaaaaaaaaceaaaaabfeaaaaabhmaaaaaaaa
aaaaaaaaaaaaabcmaaaaaabmaaaaabbnpppoadaaaaaaaaagaaaaaabmaaaaaaaa
aaaaabbgaaaaaajeaaacaaahaaabaaaaaaaaaakaaaaaaaaaaaaaaalaaaacaaai
aaabaaaaaaaaaalmaaaaaaaaaaaaaammaaacaaaaaaabaaaaaaaaaalmaaaaaaaa
aaaaaancaaacaaagaaabaaaaaaaaaakaaaaaaaaaaaaaaannaaacaaacaaaeaaaa
aaaaaapaaaaaaaaaaaaaabaaaaacaaabaaabaaaaaaaaaalmaaaaaaaafpebgnha
gmgjhehfgegfaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaafpengbgjgofegfhi
fpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpfegjgngfaafpfhgbhggffd
hagfgfgeaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaaaaadaaadaaaeaaae
aaabaaaaaaaaaaaahfgogjhehjfpemgjghgihefdgigbgegphhecgjgbhdaahghd
fpddfpdaaadccodacodcdadddfddcodaaaklklklaaaaaaaaaaaaaaabaaaaaaaa
aaaaaaaaaaaaaabeaapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaea
aaaaabjiaaabaaadaaaaaaaaaaaaaaaaaaaaaicbaaaaaaabaaaaaaacaaaaaaab
aaaaacjaaabaaaaeaacafaafaaaadafbaaaabacaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaeamjapnlaaaaaaaamaejapnldpiaaaaadoccpjiddpggggggdpaaaaaa
doemmmmndpljjjjkeaehkobeeaammmmnlpiaaaaadacfgaaeaaaabaaamcaaaaaa
aaaagaakgababcaabcaaaaaaaaaagabgeabmbcaabcaaaaaaaaaaaaaabacameaa
ccaaaaaaafpibaaaaaaaagiiaaaaaaaaafpicaaaaaaaapmiaaaaaaaamiacaaaa
aagmblaacbaappaamiabaaaaaagmgmaacbaaagaaheaeaaaaabloblgmlaabpnaa
kibaaaaabiaaaaebmcaaaaagmiaiaaadaalbgmaaobacacaamiahaaadaagmmamg
klaappaamiapaaadaaaakmaakbadpoaamiahaaaaaamamgaakaadpoaamiahaaaa
aamaaaaaoiaaaaaamiahaaaaaamagmmgilaapnpnmabaaaaaaaaaaagmocaaaaaa
macaaaaaaaaaaalbocaaaaaamaemaaacaalbagmgkbacpoaamiahaaaaaabgmaaa
obacaaaamiahaaadaamagmaakbaaahaamiabaaabaagmgmaaoaadabaabeapaaaa
aablnalbkbabafadaeceababafmgmgbloaadabadmiapaaaaaamgpideklabaeaa
miapaaaaaalbpiaaklabadaamiapaaaaaagmjoppklabacaamiabaaaaaagmgmaa
kaaaabaamialiadoaamjmjaaocaaaaaamiacaaaaaagmlbaakcaapnaamiacaaaa
aegmlbaaoaaaaaaamiaeiadoaalblbgmklaaabaamiadiaaaaalalabkilacaiai
aaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "SHADOWS_DEPTH" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Vector 467 [_Time]
Vector 466 [unity_LightShadowBias]
Float 465 [_WaveSpeed]
Float 464 [_Amplitude]
Vector 463 [_MainTex_ST]
"sce_vp_rsx // 30 instructions using 3 registers
[Configuration]
8
0000001e01010300
[Defaults]
2
462 4
400ccccd3e4ccccd4047ae143f000000
461 3
3f6666663fb9999a00000000
[Microcode]
480
401f9c6c011cf808010400d740619fa000001c6c00c000000106c08aa0409ffc
00001c6c005d10000186c08360411ffc00001c6c009d3000008000c360411ffc
201fdc6c004000000086c08360411ffc00001c6c00c000550106c08aa0203ffc
00001c6c004000000086c08360405ffc00002400004000800086c08360405ffc
00001c6c011ce055008800dfe0219ffc00001c6c011cd055009540dfe0205ffc
00009c6c7880082a8100008aa029007c00009c6c789cd080028000c00031007c
00011c6c7880082a81154055402900fc00001c6c008008000095408360409ffc
00001c6c0080082a8115414360411ffc00001c6c009d0000008000c360411ffc
00001c6c009d002a808000c360405ffc00001c6c009d0000048000c360409ffc
00001c6c011ce02a80bfc0c000a09ffc00001c6c011ce0d5009540d540405ffc
00001c6c011ce00000bfc0c000411ffc00001c6c0040007f8106c08360403ffc
401f9c6c01d0300d8086c0c360403f8000009c6c01d0200d8086c0c360411ffc
00009c6c00dd20000186c08000a11ffc401f9c6c01d0100d8086c0c360409f80
00009c6c029cd00002aa80c360409ffc00009c6c00c0002a8286c0a000a09ffc
401f9c6c01d0000d8086c0c360411f80401f9c6c011d202a829540c000a05f81
"
}

SubProgram "d3d11 " {
Keywords { "SHADOWS_DEPTH" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 112 // 96 used size, 8 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityShadows" 416 // 96 used size, 8 vars
Vector 80 [unity_LightShadowBias] 4
ConstBuffer "UnityPerDraw" 336 // 64 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityShadows" 2
BindCB "UnityPerDraw" 3
// 25 instructions, 2 temp regs, 0 temp arrays:
// ALU 22 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedjaipkehomimgmjageekdbhdlfkoepagbabaaaaaaaiafaaaaadaaaaaa
cmaaaaaapeaaaaaaemabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheofaaaaaaaacaaaaaa
aiaaaaaadiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaeeaaaaaa
abaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklfdeieefcleadaaaaeaaaabaaonaaaaaafjaaaaae
egiocaaaaaaaaaaaagaaaaaafjaaaaaeegiocaaaabaaaaaaabaaaaaafjaaaaae
egiocaaaacaaaaaaagaaaaaafjaaaaaeegiocaaaadaaaaaaaeaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaaddccabaaaabaaaaaagiaaaaacacaaaaaadiaaaaajbcaabaaa
aaaaaaaaakiacaaaaaaaaaaaaeaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaah
ccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaa
aaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaa
aaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaah
ccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaa
aaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaa
fgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaa
diaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaai
hcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaaaaaaaaaaaeaaaaaadiaaaaah
ccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaa
aaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaa
dkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaai
pcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaaj
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaa
dcaaaaakccaabaaaaaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdo
ckbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaa
agaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaacaaaaaafgafbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaa
aaaaaaaiecaabaaaaaaaaaaackaabaaaaaaaaaaaakiacaaaacaaaaaaafaaaaaa
dgaaaaaflccabaaaaaaaaaaaegambaaaaaaaaaaadeaaaaahbcaabaaaaaaaaaaa
ckaabaaaaaaaaaaaabeaaaaaaaaaaaaaaaaaaaaibcaabaaaaaaaaaaackaabaia
ebaaaaaaaaaaaaaaakaabaaaaaaaaaaadcaaaaakeccabaaaaaaaaaaabkiacaaa
acaaaaaaafaaaaaaakaabaaaaaaaaaaackaabaaaaaaaaaaadcaaaaaldccabaaa
abaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaafaaaaaaogikcaaaaaaaaaaa
afaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" }
"!!GLES


#ifdef VERTEX

varying highp vec2 xlv_TEXCOORD1;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_LightShadowBias;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = _glesVertex;
  highp float t_3;
  highp float tmpvar_4;
  tmpvar_4 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_5;
  tmpvar_5 = (_Time * _WaveSpeed).x;
  t_3 = tmpvar_5;
  if ((tmpvar_5 < 0.0)) {
    t_3 = (tmpvar_5 * -1.0);
  };
  tmpvar_2.x = (_glesVertex.x + (((sin(((t_3 * 1.45) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_2.y = ((((sin(((t_3 * 3.12) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_2.z = (_glesVertex.z - (((sin(((t_3 * 2.2) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_mvp * tmpvar_2);
  tmpvar_1.xyw = tmpvar_6.xyw;
  tmpvar_1.z = (tmpvar_6.z + unity_LightShadowBias.x);
  tmpvar_1.z = mix (tmpvar_1.z, max (tmpvar_1.z, (tmpvar_6.w * -1.0)), unity_LightShadowBias.y);
  gl_Position = tmpvar_1;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
}



#endif
#ifdef FRAGMENT

varying highp vec2 xlv_TEXCOORD1;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD1);
  highp vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _Color);
  c_1 = tmpvar_3;
  lowp float x_4;
  x_4 = (c_1.w - _Cutoff);
  if ((x_4 < 0.0)) {
    discard;
  };
  gl_FragData[0] = vec4(0.0, 0.0, 0.0, 0.0);
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "SHADOWS_DEPTH" }
"!!GLES


#ifdef VERTEX

varying highp vec2 xlv_TEXCOORD1;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_LightShadowBias;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = _glesVertex;
  highp float t_3;
  highp float tmpvar_4;
  tmpvar_4 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_5;
  tmpvar_5 = (_Time * _WaveSpeed).x;
  t_3 = tmpvar_5;
  if ((tmpvar_5 < 0.0)) {
    t_3 = (tmpvar_5 * -1.0);
  };
  tmpvar_2.x = (_glesVertex.x + (((sin(((t_3 * 1.45) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_2.y = ((((sin(((t_3 * 3.12) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_2.z = (_glesVertex.z - (((sin(((t_3 * 2.2) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_mvp * tmpvar_2);
  tmpvar_1.xyw = tmpvar_6.xyw;
  tmpvar_1.z = (tmpvar_6.z + unity_LightShadowBias.x);
  tmpvar_1.z = mix (tmpvar_1.z, max (tmpvar_1.z, (tmpvar_6.w * -1.0)), unity_LightShadowBias.y);
  gl_Position = tmpvar_1;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
}



#endif
#ifdef FRAGMENT

varying highp vec2 xlv_TEXCOORD1;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
void main ()
{
  lowp vec4 c_1;
  lowp vec4 tmpvar_2;
  tmpvar_2 = texture2D (_MainTex, xlv_TEXCOORD1);
  highp vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * _Color);
  c_1 = tmpvar_3;
  lowp float x_4;
  x_4 = (c_1.w - _Cutoff);
  if ((x_4 < 0.0)) {
    discard;
  };
  gl_FragData[0] = vec4(0.0, 0.0, 0.0, 0.0);
}



#endif"
}

SubProgram "flash " {
Keywords { "SHADOWS_DEPTH" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 4 [_Time]
Vector 5 [unity_LightShadowBias]
Float 6 [_WaveSpeed]
Float 7 [_Amplitude]
Vector 8 [_MainTex_ST]
"agal_vs
c9 -0.020833 -0.125 1.0 0.5
c10 -0.000002 -0.000022 0.002604 0.00026
c11 0.0 2.2 0.159155 0.5
c12 6.283185 -3.141593 3.12 0.9
c13 1.45 0.2 0.0 0.0
[bc]
abaaaaaaaaaaaiacaaaaaaaaaaaaaaaaaaaaaaffaaaaaaaa add r0.w, a0.x, a0.y
aaaaaaaaaaaaabacaeaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r0.x, c4
adaaaaaaaaaaabacagaaaaoeabaaaaaaaaaaaaaaacaaaaaa mul r0.x, c6, r0.x
ckaaaaaaaaaaacacaaaaaaaaacaaaaaaalaaaaaaabaaaaaa slt r0.y, r0.x, c11.x
bfaaaaaaabaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r1.y, r0.y
ahaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa max r0.y, r1.y, r0.y
ckaaaaaaaaaaacacalaaaaaaabaaaaaaaaaaaaffacaaaaaa slt r0.y, c11.x, r0.y
bfaaaaaaacaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r2.y, r0.y
abaaaaaaaaaaaeacacaaaaffacaaaaaaajaaaaoeabaaaaaa add r0.z, r2.y, c9
adaaaaaaaaaaaeacaaaaaaaaacaaaaaaaaaaaakkacaaaaaa mul r0.z, r0.x, r0.z
bfaaaaaaacaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r2.x, r0.x
adaaaaaaabaaacacaaaaaaffacaaaaaaacaaaaaaacaaaaaa mul r1.y, r0.y, r2.x
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaakkacaaaaaa add r1.y, r1.y, r0.z
abaaaaaaabaaabacaaaaaappacaaaaaaaaaaaakkaaaaaaaa add r1.x, r0.w, a0.z
adaaaaaaaaaaabacabaaaaffacaaaaaaalaaaaffabaaaaaa mul r0.x, r1.y, c11.y
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaalaaaakkabaaaaaa mul r0.x, r0.x, c11.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaalaaaappabaaaaaa add r0.x, r0.x, c11.w
aiaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r0.x, r0.x
adaaaaaaabaaaeacaaaaaaaaacaaaaaaamaaaaaaabaaaaaa mul r1.z, r0.x, c12.x
abaaaaaaabaaaeacabaaaakkacaaaaaaamaaaaffabaaaaaa add r1.z, r1.z, c12.y
apaaaaaaaaaaabacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.z
baaaaaaaaaaaacacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.z
adaaaaaaaaaaabacaaaaaaffacaaaaaaadaaaaffaaaaaaaa mul r0.x, r0.y, a3.y
adaaaaaaaaaaacacabaaaaffacaaaaaaanaaaaaaabaaaaaa mul r0.y, r1.y, c13.x
abaaaaaaaaaaacacaaaaaaffacaaaaaaabaaaaaaacaaaaaa add r0.y, r0.y, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaahaaaaoeabaaaaaa mul r0.x, r0.x, c7
bfaaaaaaadaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r3.x, r0.x
adaaaaaaabaaaeacadaaaaaaacaaaaaaanaaaaffabaaaaaa mul r1.z, r3.x, c13.y
abaaaaaaabaaaeacabaaaakkacaaaaaaaaaaaaoeaaaaaaaa add r1.z, r1.z, a0
adaaaaaaaaaaabacabaaaaffacaaaaaaamaaaakkabaaaaaa mul r0.x, r1.y, c12.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaalaaaakkabaaaaaa mul r0.x, r0.x, c11.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaalaaaappabaaaaaa add r0.x, r0.x, c11.w
adaaaaaaaaaaacacaaaaaaffacaaaaaaalaaaakkabaaaaaa mul r0.y, r0.y, c11.z
abaaaaaaaaaaacacaaaaaaffacaaaaaaalaaaappabaaaaaa add r0.y, r0.y, c11.w
aiaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa frc r0.y, r0.y
aaaaaaaaabaaaiacaaaaaaoeaaaaaaaaaaaaaaaaaaaaaaaa mov r1.w, a0
adaaaaaaabaaacacaaaaaaffacaaaaaaamaaaaaaabaaaaaa mul r1.y, r0.y, c12.x
abaaaaaaabaaacacabaaaaffacaaaaaaamaaaaoeabaaaaaa add r1.y, r1.y, c12
aiaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r1.x, r0.x
apaaaaaaaaaaabacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.y
baaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.y
adaaaaaaaaaaabacabaaaaaaacaaaaaaamaaaaoeabaaaaaa mul r0.x, r1.x, c12
abaaaaaaaaaaabacaaaaaaaaacaaaaaaamaaaaffabaaaaaa add r0.x, r0.x, c12.y
adaaaaaaaaaaaeacadaaaaffaaaaaaaaaaaaaaffacaaaaaa mul r0.z, a3.y, r0.y
apaaaaaaacaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sin r2.x, r0.x
baaaaaaaacaaacacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa cos r2.y, r0.x
adaaaaaaaaaaacacadaaaaoeaaaaaaaaadaaaaaaaaaaaaaa mul r0.y, a3, a3.x
adaaaaaaaaaaabacadaaaaffaaaaaaaaacaaaaffacaaaaaa mul r0.x, a3.y, r2.y
bfaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r0.y, r0.y
adaaaaaaaaaaacacaaaaaaffacaaaaaaamaaaappabaaaaaa mul r0.y, r0.y, c12.w
adaaaaaaaaaaabacaaaaaaaaacaaaaaaahaaaaoeabaaaaaa mul r0.x, r0.x, c7
adaaaaaaabaaacacaaaaaaaaacaaaaaaajaaaappabaaaaaa mul r1.y, r0.x, c9.w
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa add r1.y, r1.y, r0.y
adaaaaaaaaaaabacaaaaaakkacaaaaaaahaaaaoeabaaaaaa mul r0.x, r0.z, c7
adaaaaaaabaaabacaaaaaaaaacaaaaaaajaaaappabaaaaaa mul r1.x, r0.x, c9.w
abaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaaoeaaaaaaaa add r1.x, r1.x, a0
bdaaaaaaaaaaabacabaaaaoeacaaaaaaacaaaaoeabaaaaaa dp4 r0.x, r1, c2
abaaaaaaaaaaabacaaaaaaaaacaaaaaaafaaaaoeabaaaaaa add r0.x, r0.x, c5
ahaaaaaaaaaaacacaaaaaaaaacaaaaaaalaaaaaaabaaaaaa max r0.y, r0.x, c11.x
acaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaacaaaaaa sub r0.y, r0.y, r0.x
adaaaaaaadaaaeacaaaaaaffacaaaaaaafaaaaffabaaaaaa mul r3.z, r0.y, c5.y
abaaaaaaaaaaaeacadaaaakkacaaaaaaaaaaaaaaacaaaaaa add r0.z, r3.z, r0.x
bdaaaaaaaaaaaiacabaaaaoeacaaaaaaadaaaaoeabaaaaaa dp4 r0.w, r1, c3
bdaaaaaaaaaaabacabaaaaoeacaaaaaaaaaaaaoeabaaaaaa dp4 r0.x, r1, c0
bdaaaaaaaaaaacacabaaaaoeacaaaaaaabaaaaoeabaaaaaa dp4 r0.y, r1, c1
aaaaaaaaaaaaapadaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r0
aaaaaaaaaaaaapaeaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov v0, r0
adaaaaaaadaaadacadaaaaoeaaaaaaaaaiaaaaoeabaaaaaa mul r3.xy, a3, c8
abaaaaaaabaaadaeadaaaafeacaaaaaaaiaaaaooabaaaaaa add v1.xy, r3.xyyy, c8.zwzw
aaaaaaaaabaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v1.zw, c0
"
}

SubProgram "d3d11_9x " {
Keywords { "SHADOWS_DEPTH" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 112 // 96 used size, 8 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityShadows" 416 // 96 used size, 8 vars
Vector 80 [unity_LightShadowBias] 4
ConstBuffer "UnityPerDraw" 336 // 64 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityShadows" 2
BindCB "UnityPerDraw" 3
// 25 instructions, 2 temp regs, 0 temp arrays:
// ALU 22 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefieceddfapfkenonhbkbjmopejchdlglkomacaabaaaaaahiaiaaaaaeaaaaaa
daaaaaaajmadaaaafiahaaaacaaiaaaaebgpgodjgeadaaaageadaaaaaaacpopp
amadaaaafiaaaaaaaeaaceaaaaaafeaaaaaafeaaaaaaceaaabaafeaaaaaaaeaa
acaaabaaaaaaaaaaabaaaaaaabaaadaaaaaaaaaaacaaafaaabaaaeaaaaaaaaaa
adaaaaaaaeaaafaaaaaaaaaaaaaaaaaaaaacpoppfbaaaaafajaaapkajkjjljdp
bekoeheamnmmameaggggggdpfbaaaaafakaaapkaaaaaaaaaaaaaaamaidpjccdo
aaaaaadpfbaaaaafalaaapkanlapmjeanlapejmamnmmemdoaaaaaaaafbaaaaaf
amaaapkaabannalfgballglhklkkckdlijiiiidjfbaaaaafanaaapkaklkkkklm
aaaaaaloaaaaiadpaaaaaadpbpaaaaacafaaaaiaaaaaapjabpaaaaacafaaadia
adaaapjaaeaaaaaeaaaaadoaadaaoejaacaaoekaacaaookaabaaaaacaaaaabia
abaaaakaafaaaaadaaaaabiaaaaaaaiaadaaaakaamaaaaadaaaaaciaaaaaaaia
akaaaakaafaaaaadaaaaaciaaaaaffiaaaaaaaiaaeaaaaaeaaaaabiaaaaaffia
akaaffkaaaaaaaiaacaaaaadaaaaaciaaaaaffjaaaaaaajaacaaaaadaaaaacia
aaaaffiaaaaakkjaaeaaaaaeaaaaahiaaaaaaaiaajaaoekaaaaaffiaaeaaaaae
aaaaahiaaaaaoeiaakaakkkaakaappkabdaaaaacaaaaahiaaaaaoeiaaeaaaaae
aaaaahiaaaaaoeiaalaaaakaalaaffkacfaaaaaeabaaaciaaaaaffiaamaaoeka
anaaoekaafaaaaadaaaaaciaabaaffiaadaaffjaafaaaaadaaaaaciaaaaaffia
abaaffkaafaaaaadaaaaaiiaadaaaajaadaaffjaafaaaaadaaaaaiiaaaaappia
ajaappkaaeaaaaaeaaaaaciaaaaaffiaakaappkaaaaappibafaaaaadabaaapia
aaaaffiaagaaoekacfaaaaaeacaaaciaaaaaaaiaamaaoekaanaaoekacfaaaaae
adaaaciaaaaakkiaamaaoekaanaaoekaafaaaaadaaaaabiaadaaffiaadaaffja
afaaaaadaaaaabiaaaaaaaiaabaaffkaaeaaaaaeaaaaabiaaaaaaaiaalaakkkb
aaaakkjaafaaaaadaaaaaciaacaaffiaadaaffjaafaaaaadaaaaaciaaaaaffia
abaaffkaaeaaaaaeaaaaaciaaaaaffiaakaappkaaaaaaajaaeaaaaaeabaaapia
afaaoekaaaaaffiaabaaoeiaaeaaaaaeaaaaapiaahaaoekaaaaaaaiaabaaoeia
aeaaaaaeaaaaapiaaiaaoekaaaaappjaaaaaoeiaacaaaaadaaaaaeiaaaaakkia
aeaaaakaalaaaaadabaaabiaaaaakkiaakaaaakaacaaaaadabaaabiaaaaakkib
abaaaaiaaeaaaaaeaaaaaemaaeaaffkaabaaaaiaaaaakkiaaeaaaaaeaaaaadma
aaaappiaaaaaoekaaaaaoeiaabaaaaacaaaaaimaaaaappiappppaaaafdeieefc
leadaaaaeaaaabaaonaaaaaafjaaaaaeegiocaaaaaaaaaaaagaaaaaafjaaaaae
egiocaaaabaaaaaaabaaaaaafjaaaaaeegiocaaaacaaaaaaagaaaaaafjaaaaae
egiocaaaadaaaaaaaeaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaaddcbabaaa
adaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaa
giaaaaacacaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaa
akiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaa
abeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaia
ebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkbabaaa
aaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaa
ckbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaa
jkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaaghcaabaaa
aaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaa
fgifcaaaaaaaaaaaaeaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaa
abeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaabkbabaaa
adaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaa
ggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaa
egiocaaaadaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
abeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaackaabaia
ebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaakpcaabaaa
abaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaafgafbaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaa
pgbpbaaaaaaaaaaaegaobaaaaaaaaaaaaaaaaaaiecaabaaaaaaaaaaackaabaaa
aaaaaaaaakiacaaaacaaaaaaafaaaaaadgaaaaaflccabaaaaaaaaaaaegambaaa
aaaaaaaadeaaaaahbcaabaaaaaaaaaaackaabaaaaaaaaaaaabeaaaaaaaaaaaaa
aaaaaaaibcaabaaaaaaaaaaackaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaa
dcaaaaakeccabaaaaaaaaaaabkiacaaaacaaaaaaafaaaaaaakaabaaaaaaaaaaa
ckaabaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaafaaaaaaogikcaaaaaaaaaaaafaaaaaadoaaaaabejfdeheomaaaaaaa
agaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaa
kbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaacaaaaaaahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
adaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaa
ljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeo
aafeebeoehefeofeaaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaakl
epfdeheofaaaaaaaacaaaaaaaiaaaaaadiaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaaeeaaaaaaabaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
fdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl"
}

SubProgram "gles3 " {
Keywords { "SHADOWS_DEPTH" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 423
uniform highp vec4 _MainTex_ST;
#line 435
uniform lowp float _Cutoff;
#line 400
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 404
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 408
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 424
v2f_surf vert_surf( in appdata_full v ) {
    v2f_surf o;
    #line 427
    vert( v);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    o.pos = (glstate_matrix_mvp * v.vertex);
    o.pos.z += unity_LightShadowBias.x;
    #line 431
    highp float clamped = max( o.pos.z, (o.pos.w * -1.0));
    o.pos.z = mix( o.pos.z, clamped, unity_LightShadowBias.y);
    return o;
}

out highp vec2 xlv_TEXCOORD1;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD1 = vec2(xl_retval.pack0);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec2 pack0;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 423
uniform highp vec4 _MainTex_ST;
#line 435
uniform lowp float _Cutoff;
#line 411
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 413
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 436
lowp vec4 frag_surf( in v2f_surf IN ) {
    Input surfIN;
    #line 439
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    o.Emission = vec3( 0.0);
    #line 443
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    surf( surfIN, o);
    #line 447
    xll_clip_f((o.Alpha - _Cutoff));
    return vec4( 0.0);
}
in highp vec2 xlv_TEXCOORD1;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD1);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "opengl " {
Keywords { "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Vector 9 [_Time]
Vector 10 [_LightPositionRange]
Matrix 5 [_Object2World]
Float 11 [_WaveSpeed]
Float 12 [_Amplitude]
Vector 13 [_MainTex_ST]
"!!ARBvp1.0
# 73 ALU
PARAM c[19] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.mvp,
		program.local[5..13],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[11];
MUL R0.x, R0, c[9];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[14];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[15].xyxw, c[15].zwzw;
MAD R1.xyz, R1, R0, c[16].xyxw;
MAD R1.xyz, R1, R0, c[16].zwzw;
MAD R1.xyz, R1, R0, c[17].xyxw;
MAD R0.xyz, R1, R0, c[14].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[17].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[14].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[18].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[12];
MAD R0.w, -R0.x, c[18].x, vertex.position.z;
MAD R0.x, R1.w, c[18].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[14];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[15].xyxw, c[15].zwzw;
MAD R3.xyz, R2, R0, c[16].xyxw;
MAD R3.xyz, R3, R0, c[16].zwzw;
MAD R3.xyz, R3, R0, c[17].xyxw;
ADD R1.xyz, -R1.w, c[14];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[15].xyxw, c[15].zwzw;
MAD R2.xyz, R2, R1, c[16].xyxw;
MAD R2.xyz, R2, R1, c[16].zwzw;
MAD R3.xyz, R3, R0, c[14].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[17].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[14].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[17].xyxw;
MAD R1.xyz, R0, R1, c[14].wzww;
SGE R0.yz, R1.w, c[17].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[14].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R0.x, R0, c[12];
MUL R0.y, -R0, c[18].z;
MAD R0.y, R0.x, c[14], R0;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R2.w, c[12];
MAD R0.x, R0, c[14].y, vertex.position;
DP4 R1.z, R0.xywz, c[7];
DP4 R1.x, R0.xywz, c[5];
DP4 R1.y, R0.xywz, c[6];
ADD result.texcoord[0].xyz, R1, -c[10];
DP4 result.position.w, R0.xywz, c[4];
DP4 result.position.z, R0.xywz, c[3];
DP4 result.position.y, R0.xywz, c[2];
DP4 result.position.x, R0.xywz, c[1];
MAD result.texcoord[1].xy, vertex.texcoord[0], c[13], c[13].zwzw;
END
# 73 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Vector 9 [_LightPositionRange]
Matrix 4 [_Object2World]
Float 10 [_WaveSpeed]
Float 11 [_Amplitude]
Vector 12 [_MainTex_ST]
"vs_2_0
; 73 ALU
def c13, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c14, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c15, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c16, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c17, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_texcoord0 v3
add r0.w, v0.x, v0.y
mov r0.x, c8
mul r0.x, c10, r0
slt r0.y, r0.x, c15.x
max r0.y, -r0, r0
slt r0.y, c15.x, r0
add r0.z, -r0.y, c13
mul r0.z, r0.x, r0
mad r1.y, r0, -r0.x, r0.z
add r1.x, r0.w, v0.z
mad r0.x, r1.y, c15.y, r1
mad r0.x, r0, c15.z, c15.w
frc r0.x, r0
mad r1.z, r0.x, c16.x, c16.y
sincos r0.xy, r1.z, c14.xyzw, c13.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1, c17.x, r1.x
mul r0.x, r0, c11
mad r1.z, -r0.x, c17.y, v0
mad r0.x, r1.y, c16.z, r1
mad r0.x, r0, c15.z, c15.w
mad r0.y, r0, c15.z, c15.w
frc r0.y, r0
mov r1.w, v0
mad r1.y, r0, c16.x, c16
frc r1.x, r0
sincos r0.xy, r1.y, c14.xyzw, c13.xyzw
mad r0.x, r1, c16, c16.y
mul r0.z, v3.y, r0.y
sincos r2.xy, r0.x, c14.xyzw, c13.xyzw
mul r0.y, v3, v3.x
mul r0.x, v3.y, r2.y
mul r0.y, -r0, c16.w
mul r0.x, r0, c11
mad r1.y, r0.x, c13.w, r0
mul r0.x, r0.z, c11
mad r1.x, r0, c13.w, v0
dp4 r0.z, r1, c6
dp4 r0.x, r1, c4
dp4 r0.y, r1, c5
add oT0.xyz, r0, -c9
dp4 oPos.w, r1, c3
dp4 oPos.z, r1, c2
dp4 oPos.y, r1, c1
dp4 oPos.x, r1, c0
mad oT1.xy, v3, c12, c12.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Float 11 [_Amplitude]
Vector 1 [_LightPositionRange]
Vector 12 [_MainTex_ST]
Matrix 6 [_Object2World] 4
Vector 0 [_Time]
Float 10 [_WaveSpeed]
Matrix 2 [glstate_matrix_mvp] 4
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 34.67 (26 instructions), vertex: 32, texture: 0,
//   sequencer: 14,  4 GPRs, 31 threads,
// Performance (if enough threads): ~34 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaabnmaaaaabmmaaaaaaaaaaaaaaceaaaaabheaaaaabjmaaaaaaaa
aaaaaaaaaaaaabemaaaaaabmaaaaabdppppoadaaaaaaaaahaaaaaabmaaaaaaaa
aaaaabdiaaaaaakiaaacaaalaaabaaaaaaaaaaleaaaaaaaaaaaaaameaaacaaab
aaabaaaaaaaaaaniaaaaaaaaaaaaaaoiaaacaaamaaabaaaaaaaaaaniaaaaaaaa
aaaaaapeaaacaaagaaaeaaaaaaaaabaeaaaaaaaaaaaaabbeaaacaaaaaaabaaaa
aaaaaaniaaaaaaaaaaaaabbkaaacaaakaaabaaaaaaaaaaleaaaaaaaaaaaaabcf
aaacaaacaaaeaaaaaaaaabaeaaaaaaaafpebgnhagmgjhehfgegfaaklaaaaaaad
aaabaaabaaabaaaaaaaaaaaafpemgjghgihefagphdgjhegjgpgofcgbgoghgfaa
aaabaaadaaabaaaeaaabaaaaaaaaaaaafpengbgjgofegfhifpfdfeaafpepgcgk
gfgdhedcfhgphcgmgeaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpfegjgn
gfaafpfhgbhggffdhagfgfgeaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaa
hghdfpddfpdaaadccodacodcdadddfddcodaaaklaaaaaaaaaaaaaaabaaaaaaaa
aaaaaaaaaaaaaabeaapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaea
aaaaabimaabbaaadaaaaaaaaaaaaaaaaaaaabeecaaaaaaabaaaaaaacaaaaaaac
aaaaacjaaabaaaaeaacafaafaaaahafaaaabdbfbaaaababoaaaababpaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaeamjapnllpiaaaaamaejapnldpiaaaaadpaaaaaa
doemmmmndoccpjiddpggggggdpljjjjkeaehkobeeaammmmndpaaaaaadacfgaae
aaaabaaamcaaaaaaaaaagaakgababcaabcaaaaaaaaaafabgaaaabcaameaaaaaa
aaaafablaaaaccaaaaaaaaaaafpibaaaaaaaagiiaaaaaaaaafpicaaaaaaaapmi
aaaaaaaamiacaaaaaagmlbaacbaapnaamiabaaaaaagmgmaacbaaakaaheaeaaaa
abloblgmlaabpnaakibaaaaabiaaaaebmcaaaaakmiaiaaadaalbgmaaobacacaa
miahaaadaagmmamgklaappaamiapaaaaaaedmhaakbadpoaamiahaaadaamdblaa
kaaappaamiahaaadaamaaaaaoiadaaaamiaoaaaaaapmgmmgiladpnpnmabaadaa
aaaaaalbocaaaaaamacaadaaaaaaaamgocaaaaaamaemadacaalbkmblkbacpoaa
miahaaadaabgmaaaobacadaamiaoaaaaaaebgmaakbadalaamiaiaaaaaablgmaa
oaaaabaabeapaaadaablaalbkbabafaaaebcababafmgmggmoaaaabaamiapaaad
aalbiiiiklabaeadmiapaaadaagmdejeklabadadmiapiadoaablaadeklaaacad
miahaaaaabblmamailabajabmiahaaaaaalbmamaklabaiaamiahaaaaaagmlele
klabahaamiahiaaaaablmaleklaaagaamiadiaabaalalabkilacamamaaaaaaaa
aaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "SHADOWS_CUBE" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Vector 467 [_Time]
Vector 466 [_LightPositionRange]
Matrix 260 [_Object2World]
Float 465 [_WaveSpeed]
Float 464 [_Amplitude]
Vector 463 [_MainTex_ST]
"sce_vp_rsx // 30 instructions using 3 registers
[Configuration]
8
0000001e01010300
[Defaults]
2
462 4
400ccccd3e4ccccd4047ae143f000000
461 2
3f6666663fb9999a
[Microcode]
480
401f9c6c011cf808010400d740619fa000001c6c00c000000106c08aa0409ffc
00001c6c005d10000186c08360411ffc00001c6c009d3000008000c360411ffc
201fdc6c004000000086c08360411ffc00001c6c00c000550106c08aa0203ffc
00001c6c004000000086c08360405ffc00002400004000800086c08360405ffc
00001c6c011ce055008800dfe0219ffc00001c6c011cd055009540dfe0205ffc
00009c6c7880082a8100008aa029007c00009c6c789cd080028000c00031007c
00011c6c7880082a81154055402900fc00001c6c008008000095408360409ffc
00001c6c0080082a8115414360411ffc00001c6c009d0000008000c360411ffc
00001c6c009d002a808000c360409ffc00001c6c009d0000048000c360405ffc
00009c6c011ce05500bfc0c000a09ffc00009c6c011ce0aa809540d540405ffc
00009c6c011ce00000bfc0c000411ffc00009c6c0040007f8106c08360403ffc
401f9c6c01d0300d8286c0c360403f80401f9c6c01d0200d8286c0c360405f80
401f9c6c01d0100d8286c0c360409f80401f9c6c01d0000d8286c0c360411f80
00001c6c01d0600d8286c0c360405ffc00001c6c01d0500d8286c0c360409ffc
00001c6c01d0400d8286c0c360411ffc401f9c6c00dd208c0186c0830021df9d
"
}

SubProgram "d3d11 " {
Keywords { "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 112 // 96 used size, 8 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityLighting" 720 // 32 used size, 17 vars
Vector 16 [_LightPositionRange] 4
ConstBuffer "UnityPerDraw" 336 // 256 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 25 instructions, 3 temp regs, 0 temp arrays:
// ALU 23 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedlhbknjbngknofgnnkcecglldhkjohmliabaaaaaafaafaaaaadaaaaaa
cmaaaaaapeaaaaaageabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheogiaaaaaaadaaaaaa
aiaaaaaafaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaafmaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaahaiaaaafmaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaadamaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklfdeieefcoeadaaaaeaaaabaapjaaaaaafjaaaaaeegiocaaaaaaaaaaa
agaaaaaafjaaaaaeegiocaaaabaaaaaaabaaaaaafjaaaaaeegiocaaaacaaaaaa
acaaaaaafjaaaaaeegiocaaaadaaaaaabaaaaaaafpaaaaadpcbabaaaaaaaaaaa
fpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaad
hccabaaaabaaaaaagfaaaaaddccabaaaacaaaaaagiaaaaacadaaaaaadiaaaaaj
bcaabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaaakiacaaaabaaaaaaaaaaaaaa
dbaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaak
bcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaa
aaaaaaaaaaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaa
aaaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaam
hcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdpbekoeheamnmmamea
aaaaaaaafgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaa
aaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaa
diaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaaaaaaaaaaaeaaaaaa
diaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaah
icaabaaaaaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaa
aaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaa
diaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaa
diaaaaaihcaabaaaacaaaaaafgafbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaa
dcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaa
aaaaaaaadcaaaaakccaabaaaaaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaa
mnmmemdockbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaa
aaaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakncaabaaaaaaaaaaa
agijcaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaaagajbaaaacaaaaaadcaaaaak
ncaabaaaaaaaaaaaagijcaaaadaaaaaaaoaaaaaafgafbaaaaaaaaaaaagaobaaa
aaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaacaaaaaafgafbaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakhcaabaaaaaaaaaaa
egiccaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaaigadbaaaaaaaaaaaaaaaaaaj
hccabaaaabaaaaaaegacbaaaaaaaaaaaegiccaiaebaaaaaaacaaaaaaabaaaaaa
dcaaaaaldccabaaaacaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaafaaaaaa
ogikcaaaaaaaaaaaafaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "SHADOWS_CUBE" }
"!!GLES


#ifdef VERTEX

varying highp vec2 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _LightPositionRange;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp float t_2;
  highp float tmpvar_3;
  tmpvar_3 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_4;
  tmpvar_4 = (_Time * _WaveSpeed).x;
  t_2 = tmpvar_4;
  if ((tmpvar_4 < 0.0)) {
    t_2 = (tmpvar_4 * -1.0);
  };
  tmpvar_1.x = (_glesVertex.x + (((sin(((t_2 * 1.45) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_1.y = ((((sin(((t_2 * 3.12) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_1.z = (_glesVertex.z - (((sin(((t_2 * 2.2) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  gl_Position = (glstate_matrix_mvp * tmpvar_1);
  xlv_TEXCOORD0 = ((_Object2World * tmpvar_1).xyz - _LightPositionRange.xyz);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
}



#endif
#ifdef FRAGMENT

varying highp vec2 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform highp vec4 _LightPositionRange;
void main ()
{
  lowp vec4 tmpvar_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD1);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float x_5;
  x_5 = (c_2.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  highp vec4 tmpvar_6;
  tmpvar_6 = fract((vec4(1.0, 255.0, 65025.0, 1.60581e+08) * min ((sqrt(dot (xlv_TEXCOORD0, xlv_TEXCOORD0)) * _LightPositionRange.w), 0.999)));
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_6 - (tmpvar_6.yzww * 0.00392157));
  tmpvar_1 = tmpvar_7;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "SHADOWS_CUBE" }
"!!GLES


#ifdef VERTEX

varying highp vec2 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 _LightPositionRange;
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp float t_2;
  highp float tmpvar_3;
  tmpvar_3 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_4;
  tmpvar_4 = (_Time * _WaveSpeed).x;
  t_2 = tmpvar_4;
  if ((tmpvar_4 < 0.0)) {
    t_2 = (tmpvar_4 * -1.0);
  };
  tmpvar_1.x = (_glesVertex.x + (((sin(((t_2 * 1.45) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_1.y = ((((sin(((t_2 * 3.12) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_1.z = (_glesVertex.z - (((sin(((t_2 * 2.2) + tmpvar_3)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  gl_Position = (glstate_matrix_mvp * tmpvar_1);
  xlv_TEXCOORD0 = ((_Object2World * tmpvar_1).xyz - _LightPositionRange.xyz);
  xlv_TEXCOORD1 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
}



#endif
#ifdef FRAGMENT

varying highp vec2 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform highp vec4 _LightPositionRange;
void main ()
{
  lowp vec4 tmpvar_1;
  lowp vec4 c_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD1);
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * _Color);
  c_2 = tmpvar_4;
  lowp float x_5;
  x_5 = (c_2.w - _Cutoff);
  if ((x_5 < 0.0)) {
    discard;
  };
  highp vec4 tmpvar_6;
  tmpvar_6 = fract((vec4(1.0, 255.0, 65025.0, 1.60581e+08) * min ((sqrt(dot (xlv_TEXCOORD0, xlv_TEXCOORD0)) * _LightPositionRange.w), 0.999)));
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_6 - (tmpvar_6.yzww * 0.00392157));
  tmpvar_1 = tmpvar_7;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "flash " {
Keywords { "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_Time]
Vector 9 [_LightPositionRange]
Matrix 4 [_Object2World]
Float 10 [_WaveSpeed]
Float 11 [_Amplitude]
Vector 12 [_MainTex_ST]
"agal_vs
c13 -0.020833 -0.125 1.0 0.5
c14 -0.000002 -0.000022 0.002604 0.00026
c15 0.0 2.2 0.159155 0.5
c16 6.283185 -3.141593 3.12 0.9
c17 1.45 0.2 0.0 0.0
[bc]
abaaaaaaaaaaaiacaaaaaaaaaaaaaaaaaaaaaaffaaaaaaaa add r0.w, a0.x, a0.y
aaaaaaaaaaaaabacaiaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r0.x, c8
adaaaaaaaaaaabacakaaaaoeabaaaaaaaaaaaaaaacaaaaaa mul r0.x, c10, r0.x
ckaaaaaaaaaaacacaaaaaaaaacaaaaaaapaaaaaaabaaaaaa slt r0.y, r0.x, c15.x
bfaaaaaaabaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r1.y, r0.y
ahaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa max r0.y, r1.y, r0.y
ckaaaaaaaaaaacacapaaaaaaabaaaaaaaaaaaaffacaaaaaa slt r0.y, c15.x, r0.y
bfaaaaaaacaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r2.y, r0.y
abaaaaaaaaaaaeacacaaaaffacaaaaaaanaaaaoeabaaaaaa add r0.z, r2.y, c13
adaaaaaaaaaaaeacaaaaaaaaacaaaaaaaaaaaakkacaaaaaa mul r0.z, r0.x, r0.z
bfaaaaaaacaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r2.x, r0.x
adaaaaaaabaaacacaaaaaaffacaaaaaaacaaaaaaacaaaaaa mul r1.y, r0.y, r2.x
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaakkacaaaaaa add r1.y, r1.y, r0.z
abaaaaaaabaaabacaaaaaappacaaaaaaaaaaaakkaaaaaaaa add r1.x, r0.w, a0.z
adaaaaaaaaaaabacabaaaaffacaaaaaaapaaaaffabaaaaaa mul r0.x, r1.y, c15.y
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaapaaaakkabaaaaaa mul r0.x, r0.x, c15.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaapaaaappabaaaaaa add r0.x, r0.x, c15.w
aiaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r0.x, r0.x
adaaaaaaabaaaeacaaaaaaaaacaaaaaabaaaaaaaabaaaaaa mul r1.z, r0.x, c16.x
abaaaaaaabaaaeacabaaaakkacaaaaaabaaaaaffabaaaaaa add r1.z, r1.z, c16.y
apaaaaaaaaaaabacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.z
baaaaaaaaaaaacacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.z
adaaaaaaaaaaabacaaaaaaffacaaaaaaadaaaaffaaaaaaaa mul r0.x, r0.y, a3.y
adaaaaaaaaaaacacabaaaaffacaaaaaabbaaaaaaabaaaaaa mul r0.y, r1.y, c17.x
abaaaaaaaaaaacacaaaaaaffacaaaaaaabaaaaaaacaaaaaa add r0.y, r0.y, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaalaaaaoeabaaaaaa mul r0.x, r0.x, c11
bfaaaaaaadaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r3.x, r0.x
adaaaaaaabaaaeacadaaaaaaacaaaaaabbaaaaffabaaaaaa mul r1.z, r3.x, c17.y
abaaaaaaabaaaeacabaaaakkacaaaaaaaaaaaaoeaaaaaaaa add r1.z, r1.z, a0
adaaaaaaaaaaabacabaaaaffacaaaaaabaaaaakkabaaaaaa mul r0.x, r1.y, c16.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaapaaaakkabaaaaaa mul r0.x, r0.x, c15.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaapaaaappabaaaaaa add r0.x, r0.x, c15.w
adaaaaaaaaaaacacaaaaaaffacaaaaaaapaaaakkabaaaaaa mul r0.y, r0.y, c15.z
abaaaaaaaaaaacacaaaaaaffacaaaaaaapaaaappabaaaaaa add r0.y, r0.y, c15.w
aiaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa frc r0.y, r0.y
aaaaaaaaabaaaiacaaaaaaoeaaaaaaaaaaaaaaaaaaaaaaaa mov r1.w, a0
adaaaaaaabaaacacaaaaaaffacaaaaaabaaaaaaaabaaaaaa mul r1.y, r0.y, c16.x
abaaaaaaabaaacacabaaaaffacaaaaaabaaaaaoeabaaaaaa add r1.y, r1.y, c16
aiaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r1.x, r0.x
apaaaaaaaaaaabacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.y
baaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.y
adaaaaaaaaaaabacabaaaaaaacaaaaaabaaaaaoeabaaaaaa mul r0.x, r1.x, c16
abaaaaaaaaaaabacaaaaaaaaacaaaaaabaaaaaffabaaaaaa add r0.x, r0.x, c16.y
adaaaaaaaaaaaeacadaaaaffaaaaaaaaaaaaaaffacaaaaaa mul r0.z, a3.y, r0.y
apaaaaaaacaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sin r2.x, r0.x
baaaaaaaacaaacacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa cos r2.y, r0.x
adaaaaaaaaaaacacadaaaaoeaaaaaaaaadaaaaaaaaaaaaaa mul r0.y, a3, a3.x
adaaaaaaaaaaabacadaaaaffaaaaaaaaacaaaaffacaaaaaa mul r0.x, a3.y, r2.y
bfaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r0.y, r0.y
adaaaaaaaaaaacacaaaaaaffacaaaaaabaaaaappabaaaaaa mul r0.y, r0.y, c16.w
adaaaaaaaaaaabacaaaaaaaaacaaaaaaalaaaaoeabaaaaaa mul r0.x, r0.x, c11
adaaaaaaabaaacacaaaaaaaaacaaaaaaanaaaappabaaaaaa mul r1.y, r0.x, c13.w
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa add r1.y, r1.y, r0.y
adaaaaaaaaaaabacaaaaaakkacaaaaaaalaaaaoeabaaaaaa mul r0.x, r0.z, c11
adaaaaaaabaaabacaaaaaaaaacaaaaaaanaaaappabaaaaaa mul r1.x, r0.x, c13.w
abaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaaoeaaaaaaaa add r1.x, r1.x, a0
bdaaaaaaaaaaaeacabaaaaoeacaaaaaaagaaaaoeabaaaaaa dp4 r0.z, r1, c6
bdaaaaaaaaaaabacabaaaaoeacaaaaaaaeaaaaoeabaaaaaa dp4 r0.x, r1, c4
bdaaaaaaaaaaacacabaaaaoeacaaaaaaafaaaaoeabaaaaaa dp4 r0.y, r1, c5
acaaaaaaaaaaahaeaaaaaakeacaaaaaaajaaaaoeabaaaaaa sub v0.xyz, r0.xyzz, c9
bdaaaaaaaaaaaiadabaaaaoeacaaaaaaadaaaaoeabaaaaaa dp4 o0.w, r1, c3
bdaaaaaaaaaaaeadabaaaaoeacaaaaaaacaaaaoeabaaaaaa dp4 o0.z, r1, c2
bdaaaaaaaaaaacadabaaaaoeacaaaaaaabaaaaoeabaaaaaa dp4 o0.y, r1, c1
bdaaaaaaaaaaabadabaaaaoeacaaaaaaaaaaaaoeabaaaaaa dp4 o0.x, r1, c0
adaaaaaaadaaadacadaaaaoeaaaaaaaaamaaaaoeabaaaaaa mul r3.xy, a3, c12
abaaaaaaabaaadaeadaaaafeacaaaaaaamaaaaooabaaaaaa add v1.xy, r3.xyyy, c12.zwzw
aaaaaaaaaaaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v0.w, c0
aaaaaaaaabaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v1.zw, c0
"
}

SubProgram "d3d11_9x " {
Keywords { "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 112 // 96 used size, 8 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityLighting" 720 // 32 used size, 17 vars
Vector 16 [_LightPositionRange] 4
ConstBuffer "UnityPerDraw" 336 // 256 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 25 instructions, 3 temp regs, 0 temp arrays:
// ALU 23 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecednlkiehgllfaooakddefijpblneedooknabaaaaaaoeaiaaaaaeaaaaaa
daaaaaaamaadaaaakmahaaaaheaiaaaaebgpgodjiiadaaaaiiadaaaaaaacpopp
ceadaaaageaaaaaaafaaceaaaaaagaaaaaaagaaaaaaaceaaabaagaaaaaaaaeaa
acaaabaaaaaaaaaaabaaaaaaabaaadaaaaaaaaaaacaaabaaabaaaeaaaaaaaaaa
adaaaaaaaeaaafaaaaaaaaaaadaaamaaaeaaajaaaaaaaaaaaaaaaaaaaaacpopp
fbaaaaafanaaapkajkjjljdpbekoeheamnmmameaggggggdpfbaaaaafaoaaapka
aaaaaaaaaaaaaamaidpjccdoaaaaaadpfbaaaaafapaaapkanlapmjeanlapejma
mnmmemdoaaaaaaaafbaaaaafbaaaapkaabannalfgballglhklkkckdlijiiiidj
fbaaaaafbbaaapkaklkkkklmaaaaaaloaaaaiadpaaaaaadpbpaaaaacafaaaaia
aaaaapjabpaaaaacafaaadiaadaaapjaaeaaaaaeabaaadoaadaaoejaacaaoeka
acaaookaabaaaaacaaaaabiaabaaaakaafaaaaadaaaaabiaaaaaaaiaadaaaaka
amaaaaadaaaaaciaaaaaaaiaaoaaaakaafaaaaadaaaaaciaaaaaffiaaaaaaaia
aeaaaaaeaaaaabiaaaaaffiaaoaaffkaaaaaaaiaacaaaaadaaaaaciaaaaaffja
aaaaaajaacaaaaadaaaaaciaaaaaffiaaaaakkjaaeaaaaaeaaaaahiaaaaaaaia
anaaoekaaaaaffiaaeaaaaaeaaaaahiaaaaaoeiaaoaakkkaaoaappkabdaaaaac
aaaaahiaaaaaoeiaaeaaaaaeaaaaahiaaaaaoeiaapaaaakaapaaffkacfaaaaae
abaaaciaaaaaffiabaaaoekabbaaoekaafaaaaadaaaaaciaabaaffiaadaaffja
afaaaaadaaaaaciaaaaaffiaabaaffkaafaaaaadaaaaaiiaadaaaajaadaaffja
afaaaaadaaaaaiiaaaaappiaanaappkaaeaaaaaeaaaaaciaaaaaffiaaoaappka
aaaappibafaaaaadabaaahiaaaaaffiaakaaoekaafaaaaadacaaapiaaaaaffia
agaaoekacfaaaaaeadaaaciaaaaaaaiabaaaoekabbaaoekacfaaaaaeaeaaacia
aaaakkiabaaaoekabbaaoekaafaaaaadaaaaabiaaeaaffiaadaaffjaafaaaaad
aaaaabiaaaaaaaiaabaaffkaaeaaaaaeaaaaabiaaaaaaaiaapaakkkbaaaakkja
afaaaaadaaaaaciaadaaffiaadaaffjaafaaaaadaaaaaciaaaaaffiaabaaffka
aeaaaaaeaaaaaciaaaaaffiaaoaappkaaaaaaajaaeaaaaaeabaaahiaajaaoeka
aaaaffiaabaaoeiaaeaaaaaeacaaapiaafaaoekaaaaaffiaacaaoeiaaeaaaaae
acaaapiaahaaoekaaaaaaaiaacaaoeiaaeaaaaaeaaaaahiaalaaoekaaaaaaaia
abaaoeiaaeaaaaaeaaaaahiaamaaoekaaaaappjaaaaaoeiaacaaaaadaaaaahoa
aaaaoeiaaeaaoekbaeaaaaaeaaaaapiaaiaaoekaaaaappjaacaaoeiaaeaaaaae
aaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeiappppaaaa
fdeieefcoeadaaaaeaaaabaapjaaaaaafjaaaaaeegiocaaaaaaaaaaaagaaaaaa
fjaaaaaeegiocaaaabaaaaaaabaaaaaafjaaaaaeegiocaaaacaaaaaaacaaaaaa
fjaaaaaeegiocaaaadaaaaaabaaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaad
dcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaadhccabaaa
abaaaaaagfaaaaaddccabaaaacaaaaaagiaaaaacadaaaaaadiaaaaajbcaabaaa
aaaaaaaaakiacaaaaaaaaaaaaeaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaah
ccaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaa
aaaaaaaabkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaa
aaaaaaahccaabaaaaaaaaaaabkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaah
ccaabaaaaaaaaaaabkaabaaaaaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaa
aaaaaaaaagaabaaaaaaaaaaaaceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaa
fgafbaaaaaaaaaaaenaaaaaghcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaa
diaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaai
hcaabaaaaaaaaaaaegacbaaaaaaaaaaafgifcaaaaaaaaaaaaeaaaaaadiaaaaah
ccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaa
aaaaaaaaakbabaaaadaaaaaabkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaa
dkaabaiaebaaaaaaaaaaaaaaabeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaai
pcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadiaaaaai
hcaabaaaacaaaaaafgafbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaj
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaa
dcaaaaakccaabaaaaaaaaaaackaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdo
ckbabaaaaaaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaa
agaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakncaabaaaaaaaaaaaagijcaaa
adaaaaaaamaaaaaaagaabaaaaaaaaaaaagajbaaaacaaaaaadcaaaaakncaabaaa
aaaaaaaaagijcaaaadaaaaaaaoaaaaaafgafbaaaaaaaaaaaagaobaaaaaaaaaaa
dcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaacaaaaaafgafbaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaa
pgbpbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaa
adaaaaaaapaaaaaapgbpbaaaaaaaaaaaigadbaaaaaaaaaaaaaaaaaajhccabaaa
abaaaaaaegacbaaaaaaaaaaaegiccaiaebaaaaaaacaaaaaaabaaaaaadcaaaaal
dccabaaaacaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaafaaaaaaogikcaaa
aaaaaaaaafaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheogiaaaaaaadaaaaaa
aiaaaaaafaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaafmaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaahaiaaaafmaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaadamaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklkl"
}

SubProgram "gles3 " {
Keywords { "SHADOWS_CUBE" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec3 vec;
    highp vec2 pack0;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 424
uniform highp vec4 _MainTex_ST;
uniform lowp float _Cutoff;
#line 400
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 404
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 408
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 425
v2f_surf vert_surf( in appdata_full v ) {
    v2f_surf o;
    #line 428
    vert( v);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    o.vec = ((_Object2World * v.vertex).xyz - _LightPositionRange.xyz);
    o.pos = (glstate_matrix_mvp * v.vertex);
    #line 432
    return o;
}

out highp vec3 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec3(xl_retval.vec);
    xlv_TEXCOORD1 = vec2(xl_retval.pack0);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 315
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 395
struct Input {
    highp vec2 uv_MainTex;
};
#line 417
struct v2f_surf {
    highp vec4 pos;
    highp vec3 vec;
    highp vec2 pack0;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 325
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 338
#line 346
#line 360
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 393
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 400
#line 424
uniform highp vec4 _MainTex_ST;
uniform lowp float _Cutoff;
#line 206
highp vec4 EncodeFloatRGBA( in highp float v ) {
    highp vec4 kEncodeMul = vec4( 1.0, 255.0, 65025.0, 1.60581e+08);
    highp float kEncodeBit = 0.00392157;
    #line 210
    highp vec4 enc = (kEncodeMul * v);
    enc = fract(enc);
    enc -= (enc.yzww * kEncodeBit);
    return enc;
}
#line 411
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 413
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 435
lowp vec4 frag_surf( in v2f_surf IN ) {
    #line 437
    Input surfIN;
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    #line 441
    o.Emission = vec3( 0.0);
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    #line 445
    surf( surfIN, o);
    xll_clip_f((o.Alpha - _Cutoff));
    return EncodeFloatRGBA( min( (length(IN.vec) * _LightPositionRange.w), 0.999));
}
in highp vec3 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.vec = vec3(xlv_TEXCOORD0);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD1);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

}
Program "fp" {
// Fragment combos: 2
//   opengl - ALU: 5 to 12, TEX: 1 to 1
//   d3d9 - ALU: 8 to 15, TEX: 2 to 2
//   d3d11 - ALU: 2 to 9, TEX: 1 to 1, FLOW: 1 to 1
//   d3d11_9x - ALU: 2 to 9, TEX: 1 to 1, FLOW: 1 to 1
SubProgram "opengl " {
Keywords { "SHADOWS_DEPTH" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
"!!ARBfp1.0
# 5 ALU, 1 TEX
PARAM c[3] = { program.local[0..1],
		{ 0 } };
TEMP R0;
TEX R0.w, fragment.texcoord[1], texture[0], 2D;
MUL R0.x, R0.w, c[0].w;
SLT R0.x, R0, c[1];
MOV result.color, c[2].x;
KIL -R0.x;
END
# 5 instructions, 1 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "SHADOWS_DEPTH" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
"ps_2_0
; 8 ALU, 2 TEX
dcl_2d s0
def c2, 0.00000000, 1.00000000, 0, 0
dcl t0.xyzw
dcl t1.xy
texld r0, t1, s0
mul r0.w, r0, c0
add_pp r0.x, r0.w, -c1
cmp r0.x, r0, c2, c2.y
mov_pp r0, -r0.x
texkill r0.xyzw
rcp r0.x, t0.w
mul r0.x, t0.z, r0
mov_pp r0, r0.x
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { "SHADOWS_DEPTH" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 4.00 (3 instructions), vertex: 0, texture: 4,
//   sequencer: 6, interpolator: 8;    1 GPR, 63 threads,
// Performance (if enough threads): ~8 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaabcmaaaaaajeaaaaaaaaaaaaaaceaaaaaaoaaaaaabaiaaaaaaaa
aaaaaaaaaaaaaaliaaaaaabmaaaaaaklppppadaaaaaaaaadaaaaaabmaaaaaaaa
aaaaaakeaaaaaafiaaacaaaaaaabaaaaaaaaaagaaaaaaaaaaaaaaahaaaacaaab
aaabaaaaaaaaaahiaaaaaaaaaaaaaaiiaaadaaaaaaabaaaaaaaaaajeaaaaaaaa
fpedgpgmgphcaaklaaabaaadaaabaaaeaaabaaaaaaaaaaaafpedhfhegpggggaa
aaaaaaadaaabaaabaaabaaaaaaaaaaaafpengbgjgofegfhiaaklklklaaaeaaam
aaabaaabaaabaaaaaaaaaaaahahdfpddfpdaaadccodacodcdadddfddcodaaakl
aaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabeabpmaabaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaeaaaaaaafebaaaaaaaaaaaaaaeaaaaaaaaaaaaaicb
aaabaaabaaaaaacbaaaadafbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaabbaacaaaabcaameaaaaaaaaaadaadaaaaccaa
aaaaaaaabaaiaaabbpbpppplaaaaeaaamiabaaaaabgmblgmilaaaaabmiaaaaaa
aagmgmaahjppaaaacabamaaaabaaaagmocaaaaiaaaaaaaaaaaaaaaaaaaaaaaaa
"
}

SubProgram "ps3 " {
Keywords { "SHADOWS_DEPTH" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
"sce_fp_rsx // 8 instructions using 2 registers
[Configuration]
24
ffffffff000080200002ffff000000000000848002000000
[Offsets]
2
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
128
b0001700c8011c9dc8000001c8003fe102800200fe001c9dfe020001c8000001
00000000000000000000000000000000037e4a80c9001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
1e81014000021c9cc8000001c800000100000000000000000000000000000000
"
}

SubProgram "d3d11 " {
Keywords { "SHADOWS_DEPTH" }
ConstBuffer "$Globals" 112 // 100 used size, 8 vars
Vector 48 [_Color] 4
Float 96 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
// 6 instructions, 1 temp regs, 0 temp arrays:
// ALU 2 float, 0 int, 0 uint
// TEX 1 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedihibmdllgeenbnnomfmkkaddbengncjcabaaaaaaleabaaaaadaaaaaa
cmaaaaaaieaaaaaaliaaaaaaejfdeheofaaaaaaaacaaaaaaaiaaaaaadiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaeeaaaaaaabaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcpeaaaaaa
eaaaaaaadnaaaaaafjaaaaaeegiocaaaaaaaaaaaahaaaaaafkaaaaadaagabaaa
aaaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaa
gfaaaaadpccabaaaaaaaaaaagiaaaaacabaaaaaaefaaaaajpcaabaaaaaaaaaaa
egbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaambcaabaaa
aaaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaaakiacaiaebaaaaaa
aaaaaaaaagaaaaaadbaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaa
aaaaaaaaanaaaeadakaabaaaaaaaaaaadgaaaaaipccabaaaaaaaaaaaaceaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "SHADOWS_DEPTH" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "SHADOWS_DEPTH" }
"!!GLES"
}

SubProgram "flash " {
Keywords { "SHADOWS_DEPTH" }
Vector 0 [_Color]
Float 1 [_Cutoff]
SetTexture 0 [_MainTex] 2D
"agal_ps
c2 0.0 1.0 0.003922 0.0
c3 1.0 255.0 65025.0 160581376.0
[bc]
ciaaaaaaaaaaapacabaaaaoeaeaaaaaaaaaaaaaaafaababb tex r0, v1, s0 <2d wrap linear point>
adaaaaaaaaaaaiacaaaaaappacaaaaaaaaaaaaoeabaaaaaa mul r0.w, r0.w, c0
acaaaaaaaaaaabacaaaaaappacaaaaaaabaaaaoeabaaaaaa sub r0.x, r0.w, c1
cjaaaaaaaaaaabacaaaaaaaaacaaaaaaacaaaaaaabaaaaaa sge r0.x, r0.x, c2.x
chaaaaaaaaaaaaaaaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa kil a0.none, r0.x
afaaaaaaaaaaabacaaaaaappaeaaaaaaaaaaaaaaaaaaaaaa rcp r0.x, v0.w
adaaaaaaaaaaabacaaaaaakkaeaaaaaaaaaaaaaaacaaaaaa mul r0.x, v0.z, r0.x
adaaaaaaaaaaapacaaaaaaaaacaaaaaaadaaaaoeabaaaaaa mul r0, r0.x, c3
aiaaaaaaabaaapacaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa frc r1, r0
bfaaaaaaaaaaaeacabaaaappacaaaaaaaaaaaaaaaaaaaaaa neg r0.z, r1.w
bfaaaaaaaaaaalacabaaaapjacaaaaaaaaaaaaaaaaaaaaaa neg r0.xyw, r1.yzww
adaaaaaaaaaaapacaaaaaaoeacaaaaaaacaaaakkabaaaaaa mul r0, r0, c2.z
abaaaaaaaaaaapacaaaaaaoeacaaaaaaabaaaaoeacaaaaaa add r0, r0, r1
aaaaaaaaaaaaapadaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r0
"
}

SubProgram "d3d11_9x " {
Keywords { "SHADOWS_DEPTH" }
ConstBuffer "$Globals" 112 // 100 used size, 8 vars
Vector 48 [_Color] 4
Float 96 [_Cutoff]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
// 6 instructions, 1 temp regs, 0 temp arrays:
// ALU 2 float, 0 int, 0 uint
// TEX 1 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefiecedikojijhbbklcppgpgjpgokmpnobbdmaaabaaaaaaiiacaaaaaeaaaaaa
daaaaaaaaaabaaaapmabaaaafeacaaaaebgpgodjmiaaaaaamiaaaaaaaaacpppp
iiaaaaaaeaaaaaaaacaaciaaaaaaeaaaaaaaeaaaabaaceaaaaaaeaaaaaaaaaaa
aaaaadaaabaaaaaaaaaaaaaaaaaaagaaabaaabaaaaaaaaaaaaacppppfbaaaaaf
acaaapkaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabpaaaaacaaaaaaiaaaaaadla
bpaaaaacaaaaaajaaaaiapkaecaaaaadaaaaapiaaaaaoelaaaaioekaabaaaaac
abaaaiiaaaaappkaaeaaaaaeaaaacpiaaaaappiaabaappiaabaaaakbebaaaaab
aaaaapiaabaaaaacaaaacpiaacaaaakaabaaaaacaaaicpiaaaaaoeiappppaaaa
fdeieefcpeaaaaaaeaaaaaaadnaaaaaafjaaaaaeegiocaaaaaaaaaaaahaaaaaa
fkaaaaadaagabaaaaaaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaagcbaaaad
dcbabaaaabaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacabaaaaaaefaaaaaj
pcaabaaaaaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaa
dcaaaaambcaabaaaaaaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaa
akiacaiaebaaaaaaaaaaaaaaagaaaaaadbaaaaahbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaaaaanaaaeadakaabaaaaaaaaaaadgaaaaaipccabaaa
aaaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadoaaaaabejfdeheo
faaaaaaaacaaaaaaaiaaaaaadiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaa
apaaaaaaeeaaaaaaabaaaaaaaaaaaaaaadaaaaaaabaaaaaaadadaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklkl"
}

SubProgram "gles3 " {
Keywords { "SHADOWS_DEPTH" }
"!!GLES3"
}

SubProgram "opengl " {
Keywords { "SHADOWS_CUBE" }
Vector 0 [_LightPositionRange]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
"!!ARBfp1.0
# 12 ALU, 1 TEX
PARAM c[5] = { program.local[0..2],
		{ 1, 255, 65025, 1.6058138e+008 },
		{ 0.99900001, 0.0039215689 } };
TEMP R0;
TEX R0.w, fragment.texcoord[1], texture[0], 2D;
MUL R0.x, R0.w, c[1].w;
SLT R0.x, R0, c[2];
KIL -R0.x;
DP3 R0.x, fragment.texcoord[0], fragment.texcoord[0];
RSQ R0.x, R0.x;
RCP R0.x, R0.x;
MUL R0.x, R0, c[0].w;
MIN R0.x, R0, c[4];
MUL R0, R0.x, c[3];
FRC R0, R0;
MAD result.color, -R0.yzww, c[4].y, R0;
END
# 12 instructions, 1 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "SHADOWS_CUBE" }
Vector 0 [_LightPositionRange]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
"ps_2_0
; 15 ALU, 2 TEX
dcl_2d s0
def c3, 0.00000000, 1.00000000, 0.99900001, 0.00392157
def c4, 1.00000000, 255.00000000, 65025.00000000, 160581376.00000000
dcl t0.xyz
dcl t1.xy
texld r0, t1, s0
mul r0.w, r0, c1
add_pp r0.x, r0.w, -c2
cmp r0.x, r0, c3, c3.y
mov_pp r0, -r0.x
texkill r0.xyzw
dp3 r0.x, t0, t0
rsq r0.x, r0.x
rcp r0.x, r0.x
mul r0.x, r0, c0.w
min r0.x, r0, c3.z
mul r0, r0.x, c4
frc r1, r0
mov r0.z, -r1.w
mov r0.xyw, -r1.yzxw
mad r0, r0, c3.w, r1
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { "SHADOWS_CUBE" }
Vector 1 [_Color]
Float 2 [_Cutoff]
Vector 0 [_LightPositionRange]
SetTexture 0 [_MainTex] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 10.67 (8 instructions), vertex: 0, texture: 4,
//   sequencer: 8, interpolator: 8;    2 GPRs, 63 threads,
// Performance (if enough threads): ~10 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaabfiaaaaaanaaaaaaaaaaaaaaaceaaaaabaiaaaaabdaaaaaaaaa
aaaaaaaaaaaaaaoaaaaaaabmaaaaaandppppadaaaaaaaaaeaaaaaabmaaaaaaaa
aaaaaammaaaaaagmaaacaaabaaabaaaaaaaaaaheaaaaaaaaaaaaaaieaaacaaac
aaabaaaaaaaaaaimaaaaaaaaaaaaaajmaaacaaaaaaabaaaaaaaaaaheaaaaaaaa
aaaaaalaaaadaaaaaaabaaaaaaaaaalmaaaaaaaafpedgpgmgphcaaklaaabaaad
aaabaaaeaaabaaaaaaaaaaaafpedhfhegpggggaaaaaaaaadaaabaaabaaabaaaa
aaaaaaaafpemgjghgihefagphdgjhegjgpgofcgbgoghgfaafpengbgjgofegfhi
aaklklklaaaeaaamaaabaaabaaabaaaaaaaaaaaahahdfpddfpdaaadccodacodc
dadddfddcodaaaklaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabeabpmaaba
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaaajabaaaabaaaaaaaaae
aaaaaaaaaaaabeecaaadaaadaaaaaacbaaaahafaaaaadbfbaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadliaiaibaaaaaaaa
dphplohhaaaaaaaaedhpaaaadpiaaaaaehhoabaaenbjcehaaaabbaacaaaabcaa
meaaaaaaaaaagaadcaajbcaaccaaaaaabaaiaacbbpbpphppaaaaeaaamiabaaaa
aaloloaapaaaaaaamiacaaaaabblblgmilaaabackabaaaaaaaaaaagmocaaaaia
kibaaaaaaalblbaafjpoaaaamiabaaaaaagmmgaakdaapoaamiapaaaaaagmaaaa
kbaappaamiapaaaaaaaaaaaaoiaaaaaamiapiaaaaebegmanklaapoaaaaaaaaaa
aaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "SHADOWS_CUBE" }
Vector 0 [_LightPositionRange]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
"sce_fp_rsx // 19 instructions using 2 registers
[Configuration]
24
ffffffff0000c0200003fffe000000000000848002000000
[Offsets]
3
_LightPositionRange 1 0
000000a0
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
304
b0001700c8011c9dc8000001c8003fe102800200fe001c9dfe020001c8000001
00000000000000000000000000000000037e4a80c9001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
8e000100c8011c9dc8000001c8003fe102000500c8001c9dc8000001c8000001
02001b00c8001c9dc8000001c800000102003a00fe021c9dc8000001c8000001
0000000000000000000000000000000002000800c8001c9d00020000c8000001
be773f7f0000000000000000000000001e00020000001c9cc8020001c8000001
00003f800000437f0100477e24704d191e001000c8001c9dc8000001c8000001
1e7e7e00c8001c9dc8000001c80000011e810400f2001c9f00020000c8000001
80813b80000000000000000000000000
"
}

SubProgram "d3d11 " {
Keywords { "SHADOWS_CUBE" }
ConstBuffer "$Globals" 112 // 100 used size, 8 vars
Vector 48 [_Color] 4
Float 96 [_Cutoff]
ConstBuffer "UnityLighting" 720 // 32 used size, 17 vars
Vector 16 [_LightPositionRange] 4
BindCB "$Globals" 0
BindCB "UnityLighting" 1
SetTexture 0 [_MainTex] 2D 0
// 12 instructions, 1 temp regs, 0 temp arrays:
// ALU 9 float, 0 int, 0 uint
// TEX 1 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedmbjklbhohpfmojdchpcibgnnnfclaheaabaaaaaakeacaaaaadaaaaaa
cmaaaaaajmaaaaaanaaaaaaaejfdeheogiaaaaaaadaaaaaaaiaaaaaafaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaafmaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaafmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
adadaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheo
cmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaa
apaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcmmabaaaaeaaaaaaahdaaaaaa
fjaaaaaeegiocaaaaaaaaaaaahaaaaaafjaaaaaeegiocaaaabaaaaaaacaaaaaa
fkaaaaadaagabaaaaaaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaagcbaaaad
hcbabaaaabaaaaaagcbaaaaddcbabaaaacaaaaaagfaaaaadpccabaaaaaaaaaaa
giaaaaacabaaaaaaefaaaaajpcaabaaaaaaaaaaaegbabaaaacaaaaaaeghobaaa
aaaaaaaaaagabaaaaaaaaaaadcaaaaambcaabaaaaaaaaaaadkaabaaaaaaaaaaa
dkiacaaaaaaaaaaaadaaaaaaakiacaiaebaaaaaaaaaaaaaaagaaaaaadbaaaaah
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaaanaaaeadakaabaaa
aaaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaaabaaaaaaegbcbaaaabaaaaaa
elaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaaibcaabaaaaaaaaaaa
akaabaaaaaaaaaaadkiacaaaabaaaaaaabaaaaaaddaaaaahbcaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaahhlohpdpdiaaaaakpcaabaaaaaaaaaaaagaabaaa
aaaaaaaaaceaaaaaaaaaiadpaaaahpedaaabhoehhacebjenbkaaaaafpcaabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaanpccabaaaaaaaaaaajgapbaiaebaaaaaa
aaaaaaaaaceaaaaaibiaiadlibiaiadlibiaiadlibiaiadlegaobaaaaaaaaaaa
doaaaaab"
}

SubProgram "gles " {
Keywords { "SHADOWS_CUBE" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "SHADOWS_CUBE" }
"!!GLES"
}

SubProgram "flash " {
Keywords { "SHADOWS_CUBE" }
Vector 0 [_LightPositionRange]
Vector 1 [_Color]
Float 2 [_Cutoff]
SetTexture 0 [_MainTex] 2D
"agal_ps
c3 0.0 1.0 0.999 0.003922
c4 1.0 255.0 65025.0 160581376.0
[bc]
ciaaaaaaaaaaapacabaaaaoeaeaaaaaaaaaaaaaaafaababb tex r0, v1, s0 <2d wrap linear point>
adaaaaaaaaaaaiacaaaaaappacaaaaaaabaaaaoeabaaaaaa mul r0.w, r0.w, c1
acaaaaaaaaaaabacaaaaaappacaaaaaaacaaaaoeabaaaaaa sub r0.x, r0.w, c2
cjaaaaaaaaaaabacaaaaaaaaacaaaaaaadaaaaaaabaaaaaa sge r0.x, r0.x, c3.x
chaaaaaaaaaaaaaaaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa kil a0.none, r0.x
bcaaaaaaaaaaabacaaaaaaoeaeaaaaaaaaaaaaoeaeaaaaaa dp3 r0.x, v0, v0
akaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa rsq r0.x, r0.x
afaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa rcp r0.x, r0.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaappabaaaaaa mul r0.x, r0.x, c0.w
agaaaaaaaaaaabacaaaaaaaaacaaaaaaadaaaakkabaaaaaa min r0.x, r0.x, c3.z
adaaaaaaaaaaapacaaaaaaaaacaaaaaaaeaaaaoeabaaaaaa mul r0, r0.x, c4
aiaaaaaaabaaapacaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa frc r1, r0
bfaaaaaaaaaaaeacabaaaappacaaaaaaaaaaaaaaaaaaaaaa neg r0.z, r1.w
bfaaaaaaaaaaalacabaaaapjacaaaaaaaaaaaaaaaaaaaaaa neg r0.xyw, r1.yzww
adaaaaaaaaaaapacaaaaaaoeacaaaaaaadaaaappabaaaaaa mul r0, r0, c3.w
abaaaaaaaaaaapacaaaaaaoeacaaaaaaabaaaaoeacaaaaaa add r0, r0, r1
aaaaaaaaaaaaapadaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r0
"
}

SubProgram "d3d11_9x " {
Keywords { "SHADOWS_CUBE" }
ConstBuffer "$Globals" 112 // 100 used size, 8 vars
Vector 48 [_Color] 4
Float 96 [_Cutoff]
ConstBuffer "UnityLighting" 720 // 32 used size, 17 vars
Vector 16 [_LightPositionRange] 4
BindCB "$Globals" 0
BindCB "UnityLighting" 1
SetTexture 0 [_MainTex] 2D 0
// 12 instructions, 1 temp regs, 0 temp arrays:
// ALU 9 float, 0 int, 0 uint
// TEX 1 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefiecedppolmlbnehmfcabfgfpojooibcmffdfhabaaaaaageaeaaaaaeaaaaaa
daaaaaaaomabaaaamaadaaaadaaeaaaaebgpgodjleabaaaaleabaaaaaaacpppp
giabaaaaemaaaaaaadaaciaaaaaaemaaaaaaemaaabaaceaaaaaaemaaaaaaaaaa
aaaaadaaabaaaaaaaaaaaaaaaaaaagaaabaaabaaaaaaaaaaabaaabaaabaaacaa
aaaaaaaaaaacppppfbaaaaafadaaapkaibiaiadlaaaaaaaaaaaaaaaaaaaaaaaa
fbaaaaafaeaaapkahhlohplpaaljdolpaaaahklpaaaaaaiafbaaaaafafaaapka
aaaaiadpaaaahpedaaabhoehhacebjenbpaaaaacaaaaaaiaaaaaahlabpaaaaac
aaaaaaiaabaaadlabpaaaaacaaaaaajaaaaiapkaecaaaaadaaaaapiaabaaoela
aaaioekaabaaaaacabaaaiiaaaaappkaaeaaaaaeaaaacpiaaaaappiaabaappia
abaaaakbebaaaaabaaaaapiaaiaaaaadaaaaabiaaaaaoelaaaaaoelaahaaaaac
aaaaabiaaaaaaaiaagaaaaacaaaaabiaaaaaaaiaafaaaaadaaaaaciaaaaaaaia
acaappkaabaaaaacabaaabiaaeaaaakaaeaaaaaeaaaaabiaaaaaaaiaacaappka
abaaaaiaafaaaaadabaaapiaaaaaffiaafaaoekabdaaaaacabaaapiaabaaoeia
fiaaaaaeaaaaapiaaaaaaaiaaeaaoekbabaaoeiaaeaaaaaeabaacliaaaaamjia
adaaaakbaaaaoeiaaeaaaaaeabaaceiaaaaappiaadaaaakbaaaakkiaabaaaaac
aaaicpiaabaaoeiappppaaaafdeieefcmmabaaaaeaaaaaaahdaaaaaafjaaaaae
egiocaaaaaaaaaaaahaaaaaafjaaaaaeegiocaaaabaaaaaaacaaaaaafkaaaaad
aagabaaaaaaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaagcbaaaadhcbabaaa
abaaaaaagcbaaaaddcbabaaaacaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaac
abaaaaaaefaaaaajpcaabaaaaaaaaaaaegbabaaaacaaaaaaeghobaaaaaaaaaaa
aagabaaaaaaaaaaadcaaaaambcaabaaaaaaaaaaadkaabaaaaaaaaaaadkiacaaa
aaaaaaaaadaaaaaaakiacaiaebaaaaaaaaaaaaaaagaaaaaadbaaaaahbcaabaaa
aaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaaanaaaeadakaabaaaaaaaaaaa
baaaaaahbcaabaaaaaaaaaaaegbcbaaaabaaaaaaegbcbaaaabaaaaaaelaaaaaf
bcaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaaibcaabaaaaaaaaaaaakaabaaa
aaaaaaaadkiacaaaabaaaaaaabaaaaaaddaaaaahbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaahhlohpdpdiaaaaakpcaabaaaaaaaaaaaagaabaaaaaaaaaaa
aceaaaaaaaaaiadpaaaahpedaaabhoehhacebjenbkaaaaafpcaabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaanpccabaaaaaaaaaaajgapbaiaebaaaaaaaaaaaaaa
aceaaaaaibiaiadlibiaiadlibiaiadlibiaiadlegaobaaaaaaaaaaadoaaaaab
ejfdeheogiaaaaaaadaaaaaaaiaaaaaafaaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaafmaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaahahaaaa
fmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaadadaaaafdfgfpfaepfdejfe
ejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaa
caaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgf
heaaklkl"
}

SubProgram "gles3 " {
Keywords { "SHADOWS_CUBE" }
"!!GLES3"
}

}
	}
	Pass {
		Name "ShadowCollector"
		Tags { "LightMode" = "ShadowCollector" }
		Fog {Mode Off}
		ZWrite On ZTest LEqual
Program "vp" {
// Vertex combos: 4
//   opengl - ALU: 89 to 89
//   d3d9 - ALU: 89 to 89
//   d3d11 - ALU: 43 to 43, TEX: 0 to 0, FLOW: 1 to 1
//   d3d11_9x - ALU: 43 to 43, TEX: 0 to 0, FLOW: 1 to 1
SubProgram "opengl " {
Keywords { "SHADOWS_NONATIVE" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Vector 29 [_Time]
Matrix 9 [unity_World2Shadow0]
Matrix 13 [unity_World2Shadow1]
Matrix 17 [unity_World2Shadow2]
Matrix 21 [unity_World2Shadow3]
Matrix 25 [_Object2World]
Float 30 [_WaveSpeed]
Float 31 [_Amplitude]
Vector 32 [_MainTex_ST]
"!!ARBvp1.0
# 89 ALU
PARAM c[38] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.modelview[0],
		state.matrix.mvp,
		program.local[9..32],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[30];
MUL R0.x, R0, c[29];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[33];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[34].xyxw, c[34].zwzw;
MAD R1.xyz, R1, R0, c[35].xyxw;
MAD R1.xyz, R1, R0, c[35].zwzw;
MAD R1.xyz, R1, R0, c[36].xyxw;
MAD R0.xyz, R1, R0, c[33].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[36].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[33].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[37].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[31];
MAD R0.w, -R0.x, c[37].x, vertex.position.z;
MAD R0.x, R1.w, c[37].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[33];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[34].xyxw, c[34].zwzw;
MAD R3.xyz, R2, R0, c[35].xyxw;
MAD R3.xyz, R3, R0, c[35].zwzw;
MAD R3.xyz, R3, R0, c[36].xyxw;
ADD R1.xyz, -R1.w, c[33];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[34].xyxw, c[34].zwzw;
MAD R2.xyz, R2, R1, c[35].xyxw;
MAD R2.xyz, R2, R1, c[35].zwzw;
MAD R3.xyz, R3, R0, c[33].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[36].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[33].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[36].xyxw;
MAD R1.xyz, R0, R1, c[33].wzww;
SGE R0.yz, R1.w, c[36].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[33].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R0, c[31];
MUL R0.y, -R0, c[37].z;
MAD R0.y, R0.x, c[33], R0;
MUL R0.x, R2.w, c[31];
MAD R0.x, R0, c[33].y, vertex.position;
DP4 R1.w, R0.xywz, c[3];
DP4 R2.w, R0.xywz, c[28];
DP4 R1.z, R0.xywz, c[27];
DP4 R1.x, R0.xywz, c[25];
DP4 R1.y, R0.xywz, c[26];
MOV R2.xyz, R1;
MOV R1.w, -R1;
DP4 result.texcoord[0].z, R2, c[11];
DP4 result.texcoord[0].y, R2, c[10];
DP4 result.texcoord[0].x, R2, c[9];
DP4 result.texcoord[1].z, R2, c[15];
DP4 result.texcoord[1].y, R2, c[14];
DP4 result.texcoord[1].x, R2, c[13];
DP4 result.texcoord[2].z, R2, c[19];
DP4 result.texcoord[2].y, R2, c[18];
DP4 result.texcoord[2].x, R2, c[17];
DP4 result.texcoord[3].z, R2, c[23];
DP4 result.texcoord[3].y, R2, c[22];
DP4 result.texcoord[3].x, R2, c[21];
MOV result.texcoord[4], R1;
DP4 result.position.w, R0.xywz, c[8];
DP4 result.position.z, R0.xywz, c[7];
DP4 result.position.y, R0.xywz, c[6];
DP4 result.position.x, R0.xywz, c[5];
MAD result.texcoord[5].xy, vertex.texcoord[0], c[32], c[32].zwzw;
END
# 89 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "SHADOWS_NONATIVE" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_modelview0]
Matrix 4 [glstate_matrix_mvp]
Vector 28 [_Time]
Matrix 8 [unity_World2Shadow0]
Matrix 12 [unity_World2Shadow1]
Matrix 16 [unity_World2Shadow2]
Matrix 20 [unity_World2Shadow3]
Matrix 24 [_Object2World]
Float 29 [_WaveSpeed]
Float 30 [_Amplitude]
Vector 31 [_MainTex_ST]
"vs_2_0
; 89 ALU
def c32, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c33, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c34, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c35, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c36, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_texcoord0 v3
add r0.w, v0.x, v0.y
mov r0.x, c28
mul r0.x, c29, r0
slt r0.y, r0.x, c34.x
max r0.y, -r0, r0
slt r0.y, c34.x, r0
add r0.z, -r0.y, c32
mul r0.z, r0.x, r0
mov r2.w, v0
mad r1.y, r0, -r0.x, r0.z
add r1.x, r0.w, v0.z
mad r0.x, r1.y, c34.y, r1
mad r0.x, r0, c34.z, c34.w
frc r0.x, r0
mad r1.z, r0.x, c35.x, c35.y
sincos r0.xy, r1.z, c33.xyzw, c32.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1, c36.x, r1.x
mul r0.x, r0, c30
mad r2.z, -r0.x, c36.y, v0
mad r0.x, r1.y, c35.z, r1
mad r0.x, r0, c34.z, c34.w
mad r0.y, r0, c34.z, c34.w
frc r0.y, r0
mad r1.y, r0, c35.x, c35
frc r1.x, r0
sincos r0.xy, r1.y, c33.xyzw, c32.xyzw
mad r0.x, r1, c35, c35.y
sincos r1.xy, r0.x, c33.xyzw, c32.xyzw
mul r0.z, v3.y, r0.y
mul r0.x, v3.y, r1.y
mul r0.y, v3, v3.x
mul r0.y, -r0, c35.w
mul r0.x, r0, c30
mad r2.y, r0.x, c32.w, r0
mul r0.x, r0.z, c30
mad r2.x, r0, c32.w, v0
dp4 r0.w, r2, c2
dp4 r1.w, r2, c27
dp4 r0.z, r2, c26
dp4 r0.x, r2, c24
dp4 r0.y, r2, c25
mov r1.xyz, r0
mov r0.w, -r0
dp4 oT0.z, r1, c10
dp4 oT0.y, r1, c9
dp4 oT0.x, r1, c8
dp4 oT1.z, r1, c14
dp4 oT1.y, r1, c13
dp4 oT1.x, r1, c12
dp4 oT2.z, r1, c18
dp4 oT2.y, r1, c17
dp4 oT2.x, r1, c16
dp4 oT3.z, r1, c22
dp4 oT3.y, r1, c21
dp4 oT3.x, r1, c20
mov oT4, r0
dp4 oPos.w, r2, c7
dp4 oPos.z, r2, c6
dp4 oPos.y, r2, c5
dp4 oPos.x, r2, c4
mad oT5.xy, v3, c31, c31.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "SHADOWS_NONATIVE" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Float 30 [_Amplitude]
Vector 31 [_MainTex_ST]
Matrix 25 [_Object2World] 4
Vector 0 [_Time]
Float 29 [_WaveSpeed]
Matrix 21 [glstate_matrix_modelview0] 4
Matrix 17 [glstate_matrix_mvp] 4
Matrix 1 [unity_World2Shadow0]
Matrix 5 [unity_World2Shadow1]
Matrix 9 [unity_World2Shadow2]
Matrix 13 [unity_World2Shadow3]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 61.33 (46 instructions), vertex: 32, texture: 0,
//   sequencer: 22,  7 GPRs, 27 threads,
// Performance (if enough threads): ~61 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaaceaaaaaacneaaaaaaaaaaaaaaceaaaaableaaaaabnmaaaaaaaa
aaaaaaaaaaaaabimaaaaaabmaaaaabhppppoadaaaaaaaaaiaaaaaabmaaaaaaaa
aaaaabhiaaaaaalmaaacaaboaaabaaaaaaaaaamiaaaaaaaaaaaaaaniaaacaabp
aaabaaaaaaaaaaoeaaaaaaaaaaaaaapeaaacaabjaaaeaaaaaaaaabaeaaaaaaaa
aaaaabbeaaacaaaaaaabaaaaaaaaaaoeaaaaaaaaaaaaabbkaaacaabnaaabaaaa
aaaaaamiaaaaaaaaaaaaabcfaaacaabfaaaeaaaaaaaaabaeaaaaaaaaaaaaabdp
aaacaabbaaaeaaaaaaaaabaeaaaaaaaaaaaaabfcaaacaaabaabaaaaaaaaaabgi
aaaaaaaafpebgnhagmgjhehfgegfaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaa
fpengbgjgofegfhifpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpepgcgk
gfgdhedcfhgphcgmgeaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpfegjgn
gfaafpfhgbhggffdhagfgfgeaaghgmhdhegbhegffpgngbhehcgjhifpgngpgegf
gmhggjgfhhdaaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaahfgogjhehjfp
fhgphcgmgedcfdgigbgegphhaaklklklaaadaaadaaaeaaaeaaaeaaaaaaaaaaaa
hghdfpddfpdaaadccodacodcdadddfddcodaaaklaaaaaaaaaaaaaaabaaaaaaaa
aaaaaaaaaaaaaabeaapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaea
aaaaacjeaafbaaagaaaaaaaaaaaaaaaaaaaaeimgaaaaaaabaaaaaaacaaaaaaah
aaaaacjaaabaaaagaacafaahaaaahafaaaabhbfbaaachcfcaaadhdfdaaaepefe
aaagdfffaaaabacpaaaabadaaaaabadbaaaabaddaaaaaacbaaaabadfaaaabacc
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadoccpjidlpiaaaaamaejapnldpiaaaaa
dpaaaaaadoemmmmneamjapnldpggggggdpljjjjkeaehkobeeaammmmndpaaaaaa
dacfgaagaaaabaaamcaaaaaaaaaagaamgabcbcaabcaaaaaaaaaafabiaaaabcaa
meaaaaaaaaaagabngacdbcaabcaaaaaaaaaagacjgacpbcaabcaaaaaaaaaabadf
aaaaccaaaaaaaaaaafpicaaaaaaaagiiaaaaaaaaafpidaaaaaaaapmiaaaaaaaa
miacaaaaaagmlbaacbaapnaamiabaaaaaagmgmaacbaabnaaheaeaaaaabloblgm
laacpnaakibaaaaabiaaaaebmcaaaabnmiaiaaabaalbgmaaobadadaamiahaaaa
aagmmamgklaappaamiahaaaaaamagmblilaapnppmiahaaabaamaaaaaoiaaaaaa
miapaaaaaajengaakbabpoaamialaaaaaalimgaakaaapnaamabaabaaaaaaaagm
ocaaaaaamacaabaaaaaaaalbocaaaaaamaemabadaalbkmblkbadpoaamiahaaab
aabgmaaaobadabaamialaaaaaamngmaakbabboaamiacaaaaaalbgmaaoaaaacaa
beapaaabaablaagmkbacbeaaaeibaaaaafblmgmgoaaaacaamiapaaabaagmiiii
klaabdabmiapaaabaabldejeklaabcabmiapiadoaalbaadeklaabbabkiipafab
aablaambibacbmbfmiapaaabaagmdedeklaablabmiapaaabaabldeaaklaabkab
miapaaabaalbipppklaabjabmiahiaaeaamjmjaaocababaamiadiaafaalalabk
iladbpbpkiihaeadaagmmamdibabbabgbechaaaeaamgmagmkbabapabkichaaac
aagmmaebibabaiamkmehaaagaagmmaiaibabaeamkmihaaafaablmamaibabaoam
miahaaafaalbleleklabanafmiahaaagaamgleleklabadagmiahaaacaamglele
klabahacmiaoaaaaaamgimnbklabalaamiaoaaaaaablpmnbklabakaamiahaaac
aablmaleklabagacmiahaaagaablmaleklabacagmiahiaaaaalbmamaklababag
miahiaabaalbmamaklabafacmiahiaacaalbmabfklabajaakiipadabaadeaama
maafaebhmiahiaadaamamaaaoaabadaamiabaaaaaablblaaoaabadaamiaiiaae
afblmggmklacbiaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "SHADOWS_NONATIVE" }
Matrix 256 [glstate_matrix_modelview0]
Matrix 260 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Vector 467 [_Time]
Matrix 264 [unity_World2Shadow0]
Matrix 268 [unity_World2Shadow1]
Matrix 272 [unity_World2Shadow2]
Matrix 276 [unity_World2Shadow3]
Matrix 280 [_Object2World]
Float 466 [_WaveSpeed]
Float 465 [_Amplitude]
Vector 464 [_MainTex_ST]
"sce_vp_rsx // 46 instructions using 3 registers
[Configuration]
8
0000002e01010300
[Defaults]
2
463 4
400ccccd3e4ccccd4047ae143f000000
462 2
3f6666663fb9999a
[Microcode]
736
401f9c6c011d0808010400d740619fb000001c6c00c000000106c08aa0409ffc
00001c6c005d20000186c08360411ffc00001c6c009d3000008000c360411ffc
201fdc6c004000000086c08360411ffc00001c6c00c000550106c08aa0203ffc
00001c6c004000000086c08360405ffc00002400004000800086c08360405ffc
00001c6c011cf055008800dfe0219ffc00001c6c011ce055009540dfe0205ffc
00009c6c7880082a8100008aa029007c00009c6c789ce080028000c00031007c
00011c6c7880082a81154055402900fc00001c6c008008000095408360409ffc
00001c6c0080082a8115414360411ffc00001c6c009d1000008000c360411ffc
00001c6c009d102a808000c360409ffc00001c6c009d1000048000c360405ffc
00011c6c011cf05500bfc0c000a09ffc00011c6c011cf0aa809540d540405ffc
00011c6c011cf00000bfc0c000411ffc00011c6c0040007f8106c08360403ffc
401f9c6c01d0700d8486c0c360403f80401f9c6c01d0600d8486c0c360405f80
401f9c6c01d0500d8486c0c360409f80401f9c6c01d0400d8486c0c360411f80
00009c6c01d1b00d8486c0c360403ffc00001c6c01d1a00d8486c0c360405ffc
00001c6c01d1900d8486c0c360409ffc00001c6c01d1800d8486c0c360411ffc
00001c6c01d0200d8486c0c360403ffc00009c6c0040000c0086c0836041dffc
00001c6c004000ff8086c08360403ffc401f9c6c01d0a00d8286c0c360405f9c
401f9c6c01d0900d8286c0c360409f9c401f9c6c01d0800d8286c0c360411f9c
401f9c6c01d0e00d8286c0c360405fa0401f9c6c01d0d00d8286c0c360409fa0
401f9c6c01d0c00d8286c0c360411fa0401f9c6c01d1200d8286c0c360405fa4
401f9c6c01d1100d8286c0c360409fa4401f9c6c01d1000d8286c0c360411fa4
401f9c6c01d1600d8286c0c360405fa8401f9c6c01d1500d8286c0c360409fa8
401f9c6c01d1400d8286c0c360411fa8401f9c6c0040000d8086c0836041ffad
"
}

SubProgram "gles " {
Keywords { "SHADOWS_NONATIVE" }
"!!GLES


#ifdef VERTEX

varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = _glesVertex;
  highp float t_3;
  highp float tmpvar_4;
  tmpvar_4 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_5;
  tmpvar_5 = (_Time * _WaveSpeed).x;
  t_3 = tmpvar_5;
  if ((tmpvar_5 < 0.0)) {
    t_3 = (tmpvar_5 * -1.0);
  };
  tmpvar_2.x = (_glesVertex.x + (((sin(((t_3 * 1.45) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_2.y = ((((sin(((t_3 * 3.12) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_2.z = (_glesVertex.z - (((sin(((t_3 * 2.2) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_6;
  tmpvar_6 = (_Object2World * tmpvar_2);
  tmpvar_1.xyz = tmpvar_6.xyz;
  tmpvar_1.w = -((glstate_matrix_modelview0 * tmpvar_2).z);
  gl_Position = (glstate_matrix_mvp * tmpvar_2);
  xlv_TEXCOORD0 = (unity_World2Shadow[0] * tmpvar_6).xyz;
  xlv_TEXCOORD1 = (unity_World2Shadow[1] * tmpvar_6).xyz;
  xlv_TEXCOORD2 = (unity_World2Shadow[2] * tmpvar_6).xyz;
  xlv_TEXCOORD3 = (unity_World2Shadow[3] * tmpvar_6).xyz;
  xlv_TEXCOORD4 = tmpvar_1;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
}



#endif
#ifdef FRAGMENT

varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _LightShadowData;
uniform highp vec4 _LightSplitsFar;
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _ProjectionParams;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 res_2;
  highp vec4 zFar_3;
  highp vec4 zNear_4;
  lowp vec4 c_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD5);
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * _Color);
  c_5 = tmpvar_7;
  lowp float x_8;
  x_8 = (c_5.w - _Cutoff);
  if ((x_8 < 0.0)) {
    discard;
  };
  bvec4 tmpvar_9;
  tmpvar_9 = greaterThanEqual (xlv_TEXCOORD4.wwww, _LightSplitsNear);
  lowp vec4 tmpvar_10;
  tmpvar_10 = vec4(tmpvar_9);
  zNear_4 = tmpvar_10;
  bvec4 tmpvar_11;
  tmpvar_11 = lessThan (xlv_TEXCOORD4.wwww, _LightSplitsFar);
  lowp vec4 tmpvar_12;
  tmpvar_12 = vec4(tmpvar_11);
  zFar_3 = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (zNear_4 * zFar_3);
  highp float tmpvar_14;
  tmpvar_14 = clamp (((xlv_TEXCOORD4.w * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = ((((xlv_TEXCOORD0 * tmpvar_13.x) + (xlv_TEXCOORD1 * tmpvar_13.y)) + (xlv_TEXCOORD2 * tmpvar_13.z)) + (xlv_TEXCOORD3 * tmpvar_13.w));
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_ShadowMapTexture, tmpvar_15.xy);
  highp float tmpvar_17;
  if ((tmpvar_16.x < tmpvar_15.z)) {
    tmpvar_17 = _LightShadowData.x;
  } else {
    tmpvar_17 = 1.0;
  };
  res_2.x = clamp ((tmpvar_17 + tmpvar_14), 0.0, 1.0);
  res_2.y = 1.0;
  highp vec2 enc_18;
  highp vec2 tmpvar_19;
  tmpvar_19 = fract((vec2(1.0, 255.0) * (1.0 - (xlv_TEXCOORD4.w * _ProjectionParams.w))));
  enc_18.y = tmpvar_19.y;
  enc_18.x = (tmpvar_19.x - (tmpvar_19.y * 0.00392157));
  res_2.zw = enc_18;
  tmpvar_1 = res_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "SHADOWS_NONATIVE" }
"!!GLES


#ifdef VERTEX

varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = _glesVertex;
  highp float t_3;
  highp float tmpvar_4;
  tmpvar_4 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_5;
  tmpvar_5 = (_Time * _WaveSpeed).x;
  t_3 = tmpvar_5;
  if ((tmpvar_5 < 0.0)) {
    t_3 = (tmpvar_5 * -1.0);
  };
  tmpvar_2.x = (_glesVertex.x + (((sin(((t_3 * 1.45) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_2.y = ((((sin(((t_3 * 3.12) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_2.z = (_glesVertex.z - (((sin(((t_3 * 2.2) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_6;
  tmpvar_6 = (_Object2World * tmpvar_2);
  tmpvar_1.xyz = tmpvar_6.xyz;
  tmpvar_1.w = -((glstate_matrix_modelview0 * tmpvar_2).z);
  gl_Position = (glstate_matrix_mvp * tmpvar_2);
  xlv_TEXCOORD0 = (unity_World2Shadow[0] * tmpvar_6).xyz;
  xlv_TEXCOORD1 = (unity_World2Shadow[1] * tmpvar_6).xyz;
  xlv_TEXCOORD2 = (unity_World2Shadow[2] * tmpvar_6).xyz;
  xlv_TEXCOORD3 = (unity_World2Shadow[3] * tmpvar_6).xyz;
  xlv_TEXCOORD4 = tmpvar_1;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
}



#endif
#ifdef FRAGMENT

varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 _LightShadowData;
uniform highp vec4 _LightSplitsFar;
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _ProjectionParams;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 res_2;
  highp vec4 zFar_3;
  highp vec4 zNear_4;
  lowp vec4 c_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD5);
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * _Color);
  c_5 = tmpvar_7;
  lowp float x_8;
  x_8 = (c_5.w - _Cutoff);
  if ((x_8 < 0.0)) {
    discard;
  };
  bvec4 tmpvar_9;
  tmpvar_9 = greaterThanEqual (xlv_TEXCOORD4.wwww, _LightSplitsNear);
  lowp vec4 tmpvar_10;
  tmpvar_10 = vec4(tmpvar_9);
  zNear_4 = tmpvar_10;
  bvec4 tmpvar_11;
  tmpvar_11 = lessThan (xlv_TEXCOORD4.wwww, _LightSplitsFar);
  lowp vec4 tmpvar_12;
  tmpvar_12 = vec4(tmpvar_11);
  zFar_3 = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (zNear_4 * zFar_3);
  highp float tmpvar_14;
  tmpvar_14 = clamp (((xlv_TEXCOORD4.w * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = ((((xlv_TEXCOORD0 * tmpvar_13.x) + (xlv_TEXCOORD1 * tmpvar_13.y)) + (xlv_TEXCOORD2 * tmpvar_13.z)) + (xlv_TEXCOORD3 * tmpvar_13.w));
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_ShadowMapTexture, tmpvar_15.xy);
  highp float tmpvar_17;
  if ((tmpvar_16.x < tmpvar_15.z)) {
    tmpvar_17 = _LightShadowData.x;
  } else {
    tmpvar_17 = 1.0;
  };
  res_2.x = clamp ((tmpvar_17 + tmpvar_14), 0.0, 1.0);
  res_2.y = 1.0;
  highp vec2 enc_18;
  highp vec2 tmpvar_19;
  tmpvar_19 = fract((vec2(1.0, 255.0) * (1.0 - (xlv_TEXCOORD4.w * _ProjectionParams.w))));
  enc_18.y = tmpvar_19.y;
  enc_18.x = (tmpvar_19.x - (tmpvar_19.y * 0.00392157));
  res_2.zw = enc_18;
  tmpvar_1 = res_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "flash " {
Keywords { "SHADOWS_NONATIVE" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_modelview0]
Matrix 4 [glstate_matrix_mvp]
Vector 28 [_Time]
Matrix 8 [unity_World2Shadow0]
Matrix 12 [unity_World2Shadow1]
Matrix 16 [unity_World2Shadow2]
Matrix 20 [unity_World2Shadow3]
Matrix 24 [_Object2World]
Float 29 [_WaveSpeed]
Float 30 [_Amplitude]
Vector 31 [_MainTex_ST]
"agal_vs
c32 -0.020833 -0.125 1.0 0.5
c33 -0.000002 -0.000022 0.002604 0.00026
c34 0.0 2.2 0.159155 0.5
c35 6.283185 -3.141593 3.12 0.9
c36 1.45 0.2 0.0 0.0
[bc]
abaaaaaaaaaaaiacaaaaaaaaaaaaaaaaaaaaaaffaaaaaaaa add r0.w, a0.x, a0.y
aaaaaaaaaaaaabacbmaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r0.x, c28
adaaaaaaaaaaabacbnaaaaoeabaaaaaaaaaaaaaaacaaaaaa mul r0.x, c29, r0.x
ckaaaaaaaaaaacacaaaaaaaaacaaaaaaccaaaaaaabaaaaaa slt r0.y, r0.x, c34.x
bfaaaaaaabaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r1.y, r0.y
ahaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa max r0.y, r1.y, r0.y
ckaaaaaaaaaaacacccaaaaaaabaaaaaaaaaaaaffacaaaaaa slt r0.y, c34.x, r0.y
bfaaaaaaacaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r2.y, r0.y
abaaaaaaaaaaaeacacaaaaffacaaaaaacaaaaaoeabaaaaaa add r0.z, r2.y, c32
adaaaaaaaaaaaeacaaaaaaaaacaaaaaaaaaaaakkacaaaaaa mul r0.z, r0.x, r0.z
aaaaaaaaacaaaiacaaaaaaoeaaaaaaaaaaaaaaaaaaaaaaaa mov r2.w, a0
bfaaaaaaadaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r3.x, r0.x
adaaaaaaabaaacacaaaaaaffacaaaaaaadaaaaaaacaaaaaa mul r1.y, r0.y, r3.x
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaakkacaaaaaa add r1.y, r1.y, r0.z
abaaaaaaabaaabacaaaaaappacaaaaaaaaaaaakkaaaaaaaa add r1.x, r0.w, a0.z
adaaaaaaaaaaabacabaaaaffacaaaaaaccaaaaffabaaaaaa mul r0.x, r1.y, c34.y
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaccaaaakkabaaaaaa mul r0.x, r0.x, c34.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaccaaaappabaaaaaa add r0.x, r0.x, c34.w
aiaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r0.x, r0.x
adaaaaaaabaaaeacaaaaaaaaacaaaaaacdaaaaaaabaaaaaa mul r1.z, r0.x, c35.x
abaaaaaaabaaaeacabaaaakkacaaaaaacdaaaaffabaaaaaa add r1.z, r1.z, c35.y
apaaaaaaaaaaabacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.z
baaaaaaaaaaaacacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.z
adaaaaaaaaaaabacaaaaaaffacaaaaaaadaaaaffaaaaaaaa mul r0.x, r0.y, a3.y
adaaaaaaaaaaacacabaaaaffacaaaaaaceaaaaaaabaaaaaa mul r0.y, r1.y, c36.x
abaaaaaaaaaaacacaaaaaaffacaaaaaaabaaaaaaacaaaaaa add r0.y, r0.y, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaboaaaaoeabaaaaaa mul r0.x, r0.x, c30
bfaaaaaaadaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r3.x, r0.x
adaaaaaaacaaaeacadaaaaaaacaaaaaaceaaaaffabaaaaaa mul r2.z, r3.x, c36.y
abaaaaaaacaaaeacacaaaakkacaaaaaaaaaaaaoeaaaaaaaa add r2.z, r2.z, a0
adaaaaaaaaaaabacabaaaaffacaaaaaacdaaaakkabaaaaaa mul r0.x, r1.y, c35.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaccaaaakkabaaaaaa mul r0.x, r0.x, c34.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaccaaaappabaaaaaa add r0.x, r0.x, c34.w
adaaaaaaaaaaacacaaaaaaffacaaaaaaccaaaakkabaaaaaa mul r0.y, r0.y, c34.z
abaaaaaaaaaaacacaaaaaaffacaaaaaaccaaaappabaaaaaa add r0.y, r0.y, c34.w
aiaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa frc r0.y, r0.y
adaaaaaaabaaacacaaaaaaffacaaaaaacdaaaaaaabaaaaaa mul r1.y, r0.y, c35.x
abaaaaaaabaaacacabaaaaffacaaaaaacdaaaaoeabaaaaaa add r1.y, r1.y, c35
aiaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r1.x, r0.x
apaaaaaaaaaaabacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.y
baaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.y
adaaaaaaaaaaabacabaaaaaaacaaaaaacdaaaaoeabaaaaaa mul r0.x, r1.x, c35
abaaaaaaaaaaabacaaaaaaaaacaaaaaacdaaaaffabaaaaaa add r0.x, r0.x, c35.y
apaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sin r1.x, r0.x
baaaaaaaabaaacacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa cos r1.y, r0.x
adaaaaaaaaaaaeacadaaaaffaaaaaaaaaaaaaaffacaaaaaa mul r0.z, a3.y, r0.y
adaaaaaaaaaaabacadaaaaffaaaaaaaaabaaaaffacaaaaaa mul r0.x, a3.y, r1.y
adaaaaaaaaaaacacadaaaaoeaaaaaaaaadaaaaaaaaaaaaaa mul r0.y, a3, a3.x
bfaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r0.y, r0.y
adaaaaaaaaaaacacaaaaaaffacaaaaaacdaaaappabaaaaaa mul r0.y, r0.y, c35.w
adaaaaaaaaaaabacaaaaaaaaacaaaaaaboaaaaoeabaaaaaa mul r0.x, r0.x, c30
adaaaaaaacaaacacaaaaaaaaacaaaaaacaaaaappabaaaaaa mul r2.y, r0.x, c32.w
abaaaaaaacaaacacacaaaaffacaaaaaaaaaaaaffacaaaaaa add r2.y, r2.y, r0.y
adaaaaaaaaaaabacaaaaaakkacaaaaaaboaaaaoeabaaaaaa mul r0.x, r0.z, c30
adaaaaaaacaaabacaaaaaaaaacaaaaaacaaaaappabaaaaaa mul r2.x, r0.x, c32.w
abaaaaaaacaaabacacaaaaaaacaaaaaaaaaaaaoeaaaaaaaa add r2.x, r2.x, a0
bdaaaaaaaaaaaiacacaaaaoeacaaaaaaacaaaaoeabaaaaaa dp4 r0.w, r2, c2
bdaaaaaaabaaaiacacaaaaoeacaaaaaablaaaaoeabaaaaaa dp4 r1.w, r2, c27
bdaaaaaaaaaaaeacacaaaaoeacaaaaaabkaaaaoeabaaaaaa dp4 r0.z, r2, c26
bdaaaaaaaaaaabacacaaaaoeacaaaaaabiaaaaoeabaaaaaa dp4 r0.x, r2, c24
bdaaaaaaaaaaacacacaaaaoeacaaaaaabjaaaaoeabaaaaaa dp4 r0.y, r2, c25
aaaaaaaaabaaahacaaaaaakeacaaaaaaaaaaaaaaaaaaaaaa mov r1.xyz, r0.xyzz
bfaaaaaaaaaaaiacaaaaaappacaaaaaaaaaaaaaaaaaaaaaa neg r0.w, r0.w
bdaaaaaaaaaaaeaeabaaaaoeacaaaaaaakaaaaoeabaaaaaa dp4 v0.z, r1, c10
bdaaaaaaaaaaacaeabaaaaoeacaaaaaaajaaaaoeabaaaaaa dp4 v0.y, r1, c9
bdaaaaaaaaaaabaeabaaaaoeacaaaaaaaiaaaaoeabaaaaaa dp4 v0.x, r1, c8
bdaaaaaaabaaaeaeabaaaaoeacaaaaaaaoaaaaoeabaaaaaa dp4 v1.z, r1, c14
bdaaaaaaabaaacaeabaaaaoeacaaaaaaanaaaaoeabaaaaaa dp4 v1.y, r1, c13
bdaaaaaaabaaabaeabaaaaoeacaaaaaaamaaaaoeabaaaaaa dp4 v1.x, r1, c12
bdaaaaaaacaaaeaeabaaaaoeacaaaaaabcaaaaoeabaaaaaa dp4 v2.z, r1, c18
bdaaaaaaacaaacaeabaaaaoeacaaaaaabbaaaaoeabaaaaaa dp4 v2.y, r1, c17
bdaaaaaaacaaabaeabaaaaoeacaaaaaabaaaaaoeabaaaaaa dp4 v2.x, r1, c16
bdaaaaaaadaaaeaeabaaaaoeacaaaaaabgaaaaoeabaaaaaa dp4 v3.z, r1, c22
bdaaaaaaadaaacaeabaaaaoeacaaaaaabfaaaaoeabaaaaaa dp4 v3.y, r1, c21
bdaaaaaaadaaabaeabaaaaoeacaaaaaabeaaaaoeabaaaaaa dp4 v3.x, r1, c20
aaaaaaaaaeaaapaeaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov v4, r0
bdaaaaaaaaaaaiadacaaaaoeacaaaaaaahaaaaoeabaaaaaa dp4 o0.w, r2, c7
bdaaaaaaaaaaaeadacaaaaoeacaaaaaaagaaaaoeabaaaaaa dp4 o0.z, r2, c6
bdaaaaaaaaaaacadacaaaaoeacaaaaaaafaaaaoeabaaaaaa dp4 o0.y, r2, c5
bdaaaaaaaaaaabadacaaaaoeacaaaaaaaeaaaaoeabaaaaaa dp4 o0.x, r2, c4
adaaaaaaadaaadacadaaaaoeaaaaaaaabpaaaaoeabaaaaaa mul r3.xy, a3, c31
abaaaaaaafaaadaeadaaaafeacaaaaaabpaaaaooabaaaaaa add v5.xy, r3.xyyy, c31.zwzw
aaaaaaaaaaaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v0.w, c0
aaaaaaaaabaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v1.w, c0
aaaaaaaaacaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v2.w, c0
aaaaaaaaadaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v3.w, c0
aaaaaaaaafaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v5.zw, c0
"
}

SubProgram "opengl " {
Keywords { "SHADOWS_NATIVE" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Vector 29 [_Time]
Matrix 9 [unity_World2Shadow0]
Matrix 13 [unity_World2Shadow1]
Matrix 17 [unity_World2Shadow2]
Matrix 21 [unity_World2Shadow3]
Matrix 25 [_Object2World]
Float 30 [_WaveSpeed]
Float 31 [_Amplitude]
Vector 32 [_MainTex_ST]
"!!ARBvp1.0
# 89 ALU
PARAM c[38] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.modelview[0],
		state.matrix.mvp,
		program.local[9..32],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[30];
MUL R0.x, R0, c[29];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[33];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[34].xyxw, c[34].zwzw;
MAD R1.xyz, R1, R0, c[35].xyxw;
MAD R1.xyz, R1, R0, c[35].zwzw;
MAD R1.xyz, R1, R0, c[36].xyxw;
MAD R0.xyz, R1, R0, c[33].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[36].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[33].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[37].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[31];
MAD R0.w, -R0.x, c[37].x, vertex.position.z;
MAD R0.x, R1.w, c[37].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[33];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[34].xyxw, c[34].zwzw;
MAD R3.xyz, R2, R0, c[35].xyxw;
MAD R3.xyz, R3, R0, c[35].zwzw;
MAD R3.xyz, R3, R0, c[36].xyxw;
ADD R1.xyz, -R1.w, c[33];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[34].xyxw, c[34].zwzw;
MAD R2.xyz, R2, R1, c[35].xyxw;
MAD R2.xyz, R2, R1, c[35].zwzw;
MAD R3.xyz, R3, R0, c[33].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[36].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[33].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[36].xyxw;
MAD R1.xyz, R0, R1, c[33].wzww;
SGE R0.yz, R1.w, c[36].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[33].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R0, c[31];
MUL R0.y, -R0, c[37].z;
MAD R0.y, R0.x, c[33], R0;
MUL R0.x, R2.w, c[31];
MAD R0.x, R0, c[33].y, vertex.position;
DP4 R1.w, R0.xywz, c[3];
DP4 R2.w, R0.xywz, c[28];
DP4 R1.z, R0.xywz, c[27];
DP4 R1.x, R0.xywz, c[25];
DP4 R1.y, R0.xywz, c[26];
MOV R2.xyz, R1;
MOV R1.w, -R1;
DP4 result.texcoord[0].z, R2, c[11];
DP4 result.texcoord[0].y, R2, c[10];
DP4 result.texcoord[0].x, R2, c[9];
DP4 result.texcoord[1].z, R2, c[15];
DP4 result.texcoord[1].y, R2, c[14];
DP4 result.texcoord[1].x, R2, c[13];
DP4 result.texcoord[2].z, R2, c[19];
DP4 result.texcoord[2].y, R2, c[18];
DP4 result.texcoord[2].x, R2, c[17];
DP4 result.texcoord[3].z, R2, c[23];
DP4 result.texcoord[3].y, R2, c[22];
DP4 result.texcoord[3].x, R2, c[21];
MOV result.texcoord[4], R1;
DP4 result.position.w, R0.xywz, c[8];
DP4 result.position.z, R0.xywz, c[7];
DP4 result.position.y, R0.xywz, c[6];
DP4 result.position.x, R0.xywz, c[5];
MAD result.texcoord[5].xy, vertex.texcoord[0], c[32], c[32].zwzw;
END
# 89 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "SHADOWS_NATIVE" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_modelview0]
Matrix 4 [glstate_matrix_mvp]
Vector 28 [_Time]
Matrix 8 [unity_World2Shadow0]
Matrix 12 [unity_World2Shadow1]
Matrix 16 [unity_World2Shadow2]
Matrix 20 [unity_World2Shadow3]
Matrix 24 [_Object2World]
Float 29 [_WaveSpeed]
Float 30 [_Amplitude]
Vector 31 [_MainTex_ST]
"vs_2_0
; 89 ALU
def c32, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c33, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c34, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c35, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c36, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_texcoord0 v3
add r0.w, v0.x, v0.y
mov r0.x, c28
mul r0.x, c29, r0
slt r0.y, r0.x, c34.x
max r0.y, -r0, r0
slt r0.y, c34.x, r0
add r0.z, -r0.y, c32
mul r0.z, r0.x, r0
mov r2.w, v0
mad r1.y, r0, -r0.x, r0.z
add r1.x, r0.w, v0.z
mad r0.x, r1.y, c34.y, r1
mad r0.x, r0, c34.z, c34.w
frc r0.x, r0
mad r1.z, r0.x, c35.x, c35.y
sincos r0.xy, r1.z, c33.xyzw, c32.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1, c36.x, r1.x
mul r0.x, r0, c30
mad r2.z, -r0.x, c36.y, v0
mad r0.x, r1.y, c35.z, r1
mad r0.x, r0, c34.z, c34.w
mad r0.y, r0, c34.z, c34.w
frc r0.y, r0
mad r1.y, r0, c35.x, c35
frc r1.x, r0
sincos r0.xy, r1.y, c33.xyzw, c32.xyzw
mad r0.x, r1, c35, c35.y
sincos r1.xy, r0.x, c33.xyzw, c32.xyzw
mul r0.z, v3.y, r0.y
mul r0.x, v3.y, r1.y
mul r0.y, v3, v3.x
mul r0.y, -r0, c35.w
mul r0.x, r0, c30
mad r2.y, r0.x, c32.w, r0
mul r0.x, r0.z, c30
mad r2.x, r0, c32.w, v0
dp4 r0.w, r2, c2
dp4 r1.w, r2, c27
dp4 r0.z, r2, c26
dp4 r0.x, r2, c24
dp4 r0.y, r2, c25
mov r1.xyz, r0
mov r0.w, -r0
dp4 oT0.z, r1, c10
dp4 oT0.y, r1, c9
dp4 oT0.x, r1, c8
dp4 oT1.z, r1, c14
dp4 oT1.y, r1, c13
dp4 oT1.x, r1, c12
dp4 oT2.z, r1, c18
dp4 oT2.y, r1, c17
dp4 oT2.x, r1, c16
dp4 oT3.z, r1, c22
dp4 oT3.y, r1, c21
dp4 oT3.x, r1, c20
mov oT4, r0
dp4 oPos.w, r2, c7
dp4 oPos.z, r2, c6
dp4 oPos.y, r2, c5
dp4 oPos.x, r2, c4
mad oT5.xy, v3, c31, c31.zwzw
"
}

SubProgram "ps3 " {
Keywords { "SHADOWS_NATIVE" }
Matrix 256 [glstate_matrix_modelview0]
Matrix 260 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Vector 467 [_Time]
Matrix 264 [unity_World2Shadow0]
Matrix 268 [unity_World2Shadow1]
Matrix 272 [unity_World2Shadow2]
Matrix 276 [unity_World2Shadow3]
Matrix 280 [_Object2World]
Float 466 [_WaveSpeed]
Float 465 [_Amplitude]
Vector 464 [_MainTex_ST]
"sce_vp_rsx // 46 instructions using 3 registers
[Configuration]
8
0000002e01010300
[Defaults]
2
463 4
400ccccd3e4ccccd4047ae143f000000
462 2
3f6666663fb9999a
[Microcode]
736
401f9c6c011d0808010400d740619fb000001c6c00c000000106c08aa0409ffc
00001c6c005d20000186c08360411ffc00001c6c009d3000008000c360411ffc
201fdc6c004000000086c08360411ffc00001c6c00c000550106c08aa0203ffc
00001c6c004000000086c08360405ffc00002400004000800086c08360405ffc
00001c6c011cf055008800dfe0219ffc00001c6c011ce055009540dfe0205ffc
00009c6c7880082a8100008aa029007c00009c6c789ce080028000c00031007c
00011c6c7880082a81154055402900fc00001c6c008008000095408360409ffc
00001c6c0080082a8115414360411ffc00001c6c009d1000008000c360411ffc
00001c6c009d102a808000c360409ffc00001c6c009d1000048000c360405ffc
00011c6c011cf05500bfc0c000a09ffc00011c6c011cf0aa809540d540405ffc
00011c6c011cf00000bfc0c000411ffc00011c6c0040007f8106c08360403ffc
401f9c6c01d0700d8486c0c360403f80401f9c6c01d0600d8486c0c360405f80
401f9c6c01d0500d8486c0c360409f80401f9c6c01d0400d8486c0c360411f80
00009c6c01d1b00d8486c0c360403ffc00001c6c01d1a00d8486c0c360405ffc
00001c6c01d1900d8486c0c360409ffc00001c6c01d1800d8486c0c360411ffc
00001c6c01d0200d8486c0c360403ffc00009c6c0040000c0086c0836041dffc
00001c6c004000ff8086c08360403ffc401f9c6c01d0a00d8286c0c360405f9c
401f9c6c01d0900d8286c0c360409f9c401f9c6c01d0800d8286c0c360411f9c
401f9c6c01d0e00d8286c0c360405fa0401f9c6c01d0d00d8286c0c360409fa0
401f9c6c01d0c00d8286c0c360411fa0401f9c6c01d1200d8286c0c360405fa4
401f9c6c01d1100d8286c0c360409fa4401f9c6c01d1000d8286c0c360411fa4
401f9c6c01d1600d8286c0c360405fa8401f9c6c01d1500d8286c0c360409fa8
401f9c6c01d1400d8286c0c360411fa8401f9c6c0040000d8086c0836041ffad
"
}

SubProgram "d3d11 " {
Keywords { "SHADOWS_NATIVE" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 112 // 96 used size, 8 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityShadows" 416 // 384 used size, 8 vars
Matrix 128 [unity_World2Shadow0] 4
Matrix 192 [unity_World2Shadow1] 4
Matrix 256 [unity_World2Shadow2] 4
Matrix 320 [unity_World2Shadow3] 4
ConstBuffer "UnityPerDraw" 336 // 256 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 64 [glstate_matrix_modelview0] 4
Matrix 192 [_Object2World] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityShadows" 2
BindCB "UnityPerDraw" 3
// 46 instructions, 2 temp regs, 0 temp arrays:
// ALU 43 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedmliaklhpchinfjakddpllhlbddcaejgkabaaaaaaoaaiaaaaadaaaaaa
cmaaaaaapeaaaaaameabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheomiaaaaaaahaaaaaa
aiaaaaaalaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaalmaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaahaiaaaalmaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaalmaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaalmaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaalmaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaalmaaaaaaafaaaaaaaaaaaaaa
adaaaaaaagaaaaaaadamaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklfdeieefcbeahaaaaeaaaabaamfabaaaafjaaaaaeegiocaaaaaaaaaaa
agaaaaaafjaaaaaeegiocaaaabaaaaaaabaaaaaafjaaaaaeegiocaaaacaaaaaa
biaaaaaafjaaaaaeegiocaaaadaaaaaabaaaaaaafpaaaaadpcbabaaaaaaaaaaa
fpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaad
hccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaa
gfaaaaadhccabaaaaeaaaaaagfaaaaadpccabaaaafaaaaaagfaaaaaddccabaaa
agaaaaaagiaaaaacacaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaa
aeaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaa
aceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaag
hcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaa
aaaaaaaafgifcaaaaaaaaaaaaeaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaa
bkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaa
abeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaa
aaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakecaabaaaaaaaaaaa
ckaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaacaaaaaakgakbaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaabaaaaaadiaaaaaipcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiocaaaadaaaaaaanaaaaaadiaaaaaiccaabaaaaaaaaaaa
bkaabaaaaaaaaaaackiacaaaadaaaaaaafaaaaaadcaaaaakccaabaaaaaaaaaaa
ckiacaaaadaaaaaaaeaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaaoaaaaaakgakbaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaakbcaabaaaaaaaaaaackiacaaaadaaaaaa
agaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaadcaaaaakbcaabaaaaaaaaaaa
ckiacaaaadaaaaaaahaaaaaadkbabaaaaaaaaaaaakaabaaaaaaaaaaadgaaaaag
iccabaaaafaaaaaaakaabaiaebaaaaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaaegaobaaaabaaaaaadiaaaaai
hcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaaacaaaaaaajaaaaaadcaaaaak
hcaabaaaabaaaaaaegiccaaaacaaaaaaaiaaaaaaagaabaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaacaaaaaaakaaaaaakgakbaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaakhccabaaaabaaaaaaegiccaaaacaaaaaa
alaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiccaaaacaaaaaaanaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaacaaaaaaamaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaak
hcaabaaaabaaaaaaegiccaaaacaaaaaaaoaaaaaakgakbaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaakhccabaaaacaaaaaaegiccaaaacaaaaaaapaaaaaapgapbaaa
aaaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaa
egiccaaaacaaaaaabbaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaacaaaaaa
baaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaacaaaaaabcaaaaaakgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaak
hccabaaaadaaaaaaegiccaaaacaaaaaabdaaaaaapgapbaaaaaaaaaaaegacbaaa
abaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaaacaaaaaa
bfaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaacaaaaaabeaaaaaaagaabaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaacaaaaaa
bgaaaaaakgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhccabaaaaeaaaaaa
egiccaaaacaaaaaabhaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaadgaaaaaf
hccabaaaafaaaaaaegacbaaaaaaaaaaadcaaaaaldccabaaaagaaaaaaegbabaaa
adaaaaaaegiacaaaaaaaaaaaafaaaaaaogikcaaaaaaaaaaaafaaaaaadoaaaaab
"
}

SubProgram "gles " {
Keywords { "SHADOWS_NATIVE" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = _glesVertex;
  highp float t_3;
  highp float tmpvar_4;
  tmpvar_4 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_5;
  tmpvar_5 = (_Time * _WaveSpeed).x;
  t_3 = tmpvar_5;
  if ((tmpvar_5 < 0.0)) {
    t_3 = (tmpvar_5 * -1.0);
  };
  tmpvar_2.x = (_glesVertex.x + (((sin(((t_3 * 1.45) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_2.y = ((((sin(((t_3 * 3.12) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_2.z = (_glesVertex.z - (((sin(((t_3 * 2.2) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_6;
  tmpvar_6 = (_Object2World * tmpvar_2);
  tmpvar_1.xyz = tmpvar_6.xyz;
  tmpvar_1.w = -((glstate_matrix_modelview0 * tmpvar_2).z);
  gl_Position = (glstate_matrix_mvp * tmpvar_2);
  xlv_TEXCOORD0 = (unity_World2Shadow[0] * tmpvar_6).xyz;
  xlv_TEXCOORD1 = (unity_World2Shadow[1] * tmpvar_6).xyz;
  xlv_TEXCOORD2 = (unity_World2Shadow[2] * tmpvar_6).xyz;
  xlv_TEXCOORD3 = (unity_World2Shadow[3] * tmpvar_6).xyz;
  xlv_TEXCOORD4 = tmpvar_1;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform highp vec4 _LightShadowData;
uniform highp vec4 _LightSplitsFar;
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _ProjectionParams;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 res_2;
  mediump float shadow_3;
  highp vec4 zFar_4;
  highp vec4 zNear_5;
  lowp vec4 c_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD5);
  highp vec4 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * _Color);
  c_6 = tmpvar_8;
  lowp float x_9;
  x_9 = (c_6.w - _Cutoff);
  if ((x_9 < 0.0)) {
    discard;
  };
  bvec4 tmpvar_10;
  tmpvar_10 = greaterThanEqual (xlv_TEXCOORD4.wwww, _LightSplitsNear);
  lowp vec4 tmpvar_11;
  tmpvar_11 = vec4(tmpvar_10);
  zNear_5 = tmpvar_11;
  bvec4 tmpvar_12;
  tmpvar_12 = lessThan (xlv_TEXCOORD4.wwww, _LightSplitsFar);
  lowp vec4 tmpvar_13;
  tmpvar_13 = vec4(tmpvar_12);
  zFar_4 = tmpvar_13;
  highp vec4 tmpvar_14;
  tmpvar_14 = (zNear_5 * zFar_4);
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = ((((xlv_TEXCOORD0 * tmpvar_14.x) + (xlv_TEXCOORD1 * tmpvar_14.y)) + (xlv_TEXCOORD2 * tmpvar_14.z)) + (xlv_TEXCOORD3 * tmpvar_14.w));
  lowp float tmpvar_16;
  tmpvar_16 = shadow2DEXT (_ShadowMapTexture, tmpvar_15.xyz);
  shadow_3 = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = (_LightShadowData.x + (shadow_3 * (1.0 - _LightShadowData.x)));
  shadow_3 = tmpvar_17;
  res_2.x = clamp ((shadow_3 + clamp (((xlv_TEXCOORD4.w * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0)), 0.0, 1.0);
  res_2.y = 1.0;
  highp vec2 enc_18;
  highp vec2 tmpvar_19;
  tmpvar_19 = fract((vec2(1.0, 255.0) * (1.0 - (xlv_TEXCOORD4.w * _ProjectionParams.w))));
  enc_18.y = tmpvar_19.y;
  enc_18.x = (tmpvar_19.x - (tmpvar_19.y * 0.00392157));
  res_2.zw = enc_18;
  tmpvar_1 = res_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "d3d11_9x " {
Keywords { "SHADOWS_NATIVE" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 112 // 96 used size, 8 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityShadows" 416 // 384 used size, 8 vars
Matrix 128 [unity_World2Shadow0] 4
Matrix 192 [unity_World2Shadow1] 4
Matrix 256 [unity_World2Shadow2] 4
Matrix 320 [unity_World2Shadow3] 4
ConstBuffer "UnityPerDraw" 336 // 256 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 64 [glstate_matrix_modelview0] 4
Matrix 192 [_Object2World] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityShadows" 2
BindCB "UnityPerDraw" 3
// 46 instructions, 2 temp regs, 0 temp arrays:
// ALU 43 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecedhlkhaelphhimobohfopeinnhhkmhgpklabaaaaaapianaaaaaeaaaaaa
daaaaaaaeeafaaaagaamaaaacianaaaaebgpgodjamafaaaaamafaaaaaaacpopp
kiaeaaaageaaaaaaafaaceaaaaaagaaaaaaagaaaaaaaceaaabaagaaaaaaaaeaa
acaaabaaaaaaaaaaabaaaaaaabaaadaaaaaaaaaaacaaaiaabaaaaeaaaaaaaaaa
adaaaaaaaiaabeaaaaaaaaaaadaaamaaaeaabmaaaaaaaaaaaaaaaaaaaaacpopp
fbaaaaafcaaaapkaaaaaaaaaaaaaaamaidpjccdoaaaaaadpfbaaaaafcbaaapka
jkjjljdpbekoeheamnmmameaggggggdpfbaaaaafccaaapkanlapmjeanlapejma
mnmmemdoaaaaaaaafbaaaaafcdaaapkaabannalfgballglhklkkckdlijiiiidj
fbaaaaafceaaapkaklkkkklmaaaaaaloaaaaiadpaaaaaadpbpaaaaacafaaaaia
aaaaapjabpaaaaacafaaadiaadaaapjaaeaaaaaeafaaadoaadaaoejaacaaoeka
acaaookaabaaaaacaaaaabiaabaaaakaafaaaaadaaaaabiaaaaaaaiaadaaaaka
amaaaaadaaaaaciaaaaaaaiacaaaaakaafaaaaadaaaaaciaaaaaffiaaaaaaaia
aeaaaaaeaaaaabiaaaaaffiacaaaffkaaaaaaaiaacaaaaadaaaaaciaaaaaffja
aaaaaajaacaaaaadaaaaaciaaaaaffiaaaaakkjaaeaaaaaeaaaaahiaaaaaaaia
cbaaoekaaaaaffiaaeaaaaaeaaaaahiaaaaaoeiacaaakkkacaaappkabdaaaaac
aaaaahiaaaaaoeiaaeaaaaaeaaaaahiaaaaaoeiaccaaaakaccaaffkacfaaaaae
abaaaciaaaaaffiacdaaoekaceaaoekaafaaaaadaaaaaciaabaaffiaadaaffja
afaaaaadaaaaaciaaaaaffiaabaaffkaafaaaaadaaaaaiiaadaaaajaadaaffja
afaaaaadaaaaaiiaaaaappiacbaappkaaeaaaaaeaaaaaciaaaaaffiacaaappka
aaaappibafaaaaadaaaaaiiaaaaaffiabjaakkkacfaaaaaeabaaaciaaaaaaaia
cdaaoekaceaaoekacfaaaaaeacaaaciaaaaakkiacdaaoekaceaaoekaafaaaaad
aaaaabiaacaaffiaadaaffjaafaaaaadaaaaabiaaaaaaaiaabaaffkaaeaaaaae
aaaaabiaaaaaaaiaccaakkkbaaaakkjaafaaaaadaaaaaeiaabaaffiaadaaffja
afaaaaadaaaaaeiaaaaakkiaabaaffkaaeaaaaaeaaaaaeiaaaaakkiacaaappka
aaaaaajaaeaaaaaeaaaaaiiabiaakkkaaaaakkiaaaaappiaaeaaaaaeaaaaaiia
bkaakkkaaaaaaaiaaaaappiaaeaaaaaeaaaaaiiablaakkkaaaaappjaaaaappia
abaaaaacaeaaaioaaaaappibafaaaaadabaaapiaaaaaffiabnaaoekaafaaaaad
acaaapiaaaaaffiabfaaoekaaeaaaaaeacaaapiabeaaoekaaaaakkiaacaaoeia
aeaaaaaeabaaapiabmaaoekaaaaakkiaabaaoeiaaeaaaaaeabaaapiaboaaoeka
aaaaaaiaabaaoeiaaeaaaaaeaaaaapiabgaaoekaaaaaaaiaacaaoeiaaeaaaaae
aaaaapiabhaaoekaaaaappjaaaaaoeiaaeaaaaaeabaaapiabpaaoekaaaaappja
abaaoeiaafaaaaadacaaahiaabaaffiaafaaoekaaeaaaaaeacaaahiaaeaaoeka
abaaaaiaacaaoeiaaeaaaaaeacaaahiaagaaoekaabaakkiaacaaoeiaaeaaaaae
aaaaahoaahaaoekaabaappiaacaaoeiaafaaaaadacaaahiaabaaffiaajaaoeka
aeaaaaaeacaaahiaaiaaoekaabaaaaiaacaaoeiaaeaaaaaeacaaahiaakaaoeka
abaakkiaacaaoeiaaeaaaaaeabaaahoaalaaoekaabaappiaacaaoeiaafaaaaad
acaaahiaabaaffiaanaaoekaaeaaaaaeacaaahiaamaaoekaabaaaaiaacaaoeia
aeaaaaaeacaaahiaaoaaoekaabaakkiaacaaoeiaaeaaaaaeacaaahoaapaaoeka
abaappiaacaaoeiaafaaaaadacaaahiaabaaffiabbaaoekaaeaaaaaeacaaahia
baaaoekaabaaaaiaacaaoeiaaeaaaaaeacaaahiabcaaoekaabaakkiaacaaoeia
aeaaaaaeadaaahoabdaaoekaabaappiaacaaoeiaabaaaaacaeaaahoaabaaoeia
aeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeia
ppppaaaafdeieefcbeahaaaaeaaaabaamfabaaaafjaaaaaeegiocaaaaaaaaaaa
agaaaaaafjaaaaaeegiocaaaabaaaaaaabaaaaaafjaaaaaeegiocaaaacaaaaaa
biaaaaaafjaaaaaeegiocaaaadaaaaaabaaaaaaafpaaaaadpcbabaaaaaaaaaaa
fpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaad
hccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaa
gfaaaaadhccabaaaaeaaaaaagfaaaaadpccabaaaafaaaaaagfaaaaaddccabaaa
agaaaaaagiaaaaacacaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaa
aeaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaa
aceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaag
hcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaa
aaaaaaaafgifcaaaaaaaaaaaaeaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaa
bkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaa
abeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaa
aaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakecaabaaaaaaaaaaa
ckaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaacaaaaaakgakbaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaabaaaaaadiaaaaaipcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiocaaaadaaaaaaanaaaaaadiaaaaaiccaabaaaaaaaaaaa
bkaabaaaaaaaaaaackiacaaaadaaaaaaafaaaaaadcaaaaakccaabaaaaaaaaaaa
ckiacaaaadaaaaaaaeaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaaoaaaaaakgakbaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaakbcaabaaaaaaaaaaackiacaaaadaaaaaa
agaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaadcaaaaakbcaabaaaaaaaaaaa
ckiacaaaadaaaaaaahaaaaaadkbabaaaaaaaaaaaakaabaaaaaaaaaaadgaaaaag
iccabaaaafaaaaaaakaabaiaebaaaaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaaegaobaaaabaaaaaadiaaaaai
hcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaaacaaaaaaajaaaaaadcaaaaak
hcaabaaaabaaaaaaegiccaaaacaaaaaaaiaaaaaaagaabaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaacaaaaaaakaaaaaakgakbaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaakhccabaaaabaaaaaaegiccaaaacaaaaaa
alaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiccaaaacaaaaaaanaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaacaaaaaaamaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaak
hcaabaaaabaaaaaaegiccaaaacaaaaaaaoaaaaaakgakbaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaakhccabaaaacaaaaaaegiccaaaacaaaaaaapaaaaaapgapbaaa
aaaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaa
egiccaaaacaaaaaabbaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaacaaaaaa
baaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaacaaaaaabcaaaaaakgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaak
hccabaaaadaaaaaaegiccaaaacaaaaaabdaaaaaapgapbaaaaaaaaaaaegacbaaa
abaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaaacaaaaaa
bfaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaacaaaaaabeaaaaaaagaabaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaacaaaaaa
bgaaaaaakgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhccabaaaaeaaaaaa
egiccaaaacaaaaaabhaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaadgaaaaaf
hccabaaaafaaaaaaegacbaaaaaaaaaaadcaaaaaldccabaaaagaaaaaaegbabaaa
adaaaaaaegiacaaaaaaaaaaaafaaaaaaogikcaaaaaaaaaaaafaaaaaadoaaaaab
ejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
aaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaa
kjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaaahaaaaaalaaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaa
faepfdejfeejepeoaafeebeoehefeofeaaeoepfcenebemaafeeffiedepepfcee
aaedepemepfcaaklepfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaaaaaaaaaa
abaaaaaaadaaaaaaaaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
abaaaaaaahaiaaaalmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaahaiaaaa
lmaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahaiaaaalmaaaaaaadaaaaaa
aaaaaaaaadaaaaaaaeaaaaaaahaiaaaalmaaaaaaaeaaaaaaaaaaaaaaadaaaaaa
afaaaaaaapaaaaaalmaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaaadamaaaa
fdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl"
}

SubProgram "gles3 " {
Keywords { "SHADOWS_NATIVE" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 316
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 396
struct Input {
    highp vec2 uv_MainTex;
};
#line 418
struct v2f_surf {
    highp vec4 pos;
    highp vec3 _ShadowCoord0;
    highp vec3 _ShadowCoord1;
    highp vec3 _ShadowCoord2;
    highp vec3 _ShadowCoord3;
    highp vec4 _WorldPosViewZ;
    highp vec2 pack0;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 315
uniform lowp sampler2DShadow _ShadowMapTexture;
#line 326
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 339
#line 347
#line 361
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 394
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 401
#line 429
uniform highp vec4 _MainTex_ST;
#line 445
uniform lowp float _Cutoff;
#line 401
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 405
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 409
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 430
v2f_surf vert_surf( in appdata_full v ) {
    v2f_surf o;
    #line 433
    vert( v);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    o.pos = (glstate_matrix_mvp * v.vertex);
    highp vec4 wpos = (_Object2World * v.vertex);
    #line 437
    o._WorldPosViewZ.xyz = vec3( wpos);
    o._WorldPosViewZ.w = (-(glstate_matrix_modelview0 * v.vertex).z);
    o._ShadowCoord0 = (unity_World2Shadow[0] * wpos).xyz;
    o._ShadowCoord1 = (unity_World2Shadow[1] * wpos).xyz;
    #line 441
    o._ShadowCoord2 = (unity_World2Shadow[2] * wpos).xyz;
    o._ShadowCoord3 = (unity_World2Shadow[3] * wpos).xyz;
    return o;
}

out highp vec3 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
out highp vec2 xlv_TEXCOORD5;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec3(xl_retval._ShadowCoord0);
    xlv_TEXCOORD1 = vec3(xl_retval._ShadowCoord1);
    xlv_TEXCOORD2 = vec3(xl_retval._ShadowCoord2);
    xlv_TEXCOORD3 = vec3(xl_retval._ShadowCoord3);
    xlv_TEXCOORD4 = vec4(xl_retval._WorldPosViewZ);
    xlv_TEXCOORD5 = vec2(xl_retval.pack0);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
float xll_shadow2D(mediump sampler2DShadow s, vec3 coord) { return texture (s, coord); }
float xll_saturate_f( float x) {
  return clamp( x, 0.0, 1.0);
}
vec2 xll_saturate_vf2( vec2 x) {
  return clamp( x, 0.0, 1.0);
}
vec3 xll_saturate_vf3( vec3 x) {
  return clamp( x, 0.0, 1.0);
}
vec4 xll_saturate_vf4( vec4 x) {
  return clamp( x, 0.0, 1.0);
}
mat2 xll_saturate_mf2x2(mat2 m) {
  return mat2( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0));
}
mat3 xll_saturate_mf3x3(mat3 m) {
  return mat3( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0));
}
mat4 xll_saturate_mf4x4(mat4 m) {
  return mat4( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0), clamp(m[3], 0.0, 1.0));
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 316
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 396
struct Input {
    highp vec2 uv_MainTex;
};
#line 418
struct v2f_surf {
    highp vec4 pos;
    highp vec3 _ShadowCoord0;
    highp vec3 _ShadowCoord1;
    highp vec3 _ShadowCoord2;
    highp vec3 _ShadowCoord3;
    highp vec4 _WorldPosViewZ;
    highp vec2 pack0;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 315
uniform lowp sampler2DShadow _ShadowMapTexture;
#line 326
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 339
#line 347
#line 361
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 394
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 401
#line 429
uniform highp vec4 _MainTex_ST;
#line 445
uniform lowp float _Cutoff;
#line 220
highp vec2 EncodeFloatRG( in highp float v ) {
    highp vec2 kEncodeMul = vec2( 1.0, 255.0);
    highp float kEncodeBit = 0.00392157;
    #line 224
    highp vec2 enc = (kEncodeMul * v);
    enc = fract(enc);
    enc.x -= (enc.y * kEncodeBit);
    return enc;
}
#line 412
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 414
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 446
lowp vec4 frag_surf( in v2f_surf IN ) {
    Input surfIN;
    #line 449
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    o.Emission = vec3( 0.0);
    #line 453
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    surf( surfIN, o);
    #line 457
    xll_clip_f((o.Alpha - _Cutoff));
    highp vec4 viewZ = vec4( IN._WorldPosViewZ.w);
    highp vec4 zNear = vec4(greaterThanEqual( viewZ, _LightSplitsNear));
    highp vec4 zFar = vec4(lessThan( viewZ, _LightSplitsFar));
    #line 461
    highp vec4 cascadeWeights = (zNear * zFar);
    highp float shadowFade = xll_saturate_f(((IN._WorldPosViewZ.w * _LightShadowData.z) + _LightShadowData.w));
    highp vec4 coord = vec4( ((((IN._ShadowCoord0 * cascadeWeights.x) + (IN._ShadowCoord1 * cascadeWeights.y)) + (IN._ShadowCoord2 * cascadeWeights.z)) + (IN._ShadowCoord3 * cascadeWeights.w)), 1.0);
    mediump float shadow = xll_shadow2D( _ShadowMapTexture, coord.xyz);
    #line 465
    shadow = (_LightShadowData.x + (shadow * (1.0 - _LightShadowData.x)));
    highp vec4 res;
    res.x = xll_saturate_f((shadow + shadowFade));
    res.y = 1.0;
    #line 469
    res.zw = EncodeFloatRG( (1.0 - (IN._WorldPosViewZ.w * _ProjectionParams.w)));
    return res;
}
in highp vec3 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
in highp vec2 xlv_TEXCOORD5;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN._ShadowCoord0 = vec3(xlv_TEXCOORD0);
    xlt_IN._ShadowCoord1 = vec3(xlv_TEXCOORD1);
    xlt_IN._ShadowCoord2 = vec3(xlv_TEXCOORD2);
    xlt_IN._ShadowCoord3 = vec3(xlv_TEXCOORD3);
    xlt_IN._WorldPosViewZ = vec4(xlv_TEXCOORD4);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD5);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

SubProgram "opengl " {
Keywords { "SHADOWS_NONATIVE" "SHADOWS_SPLIT_SPHERES" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Vector 29 [_Time]
Matrix 9 [unity_World2Shadow0]
Matrix 13 [unity_World2Shadow1]
Matrix 17 [unity_World2Shadow2]
Matrix 21 [unity_World2Shadow3]
Matrix 25 [_Object2World]
Float 30 [_WaveSpeed]
Float 31 [_Amplitude]
Vector 32 [_MainTex_ST]
"!!ARBvp1.0
# 89 ALU
PARAM c[38] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.modelview[0],
		state.matrix.mvp,
		program.local[9..32],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[30];
MUL R0.x, R0, c[29];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[33];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[34].xyxw, c[34].zwzw;
MAD R1.xyz, R1, R0, c[35].xyxw;
MAD R1.xyz, R1, R0, c[35].zwzw;
MAD R1.xyz, R1, R0, c[36].xyxw;
MAD R0.xyz, R1, R0, c[33].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[36].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[33].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[37].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[31];
MAD R0.w, -R0.x, c[37].x, vertex.position.z;
MAD R0.x, R1.w, c[37].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[33];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[34].xyxw, c[34].zwzw;
MAD R3.xyz, R2, R0, c[35].xyxw;
MAD R3.xyz, R3, R0, c[35].zwzw;
MAD R3.xyz, R3, R0, c[36].xyxw;
ADD R1.xyz, -R1.w, c[33];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[34].xyxw, c[34].zwzw;
MAD R2.xyz, R2, R1, c[35].xyxw;
MAD R2.xyz, R2, R1, c[35].zwzw;
MAD R3.xyz, R3, R0, c[33].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[36].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[33].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[36].xyxw;
MAD R1.xyz, R0, R1, c[33].wzww;
SGE R0.yz, R1.w, c[36].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[33].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R0, c[31];
MUL R0.y, -R0, c[37].z;
MAD R0.y, R0.x, c[33], R0;
MUL R0.x, R2.w, c[31];
MAD R0.x, R0, c[33].y, vertex.position;
DP4 R1.w, R0.xywz, c[3];
DP4 R2.w, R0.xywz, c[28];
DP4 R1.z, R0.xywz, c[27];
DP4 R1.x, R0.xywz, c[25];
DP4 R1.y, R0.xywz, c[26];
MOV R2.xyz, R1;
MOV R1.w, -R1;
DP4 result.texcoord[0].z, R2, c[11];
DP4 result.texcoord[0].y, R2, c[10];
DP4 result.texcoord[0].x, R2, c[9];
DP4 result.texcoord[1].z, R2, c[15];
DP4 result.texcoord[1].y, R2, c[14];
DP4 result.texcoord[1].x, R2, c[13];
DP4 result.texcoord[2].z, R2, c[19];
DP4 result.texcoord[2].y, R2, c[18];
DP4 result.texcoord[2].x, R2, c[17];
DP4 result.texcoord[3].z, R2, c[23];
DP4 result.texcoord[3].y, R2, c[22];
DP4 result.texcoord[3].x, R2, c[21];
MOV result.texcoord[4], R1;
DP4 result.position.w, R0.xywz, c[8];
DP4 result.position.z, R0.xywz, c[7];
DP4 result.position.y, R0.xywz, c[6];
DP4 result.position.x, R0.xywz, c[5];
MAD result.texcoord[5].xy, vertex.texcoord[0], c[32], c[32].zwzw;
END
# 89 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "SHADOWS_NONATIVE" "SHADOWS_SPLIT_SPHERES" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_modelview0]
Matrix 4 [glstate_matrix_mvp]
Vector 28 [_Time]
Matrix 8 [unity_World2Shadow0]
Matrix 12 [unity_World2Shadow1]
Matrix 16 [unity_World2Shadow2]
Matrix 20 [unity_World2Shadow3]
Matrix 24 [_Object2World]
Float 29 [_WaveSpeed]
Float 30 [_Amplitude]
Vector 31 [_MainTex_ST]
"vs_2_0
; 89 ALU
def c32, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c33, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c34, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c35, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c36, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_texcoord0 v3
add r0.w, v0.x, v0.y
mov r0.x, c28
mul r0.x, c29, r0
slt r0.y, r0.x, c34.x
max r0.y, -r0, r0
slt r0.y, c34.x, r0
add r0.z, -r0.y, c32
mul r0.z, r0.x, r0
mov r2.w, v0
mad r1.y, r0, -r0.x, r0.z
add r1.x, r0.w, v0.z
mad r0.x, r1.y, c34.y, r1
mad r0.x, r0, c34.z, c34.w
frc r0.x, r0
mad r1.z, r0.x, c35.x, c35.y
sincos r0.xy, r1.z, c33.xyzw, c32.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1, c36.x, r1.x
mul r0.x, r0, c30
mad r2.z, -r0.x, c36.y, v0
mad r0.x, r1.y, c35.z, r1
mad r0.x, r0, c34.z, c34.w
mad r0.y, r0, c34.z, c34.w
frc r0.y, r0
mad r1.y, r0, c35.x, c35
frc r1.x, r0
sincos r0.xy, r1.y, c33.xyzw, c32.xyzw
mad r0.x, r1, c35, c35.y
sincos r1.xy, r0.x, c33.xyzw, c32.xyzw
mul r0.z, v3.y, r0.y
mul r0.x, v3.y, r1.y
mul r0.y, v3, v3.x
mul r0.y, -r0, c35.w
mul r0.x, r0, c30
mad r2.y, r0.x, c32.w, r0
mul r0.x, r0.z, c30
mad r2.x, r0, c32.w, v0
dp4 r0.w, r2, c2
dp4 r1.w, r2, c27
dp4 r0.z, r2, c26
dp4 r0.x, r2, c24
dp4 r0.y, r2, c25
mov r1.xyz, r0
mov r0.w, -r0
dp4 oT0.z, r1, c10
dp4 oT0.y, r1, c9
dp4 oT0.x, r1, c8
dp4 oT1.z, r1, c14
dp4 oT1.y, r1, c13
dp4 oT1.x, r1, c12
dp4 oT2.z, r1, c18
dp4 oT2.y, r1, c17
dp4 oT2.x, r1, c16
dp4 oT3.z, r1, c22
dp4 oT3.y, r1, c21
dp4 oT3.x, r1, c20
mov oT4, r0
dp4 oPos.w, r2, c7
dp4 oPos.z, r2, c6
dp4 oPos.y, r2, c5
dp4 oPos.x, r2, c4
mad oT5.xy, v3, c31, c31.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "SHADOWS_NONATIVE" "SHADOWS_SPLIT_SPHERES" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Float 30 [_Amplitude]
Vector 31 [_MainTex_ST]
Matrix 25 [_Object2World] 4
Vector 0 [_Time]
Float 29 [_WaveSpeed]
Matrix 21 [glstate_matrix_modelview0] 4
Matrix 17 [glstate_matrix_mvp] 4
Matrix 1 [unity_World2Shadow0]
Matrix 5 [unity_World2Shadow1]
Matrix 9 [unity_World2Shadow2]
Matrix 13 [unity_World2Shadow3]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 61.33 (46 instructions), vertex: 32, texture: 0,
//   sequencer: 22,  7 GPRs, 27 threads,
// Performance (if enough threads): ~61 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaaceaaaaaacneaaaaaaaaaaaaaaceaaaaableaaaaabnmaaaaaaaa
aaaaaaaaaaaaabimaaaaaabmaaaaabhppppoadaaaaaaaaaiaaaaaabmaaaaaaaa
aaaaabhiaaaaaalmaaacaaboaaabaaaaaaaaaamiaaaaaaaaaaaaaaniaaacaabp
aaabaaaaaaaaaaoeaaaaaaaaaaaaaapeaaacaabjaaaeaaaaaaaaabaeaaaaaaaa
aaaaabbeaaacaaaaaaabaaaaaaaaaaoeaaaaaaaaaaaaabbkaaacaabnaaabaaaa
aaaaaamiaaaaaaaaaaaaabcfaaacaabfaaaeaaaaaaaaabaeaaaaaaaaaaaaabdp
aaacaabbaaaeaaaaaaaaabaeaaaaaaaaaaaaabfcaaacaaabaabaaaaaaaaaabgi
aaaaaaaafpebgnhagmgjhehfgegfaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaa
fpengbgjgofegfhifpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpepgcgk
gfgdhedcfhgphcgmgeaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpfegjgn
gfaafpfhgbhggffdhagfgfgeaaghgmhdhegbhegffpgngbhehcgjhifpgngpgegf
gmhggjgfhhdaaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaahfgogjhehjfp
fhgphcgmgedcfdgigbgegphhaaklklklaaadaaadaaaeaaaeaaaeaaaaaaaaaaaa
hghdfpddfpdaaadccodacodcdadddfddcodaaaklaaaaaaaaaaaaaaabaaaaaaaa
aaaaaaaaaaaaaabeaapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaea
aaaaacjeaafbaaagaaaaaaaaaaaaaaaaaaaaeimgaaaaaaabaaaaaaacaaaaaaah
aaaaacjaaabaaaagaacafaahaaaahafaaaabhbfbaaachcfcaaadhdfdaaaepefe
aaagdfffaaaabacpaaaabadaaaaabadbaaaabaddaaaaaacbaaaabadfaaaabacc
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadoccpjidlpiaaaaamaejapnldpiaaaaa
dpaaaaaadoemmmmneamjapnldpggggggdpljjjjkeaehkobeeaammmmndpaaaaaa
dacfgaagaaaabaaamcaaaaaaaaaagaamgabcbcaabcaaaaaaaaaafabiaaaabcaa
meaaaaaaaaaagabngacdbcaabcaaaaaaaaaagacjgacpbcaabcaaaaaaaaaabadf
aaaaccaaaaaaaaaaafpicaaaaaaaagiiaaaaaaaaafpidaaaaaaaapmiaaaaaaaa
miacaaaaaagmlbaacbaapnaamiabaaaaaagmgmaacbaabnaaheaeaaaaabloblgm
laacpnaakibaaaaabiaaaaebmcaaaabnmiaiaaabaalbgmaaobadadaamiahaaaa
aagmmamgklaappaamiahaaaaaamagmblilaapnppmiahaaabaamaaaaaoiaaaaaa
miapaaaaaajengaakbabpoaamialaaaaaalimgaakaaapnaamabaabaaaaaaaagm
ocaaaaaamacaabaaaaaaaalbocaaaaaamaemabadaalbkmblkbadpoaamiahaaab
aabgmaaaobadabaamialaaaaaamngmaakbabboaamiacaaaaaalbgmaaoaaaacaa
beapaaabaablaagmkbacbeaaaeibaaaaafblmgmgoaaaacaamiapaaabaagmiiii
klaabdabmiapaaabaabldejeklaabcabmiapiadoaalbaadeklaabbabkiipafab
aablaambibacbmbfmiapaaabaagmdedeklaablabmiapaaabaabldeaaklaabkab
miapaaabaalbipppklaabjabmiahiaaeaamjmjaaocababaamiadiaafaalalabk
iladbpbpkiihaeadaagmmamdibabbabgbechaaaeaamgmagmkbabapabkichaaac
aagmmaebibabaiamkmehaaagaagmmaiaibabaeamkmihaaafaablmamaibabaoam
miahaaafaalbleleklabanafmiahaaagaamgleleklabadagmiahaaacaamglele
klabahacmiaoaaaaaamgimnbklabalaamiaoaaaaaablpmnbklabakaamiahaaac
aablmaleklabagacmiahaaagaablmaleklabacagmiahiaaaaalbmamaklababag
miahiaabaalbmamaklabafacmiahiaacaalbmabfklabajaakiipadabaadeaama
maafaebhmiahiaadaamamaaaoaabadaamiabaaaaaablblaaoaabadaamiaiiaae
afblmggmklacbiaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "SHADOWS_NONATIVE" "SHADOWS_SPLIT_SPHERES" }
Matrix 256 [glstate_matrix_modelview0]
Matrix 260 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Vector 467 [_Time]
Matrix 264 [unity_World2Shadow0]
Matrix 268 [unity_World2Shadow1]
Matrix 272 [unity_World2Shadow2]
Matrix 276 [unity_World2Shadow3]
Matrix 280 [_Object2World]
Float 466 [_WaveSpeed]
Float 465 [_Amplitude]
Vector 464 [_MainTex_ST]
"sce_vp_rsx // 46 instructions using 3 registers
[Configuration]
8
0000002e01010300
[Defaults]
2
463 4
400ccccd3e4ccccd4047ae143f000000
462 2
3f6666663fb9999a
[Microcode]
736
401f9c6c011d0808010400d740619fb000001c6c00c000000106c08aa0409ffc
00001c6c005d20000186c08360411ffc00001c6c009d3000008000c360411ffc
201fdc6c004000000086c08360411ffc00001c6c00c000550106c08aa0203ffc
00001c6c004000000086c08360405ffc00002400004000800086c08360405ffc
00001c6c011cf055008800dfe0219ffc00001c6c011ce055009540dfe0205ffc
00009c6c7880082a8100008aa029007c00009c6c789ce080028000c00031007c
00011c6c7880082a81154055402900fc00001c6c008008000095408360409ffc
00001c6c0080082a8115414360411ffc00001c6c009d1000008000c360411ffc
00001c6c009d102a808000c360409ffc00001c6c009d1000048000c360405ffc
00011c6c011cf05500bfc0c000a09ffc00011c6c011cf0aa809540d540405ffc
00011c6c011cf00000bfc0c000411ffc00011c6c0040007f8106c08360403ffc
401f9c6c01d0700d8486c0c360403f80401f9c6c01d0600d8486c0c360405f80
401f9c6c01d0500d8486c0c360409f80401f9c6c01d0400d8486c0c360411f80
00009c6c01d1b00d8486c0c360403ffc00001c6c01d1a00d8486c0c360405ffc
00001c6c01d1900d8486c0c360409ffc00001c6c01d1800d8486c0c360411ffc
00001c6c01d0200d8486c0c360403ffc00009c6c0040000c0086c0836041dffc
00001c6c004000ff8086c08360403ffc401f9c6c01d0a00d8286c0c360405f9c
401f9c6c01d0900d8286c0c360409f9c401f9c6c01d0800d8286c0c360411f9c
401f9c6c01d0e00d8286c0c360405fa0401f9c6c01d0d00d8286c0c360409fa0
401f9c6c01d0c00d8286c0c360411fa0401f9c6c01d1200d8286c0c360405fa4
401f9c6c01d1100d8286c0c360409fa4401f9c6c01d1000d8286c0c360411fa4
401f9c6c01d1600d8286c0c360405fa8401f9c6c01d1500d8286c0c360409fa8
401f9c6c01d1400d8286c0c360411fa8401f9c6c0040000d8086c0836041ffad
"
}

SubProgram "gles " {
Keywords { "SHADOWS_NONATIVE" "SHADOWS_SPLIT_SPHERES" }
"!!GLES


#ifdef VERTEX

varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = _glesVertex;
  highp float t_3;
  highp float tmpvar_4;
  tmpvar_4 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_5;
  tmpvar_5 = (_Time * _WaveSpeed).x;
  t_3 = tmpvar_5;
  if ((tmpvar_5 < 0.0)) {
    t_3 = (tmpvar_5 * -1.0);
  };
  tmpvar_2.x = (_glesVertex.x + (((sin(((t_3 * 1.45) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_2.y = ((((sin(((t_3 * 3.12) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_2.z = (_glesVertex.z - (((sin(((t_3 * 2.2) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_6;
  tmpvar_6 = (_Object2World * tmpvar_2);
  tmpvar_1.xyz = tmpvar_6.xyz;
  tmpvar_1.w = -((glstate_matrix_modelview0 * tmpvar_2).z);
  gl_Position = (glstate_matrix_mvp * tmpvar_2);
  xlv_TEXCOORD0 = (unity_World2Shadow[0] * tmpvar_6).xyz;
  xlv_TEXCOORD1 = (unity_World2Shadow[1] * tmpvar_6).xyz;
  xlv_TEXCOORD2 = (unity_World2Shadow[2] * tmpvar_6).xyz;
  xlv_TEXCOORD3 = (unity_World2Shadow[3] * tmpvar_6).xyz;
  xlv_TEXCOORD4 = tmpvar_1;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
}



#endif
#ifdef FRAGMENT

varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp vec4 _LightShadowData;
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 _ProjectionParams;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 res_2;
  highp vec4 cascadeWeights_3;
  lowp vec4 c_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD5);
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  c_4 = tmpvar_6;
  lowp float x_7;
  x_7 = (c_4.w - _Cutoff);
  if ((x_7 < 0.0)) {
    discard;
  };
  highp vec3 tmpvar_8;
  tmpvar_8 = (xlv_TEXCOORD4.xyz - unity_ShadowSplitSpheres[0].xyz);
  highp vec3 tmpvar_9;
  tmpvar_9 = (xlv_TEXCOORD4.xyz - unity_ShadowSplitSpheres[1].xyz);
  highp vec3 tmpvar_10;
  tmpvar_10 = (xlv_TEXCOORD4.xyz - unity_ShadowSplitSpheres[2].xyz);
  highp vec3 tmpvar_11;
  tmpvar_11 = (xlv_TEXCOORD4.xyz - unity_ShadowSplitSpheres[3].xyz);
  highp vec4 tmpvar_12;
  tmpvar_12.x = dot (tmpvar_8, tmpvar_8);
  tmpvar_12.y = dot (tmpvar_9, tmpvar_9);
  tmpvar_12.z = dot (tmpvar_10, tmpvar_10);
  tmpvar_12.w = dot (tmpvar_11, tmpvar_11);
  bvec4 tmpvar_13;
  tmpvar_13 = lessThan (tmpvar_12, unity_ShadowSplitSqRadii);
  lowp vec4 tmpvar_14;
  tmpvar_14 = vec4(tmpvar_13);
  cascadeWeights_3 = tmpvar_14;
  cascadeWeights_3.yzw = clamp ((cascadeWeights_3.yzw - cascadeWeights_3.xyz), 0.0, 1.0);
  highp vec3 p_15;
  p_15 = (xlv_TEXCOORD4.xyz - unity_ShadowFadeCenterAndType.xyz);
  highp float tmpvar_16;
  tmpvar_16 = clamp (((sqrt(dot (p_15, p_15)) * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = ((((xlv_TEXCOORD0 * cascadeWeights_3.x) + (xlv_TEXCOORD1 * cascadeWeights_3.y)) + (xlv_TEXCOORD2 * cascadeWeights_3.z)) + (xlv_TEXCOORD3 * cascadeWeights_3.w));
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_ShadowMapTexture, tmpvar_17.xy);
  highp float tmpvar_19;
  if ((tmpvar_18.x < tmpvar_17.z)) {
    tmpvar_19 = _LightShadowData.x;
  } else {
    tmpvar_19 = 1.0;
  };
  res_2.x = clamp ((tmpvar_19 + tmpvar_16), 0.0, 1.0);
  res_2.y = 1.0;
  highp vec2 enc_20;
  highp vec2 tmpvar_21;
  tmpvar_21 = fract((vec2(1.0, 255.0) * (1.0 - (xlv_TEXCOORD4.w * _ProjectionParams.w))));
  enc_20.y = tmpvar_21.y;
  enc_20.x = (tmpvar_21.x - (tmpvar_21.y * 0.00392157));
  res_2.zw = enc_20;
  tmpvar_1 = res_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "SHADOWS_NONATIVE" "SHADOWS_SPLIT_SPHERES" }
"!!GLES


#ifdef VERTEX

varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = _glesVertex;
  highp float t_3;
  highp float tmpvar_4;
  tmpvar_4 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_5;
  tmpvar_5 = (_Time * _WaveSpeed).x;
  t_3 = tmpvar_5;
  if ((tmpvar_5 < 0.0)) {
    t_3 = (tmpvar_5 * -1.0);
  };
  tmpvar_2.x = (_glesVertex.x + (((sin(((t_3 * 1.45) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_2.y = ((((sin(((t_3 * 3.12) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_2.z = (_glesVertex.z - (((sin(((t_3 * 2.2) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_6;
  tmpvar_6 = (_Object2World * tmpvar_2);
  tmpvar_1.xyz = tmpvar_6.xyz;
  tmpvar_1.w = -((glstate_matrix_modelview0 * tmpvar_2).z);
  gl_Position = (glstate_matrix_mvp * tmpvar_2);
  xlv_TEXCOORD0 = (unity_World2Shadow[0] * tmpvar_6).xyz;
  xlv_TEXCOORD1 = (unity_World2Shadow[1] * tmpvar_6).xyz;
  xlv_TEXCOORD2 = (unity_World2Shadow[2] * tmpvar_6).xyz;
  xlv_TEXCOORD3 = (unity_World2Shadow[3] * tmpvar_6).xyz;
  xlv_TEXCOORD4 = tmpvar_1;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
}



#endif
#ifdef FRAGMENT

varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp vec4 _LightShadowData;
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 _ProjectionParams;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 res_2;
  highp vec4 cascadeWeights_3;
  lowp vec4 c_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD5);
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_5 * _Color);
  c_4 = tmpvar_6;
  lowp float x_7;
  x_7 = (c_4.w - _Cutoff);
  if ((x_7 < 0.0)) {
    discard;
  };
  highp vec3 tmpvar_8;
  tmpvar_8 = (xlv_TEXCOORD4.xyz - unity_ShadowSplitSpheres[0].xyz);
  highp vec3 tmpvar_9;
  tmpvar_9 = (xlv_TEXCOORD4.xyz - unity_ShadowSplitSpheres[1].xyz);
  highp vec3 tmpvar_10;
  tmpvar_10 = (xlv_TEXCOORD4.xyz - unity_ShadowSplitSpheres[2].xyz);
  highp vec3 tmpvar_11;
  tmpvar_11 = (xlv_TEXCOORD4.xyz - unity_ShadowSplitSpheres[3].xyz);
  highp vec4 tmpvar_12;
  tmpvar_12.x = dot (tmpvar_8, tmpvar_8);
  tmpvar_12.y = dot (tmpvar_9, tmpvar_9);
  tmpvar_12.z = dot (tmpvar_10, tmpvar_10);
  tmpvar_12.w = dot (tmpvar_11, tmpvar_11);
  bvec4 tmpvar_13;
  tmpvar_13 = lessThan (tmpvar_12, unity_ShadowSplitSqRadii);
  lowp vec4 tmpvar_14;
  tmpvar_14 = vec4(tmpvar_13);
  cascadeWeights_3 = tmpvar_14;
  cascadeWeights_3.yzw = clamp ((cascadeWeights_3.yzw - cascadeWeights_3.xyz), 0.0, 1.0);
  highp vec3 p_15;
  p_15 = (xlv_TEXCOORD4.xyz - unity_ShadowFadeCenterAndType.xyz);
  highp float tmpvar_16;
  tmpvar_16 = clamp (((sqrt(dot (p_15, p_15)) * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = ((((xlv_TEXCOORD0 * cascadeWeights_3.x) + (xlv_TEXCOORD1 * cascadeWeights_3.y)) + (xlv_TEXCOORD2 * cascadeWeights_3.z)) + (xlv_TEXCOORD3 * cascadeWeights_3.w));
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_ShadowMapTexture, tmpvar_17.xy);
  highp float tmpvar_19;
  if ((tmpvar_18.x < tmpvar_17.z)) {
    tmpvar_19 = _LightShadowData.x;
  } else {
    tmpvar_19 = 1.0;
  };
  res_2.x = clamp ((tmpvar_19 + tmpvar_16), 0.0, 1.0);
  res_2.y = 1.0;
  highp vec2 enc_20;
  highp vec2 tmpvar_21;
  tmpvar_21 = fract((vec2(1.0, 255.0) * (1.0 - (xlv_TEXCOORD4.w * _ProjectionParams.w))));
  enc_20.y = tmpvar_21.y;
  enc_20.x = (tmpvar_21.x - (tmpvar_21.y * 0.00392157));
  res_2.zw = enc_20;
  tmpvar_1 = res_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "flash " {
Keywords { "SHADOWS_NONATIVE" "SHADOWS_SPLIT_SPHERES" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_modelview0]
Matrix 4 [glstate_matrix_mvp]
Vector 28 [_Time]
Matrix 8 [unity_World2Shadow0]
Matrix 12 [unity_World2Shadow1]
Matrix 16 [unity_World2Shadow2]
Matrix 20 [unity_World2Shadow3]
Matrix 24 [_Object2World]
Float 29 [_WaveSpeed]
Float 30 [_Amplitude]
Vector 31 [_MainTex_ST]
"agal_vs
c32 -0.020833 -0.125 1.0 0.5
c33 -0.000002 -0.000022 0.002604 0.00026
c34 0.0 2.2 0.159155 0.5
c35 6.283185 -3.141593 3.12 0.9
c36 1.45 0.2 0.0 0.0
[bc]
abaaaaaaaaaaaiacaaaaaaaaaaaaaaaaaaaaaaffaaaaaaaa add r0.w, a0.x, a0.y
aaaaaaaaaaaaabacbmaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r0.x, c28
adaaaaaaaaaaabacbnaaaaoeabaaaaaaaaaaaaaaacaaaaaa mul r0.x, c29, r0.x
ckaaaaaaaaaaacacaaaaaaaaacaaaaaaccaaaaaaabaaaaaa slt r0.y, r0.x, c34.x
bfaaaaaaabaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r1.y, r0.y
ahaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaffacaaaaaa max r0.y, r1.y, r0.y
ckaaaaaaaaaaacacccaaaaaaabaaaaaaaaaaaaffacaaaaaa slt r0.y, c34.x, r0.y
bfaaaaaaacaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r2.y, r0.y
abaaaaaaaaaaaeacacaaaaffacaaaaaacaaaaaoeabaaaaaa add r0.z, r2.y, c32
adaaaaaaaaaaaeacaaaaaaaaacaaaaaaaaaaaakkacaaaaaa mul r0.z, r0.x, r0.z
aaaaaaaaacaaaiacaaaaaaoeaaaaaaaaaaaaaaaaaaaaaaaa mov r2.w, a0
bfaaaaaaadaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r3.x, r0.x
adaaaaaaabaaacacaaaaaaffacaaaaaaadaaaaaaacaaaaaa mul r1.y, r0.y, r3.x
abaaaaaaabaaacacabaaaaffacaaaaaaaaaaaakkacaaaaaa add r1.y, r1.y, r0.z
abaaaaaaabaaabacaaaaaappacaaaaaaaaaaaakkaaaaaaaa add r1.x, r0.w, a0.z
adaaaaaaaaaaabacabaaaaffacaaaaaaccaaaaffabaaaaaa mul r0.x, r1.y, c34.y
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaccaaaakkabaaaaaa mul r0.x, r0.x, c34.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaccaaaappabaaaaaa add r0.x, r0.x, c34.w
aiaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r0.x, r0.x
adaaaaaaabaaaeacaaaaaaaaacaaaaaacdaaaaaaabaaaaaa mul r1.z, r0.x, c35.x
abaaaaaaabaaaeacabaaaakkacaaaaaacdaaaaffabaaaaaa add r1.z, r1.z, c35.y
apaaaaaaaaaaabacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.z
baaaaaaaaaaaacacabaaaakkacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.z
adaaaaaaaaaaabacaaaaaaffacaaaaaaadaaaaffaaaaaaaa mul r0.x, r0.y, a3.y
adaaaaaaaaaaacacabaaaaffacaaaaaaceaaaaaaabaaaaaa mul r0.y, r1.y, c36.x
abaaaaaaaaaaacacaaaaaaffacaaaaaaabaaaaaaacaaaaaa add r0.y, r0.y, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaboaaaaoeabaaaaaa mul r0.x, r0.x, c30
bfaaaaaaadaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r3.x, r0.x
adaaaaaaacaaaeacadaaaaaaacaaaaaaceaaaaffabaaaaaa mul r2.z, r3.x, c36.y
abaaaaaaacaaaeacacaaaakkacaaaaaaaaaaaaoeaaaaaaaa add r2.z, r2.z, a0
adaaaaaaaaaaabacabaaaaffacaaaaaacdaaaakkabaaaaaa mul r0.x, r1.y, c35.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
adaaaaaaaaaaabacaaaaaaaaacaaaaaaccaaaakkabaaaaaa mul r0.x, r0.x, c34.z
abaaaaaaaaaaabacaaaaaaaaacaaaaaaccaaaappabaaaaaa add r0.x, r0.x, c34.w
adaaaaaaaaaaacacaaaaaaffacaaaaaaccaaaakkabaaaaaa mul r0.y, r0.y, c34.z
abaaaaaaaaaaacacaaaaaaffacaaaaaaccaaaappabaaaaaa add r0.y, r0.y, c34.w
aiaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa frc r0.y, r0.y
adaaaaaaabaaacacaaaaaaffacaaaaaacdaaaaaaabaaaaaa mul r1.y, r0.y, c35.x
abaaaaaaabaaacacabaaaaffacaaaaaacdaaaaoeabaaaaaa add r1.y, r1.y, c35
aiaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r1.x, r0.x
apaaaaaaaaaaabacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa sin r0.x, r1.y
baaaaaaaaaaaacacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa cos r0.y, r1.y
adaaaaaaaaaaabacabaaaaaaacaaaaaacdaaaaoeabaaaaaa mul r0.x, r1.x, c35
abaaaaaaaaaaabacaaaaaaaaacaaaaaacdaaaaffabaaaaaa add r0.x, r0.x, c35.y
apaaaaaaabaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sin r1.x, r0.x
baaaaaaaabaaacacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa cos r1.y, r0.x
adaaaaaaaaaaaeacadaaaaffaaaaaaaaaaaaaaffacaaaaaa mul r0.z, a3.y, r0.y
adaaaaaaaaaaabacadaaaaffaaaaaaaaabaaaaffacaaaaaa mul r0.x, a3.y, r1.y
adaaaaaaaaaaacacadaaaaoeaaaaaaaaadaaaaaaaaaaaaaa mul r0.y, a3, a3.x
bfaaaaaaaaaaacacaaaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r0.y, r0.y
adaaaaaaaaaaacacaaaaaaffacaaaaaacdaaaappabaaaaaa mul r0.y, r0.y, c35.w
adaaaaaaaaaaabacaaaaaaaaacaaaaaaboaaaaoeabaaaaaa mul r0.x, r0.x, c30
adaaaaaaacaaacacaaaaaaaaacaaaaaacaaaaappabaaaaaa mul r2.y, r0.x, c32.w
abaaaaaaacaaacacacaaaaffacaaaaaaaaaaaaffacaaaaaa add r2.y, r2.y, r0.y
adaaaaaaaaaaabacaaaaaakkacaaaaaaboaaaaoeabaaaaaa mul r0.x, r0.z, c30
adaaaaaaacaaabacaaaaaaaaacaaaaaacaaaaappabaaaaaa mul r2.x, r0.x, c32.w
abaaaaaaacaaabacacaaaaaaacaaaaaaaaaaaaoeaaaaaaaa add r2.x, r2.x, a0
bdaaaaaaaaaaaiacacaaaaoeacaaaaaaacaaaaoeabaaaaaa dp4 r0.w, r2, c2
bdaaaaaaabaaaiacacaaaaoeacaaaaaablaaaaoeabaaaaaa dp4 r1.w, r2, c27
bdaaaaaaaaaaaeacacaaaaoeacaaaaaabkaaaaoeabaaaaaa dp4 r0.z, r2, c26
bdaaaaaaaaaaabacacaaaaoeacaaaaaabiaaaaoeabaaaaaa dp4 r0.x, r2, c24
bdaaaaaaaaaaacacacaaaaoeacaaaaaabjaaaaoeabaaaaaa dp4 r0.y, r2, c25
aaaaaaaaabaaahacaaaaaakeacaaaaaaaaaaaaaaaaaaaaaa mov r1.xyz, r0.xyzz
bfaaaaaaaaaaaiacaaaaaappacaaaaaaaaaaaaaaaaaaaaaa neg r0.w, r0.w
bdaaaaaaaaaaaeaeabaaaaoeacaaaaaaakaaaaoeabaaaaaa dp4 v0.z, r1, c10
bdaaaaaaaaaaacaeabaaaaoeacaaaaaaajaaaaoeabaaaaaa dp4 v0.y, r1, c9
bdaaaaaaaaaaabaeabaaaaoeacaaaaaaaiaaaaoeabaaaaaa dp4 v0.x, r1, c8
bdaaaaaaabaaaeaeabaaaaoeacaaaaaaaoaaaaoeabaaaaaa dp4 v1.z, r1, c14
bdaaaaaaabaaacaeabaaaaoeacaaaaaaanaaaaoeabaaaaaa dp4 v1.y, r1, c13
bdaaaaaaabaaabaeabaaaaoeacaaaaaaamaaaaoeabaaaaaa dp4 v1.x, r1, c12
bdaaaaaaacaaaeaeabaaaaoeacaaaaaabcaaaaoeabaaaaaa dp4 v2.z, r1, c18
bdaaaaaaacaaacaeabaaaaoeacaaaaaabbaaaaoeabaaaaaa dp4 v2.y, r1, c17
bdaaaaaaacaaabaeabaaaaoeacaaaaaabaaaaaoeabaaaaaa dp4 v2.x, r1, c16
bdaaaaaaadaaaeaeabaaaaoeacaaaaaabgaaaaoeabaaaaaa dp4 v3.z, r1, c22
bdaaaaaaadaaacaeabaaaaoeacaaaaaabfaaaaoeabaaaaaa dp4 v3.y, r1, c21
bdaaaaaaadaaabaeabaaaaoeacaaaaaabeaaaaoeabaaaaaa dp4 v3.x, r1, c20
aaaaaaaaaeaaapaeaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov v4, r0
bdaaaaaaaaaaaiadacaaaaoeacaaaaaaahaaaaoeabaaaaaa dp4 o0.w, r2, c7
bdaaaaaaaaaaaeadacaaaaoeacaaaaaaagaaaaoeabaaaaaa dp4 o0.z, r2, c6
bdaaaaaaaaaaacadacaaaaoeacaaaaaaafaaaaoeabaaaaaa dp4 o0.y, r2, c5
bdaaaaaaaaaaabadacaaaaoeacaaaaaaaeaaaaoeabaaaaaa dp4 o0.x, r2, c4
adaaaaaaadaaadacadaaaaoeaaaaaaaabpaaaaoeabaaaaaa mul r3.xy, a3, c31
abaaaaaaafaaadaeadaaaafeacaaaaaabpaaaaooabaaaaaa add v5.xy, r3.xyyy, c31.zwzw
aaaaaaaaaaaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v0.w, c0
aaaaaaaaabaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v1.w, c0
aaaaaaaaacaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v2.w, c0
aaaaaaaaadaaaiaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v3.w, c0
aaaaaaaaafaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v5.zw, c0
"
}

SubProgram "opengl " {
Keywords { "SHADOWS_NATIVE" "SHADOWS_SPLIT_SPHERES" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Vector 29 [_Time]
Matrix 9 [unity_World2Shadow0]
Matrix 13 [unity_World2Shadow1]
Matrix 17 [unity_World2Shadow2]
Matrix 21 [unity_World2Shadow3]
Matrix 25 [_Object2World]
Float 30 [_WaveSpeed]
Float 31 [_Amplitude]
Vector 32 [_MainTex_ST]
"!!ARBvp1.0
# 89 ALU
PARAM c[38] = { { 0, 2.2, 0.15915491, 0.25 },
		state.matrix.modelview[0],
		state.matrix.mvp,
		program.local[9..32],
		{ 0, 0.5, 1, -1 },
		{ 24.980801, -24.980801, -60.145809, 60.145809 },
		{ 85.453789, -85.453789, -64.939346, 64.939346 },
		{ 19.73921, -19.73921, -9, 0.75 },
		{ 0.2, 3.1199999, 0.89999998, 1.45 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
ADD R0.y, vertex.position.x, vertex.position;
MOV R0.x, c[30];
MUL R0.x, R0, c[29];
ADD R2.w, R0.y, vertex.position.z;
SLT R0.z, R0.x, c[0].x;
ADD R0.y, -R0.x, -R0.x;
MAD R1.w, R0.y, R0.z, R0.x;
MAD R0.x, R1.w, c[0].y, R2.w;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R0.w, R0.x;
ADD R0.xyz, -R0.w, c[33];
MUL R0.xyz, R0, R0;
MAD R1.xyz, R0, c[34].xyxw, c[34].zwzw;
MAD R1.xyz, R1, R0, c[35].xyxw;
MAD R1.xyz, R1, R0, c[35].zwzw;
MAD R1.xyz, R1, R0, c[36].xyxw;
MAD R0.xyz, R1, R0, c[33].wzww;
SLT R2.x, R0.w, c[0].w;
SGE R2.yz, R0.w, c[36].xzww;
MOV R1.xz, R2;
DP3 R1.y, R2, c[33].wzww;
DP3 R0.x, R0, -R1;
MAD R0.y, R1.w, c[37].w, R2.w;
MUL R0.x, R0, vertex.texcoord[0].y;
MUL R0.x, R0, c[31];
MAD R0.w, -R0.x, c[37].x, vertex.position.z;
MAD R0.x, R1.w, c[37].y, R2.w;
MAD R0.y, R0, c[0].z, -c[0].w;
FRC R2.w, R0.y;
MAD R0.x, R0, c[0].z, -c[0].w;
FRC R1.w, R0.x;
ADD R1.xyz, -R2.w, c[33];
MUL R0.xyz, R1, R1;
MAD R2.xyz, R0, c[34].xyxw, c[34].zwzw;
MAD R3.xyz, R2, R0, c[35].xyxw;
MAD R3.xyz, R3, R0, c[35].zwzw;
MAD R3.xyz, R3, R0, c[36].xyxw;
ADD R1.xyz, -R1.w, c[33];
MUL R1.xyz, R1, R1;
MAD R2.xyz, R1, c[34].xyxw, c[34].zwzw;
MAD R2.xyz, R2, R1, c[35].xyxw;
MAD R2.xyz, R2, R1, c[35].zwzw;
MAD R3.xyz, R3, R0, c[33].wzww;
SLT R4.x, R2.w, c[0].w;
SGE R4.yz, R2.w, c[36].xzww;
MOV R0.xz, R4;
DP3 R0.y, R4, c[33].wzww;
DP3 R2.w, R3, -R0;
MAD R0.xyz, R2, R1, c[36].xyxw;
MAD R1.xyz, R0, R1, c[33].wzww;
SGE R0.yz, R1.w, c[36].xzww;
SLT R0.x, R1.w, c[0].w;
DP3 R2.y, R0, c[33].wzww;
MOV R2.xz, R0;
DP3 R0.x, R1, -R2;
MUL R0.y, vertex.texcoord[0], vertex.texcoord[0].x;
MUL R0.x, vertex.texcoord[0].y, R0;
MOV R0.z, vertex.position.w;
MUL R2.w, vertex.texcoord[0].y, R2;
MUL R0.x, R0, c[31];
MUL R0.y, -R0, c[37].z;
MAD R0.y, R0.x, c[33], R0;
MUL R0.x, R2.w, c[31];
MAD R0.x, R0, c[33].y, vertex.position;
DP4 R1.w, R0.xywz, c[3];
DP4 R2.w, R0.xywz, c[28];
DP4 R1.z, R0.xywz, c[27];
DP4 R1.x, R0.xywz, c[25];
DP4 R1.y, R0.xywz, c[26];
MOV R2.xyz, R1;
MOV R1.w, -R1;
DP4 result.texcoord[0].z, R2, c[11];
DP4 result.texcoord[0].y, R2, c[10];
DP4 result.texcoord[0].x, R2, c[9];
DP4 result.texcoord[1].z, R2, c[15];
DP4 result.texcoord[1].y, R2, c[14];
DP4 result.texcoord[1].x, R2, c[13];
DP4 result.texcoord[2].z, R2, c[19];
DP4 result.texcoord[2].y, R2, c[18];
DP4 result.texcoord[2].x, R2, c[17];
DP4 result.texcoord[3].z, R2, c[23];
DP4 result.texcoord[3].y, R2, c[22];
DP4 result.texcoord[3].x, R2, c[21];
MOV result.texcoord[4], R1;
DP4 result.position.w, R0.xywz, c[8];
DP4 result.position.z, R0.xywz, c[7];
DP4 result.position.y, R0.xywz, c[6];
DP4 result.position.x, R0.xywz, c[5];
MAD result.texcoord[5].xy, vertex.texcoord[0], c[32], c[32].zwzw;
END
# 89 instructions, 5 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "SHADOWS_NATIVE" "SHADOWS_SPLIT_SPHERES" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_modelview0]
Matrix 4 [glstate_matrix_mvp]
Vector 28 [_Time]
Matrix 8 [unity_World2Shadow0]
Matrix 12 [unity_World2Shadow1]
Matrix 16 [unity_World2Shadow2]
Matrix 20 [unity_World2Shadow3]
Matrix 24 [_Object2World]
Float 29 [_WaveSpeed]
Float 30 [_Amplitude]
Vector 31 [_MainTex_ST]
"vs_2_0
; 89 ALU
def c32, -0.02083333, -0.12500000, 1.00000000, 0.50000000
def c33, -0.00000155, -0.00002170, 0.00260417, 0.00026042
def c34, 0.00000000, 2.20000005, 0.15915491, 0.50000000
def c35, 6.28318501, -3.14159298, 3.11999989, 0.89999998
def c36, 1.45000005, 0.20000000, 0, 0
dcl_position0 v0
dcl_texcoord0 v3
add r0.w, v0.x, v0.y
mov r0.x, c28
mul r0.x, c29, r0
slt r0.y, r0.x, c34.x
max r0.y, -r0, r0
slt r0.y, c34.x, r0
add r0.z, -r0.y, c32
mul r0.z, r0.x, r0
mov r2.w, v0
mad r1.y, r0, -r0.x, r0.z
add r1.x, r0.w, v0.z
mad r0.x, r1.y, c34.y, r1
mad r0.x, r0, c34.z, c34.w
frc r0.x, r0
mad r1.z, r0.x, c35.x, c35.y
sincos r0.xy, r1.z, c33.xyzw, c32.xyzw
mul r0.x, r0.y, v3.y
mad r0.y, r1, c36.x, r1.x
mul r0.x, r0, c30
mad r2.z, -r0.x, c36.y, v0
mad r0.x, r1.y, c35.z, r1
mad r0.x, r0, c34.z, c34.w
mad r0.y, r0, c34.z, c34.w
frc r0.y, r0
mad r1.y, r0, c35.x, c35
frc r1.x, r0
sincos r0.xy, r1.y, c33.xyzw, c32.xyzw
mad r0.x, r1, c35, c35.y
sincos r1.xy, r0.x, c33.xyzw, c32.xyzw
mul r0.z, v3.y, r0.y
mul r0.x, v3.y, r1.y
mul r0.y, v3, v3.x
mul r0.y, -r0, c35.w
mul r0.x, r0, c30
mad r2.y, r0.x, c32.w, r0
mul r0.x, r0.z, c30
mad r2.x, r0, c32.w, v0
dp4 r0.w, r2, c2
dp4 r1.w, r2, c27
dp4 r0.z, r2, c26
dp4 r0.x, r2, c24
dp4 r0.y, r2, c25
mov r1.xyz, r0
mov r0.w, -r0
dp4 oT0.z, r1, c10
dp4 oT0.y, r1, c9
dp4 oT0.x, r1, c8
dp4 oT1.z, r1, c14
dp4 oT1.y, r1, c13
dp4 oT1.x, r1, c12
dp4 oT2.z, r1, c18
dp4 oT2.y, r1, c17
dp4 oT2.x, r1, c16
dp4 oT3.z, r1, c22
dp4 oT3.y, r1, c21
dp4 oT3.x, r1, c20
mov oT4, r0
dp4 oPos.w, r2, c7
dp4 oPos.z, r2, c6
dp4 oPos.y, r2, c5
dp4 oPos.x, r2, c4
mad oT5.xy, v3, c31, c31.zwzw
"
}

SubProgram "ps3 " {
Keywords { "SHADOWS_NATIVE" "SHADOWS_SPLIT_SPHERES" }
Matrix 256 [glstate_matrix_modelview0]
Matrix 260 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Vector 467 [_Time]
Matrix 264 [unity_World2Shadow0]
Matrix 268 [unity_World2Shadow1]
Matrix 272 [unity_World2Shadow2]
Matrix 276 [unity_World2Shadow3]
Matrix 280 [_Object2World]
Float 466 [_WaveSpeed]
Float 465 [_Amplitude]
Vector 464 [_MainTex_ST]
"sce_vp_rsx // 46 instructions using 3 registers
[Configuration]
8
0000002e01010300
[Defaults]
2
463 4
400ccccd3e4ccccd4047ae143f000000
462 2
3f6666663fb9999a
[Microcode]
736
401f9c6c011d0808010400d740619fb000001c6c00c000000106c08aa0409ffc
00001c6c005d20000186c08360411ffc00001c6c009d3000008000c360411ffc
201fdc6c004000000086c08360411ffc00001c6c00c000550106c08aa0203ffc
00001c6c004000000086c08360405ffc00002400004000800086c08360405ffc
00001c6c011cf055008800dfe0219ffc00001c6c011ce055009540dfe0205ffc
00009c6c7880082a8100008aa029007c00009c6c789ce080028000c00031007c
00011c6c7880082a81154055402900fc00001c6c008008000095408360409ffc
00001c6c0080082a8115414360411ffc00001c6c009d1000008000c360411ffc
00001c6c009d102a808000c360409ffc00001c6c009d1000048000c360405ffc
00011c6c011cf05500bfc0c000a09ffc00011c6c011cf0aa809540d540405ffc
00011c6c011cf00000bfc0c000411ffc00011c6c0040007f8106c08360403ffc
401f9c6c01d0700d8486c0c360403f80401f9c6c01d0600d8486c0c360405f80
401f9c6c01d0500d8486c0c360409f80401f9c6c01d0400d8486c0c360411f80
00009c6c01d1b00d8486c0c360403ffc00001c6c01d1a00d8486c0c360405ffc
00001c6c01d1900d8486c0c360409ffc00001c6c01d1800d8486c0c360411ffc
00001c6c01d0200d8486c0c360403ffc00009c6c0040000c0086c0836041dffc
00001c6c004000ff8086c08360403ffc401f9c6c01d0a00d8286c0c360405f9c
401f9c6c01d0900d8286c0c360409f9c401f9c6c01d0800d8286c0c360411f9c
401f9c6c01d0e00d8286c0c360405fa0401f9c6c01d0d00d8286c0c360409fa0
401f9c6c01d0c00d8286c0c360411fa0401f9c6c01d1200d8286c0c360405fa4
401f9c6c01d1100d8286c0c360409fa4401f9c6c01d1000d8286c0c360411fa4
401f9c6c01d1600d8286c0c360405fa8401f9c6c01d1500d8286c0c360409fa8
401f9c6c01d1400d8286c0c360411fa8401f9c6c0040000d8086c0836041ffad
"
}

SubProgram "d3d11 " {
Keywords { "SHADOWS_NATIVE" "SHADOWS_SPLIT_SPHERES" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 112 // 96 used size, 8 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityShadows" 416 // 384 used size, 8 vars
Matrix 128 [unity_World2Shadow0] 4
Matrix 192 [unity_World2Shadow1] 4
Matrix 256 [unity_World2Shadow2] 4
Matrix 320 [unity_World2Shadow3] 4
ConstBuffer "UnityPerDraw" 336 // 256 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 64 [glstate_matrix_modelview0] 4
Matrix 192 [_Object2World] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityShadows" 2
BindCB "UnityPerDraw" 3
// 46 instructions, 2 temp regs, 0 temp arrays:
// ALU 43 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedmliaklhpchinfjakddpllhlbddcaejgkabaaaaaaoaaiaaaaadaaaaaa
cmaaaaaapeaaaaaameabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheomiaaaaaaahaaaaaa
aiaaaaaalaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaalmaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaahaiaaaalmaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaalmaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaalmaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaalmaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaalmaaaaaaafaaaaaaaaaaaaaa
adaaaaaaagaaaaaaadamaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklfdeieefcbeahaaaaeaaaabaamfabaaaafjaaaaaeegiocaaaaaaaaaaa
agaaaaaafjaaaaaeegiocaaaabaaaaaaabaaaaaafjaaaaaeegiocaaaacaaaaaa
biaaaaaafjaaaaaeegiocaaaadaaaaaabaaaaaaafpaaaaadpcbabaaaaaaaaaaa
fpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaad
hccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaa
gfaaaaadhccabaaaaeaaaaaagfaaaaadpccabaaaafaaaaaagfaaaaaddccabaaa
agaaaaaagiaaaaacacaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaa
aeaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaa
aceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaag
hcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaa
aaaaaaaafgifcaaaaaaaaaaaaeaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaa
bkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaa
abeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaa
aaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakecaabaaaaaaaaaaa
ckaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaacaaaaaakgakbaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaabaaaaaadiaaaaaipcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiocaaaadaaaaaaanaaaaaadiaaaaaiccaabaaaaaaaaaaa
bkaabaaaaaaaaaaackiacaaaadaaaaaaafaaaaaadcaaaaakccaabaaaaaaaaaaa
ckiacaaaadaaaaaaaeaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaaoaaaaaakgakbaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaakbcaabaaaaaaaaaaackiacaaaadaaaaaa
agaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaadcaaaaakbcaabaaaaaaaaaaa
ckiacaaaadaaaaaaahaaaaaadkbabaaaaaaaaaaaakaabaaaaaaaaaaadgaaaaag
iccabaaaafaaaaaaakaabaiaebaaaaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaaegaobaaaabaaaaaadiaaaaai
hcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaaacaaaaaaajaaaaaadcaaaaak
hcaabaaaabaaaaaaegiccaaaacaaaaaaaiaaaaaaagaabaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaacaaaaaaakaaaaaakgakbaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaakhccabaaaabaaaaaaegiccaaaacaaaaaa
alaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiccaaaacaaaaaaanaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaacaaaaaaamaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaak
hcaabaaaabaaaaaaegiccaaaacaaaaaaaoaaaaaakgakbaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaakhccabaaaacaaaaaaegiccaaaacaaaaaaapaaaaaapgapbaaa
aaaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaa
egiccaaaacaaaaaabbaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaacaaaaaa
baaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaacaaaaaabcaaaaaakgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaak
hccabaaaadaaaaaaegiccaaaacaaaaaabdaaaaaapgapbaaaaaaaaaaaegacbaaa
abaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaaacaaaaaa
bfaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaacaaaaaabeaaaaaaagaabaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaacaaaaaa
bgaaaaaakgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhccabaaaaeaaaaaa
egiccaaaacaaaaaabhaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaadgaaaaaf
hccabaaaafaaaaaaegacbaaaaaaaaaaadcaaaaaldccabaaaagaaaaaaegbabaaa
adaaaaaaegiacaaaaaaaaaaaafaaaaaaogikcaaaaaaaaaaaafaaaaaadoaaaaab
"
}

SubProgram "gles " {
Keywords { "SHADOWS_NATIVE" "SHADOWS_SPLIT_SPHERES" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD0;
uniform highp vec4 _MainTex_ST;
uniform highp float _Amplitude;
uniform highp float _WaveSpeed;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _Time;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = _glesVertex;
  highp float t_3;
  highp float tmpvar_4;
  tmpvar_4 = ((_glesVertex.x + _glesVertex.y) + _glesVertex.z);
  highp float tmpvar_5;
  tmpvar_5 = (_Time * _WaveSpeed).x;
  t_3 = tmpvar_5;
  if ((tmpvar_5 < 0.0)) {
    t_3 = (tmpvar_5 * -1.0);
  };
  tmpvar_2.x = (_glesVertex.x + (((sin(((t_3 * 1.45) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude));
  tmpvar_2.y = ((((sin(((t_3 * 3.12) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.5) * _Amplitude) - ((_glesMultiTexCoord0.y * _glesMultiTexCoord0.x) * 0.9));
  tmpvar_2.z = (_glesVertex.z - (((sin(((t_3 * 2.2) + tmpvar_4)) * _glesMultiTexCoord0.y) * 0.2) * _Amplitude));
  highp vec4 tmpvar_6;
  tmpvar_6 = (_Object2World * tmpvar_2);
  tmpvar_1.xyz = tmpvar_6.xyz;
  tmpvar_1.w = -((glstate_matrix_modelview0 * tmpvar_2).z);
  gl_Position = (glstate_matrix_mvp * tmpvar_2);
  xlv_TEXCOORD0 = (unity_World2Shadow[0] * tmpvar_6).xyz;
  xlv_TEXCOORD1 = (unity_World2Shadow[1] * tmpvar_6).xyz;
  xlv_TEXCOORD2 = (unity_World2Shadow[2] * tmpvar_6).xyz;
  xlv_TEXCOORD3 = (unity_World2Shadow[3] * tmpvar_6).xyz;
  xlv_TEXCOORD4 = tmpvar_1;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
varying highp vec2 xlv_TEXCOORD5;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD0;
uniform lowp float _Cutoff;
uniform sampler2D _MainTex;
uniform highp vec4 _Color;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp vec4 _LightShadowData;
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 _ProjectionParams;
void main ()
{
  lowp vec4 tmpvar_1;
  highp vec4 res_2;
  mediump float shadow_3;
  highp vec4 cascadeWeights_4;
  lowp vec4 c_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, xlv_TEXCOORD5);
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * _Color);
  c_5 = tmpvar_7;
  lowp float x_8;
  x_8 = (c_5.w - _Cutoff);
  if ((x_8 < 0.0)) {
    discard;
  };
  highp vec3 tmpvar_9;
  tmpvar_9 = (xlv_TEXCOORD4.xyz - unity_ShadowSplitSpheres[0].xyz);
  highp vec3 tmpvar_10;
  tmpvar_10 = (xlv_TEXCOORD4.xyz - unity_ShadowSplitSpheres[1].xyz);
  highp vec3 tmpvar_11;
  tmpvar_11 = (xlv_TEXCOORD4.xyz - unity_ShadowSplitSpheres[2].xyz);
  highp vec3 tmpvar_12;
  tmpvar_12 = (xlv_TEXCOORD4.xyz - unity_ShadowSplitSpheres[3].xyz);
  highp vec4 tmpvar_13;
  tmpvar_13.x = dot (tmpvar_9, tmpvar_9);
  tmpvar_13.y = dot (tmpvar_10, tmpvar_10);
  tmpvar_13.z = dot (tmpvar_11, tmpvar_11);
  tmpvar_13.w = dot (tmpvar_12, tmpvar_12);
  bvec4 tmpvar_14;
  tmpvar_14 = lessThan (tmpvar_13, unity_ShadowSplitSqRadii);
  lowp vec4 tmpvar_15;
  tmpvar_15 = vec4(tmpvar_14);
  cascadeWeights_4 = tmpvar_15;
  cascadeWeights_4.yzw = clamp ((cascadeWeights_4.yzw - cascadeWeights_4.xyz), 0.0, 1.0);
  highp vec3 p_16;
  p_16 = (xlv_TEXCOORD4.xyz - unity_ShadowFadeCenterAndType.xyz);
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = ((((xlv_TEXCOORD0 * cascadeWeights_4.x) + (xlv_TEXCOORD1 * cascadeWeights_4.y)) + (xlv_TEXCOORD2 * cascadeWeights_4.z)) + (xlv_TEXCOORD3 * cascadeWeights_4.w));
  lowp float tmpvar_18;
  tmpvar_18 = shadow2DEXT (_ShadowMapTexture, tmpvar_17.xyz);
  shadow_3 = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = (_LightShadowData.x + (shadow_3 * (1.0 - _LightShadowData.x)));
  shadow_3 = tmpvar_19;
  res_2.x = clamp ((shadow_3 + clamp (((sqrt(dot (p_16, p_16)) * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0)), 0.0, 1.0);
  res_2.y = 1.0;
  highp vec2 enc_20;
  highp vec2 tmpvar_21;
  tmpvar_21 = fract((vec2(1.0, 255.0) * (1.0 - (xlv_TEXCOORD4.w * _ProjectionParams.w))));
  enc_20.y = tmpvar_21.y;
  enc_20.x = (tmpvar_21.x - (tmpvar_21.y * 0.00392157));
  res_2.zw = enc_20;
  tmpvar_1 = res_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "d3d11_9x " {
Keywords { "SHADOWS_NATIVE" "SHADOWS_SPLIT_SPHERES" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 112 // 96 used size, 8 vars
Float 64 [_WaveSpeed]
Float 68 [_Amplitude]
Vector 80 [_MainTex_ST] 4
ConstBuffer "UnityPerCamera" 128 // 16 used size, 8 vars
Vector 0 [_Time] 4
ConstBuffer "UnityShadows" 416 // 384 used size, 8 vars
Matrix 128 [unity_World2Shadow0] 4
Matrix 192 [unity_World2Shadow1] 4
Matrix 256 [unity_World2Shadow2] 4
Matrix 320 [unity_World2Shadow3] 4
ConstBuffer "UnityPerDraw" 336 // 256 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 64 [glstate_matrix_modelview0] 4
Matrix 192 [_Object2World] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityShadows" 2
BindCB "UnityPerDraw" 3
// 46 instructions, 2 temp regs, 0 temp arrays:
// ALU 43 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecedhlkhaelphhimobohfopeinnhhkmhgpklabaaaaaapianaaaaaeaaaaaa
daaaaaaaeeafaaaagaamaaaacianaaaaebgpgodjamafaaaaamafaaaaaaacpopp
kiaeaaaageaaaaaaafaaceaaaaaagaaaaaaagaaaaaaaceaaabaagaaaaaaaaeaa
acaaabaaaaaaaaaaabaaaaaaabaaadaaaaaaaaaaacaaaiaabaaaaeaaaaaaaaaa
adaaaaaaaiaabeaaaaaaaaaaadaaamaaaeaabmaaaaaaaaaaaaaaaaaaaaacpopp
fbaaaaafcaaaapkaaaaaaaaaaaaaaamaidpjccdoaaaaaadpfbaaaaafcbaaapka
jkjjljdpbekoeheamnmmameaggggggdpfbaaaaafccaaapkanlapmjeanlapejma
mnmmemdoaaaaaaaafbaaaaafcdaaapkaabannalfgballglhklkkckdlijiiiidj
fbaaaaafceaaapkaklkkkklmaaaaaaloaaaaiadpaaaaaadpbpaaaaacafaaaaia
aaaaapjabpaaaaacafaaadiaadaaapjaaeaaaaaeafaaadoaadaaoejaacaaoeka
acaaookaabaaaaacaaaaabiaabaaaakaafaaaaadaaaaabiaaaaaaaiaadaaaaka
amaaaaadaaaaaciaaaaaaaiacaaaaakaafaaaaadaaaaaciaaaaaffiaaaaaaaia
aeaaaaaeaaaaabiaaaaaffiacaaaffkaaaaaaaiaacaaaaadaaaaaciaaaaaffja
aaaaaajaacaaaaadaaaaaciaaaaaffiaaaaakkjaaeaaaaaeaaaaahiaaaaaaaia
cbaaoekaaaaaffiaaeaaaaaeaaaaahiaaaaaoeiacaaakkkacaaappkabdaaaaac
aaaaahiaaaaaoeiaaeaaaaaeaaaaahiaaaaaoeiaccaaaakaccaaffkacfaaaaae
abaaaciaaaaaffiacdaaoekaceaaoekaafaaaaadaaaaaciaabaaffiaadaaffja
afaaaaadaaaaaciaaaaaffiaabaaffkaafaaaaadaaaaaiiaadaaaajaadaaffja
afaaaaadaaaaaiiaaaaappiacbaappkaaeaaaaaeaaaaaciaaaaaffiacaaappka
aaaappibafaaaaadaaaaaiiaaaaaffiabjaakkkacfaaaaaeabaaaciaaaaaaaia
cdaaoekaceaaoekacfaaaaaeacaaaciaaaaakkiacdaaoekaceaaoekaafaaaaad
aaaaabiaacaaffiaadaaffjaafaaaaadaaaaabiaaaaaaaiaabaaffkaaeaaaaae
aaaaabiaaaaaaaiaccaakkkbaaaakkjaafaaaaadaaaaaeiaabaaffiaadaaffja
afaaaaadaaaaaeiaaaaakkiaabaaffkaaeaaaaaeaaaaaeiaaaaakkiacaaappka
aaaaaajaaeaaaaaeaaaaaiiabiaakkkaaaaakkiaaaaappiaaeaaaaaeaaaaaiia
bkaakkkaaaaaaaiaaaaappiaaeaaaaaeaaaaaiiablaakkkaaaaappjaaaaappia
abaaaaacaeaaaioaaaaappibafaaaaadabaaapiaaaaaffiabnaaoekaafaaaaad
acaaapiaaaaaffiabfaaoekaaeaaaaaeacaaapiabeaaoekaaaaakkiaacaaoeia
aeaaaaaeabaaapiabmaaoekaaaaakkiaabaaoeiaaeaaaaaeabaaapiaboaaoeka
aaaaaaiaabaaoeiaaeaaaaaeaaaaapiabgaaoekaaaaaaaiaacaaoeiaaeaaaaae
aaaaapiabhaaoekaaaaappjaaaaaoeiaaeaaaaaeabaaapiabpaaoekaaaaappja
abaaoeiaafaaaaadacaaahiaabaaffiaafaaoekaaeaaaaaeacaaahiaaeaaoeka
abaaaaiaacaaoeiaaeaaaaaeacaaahiaagaaoekaabaakkiaacaaoeiaaeaaaaae
aaaaahoaahaaoekaabaappiaacaaoeiaafaaaaadacaaahiaabaaffiaajaaoeka
aeaaaaaeacaaahiaaiaaoekaabaaaaiaacaaoeiaaeaaaaaeacaaahiaakaaoeka
abaakkiaacaaoeiaaeaaaaaeabaaahoaalaaoekaabaappiaacaaoeiaafaaaaad
acaaahiaabaaffiaanaaoekaaeaaaaaeacaaahiaamaaoekaabaaaaiaacaaoeia
aeaaaaaeacaaahiaaoaaoekaabaakkiaacaaoeiaaeaaaaaeacaaahoaapaaoeka
abaappiaacaaoeiaafaaaaadacaaahiaabaaffiabbaaoekaaeaaaaaeacaaahia
baaaoekaabaaaaiaacaaoeiaaeaaaaaeacaaahiabcaaoekaabaakkiaacaaoeia
aeaaaaaeadaaahoabdaaoekaabaappiaacaaoeiaabaaaaacaeaaahoaabaaoeia
aeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeia
ppppaaaafdeieefcbeahaaaaeaaaabaamfabaaaafjaaaaaeegiocaaaaaaaaaaa
agaaaaaafjaaaaaeegiocaaaabaaaaaaabaaaaaafjaaaaaeegiocaaaacaaaaaa
biaaaaaafjaaaaaeegiocaaaadaaaaaabaaaaaaafpaaaaadpcbabaaaaaaaaaaa
fpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaad
hccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaa
gfaaaaadhccabaaaaeaaaaaagfaaaaadpccabaaaafaaaaaagfaaaaaddccabaaa
agaaaaaagiaaaaacacaaaaaadiaaaaajbcaabaaaaaaaaaaaakiacaaaaaaaaaaa
aeaaaaaaakiacaaaabaaaaaaaaaaaaaadbaaaaahccaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaa
bkbabaaaaaaaaaaaakbabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaackbabaaaaaaaaaaadcaaaaamhcaabaaaaaaaaaaaagaabaaaaaaaaaaa
aceaaaaajkjjljdpbekoeheamnmmameaaaaaaaaafgafbaaaaaaaaaaaenaaaaag
hcaabaaaaaaaaaaaaanaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaafgbfbaaaadaaaaaadiaaaaaihcaabaaaaaaaaaaaegacbaaa
aaaaaaaafgifcaaaaaaaaaaaaeaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaaabeaaaaaaaaaaadpdiaaaaahicaabaaaaaaaaaaaakbabaaaadaaaaaa
bkbabaaaadaaaaaadcaaaaakccaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaa
abeaaaaaggggggdpbkaabaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaa
aaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaadpakbabaaaaaaaaaaadcaaaaakecaabaaaaaaaaaaa
ckaabaiaebaaaaaaaaaaaaaaabeaaaaamnmmemdockbabaaaaaaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaadaaaaaaaaaaaaaaagaabaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaacaaaaaakgakbaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaabaaaaaadiaaaaaipcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiocaaaadaaaaaaanaaaaaadiaaaaaiccaabaaaaaaaaaaa
bkaabaaaaaaaaaaackiacaaaadaaaaaaafaaaaaadcaaaaakccaabaaaaaaaaaaa
ckiacaaaadaaaaaaaeaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaaoaaaaaakgakbaaa
aaaaaaaaegaobaaaabaaaaaadcaaaaakbcaabaaaaaaaaaaackiacaaaadaaaaaa
agaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaadcaaaaakbcaabaaaaaaaaaaa
ckiacaaaadaaaaaaahaaaaaadkbabaaaaaaaaaaaakaabaaaaaaaaaaadgaaaaag
iccabaaaafaaaaaaakaabaiaebaaaaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaaegaobaaaabaaaaaadiaaaaai
hcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaaacaaaaaaajaaaaaadcaaaaak
hcaabaaaabaaaaaaegiccaaaacaaaaaaaiaaaaaaagaabaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaacaaaaaaakaaaaaakgakbaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaakhccabaaaabaaaaaaegiccaaaacaaaaaa
alaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiccaaaacaaaaaaanaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaacaaaaaaamaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaak
hcaabaaaabaaaaaaegiccaaaacaaaaaaaoaaaaaakgakbaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaakhccabaaaacaaaaaaegiccaaaacaaaaaaapaaaaaapgapbaaa
aaaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaa
egiccaaaacaaaaaabbaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaacaaaaaa
baaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaacaaaaaabcaaaaaakgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaak
hccabaaaadaaaaaaegiccaaaacaaaaaabdaaaaaapgapbaaaaaaaaaaaegacbaaa
abaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaaacaaaaaa
bfaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaacaaaaaabeaaaaaaagaabaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaacaaaaaa
bgaaaaaakgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhccabaaaaeaaaaaa
egiccaaaacaaaaaabhaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaadgaaaaaf
hccabaaaafaaaaaaegacbaaaaaaaaaaadcaaaaaldccabaaaagaaaaaaegbabaaa
adaaaaaaegiacaaaaaaaaaaaafaaaaaaogikcaaaaaaaaaaaafaaaaaadoaaaaab
ejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
aaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaa
kjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaaahaaaaaalaaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaa
faepfdejfeejepeoaafeebeoehefeofeaaeoepfcenebemaafeeffiedepepfcee
aaedepemepfcaaklepfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaaaaaaaaaa
abaaaaaaadaaaaaaaaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
abaaaaaaahaiaaaalmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaahaiaaaa
lmaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahaiaaaalmaaaaaaadaaaaaa
aaaaaaaaadaaaaaaaeaaaaaaahaiaaaalmaaaaaaaeaaaaaaaaaaaaaaadaaaaaa
afaaaaaaapaaaaaalmaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaaadamaaaa
fdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl"
}

SubProgram "gles3 " {
Keywords { "SHADOWS_NATIVE" "SHADOWS_SPLIT_SPHERES" }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_Color _glesColor
in vec4 _glesColor;
#define gl_Normal (normalize(_glesNormal))
in vec3 _glesNormal;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;
#define gl_MultiTexCoord1 _glesMultiTexCoord1
in vec4 _glesMultiTexCoord1;
#define TANGENT vec4(normalize(_glesTANGENT.xyz), _glesTANGENT.w)
in vec4 _glesTANGENT;

#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 316
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 396
struct Input {
    highp vec2 uv_MainTex;
};
#line 418
struct v2f_surf {
    highp vec4 pos;
    highp vec3 _ShadowCoord0;
    highp vec3 _ShadowCoord1;
    highp vec3 _ShadowCoord2;
    highp vec3 _ShadowCoord3;
    highp vec4 _WorldPosViewZ;
    highp vec2 pack0;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 315
uniform lowp sampler2DShadow _ShadowMapTexture;
#line 326
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 339
#line 347
#line 361
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 394
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 401
#line 429
uniform highp vec4 _MainTex_ST;
#line 445
uniform lowp float _Cutoff;
#line 401
void vert( inout appdata_full v ) {
    highp float sinOff = ((v.vertex.x + v.vertex.y) + v.vertex.z);
    highp float t = float( (_Time * _WaveSpeed));
    #line 405
    if ((t < 0.0)){
        t *= -1.0;
    }
    highp float fx = v.texcoord.y;
    highp float fy = (v.texcoord.y * v.texcoord.x);
    v.vertex.x += (((sin(((t * 1.45) + sinOff)) * fx) * 0.5) * _Amplitude);
    #line 409
    v.vertex.y = ((((sin(((t * 3.12) + sinOff)) * fx) * 0.5) * _Amplitude) - (fy * 0.9));
    v.vertex.z -= (((sin(((t * 2.2) + sinOff)) * fx) * 0.2) * _Amplitude);
}
#line 430
v2f_surf vert_surf( in appdata_full v ) {
    v2f_surf o;
    #line 433
    vert( v);
    o.pack0.xy = ((v.texcoord.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
    o.pos = (glstate_matrix_mvp * v.vertex);
    highp vec4 wpos = (_Object2World * v.vertex);
    #line 437
    o._WorldPosViewZ.xyz = vec3( wpos);
    o._WorldPosViewZ.w = (-(glstate_matrix_modelview0 * v.vertex).z);
    o._ShadowCoord0 = (unity_World2Shadow[0] * wpos).xyz;
    o._ShadowCoord1 = (unity_World2Shadow[1] * wpos).xyz;
    #line 441
    o._ShadowCoord2 = (unity_World2Shadow[2] * wpos).xyz;
    o._ShadowCoord3 = (unity_World2Shadow[3] * wpos).xyz;
    return o;
}

out highp vec3 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
out highp vec2 xlv_TEXCOORD5;
void main() {
    v2f_surf xl_retval;
    appdata_full xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.tangent = vec4(TANGENT);
    xlt_v.normal = vec3(gl_Normal);
    xlt_v.texcoord = vec4(gl_MultiTexCoord0);
    xlt_v.texcoord1 = vec4(gl_MultiTexCoord1);
    xlt_v.color = vec4(gl_Color);
    xl_retval = vert_surf( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec3(xl_retval._ShadowCoord0);
    xlv_TEXCOORD1 = vec3(xl_retval._ShadowCoord1);
    xlv_TEXCOORD2 = vec3(xl_retval._ShadowCoord2);
    xlv_TEXCOORD3 = vec3(xl_retval._ShadowCoord3);
    xlv_TEXCOORD4 = vec4(xl_retval._WorldPosViewZ);
    xlv_TEXCOORD5 = vec2(xl_retval.pack0);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
void xll_clip_f(float x) {
  if ( x<0.0 ) discard;
}
float xll_shadow2D(mediump sampler2DShadow s, vec3 coord) { return texture (s, coord); }
float xll_saturate_f( float x) {
  return clamp( x, 0.0, 1.0);
}
vec2 xll_saturate_vf2( vec2 x) {
  return clamp( x, 0.0, 1.0);
}
vec3 xll_saturate_vf3( vec3 x) {
  return clamp( x, 0.0, 1.0);
}
vec4 xll_saturate_vf4( vec4 x) {
  return clamp( x, 0.0, 1.0);
}
mat2 xll_saturate_mf2x2(mat2 m) {
  return mat2( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0));
}
mat3 xll_saturate_mf3x3(mat3 m) {
  return mat3( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0));
}
mat4 xll_saturate_mf4x4(mat4 m) {
  return mat4( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0), clamp(m[3], 0.0, 1.0));
}
#line 151
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 187
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 181
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 316
struct SurfaceOutput {
    lowp vec3 Albedo;
    lowp vec3 Normal;
    lowp vec3 Emission;
    mediump float Specular;
    lowp float Gloss;
    lowp float Alpha;
};
#line 67
struct appdata_full {
    highp vec4 vertex;
    highp vec4 tangent;
    highp vec3 normal;
    highp vec4 texcoord;
    highp vec4 texcoord1;
    lowp vec4 color;
};
#line 396
struct Input {
    highp vec2 uv_MainTex;
};
#line 418
struct v2f_surf {
    highp vec4 pos;
    highp vec3 _ShadowCoord0;
    highp vec3 _ShadowCoord1;
    highp vec3 _ShadowCoord2;
    highp vec3 _ShadowCoord3;
    highp vec4 _WorldPosViewZ;
    highp vec2 pack0;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_LightPosition[8];
uniform highp vec4 unity_LightAtten[8];
#line 19
uniform highp vec4 unity_SpotDirection[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
#line 23
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
#line 27
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
#line 31
uniform highp vec4 _LightSplitsNear;
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
#line 35
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
#line 39
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
#line 43
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
#line 47
uniform highp mat4 glstate_matrix_projection;
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
#line 51
uniform lowp vec4 unity_ColorSpaceGrey;
#line 77
#line 82
#line 87
#line 91
#line 96
#line 120
#line 137
#line 158
#line 166
#line 193
#line 206
#line 215
#line 220
#line 229
#line 234
#line 243
#line 260
#line 265
#line 291
#line 299
#line 307
#line 311
#line 315
uniform lowp sampler2DShadow _ShadowMapTexture;
#line 326
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
#line 339
#line 347
#line 361
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
#line 394
uniform highp float _WaveSpeed;
uniform highp float _Amplitude;
#line 401
#line 429
uniform highp vec4 _MainTex_ST;
#line 445
uniform lowp float _Cutoff;
#line 220
highp vec2 EncodeFloatRG( in highp float v ) {
    highp vec2 kEncodeMul = vec2( 1.0, 255.0);
    highp float kEncodeBit = 0.00392157;
    #line 224
    highp vec2 enc = (kEncodeMul * v);
    enc = fract(enc);
    enc.x -= (enc.y * kEncodeBit);
    return enc;
}
#line 412
void surf( in Input IN, inout SurfaceOutput o ) {
    #line 414
    lowp vec4 c = (texture( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz;
    o.Alpha = c.w;
}
#line 446
lowp vec4 frag_surf( in v2f_surf IN ) {
    Input surfIN;
    #line 449
    surfIN.uv_MainTex = IN.pack0.xy;
    SurfaceOutput o;
    o.Albedo = vec3( 0.0);
    o.Emission = vec3( 0.0);
    #line 453
    o.Specular = 0.0;
    o.Alpha = 0.0;
    o.Gloss = 0.0;
    surf( surfIN, o);
    #line 457
    xll_clip_f((o.Alpha - _Cutoff));
    highp vec3 fromCenter0 = (IN._WorldPosViewZ.xyz - unity_ShadowSplitSpheres[0].xyz);
    highp vec3 fromCenter1 = (IN._WorldPosViewZ.xyz - unity_ShadowSplitSpheres[1].xyz);
    highp vec3 fromCenter2 = (IN._WorldPosViewZ.xyz - unity_ShadowSplitSpheres[2].xyz);
    #line 461
    highp vec3 fromCenter3 = (IN._WorldPosViewZ.xyz - unity_ShadowSplitSpheres[3].xyz);
    highp vec4 distances2 = vec4( dot( fromCenter0, fromCenter0), dot( fromCenter1, fromCenter1), dot( fromCenter2, fromCenter2), dot( fromCenter3, fromCenter3));
    highp vec4 cascadeWeights = vec4(lessThan( distances2, unity_ShadowSplitSqRadii));
    cascadeWeights.yzw = xll_saturate_vf3((cascadeWeights.yzw - cascadeWeights.xyz));
    #line 465
    highp float sphereDist = distance( IN._WorldPosViewZ.xyz, unity_ShadowFadeCenterAndType.xyz);
    highp float shadowFade = xll_saturate_f(((sphereDist * _LightShadowData.z) + _LightShadowData.w));
    highp vec4 coord = vec4( ((((IN._ShadowCoord0 * cascadeWeights.x) + (IN._ShadowCoord1 * cascadeWeights.y)) + (IN._ShadowCoord2 * cascadeWeights.z)) + (IN._ShadowCoord3 * cascadeWeights.w)), 1.0);
    mediump float shadow = xll_shadow2D( _ShadowMapTexture, coord.xyz);
    #line 469
    shadow = (_LightShadowData.x + (shadow * (1.0 - _LightShadowData.x)));
    highp vec4 res;
    res.x = xll_saturate_f((shadow + shadowFade));
    res.y = 1.0;
    #line 473
    res.zw = EncodeFloatRG( (1.0 - (IN._WorldPosViewZ.w * _ProjectionParams.w)));
    return res;
}
in highp vec3 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
in highp vec2 xlv_TEXCOORD5;
void main() {
    lowp vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN._ShadowCoord0 = vec3(xlv_TEXCOORD0);
    xlt_IN._ShadowCoord1 = vec3(xlv_TEXCOORD1);
    xlt_IN._ShadowCoord2 = vec3(xlv_TEXCOORD2);
    xlt_IN._ShadowCoord3 = vec3(xlv_TEXCOORD3);
    xlt_IN._WorldPosViewZ = vec4(xlv_TEXCOORD4);
    xlt_IN.pack0 = vec2(xlv_TEXCOORD5);
    xl_retval = frag_surf( xlt_IN);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

}
Program "fp" {
// Fragment combos: 4
//   opengl - ALU: 25 to 36, TEX: 2 to 2
//   d3d9 - ALU: 28 to 41, TEX: 3 to 3
//   d3d11 - ALU: 19 to 29, TEX: 1 to 1, FLOW: 1 to 1
//   d3d11_9x - ALU: 19 to 29, TEX: 1 to 1, FLOW: 1 to 1
SubProgram "opengl " {
Keywords { "SHADOWS_NONATIVE" }
Vector 0 [_ProjectionParams]
Vector 1 [_LightSplitsNear]
Vector 2 [_LightSplitsFar]
Vector 3 [_LightShadowData]
Vector 4 [_Color]
Float 5 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
"!!ARBfp1.0
# 25 ALU, 2 TEX
PARAM c[7] = { program.local[0..5],
		{ 1, 255, 0.0039215689 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEX R0.w, fragment.texcoord[5], texture[0], 2D;
MUL R0.w, R0, c[4];
SLT R0.w, R0, c[5].x;
SLT R2, fragment.texcoord[4].w, c[2];
SGE R1, fragment.texcoord[4].w, c[1];
MUL R1, R1, R2;
MUL R0.xyz, R1.y, fragment.texcoord[1];
MAD R0.xyz, R1.x, fragment.texcoord[0], R0;
MAD R0.xyz, R1.z, fragment.texcoord[2], R0;
MAD R0.xyz, fragment.texcoord[3], R1.w, R0;
MAD_SAT R1.y, fragment.texcoord[4].w, c[3].z, c[3].w;
MOV result.color.y, c[6].x;
TEX R0.x, R0, texture[1], 2D;
KIL -R0.w;
ADD R0.z, R0.x, -R0;
MOV R0.x, c[6];
CMP R1.x, R0.z, c[3], R0;
MUL R0.y, -fragment.texcoord[4].w, c[0].w;
ADD R0.y, R0, c[6].x;
MUL R0.xy, R0.y, c[6];
FRC R0.zw, R0.xyxy;
MOV R0.y, R0.w;
MAD R0.x, -R0.w, c[6].z, R0.z;
ADD_SAT result.color.x, R1, R1.y;
MOV result.color.zw, R0.xyxy;
END
# 25 instructions, 3 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "SHADOWS_NONATIVE" }
Vector 0 [_ProjectionParams]
Vector 1 [_LightSplitsNear]
Vector 2 [_LightSplitsFar]
Vector 3 [_LightShadowData]
Vector 4 [_Color]
Float 5 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
"ps_2_0
; 28 ALU, 3 TEX
dcl_2d s0
dcl_2d s1
def c6, 0.00000000, 1.00000000, 255.00000000, 0.00392157
dcl t0.xyz
dcl t1.xyz
dcl t2.xyz
dcl t3.xyz
dcl t4.xyzw
dcl t5.xy
texld r2, t5, s0
add r1, t4.w, -c2
add r0, t4.w, -c1
cmp r0, r0, c6.y, c6.x
cmp r1, r1, c6.x, c6.y
mul r1, r0, r1
mul r0.xyz, r1.y, t1
mad r2.xyz, r1.x, t0, r0
mad r1.xyz, r1.z, t2, r2
mul r0.w, r2, c4
add_pp r0.x, r0.w, -c5
mad r2.xyz, t3, r1.w, r1
cmp r0.x, r0, c6, c6.y
mov_pp r1, -r0.x
texld r0, r2, s1
texkill r1.xyzw
mul r1.x, -t4.w, c0.w
mov r2.x, c3
add r0.x, r0, -r2.z
cmp r0.x, r0, c6.y, r2
add r1.x, r1, c6.y
mul r2.xy, r1.x, c6.yzxw
mad_sat r1.x, t4.w, c3.z, c3.w
frc r2.xy, r2
add_sat r0.x, r0, r1
mov r1.y, r2
mad r1.x, -r2.y, c6.w, r2
mov r0.w, r1.y
mov r0.z, r1.x
mov r0.y, c6
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { "SHADOWS_NONATIVE" }
Vector 4 [_Color]
Float 5 [_Cutoff]
Vector 3 [_LightShadowData]
Vector 2 [_LightSplitsFar]
Vector 1 [_LightSplitsNear]
Vector 0 [_ProjectionParams]
SetTexture 0 [_ShadowMapTexture] 2D
SetTexture 1 [_MainTex] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 24.00 (18 instructions), vertex: 0, texture: 8,
//   sequencer: 10, interpolator: 24;    7 GPRs, 27 threads,
// Performance (if enough threads): ~24 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaabpiaaaaabgaaaaaaaaaaaaaaaceaaaaabjiaaaaabmaaaaaaaaa
aaaaaaaaaaaaabhaaaaaaabmaaaaabgdppppadaaaaaaaaaiaaaaaabmaaaaaaaa
aaaaabfmaaaaaalmaaacaaaeaaabaaaaaaaaaameaaaaaaaaaaaaaaneaaacaaaf
aaabaaaaaaaaaanmaaaaaaaaaaaaaaomaaacaaadaaabaaaaaaaaaameaaaaaaaa
aaaaaapnaaacaaacaaabaaaaaaaaaameaaaaaaaaaaaaabanaaacaaabaaabaaaa
aaaaaameaaaaaaaaaaaaabboaaadaaabaaabaaaaaaaaabciaaaaaaaaaaaaabdi
aaacaaaaaaabaaaaaaaaaameaaaaaaaaaaaaabekaaadaaaaaaabaaaaaaaaabci
aaaaaaaafpedgpgmgphcaaklaaabaaadaaabaaaeaaabaaaaaaaaaaaafpedhfhe
gpggggaaaaaaaaadaaabaaabaaabaaaaaaaaaaaafpemgjghgihefdgigbgegphh
eegbhegbaafpemgjghgihefdhagmgjhehdeggbhcaafpemgjghgihefdhagmgjhe
hdeogfgbhcaafpengbgjgofegfhiaaklaaaeaaamaaabaaabaaabaaaaaaaaaaaa
fpfahcgpgkgfgdhegjgpgofagbhcgbgnhdaafpfdgigbgegphhengbhafegfhihe
hfhcgfaahahdfpddfpdaaadccodacodcdadddfddcodaaaklaaaaaaaaaaaaaaab
aaaaaaaaaaaaaaaaaaaaaabeabpmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaeaaaaaabcabaaaagaaaaaaaaaeaaaaaaaaaaaaeimgaadpaadpaaaaaacb
aaaahafaaaaahbfbaaaahcfcaaaahdfdaaaapefeaaaadfffaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaadpiaaaaaaaaaaaaaedhpaaaadliaiaibaaajgaadfaajbcaa
bcaaabaaaaaaaaaagaaomeaabcaaaaaaaaaadabeaaaaccaaaaaaaaaababiaakb
bpbpphppaaaaeaaamiapaaagaablaaaakgaeabaamiapaaafaaaablaagfacaeaa
miaiaaaaabblblgmilaaaeafmiapaaafaaaaaaaaobagafaamiahaaadaablgcaa
obafadaamiaaaaaaaalbblaahjppaaaamiahaaacaamggcmaolafacadmiahaaab
aalbloleolafabacmiahaaaaaagmmngcolafaaabeeaiaaabbpbppppiaaaaeaaa
mjabaaabaablmgblilaeadadmiacaaaaaablblaakbaeaaaamiaiaaaaaelbmgmg
ilaappppliebaaaaaamggmebmfaaaappmiamaaaaaanlaaaaoiaaaaaamiacaaaa
aemgblblklaappaamiabaaaaaagmgmgmioaaadppmjabaaaaaagmgmaaoaabaaaa
micpmaaaaapapaaaocaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "SHADOWS_NONATIVE" }
Vector 0 [_ProjectionParams]
Vector 1 [_LightSplitsNear]
Vector 2 [_LightSplitsFar]
Vector 3 [_LightShadowData]
Vector 4 [_Color]
Float 5 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
"sce_fp_rsx // 47 instructions using 3 registers
[Configuration]
24
ffffffff000fc020003fffe0000000000000848003000000
[Offsets]
6
_ProjectionParams 1 0
00000130
_LightSplitsNear 2 0
0000017000000080
_LightSplitsFar 2 0
000001a0000000b0
_LightShadowData 2 0
000002c000000260
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
752
30001701c8011c9dc8000001c8003fe102800200fe001c9dfe020001c8000001
00000000000000000000000000000000037e4a80c9001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
08000101fe011c9dc8000001c8003fe106800b0054001c9d08020000c8000001
000000000000000000000000000000001e7e7d00c8001c9dc8000001c8000001
18800a0054001c9d80020000c800000100000000000000000000000000000000
10000200ab001c9cc9000001c80000010480014000021c9cc8000001c8000001
00003f80000000000000000000000000ae020200fe001c9dc8010001c8003fe1
1000020001001c9c55000001c80000018e020400fe001c9dc8010001c8043fe1
1000020054001c9dc8020001c800000100000000000000000000000000000000
06040400fe001c9f080200000802000000003f800000437f0000000000000000
18800b0054001c9dc8020001c800000100000000000000000000000000000000
06041000c8081c9dc8000001c800000118820a0054001c9dc8020001c8000001
000000000000000000000000000000001002020055001c9d55040001c8000001
ce020400fe041c9dc8010001c8043fe110000200c9001c9dc9040001c8000001
10000100c8001c9dc8000001c8000001ee020400c8011c9dfe000001c8043fe1
10800140aa081c9cc8000001c800000116021702c8041c9dc8000001c8000001
10000500a6041c9dc8020001c800000100013f7f00013b7f0001377f00000000
037e4a00fe001c9d54040001c80000011000010000021c9cc8000001c8000001
000000000000000000000000000000001000010000020008c8000001c8000001
00003f8000000000000000000000000008800400aa081c9eaa02000000080000
0000000080813b8000000000000000000202840054001c9d54020001fe020001
0000000000000000000000000000000018800140c9001c9dc8000001c8000001
02818300fe001c9dc8040001c8000001
"
}

SubProgram "gles " {
Keywords { "SHADOWS_NONATIVE" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "SHADOWS_NONATIVE" }
"!!GLES"
}

SubProgram "flash " {
Keywords { "SHADOWS_NONATIVE" }
Vector 0 [_ProjectionParams]
Vector 1 [_LightSplitsNear]
Vector 2 [_LightSplitsFar]
Vector 3 [_LightShadowData]
Vector 4 [_Color]
Float 5 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
"agal_ps
c6 0.0 1.0 255.0 0.003922
c7 1.0 0.003922 0.000015 0.0
[bc]
ciaaaaaaacaaapacafaaaaoeaeaaaaaaaaaaaaaaafaababb tex r2, v5, s0 <2d wrap linear point>
acaaaaaaabaaapacaeaaaappaeaaaaaaacaaaaoeabaaaaaa sub r1, v4.w, c2
acaaaaaaaaaaapacaeaaaappaeaaaaaaabaaaaoeabaaaaaa sub r0, v4.w, c1
ckaaaaaaadaaapacaaaaaaoeacaaaaaaagaaaaaaabaaaaaa slt r3, r0, c6.x
aaaaaaaaaeaaapacagaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r4, c6
aaaaaaaaafaaacacagaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r5.y, c6
acaaaaaaaeaaapacaeaaaaaaacaaaaaaafaaaaffacaaaaaa sub r4, r4.x, r5.y
adaaaaaaaaaaapacaeaaaaoeacaaaaaaadaaaaoeacaaaaaa mul r0, r4, r3
abaaaaaaaaaaapacaaaaaaoeacaaaaaaagaaaaffabaaaaaa add r0, r0, c6.y
ckaaaaaaadaaapacabaaaaoeacaaaaaaagaaaaaaabaaaaaa slt r3, r1, c6.x
aaaaaaaaafaaacacagaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r5.y, c6
aaaaaaaaafaaapacagaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r5, c6
acaaaaaaaeaaapacafaaaaffacaaaaaaafaaaaaaacaaaaaa sub r4, r5.y, r5.x
adaaaaaaabaaapacaeaaaaoeacaaaaaaadaaaaoeacaaaaaa mul r1, r4, r3
abaaaaaaabaaapacabaaaaoeacaaaaaaagaaaaaaabaaaaaa add r1, r1, c6.x
adaaaaaaabaaapacaaaaaaoeacaaaaaaabaaaaoeacaaaaaa mul r1, r0, r1
adaaaaaaaaaaahacabaaaaffacaaaaaaabaaaaoeaeaaaaaa mul r0.xyz, r1.y, v1
adaaaaaaacaaahacabaaaaaaacaaaaaaaaaaaaoeaeaaaaaa mul r2.xyz, r1.x, v0
abaaaaaaacaaahacacaaaakeacaaaaaaaaaaaakeacaaaaaa add r2.xyz, r2.xyzz, r0.xyzz
adaaaaaaabaaahacabaaaakkacaaaaaaacaaaaoeaeaaaaaa mul r1.xyz, r1.z, v2
abaaaaaaabaaahacabaaaakeacaaaaaaacaaaakeacaaaaaa add r1.xyz, r1.xyzz, r2.xyzz
adaaaaaaaaaaaiacacaaaappacaaaaaaaeaaaaoeabaaaaaa mul r0.w, r2.w, c4
acaaaaaaaaaaabacaaaaaappacaaaaaaafaaaaoeabaaaaaa sub r0.x, r0.w, c5
adaaaaaaacaaahacadaaaaoeaeaaaaaaabaaaappacaaaaaa mul r2.xyz, v3, r1.w
abaaaaaaacaaahacacaaaakeacaaaaaaabaaaakeacaaaaaa add r2.xyz, r2.xyzz, r1.xyzz
ckaaaaaaaaaaabacaaaaaaaaacaaaaaaagaaaaaaabaaaaaa slt r0.x, r0.x, c6.x
bfaaaaaaabaaapacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r1, r0.x
ciaaaaaaaaaaapacacaaaafeacaaaaaaabaaaaaaafaababb tex r0, r2.xyyy, s1 <2d wrap linear point>
chaaaaaaaaaaaaaaabaaaaaaacaaaaaaaaaaaaaaaaaaaaaa kil a0.none, r1.x
bdaaaaaaaaaaabacaaaaaaoeacaaaaaaahaaaaoeabaaaaaa dp4 r0.x, r0, c7
bfaaaaaaadaaaiacaeaaaappaeaaaaaaaaaaaaaaaaaaaaaa neg r3.w, v4.w
adaaaaaaabaaabacadaaaappacaaaaaaaaaaaappabaaaaaa mul r1.x, r3.w, c0.w
aaaaaaaaacaaabacadaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r2.x, c3
acaaaaaaaaaaabacaaaaaaaaacaaaaaaacaaaakkacaaaaaa sub r0.x, r0.x, r2.z
ckaaaaaaaeaaabacaaaaaaaaacaaaaaaagaaaaaaabaaaaaa slt r4.x, r0.x, c6.x
acaaaaaaadaaabacacaaaaaaacaaaaaaagaaaaffabaaaaaa sub r3.x, r2.x, c6.y
adaaaaaaaaaaabacadaaaaaaacaaaaaaaeaaaaaaacaaaaaa mul r0.x, r3.x, r4.x
abaaaaaaaaaaabacaaaaaaaaacaaaaaaagaaaaffabaaaaaa add r0.x, r0.x, c6.y
abaaaaaaabaaabacabaaaaaaacaaaaaaagaaaaffabaaaaaa add r1.x, r1.x, c6.y
adaaaaaaacaaadacabaaaaaaacaaaaaaagaaaamjabaaaaaa mul r2.xy, r1.x, c6.yzxw
adaaaaaaabaaabacaeaaaappaeaaaaaaadaaaakkabaaaaaa mul r1.x, v4.w, c3.z
abaaaaaaabaaabacabaaaaaaacaaaaaaadaaaappabaaaaaa add r1.x, r1.x, c3.w
bgaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sat r1.x, r1.x
aiaaaaaaacaaadacacaaaafeacaaaaaaaaaaaaaaaaaaaaaa frc r2.xy, r2.xyyy
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
bgaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sat r0.x, r0.x
aaaaaaaaabaaacacacaaaaffacaaaaaaaaaaaaaaaaaaaaaa mov r1.y, r2.y
bfaaaaaaaeaaacacacaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r4.y, r2.y
adaaaaaaabaaabacaeaaaaffacaaaaaaagaaaappabaaaaaa mul r1.x, r4.y, c6.w
abaaaaaaabaaabacabaaaaaaacaaaaaaacaaaaaaacaaaaaa add r1.x, r1.x, r2.x
aaaaaaaaaaaaaiacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa mov r0.w, r1.y
aaaaaaaaaaaaaeacabaaaaaaacaaaaaaaaaaaaaaaaaaaaaa mov r0.z, r1.x
aaaaaaaaaaaaacacagaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r0.y, c6
aaaaaaaaaaaaapadaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r0
"
}

SubProgram "opengl " {
Keywords { "SHADOWS_NATIVE" }
Vector 0 [_ProjectionParams]
Vector 1 [_LightSplitsNear]
Vector 2 [_LightSplitsFar]
Vector 3 [_LightShadowData]
Vector 4 [_Color]
Float 5 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
"!!ARBfp1.0
# 25 ALU, 2 TEX
OPTION ARB_fragment_program_shadow;
PARAM c[7] = { program.local[0..5],
		{ 1, 255, 0.0039215689 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEX R0.w, fragment.texcoord[5], texture[0], 2D;
MUL R0.w, R0, c[4];
SLT R0.w, R0, c[5].x;
SLT R2, fragment.texcoord[4].w, c[2];
SGE R1, fragment.texcoord[4].w, c[1];
MUL R1, R1, R2;
MUL R0.xyz, R1.y, fragment.texcoord[1];
MAD R0.xyz, R1.x, fragment.texcoord[0], R0;
MAD R0.xyz, R1.z, fragment.texcoord[2], R0;
MAD R0.xyz, fragment.texcoord[3], R1.w, R0;
MAD_SAT R1.y, fragment.texcoord[4].w, c[3].z, c[3].w;
MOV result.color.y, c[6].x;
TEX R0.x, R0, texture[1], SHADOW2D;
KIL -R0.w;
MOV R0.y, c[6].x;
ADD R0.w, R0.y, -c[3].x;
MAD R1.x, R0, R0.w, c[3];
MUL R0.z, -fragment.texcoord[4].w, c[0].w;
ADD R0.y, R0.z, c[6].x;
MUL R0.xy, R0.y, c[6];
FRC R0.zw, R0.xyxy;
MOV R0.y, R0.w;
MAD R0.x, -R0.w, c[6].z, R0.z;
ADD_SAT result.color.x, R1, R1.y;
MOV result.color.zw, R0.xyxy;
END
# 25 instructions, 3 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "SHADOWS_NATIVE" }
Vector 0 [_ProjectionParams]
Vector 1 [_LightSplitsNear]
Vector 2 [_LightSplitsFar]
Vector 3 [_LightShadowData]
Vector 4 [_Color]
Float 5 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
"ps_2_0
; 28 ALU, 3 TEX
dcl_2d s0
dcl_2d s1
def c6, 0.00000000, 1.00000000, 255.00000000, 0.00392157
dcl t0.xyz
dcl t1.xyz
dcl t2.xyz
dcl t3.xyz
dcl t4.xyzw
dcl t5.xy
texld r2, t5, s0
add r1, t4.w, -c2
add r0, t4.w, -c1
cmp r0, r0, c6.y, c6.x
cmp r1, r1, c6.x, c6.y
mul r1, r0, r1
mul r0.xyz, r1.y, t1
mad r2.xyz, r1.x, t0, r0
mad r1.xyz, r1.z, t2, r2
mul r0.w, r2, c4
add_pp r0.x, r0.w, -c5
mad r2.xyz, t3, r1.w, r1
cmp r0.x, r0, c6, c6.y
mov_pp r1, -r0.x
texld r0, r2, s1
texkill r1.xyzw
mov r2.x, c3
add r2.x, c6.y, -r2
mul r1.x, -t4.w, c0.w
mad r0.x, r0, r2, c3
add r1.x, r1, c6.y
mul r2.xy, r1.x, c6.yzxw
mad_sat r1.x, t4.w, c3.z, c3.w
frc r2.xy, r2
add_sat r0.x, r0, r1
mov r1.y, r2
mad r1.x, -r2.y, c6.w, r2
mov r0.w, r1.y
mov r0.z, r1.x
mov r0.y, c6
mov_pp oC0, r0
"
}

SubProgram "ps3 " {
Keywords { "SHADOWS_NATIVE" }
Vector 0 [_ProjectionParams]
Vector 1 [_LightSplitsNear]
Vector 2 [_LightSplitsFar]
Vector 3 [_LightShadowData]
Vector 4 [_Color]
Float 5 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
"sce_fp_rsx // 43 instructions using 3 registers
[Configuration]
24
ffffffff000fc020003fffe0000000000000848003000000
[Offsets]
6
_ProjectionParams 1 0
00000190
_LightSplitsNear 2 0
000000a000000080
_LightSplitsFar 2 0
000000e0000000c0
_LightShadowData 3 0
0000028000000260000001e0
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
688
30001701c8011c9dc8000001c8003fe102800200fe001c9dfe020001c8000001
00000000000000000000000000000000037e4a80c9001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
02000101fe011c9dc8000001c8003fe118820b0000001c9cc8020001c8000001
0000000000000000000000000000000006880b0000001c9c08020000c8000001
0000000000000000000000000000000018800a0000001c9cc8020001c8000001
0000000000000000000000000000000006820a0000001c9c08020000c8000001
0000000000000000000000000000000004040200c9101c9dc9040001c8000001
1e7e7d00c8001c9dc8000001c80000011002020001101c9c01040000c8000001
ae020200aa081c9cc8010001c8003fe18e020400fe041c9dc8010001c8043fe1
1002020055041c9d55000001c800000110000200c9041c9dc9000001c8000001
ce020400fe041c9dc8010001c8043fe1ee020400c8011c9dfe000001c8043fe1
1000020000001c9cc8020001c800000100000000000000000000000000000000
18000400fe001c9f800200008002000000003f800000437f0000000000000000
02021702c8041c9dc8000001c80000010402840000001c9c54020001fe020001
0000000000000000000000000000000018021000c8001c9dc8000001c8000001
08800400fe041c9f00020000c804000180813b80000000000000000000000000
04800140aa021c9cc8000001c80000010000000000003f800000000000000000
10800140c8041c9dc8000001c800000102020400c8041c9d00020002c8040001
0000000000000000000000000000000002020300c8041c9d00020000c8000001
0000000000000000000000000000000018800140c9001c9dc8000001c8000001
02818300c8041c9daa040000c8000001
"
}

SubProgram "d3d11 " {
Keywords { "SHADOWS_NATIVE" }
ConstBuffer "$Globals" 112 // 100 used size, 8 vars
Vector 48 [_Color] 4
Float 96 [_Cutoff]
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityShadows" 416 // 400 used size, 8 vars
Vector 96 [_LightSplitsNear] 4
Vector 112 [_LightSplitsFar] 4
Vector 384 [_LightShadowData] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityShadows" 2
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_ShadowMapTexture] 2D 0
// 25 instructions, 2 temp regs, 0 temp arrays:
// ALU 17 float, 0 int, 2 uint
// TEX 1 (0 load, 1 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedfaiemjneeiipdeiogdiimkiehfiffkebabaaaaaadaafaaaaadaaaaaa
cmaaaaaapmaaaaaadaabaaaaejfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaalmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalmaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaalmaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaalmaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaiaaaalmaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
adadaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheo
cmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaa
apaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcpiadaaaaeaaaaaaapoaaaaaa
fjaaaaaeegiocaaaaaaaaaaaahaaaaaafjaaaaaeegiocaaaabaaaaaaagaaaaaa
fjaaaaaeegiocaaaacaaaaaabjaaaaaafkaiaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaa
abaaaaaaffffaaaagcbaaaadhcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaa
gcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaagcbaaaadicbabaaa
afaaaaaagcbaaaaddcbabaaaagaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaac
acaaaaaaefaaaaajpcaabaaaaaaaaaaaegbabaaaagaaaaaaeghobaaaaaaaaaaa
aagabaaaabaaaaaadcaaaaambcaabaaaaaaaaaaadkaabaaaaaaaaaaadkiacaaa
aaaaaaaaadaaaaaaakiacaiaebaaaaaaaaaaaaaaagaaaaaadbaaaaahbcaabaaa
aaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaaanaaaeadakaabaaaaaaaaaaa
bnaaaaaipcaabaaaaaaaaaaapgbpbaaaafaaaaaaegiocaaaacaaaaaaagaaaaaa
abaaaaakpcaabaaaaaaaaaaaegaobaaaaaaaaaaaaceaaaaaaaaaiadpaaaaiadp
aaaaiadpaaaaiadpdbaaaaaipcaabaaaabaaaaaapgbpbaaaafaaaaaaegiocaaa
acaaaaaaahaaaaaaabaaaaakpcaabaaaabaaaaaaegaobaaaabaaaaaaaceaaaaa
aaaaiadpaaaaiadpaaaaiadpaaaaiadpdiaaaaahpcaabaaaaaaaaaaaegaobaaa
aaaaaaaaegaobaaaabaaaaaadiaaaaahhcaabaaaabaaaaaafgafbaaaaaaaaaaa
egbcbaaaacaaaaaadcaaaaajhcaabaaaabaaaaaaegbcbaaaabaaaaaaagaabaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaaegbcbaaaadaaaaaa
kgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaaegbcbaaa
aeaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaaehaaaaalbcaabaaaaaaaaaaa
egaabaaaaaaaaaaaaghabaaaabaaaaaaaagabaaaaaaaaaaackaabaaaaaaaaaaa
aaaaaaajccaabaaaaaaaaaaaakiacaiaebaaaaaaacaaaaaabiaaaaaaabeaaaaa
aaaaiadpdcaaaaakbcaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaa
akiacaaaacaaaaaabiaaaaaadccaaaalccaabaaaaaaaaaaadkbabaaaafaaaaaa
ckiacaaaacaaaaaabiaaaaaadkiacaaaacaaaaaabiaaaaaaaacaaaahbccabaaa
aaaaaaaabkaabaaaaaaaaaaaakaabaaaaaaaaaaadcaaaaalbcaabaaaaaaaaaaa
dkbabaiaebaaaaaaafaaaaaadkiacaaaabaaaaaaafaaaaaaabeaaaaaaaaaiadp
diaaaaakdcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaaaaaaiadpaaaahped
aaaaaaaaaaaaaaaabkaaaaafdcaabaaaaaaaaaaaegaabaaaaaaaaaaadcaaaaak
eccabaaaaaaaaaaabkaabaiaebaaaaaaaaaaaaaaabeaaaaaibiaiadlakaabaaa
aaaaaaaadgaaaaaficcabaaaaaaaaaaabkaabaaaaaaaaaaadgaaaaafcccabaaa
aaaaaaaaabeaaaaaaaaaiadpdoaaaaab"
}

SubProgram "gles " {
Keywords { "SHADOWS_NATIVE" }
"!!GLES"
}

SubProgram "d3d11_9x " {
Keywords { "SHADOWS_NATIVE" }
ConstBuffer "$Globals" 112 // 100 used size, 8 vars
Vector 48 [_Color] 4
Float 96 [_Cutoff]
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityShadows" 416 // 400 used size, 8 vars
Vector 96 [_LightSplitsNear] 4
Vector 112 [_LightSplitsFar] 4
Vector 384 [_LightShadowData] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityShadows" 2
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_ShadowMapTexture] 2D 0
// 25 instructions, 2 temp regs, 0 temp arrays:
// ALU 17 float, 0 int, 2 uint
// TEX 1 (0 load, 1 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefieceddhblcibpammafdhohndfolhblghinhkhabaaaaaamaahaaaaafaaaaaa
deaaaaaakmacaaaakmagaaaalmagaaaaimahaaaaebgpgodjhaacaaaahaacaaaa
aaacppppaiacaaaagiaaaaaaafaacmaaaaaagiaaaaaagiaaacaaceaaaaaagiaa
abaaaaaaaaababaaaaaaadaaabaaaaaaaaaaaaaaaaaaagaaabaaabaaaaaaaaaa
abaaafaaabaaacaaaaaaaaaaacaaagaaacaaadaaaaaaaaaaacaabiaaabaaafaa
aaaaaaaaaaacppppfbaaaaafagaaapkaaaaaaaaaaaaaiadpaaaahpedibiaiadl
bpaaaaacaaaaaaiaaaaaahlabpaaaaacaaaaaaiaabaaahlabpaaaaacaaaaaaia
acaaahlabpaaaaacaaaaaaiaadaaahlabpaaaaacaaaaaaiaaeaaaplabpaaaaac
aaaaaaiaafaaadlabpaaaaacaaaaaajaaaaiapkabpaaaaacaaaaaajaabaiapka
ecaaaaadaaaaapiaafaaoelaabaioekaabaaaaacabaaaiiaaaaappkaaeaaaaae
aaaacpiaaaaappiaabaappiaabaaaakbacaaaaadabaaapiaaeaapplaaeaaoekb
fiaaaaaeabaaapiaabaaoeiaagaaaakaagaaffkaacaaaaadacaaapiaaeaappla
adaaoekbfiaaaaaeabaaapiaacaaoeiaabaaoeiaagaaaakaafaaaaadacaaahia
abaaffiaabaaoelaaeaaaaaeacaaahiaaaaaoelaabaaaaiaacaaoeiaaeaaaaae
abaaahiaacaaoelaabaakkiaacaaoeiaaeaaaaaeabaaahiaadaaoelaabaappia
abaaoeiaebaaaaabaaaaapiaecaaaaadaaaacpiaabaaoeiaaaaioekaabaaaaac
aaaaaciaagaaffkabcaaaaaeabaacbiaaaaaaaiaaaaaffiaafaaaakaaeaaaaae
aaaabbiaaeaapplaafaakkkaafaappkaacaaaaadabaadbiaaaaaaaiaabaaaaia
aeaaaaaeaaaaabiaaeaapplaacaappkbaaaaffiaafaaaaadaaaaadiaaaaaaaia
agaamjkabdaaaaacaaaaadiaaaaaoeiaaeaaaaaeabaaceiaaaaaffiaagaappkb
aaaaaaiaabaaaaacabaaciiaaaaaffiaabaaaaacabaaaciaagaaffkaabaaaaac
aaaicpiaabaaoeiappppaaaafdeieefcpiadaaaaeaaaaaaapoaaaaaafjaaaaae
egiocaaaaaaaaaaaahaaaaaafjaaaaaeegiocaaaabaaaaaaagaaaaaafjaaaaae
egiocaaaacaaaaaabjaaaaaafkaiaaadaagabaaaaaaaaaaafkaaaaadaagabaaa
abaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaa
ffffaaaagcbaaaadhcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaad
hcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaagcbaaaadicbabaaaafaaaaaa
gcbaaaaddcbabaaaagaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacacaaaaaa
efaaaaajpcaabaaaaaaaaaaaegbabaaaagaaaaaaeghobaaaaaaaaaaaaagabaaa
abaaaaaadcaaaaambcaabaaaaaaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaa
adaaaaaaakiacaiaebaaaaaaaaaaaaaaagaaaaaadbaaaaahbcaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaaaaaanaaaeadakaabaaaaaaaaaaabnaaaaai
pcaabaaaaaaaaaaapgbpbaaaafaaaaaaegiocaaaacaaaaaaagaaaaaaabaaaaak
pcaabaaaaaaaaaaaegaobaaaaaaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadp
aaaaiadpdbaaaaaipcaabaaaabaaaaaapgbpbaaaafaaaaaaegiocaaaacaaaaaa
ahaaaaaaabaaaaakpcaabaaaabaaaaaaegaobaaaabaaaaaaaceaaaaaaaaaiadp
aaaaiadpaaaaiadpaaaaiadpdiaaaaahpcaabaaaaaaaaaaaegaobaaaaaaaaaaa
egaobaaaabaaaaaadiaaaaahhcaabaaaabaaaaaafgafbaaaaaaaaaaaegbcbaaa
acaaaaaadcaaaaajhcaabaaaabaaaaaaegbcbaaaabaaaaaaagaabaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaaegbcbaaaadaaaaaakgakbaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaaegbcbaaaaeaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaaehaaaaalbcaabaaaaaaaaaaaegaabaaa
aaaaaaaaaghabaaaabaaaaaaaagabaaaaaaaaaaackaabaaaaaaaaaaaaaaaaaaj
ccaabaaaaaaaaaaaakiacaiaebaaaaaaacaaaaaabiaaaaaaabeaaaaaaaaaiadp
dcaaaaakbcaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaaakiacaaa
acaaaaaabiaaaaaadccaaaalccaabaaaaaaaaaaadkbabaaaafaaaaaackiacaaa
acaaaaaabiaaaaaadkiacaaaacaaaaaabiaaaaaaaacaaaahbccabaaaaaaaaaaa
bkaabaaaaaaaaaaaakaabaaaaaaaaaaadcaaaaalbcaabaaaaaaaaaaadkbabaia
ebaaaaaaafaaaaaadkiacaaaabaaaaaaafaaaaaaabeaaaaaaaaaiadpdiaaaaak
dcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaaaaaaiadpaaaahpedaaaaaaaa
aaaaaaaabkaaaaafdcaabaaaaaaaaaaaegaabaaaaaaaaaaadcaaaaakeccabaaa
aaaaaaaabkaabaiaebaaaaaaaaaaaaaaabeaaaaaibiaiadlakaabaaaaaaaaaaa
dgaaaaaficcabaaaaaaaaaaabkaabaaaaaaaaaaadgaaaaafcccabaaaaaaaaaaa
abeaaaaaaaaaiadpdoaaaaabfdegejdaaiaaaaaaiaaaaaaaaaaaaaaaejfdeheo
miaaaaaaahaaaaaaaiaaaaaalaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaa
apaaaaaalmaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaahahaaaalmaaaaaa
abaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaalmaaaaaaacaaaaaaaaaaaaaa
adaaaaaaadaaaaaaahahaaaalmaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaa
ahahaaaalmaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaiaaaalmaaaaaa
afaaaaaaaaaaaaaaadaaaaaaagaaaaaaadadaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
"
}

SubProgram "gles3 " {
Keywords { "SHADOWS_NATIVE" }
"!!GLES3"
}

SubProgram "opengl " {
Keywords { "SHADOWS_NONATIVE" "SHADOWS_SPLIT_SPHERES" }
Vector 0 [_ProjectionParams]
Vector 1 [unity_ShadowSplitSpheres0]
Vector 2 [unity_ShadowSplitSpheres1]
Vector 3 [unity_ShadowSplitSpheres2]
Vector 4 [unity_ShadowSplitSpheres3]
Vector 5 [unity_ShadowSplitSqRadii]
Vector 6 [_LightShadowData]
Vector 7 [unity_ShadowFadeCenterAndType]
Vector 8 [_Color]
Float 9 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
"!!ARBfp1.0
# 36 ALU, 2 TEX
PARAM c[11] = { program.local[0..9],
		{ 1, 255, 0.0039215689 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEX R0.w, fragment.texcoord[5], texture[0], 2D;
ADD R1.xyz, fragment.texcoord[4], -c[1];
ADD R2.xyz, fragment.texcoord[4], -c[4];
MUL R0.w, R0, c[8];
SLT R0.w, R0, c[9].x;
DP3 R1.x, R1, R1;
ADD R0.xyz, fragment.texcoord[4], -c[2];
DP3 R1.y, R0, R0;
ADD R0.xyz, fragment.texcoord[4], -c[3];
DP3 R1.z, R0, R0;
DP3 R1.w, R2, R2;
SLT R2, R1, c[5];
ADD_SAT R0.xyz, R2.yzww, -R2;
MUL R1.xyz, R0.x, fragment.texcoord[1];
MAD R1.xyz, R2.x, fragment.texcoord[0], R1;
MAD R1.xyz, R0.y, fragment.texcoord[2], R1;
MAD R0.xyz, fragment.texcoord[3], R0.z, R1;
ADD R1.xyz, -fragment.texcoord[4], c[7];
MOV result.color.y, c[10].x;
TEX R0.x, R0, texture[1], 2D;
KIL -R0.w;
ADD R0.y, R0.x, -R0.z;
DP3 R0.z, R1, R1;
RSQ R0.z, R0.z;
MOV R0.x, c[10];
CMP R0.x, R0.y, c[6], R0;
MUL R0.y, -fragment.texcoord[4].w, c[0].w;
ADD R0.y, R0, c[10].x;
RCP R1.x, R0.z;
MUL R0.zw, R0.y, c[10].xyxy;
MAD_SAT R0.y, R1.x, c[6].z, c[6].w;
FRC R0.zw, R0;
ADD_SAT result.color.x, R0, R0.y;
MOV R0.y, R0.w;
MAD R0.x, -R0.w, c[10].z, R0.z;
MOV result.color.zw, R0.xyxy;
END
# 36 instructions, 3 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "SHADOWS_NONATIVE" "SHADOWS_SPLIT_SPHERES" }
Vector 0 [_ProjectionParams]
Vector 1 [unity_ShadowSplitSpheres0]
Vector 2 [unity_ShadowSplitSpheres1]
Vector 3 [unity_ShadowSplitSpheres2]
Vector 4 [unity_ShadowSplitSpheres3]
Vector 5 [unity_ShadowSplitSqRadii]
Vector 6 [_LightShadowData]
Vector 7 [unity_ShadowFadeCenterAndType]
Vector 8 [_Color]
Float 9 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
"ps_2_0
; 41 ALU, 3 TEX
dcl_2d s0
dcl_2d s1
def c10, 0.00000000, 1.00000000, 255.00000000, 0.00392157
dcl t0.xyz
dcl t1.xyz
dcl t2.xyz
dcl t3.xyz
dcl t4
dcl t5.xy
texld r1, t5, s0
add r0.xyz, t4, -c1
add r2.xyz, t4, -c4
dp3 r0.x, r0, r0
add r1.xyz, t4, -c2
dp3 r0.y, r1, r1
add r1.xyz, t4, -c3
dp3 r0.w, r2, r2
dp3 r0.z, r1, r1
add r0, r0, -c5
cmp r2, r0, c10.x, c10.y
mul r0.w, r1, c8
mov r0.x, r2.y
mov r0.y, r2.z
mov r0.z, r2.w
add_sat r0.xyz, r0, -r2
mul r1.xyz, r0.x, t1
mad r1.xyz, r2.x, t0, r1
mad r1.xyz, r0.y, t2, r1
add_pp r0.x, r0.w, -c9
mad r2.xyz, t3, r0.z, r1
cmp r0.x, r0, c10, c10.y
mov_pp r1, -r0.x
texld r0, r2, s1
texkill r1.xyzw
add r0.x, r0, -r2.z
mov r1.x, c6
add r2.xyz, -t4, c7
cmp r0.x, r0, c10.y, r1
dp3 r1.x, r2, r2
mul r2.x, -t4.w, c0.w
rsq r1.x, r1.x
add r2.x, r2, c10.y
rcp r1.x, r1.x
mad_sat r1.x, r1, c6.z, c6.w
mul r2.xy, r2.x, c10.yzxw
frc r2.xy, r2
add_sat r0.x, r0, r1
mov r1.y, r2
mad r1.x, -r2.y, c10.w, r2
mov r0.w, r1.y
mov r0.z, r1.x
mov r0.y, c10
mov_pp oC0, r0
"
}

SubProgram "xbox360 " {
Keywords { "SHADOWS_NONATIVE" "SHADOWS_SPLIT_SPHERES" }
Vector 8 [_Color]
Float 9 [_Cutoff]
Vector 6 [_LightShadowData]
Vector 0 [_ProjectionParams]
Vector 7 [unity_ShadowFadeCenterAndType]
Vector 1 [unity_ShadowSplitSpheres0]
Vector 2 [unity_ShadowSplitSpheres1]
Vector 3 [unity_ShadowSplitSpheres2]
Vector 4 [unity_ShadowSplitSpheres3]
Vector 5 [unity_ShadowSplitSqRadii]
SetTexture 0 [_ShadowMapTexture] 2D
SetTexture 1 [_MainTex] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 36.00 (27 instructions), vertex: 0, texture: 8,
//   sequencer: 12, interpolator: 24;    8 GPRs, 24 threads,
// Performance (if enough threads): ~36 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaacemaaaaabmmaaaaaaaaaaaaaaceaaaaabomaaaaacbeaaaaaaaa
aaaaaaaaaaaaabmeaaaaaabmaaaaablippppadaaaaaaaaajaaaaaabmaaaaaaaa
aaaaablbaaaaaanaaaacaaaiaaabaaaaaaaaaaniaaaaaaaaaaaaaaoiaaacaaaj
aaabaaaaaaaaaapaaaaaaaaaaaaaabaaaaacaaagaaabaaaaaaaaaaniaaaaaaaa
aaaaabbbaaadaaabaaabaaaaaaaaabbmaaaaaaaaaaaaabcmaaacaaaaaaabaaaa
aaaaaaniaaaaaaaaaaaaabdoaaadaaaaaaabaaaaaaaaabbmaaaaaaaaaaaaabfa
aaacaaahaaabaaaaaaaaaaniaaaaaaaaaaaaabgoaaacaaabaaaeaaaaaaaaabii
aaaaaaaaaaaaabjiaaacaaafaaabaaaaaaaaaaniaaaaaaaafpedgpgmgphcaakl
aaabaaadaaabaaaeaaabaaaaaaaaaaaafpedhfhegpggggaaaaaaaaadaaabaaab
aaabaaaaaaaaaaaafpemgjghgihefdgigbgegphheegbhegbaafpengbgjgofegf
hiaaklklaaaeaaamaaabaaabaaabaaaaaaaaaaaafpfahcgpgkgfgdhegjgpgofa
gbhcgbgnhdaafpfdgigbgegphhengbhafegfhihehfhcgfaahfgogjhehjfpfdgi
gbgegphheggbgegfedgfgohegfhcebgogefehjhagfaahfgogjhehjfpfdgigbge
gphhfdhagmgjhefdhagigfhcgfhdaaklaaabaaadaaabaaaeaaaeaaaaaaaaaaaa
hfgogjhehjfpfdgigbgegphhfdhagmgjhefdhbfcgbgegjgjaahahdfpddfpdaaa
dccodacodcdadddfddcodaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabe
abpmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaabimbaaaahaa
aaaaaaaeaaaaaaaaaaaaeimgaadpaadpaaaaaacbaaaahafaaaaahbfbaaaahcfc
aaaahdfdaaaapefeaaaadfffaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadpiaaaaa
aaaaaaaaedhpaaaadliaiaibaaajgaadgaajbcaabcaaaaaaabaafaapaaaabcaa
meaaaaaaaaaagabegabkbcaaccaaaaaababiaakbbpbpphppaaaaeaaabeahaaah
acmamagmkaaeacaeaeboagafadpmpmgmiaaeadaebeaoaaagacpmpmlbkaaeabae
aecbagafabmdmdlbnaagagaebeacaaafaamdmdmgpaafafaeaeeeagafablolomg
naahahaemiaiaaafaaloloaapaagagaamiaiaaaaabblblgmilaaaiajmiaaaaaa
aalbblaahjppaaaamiapaaafaadeaaaagfafafaamjaoaaafacjgpmaaoaafafaa
miahaaadaamggcaaobafadaamiahaaacaablgcmaolafacadmiahaaabaalblole
olafabacmiahaaabaagmgfloolafaaabiiaiaacbbpbppppiaaaaeaaamiaeaaaa
aablblaakbaeaaaamiahaaacacmamaaakaaeahaamiacaaaaaemgmgmgilaapppp
miaiaaaaaaloloaapaacacaakaieaaaaaemggmblkaaappiamjabaaabaablmgbl
ilaaagagmiamaaaaaapbaaaaoiaaaaaamiacaaaaaemgblblklaappaamiabaaaa
aalbgmaaofabaaaamiabaaaaaagmgmgmioaaagppmjabaaaaaagmgmaaoaabaaaa
micpmaaaaapapaaaocaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "SHADOWS_NONATIVE" "SHADOWS_SPLIT_SPHERES" }
Vector 0 [_ProjectionParams]
Vector 1 [unity_ShadowSplitSpheres0]
Vector 2 [unity_ShadowSplitSpheres1]
Vector 3 [unity_ShadowSplitSpheres2]
Vector 4 [unity_ShadowSplitSpheres3]
Vector 5 [unity_ShadowSplitSqRadii]
Vector 6 [_LightShadowData]
Vector 7 [unity_ShadowFadeCenterAndType]
Vector 8 [_Color]
Float 9 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
"sce_fp_rsx // 58 instructions using 4 registers
[Configuration]
24
ffffffff000fc020003fffe0000000000000848004000000
[Offsets]
10
_ProjectionParams 1 0
000000a0
unity_ShadowSplitSpheres[0] 1 0
000000d0
unity_ShadowSplitSpheres[1] 1 0
00000100
unity_ShadowSplitSpheres[2] 1 0
00000130
unity_ShadowSplitSpheres[3] 1 0
00000160
unity_ShadowSplitSqRadii 2 0
000001b000000190
_LightShadowData 3 0
0000037000000330000002e0
unity_ShadowFadeCenterAndType 1 0
00000080
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
928
30001701c8011c9dc8000001c8003fe102800200fe001c9dfe020001c8000001
00000000000000000000000000000000037e4a80c9001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
1e000101c8011c9dc8000001c8003fe10e020300c8001c9fc8020001c8000001
0000000000000000000000000000000010000200c8001c9dc8020001c8000001
0000000000000000000000000000000010020500c8041c9dc8040001c8000001
0e020300c8001c9dc8020003c800000100000000000000000000000000000000
02040500c8041c9dc8040001c80000010e020300c8001c9dc8020003c8000001
0000000000000000000000000000000004040500c8041c9dc8040001c8000001
0e020300c8001c9dc8020003c800000100000000000000000000000000000000
08040500c8041c9dc8040001c80000010e000300c8001c9dc8020003c8000001
0000000000000000000000000000000010040500c8001c9dc8000001c8000001
06880a00c8081c9d08020000c800000100000000000000000000000000000000
18880a00c8081c9dc8020001c800000100000000000000000000000000000000
10048300ab101c9c01100002c8000001ae000200fe081c9dc8010001c8003fe1
1004830055101c9dab100002c80000018e00040001101c9cc8010001c8003fe1
ce000400fe081c9dc8010001c8003fe110048300c9101c9d55100003c8000001
ee000400c8011c9dfe080001c8003fe118060400fe001c9f8002000080020000
00003f800000437f000000000000000016041702c8001c9dc8000001c8000001
060610005c0c1c9dc8000001c80000010480014000021c9cc8000001c8000001
00003f8000000000000000000000000008041b00fe041c9dc8000001c8000001
10800140aa0c1c9cc8000001c800000108800400aa0c1c9e00020000000c0000
80813b8000000000000000000000000010023a0054021c9d54080001c8000001
0000000000000000000000000000000010000500a6081c9d68020001c8000001
00013f7f00013b7f000000000001377f037e4a00fe001c9d54000001c8000001
1000010000021c9cc8000001c800000100000000000000000000000000000000
1000010000020008c8000001c800000100003f80000000000000000000000000
02028300fe041c9dfe020001c800000100000000000000000000000000000000
02808300fe001c9dc8040001c800000118810140c9001c9dc8000001c8000001
"
}

SubProgram "gles " {
Keywords { "SHADOWS_NONATIVE" "SHADOWS_SPLIT_SPHERES" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "SHADOWS_NONATIVE" "SHADOWS_SPLIT_SPHERES" }
"!!GLES"
}

SubProgram "flash " {
Keywords { "SHADOWS_NONATIVE" "SHADOWS_SPLIT_SPHERES" }
Vector 0 [_ProjectionParams]
Vector 1 [unity_ShadowSplitSpheres0]
Vector 2 [unity_ShadowSplitSpheres1]
Vector 3 [unity_ShadowSplitSpheres2]
Vector 4 [unity_ShadowSplitSpheres3]
Vector 5 [unity_ShadowSplitSqRadii]
Vector 6 [_LightShadowData]
Vector 7 [unity_ShadowFadeCenterAndType]
Vector 8 [_Color]
Float 9 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
"agal_ps
c10 0.0 1.0 255.0 0.003922
c11 1.0 0.003922 0.000015 0.0
[bc]
ciaaaaaaabaaapacafaaaaoeaeaaaaaaaaaaaaaaafaababb tex r1, v5, s0 <2d wrap linear point>
acaaaaaaaaaaahacaeaaaaoeaeaaaaaaabaaaaoeabaaaaaa sub r0.xyz, v4, c1
acaaaaaaacaaahacaeaaaaoeaeaaaaaaaeaaaaoeabaaaaaa sub r2.xyz, v4, c4
bcaaaaaaaaaaabacaaaaaakeacaaaaaaaaaaaakeacaaaaaa dp3 r0.x, r0.xyzz, r0.xyzz
acaaaaaaabaaahacaeaaaaoeaeaaaaaaacaaaaoeabaaaaaa sub r1.xyz, v4, c2
bcaaaaaaaaaaacacabaaaakeacaaaaaaabaaaakeacaaaaaa dp3 r0.y, r1.xyzz, r1.xyzz
acaaaaaaabaaahacaeaaaaoeaeaaaaaaadaaaaoeabaaaaaa sub r1.xyz, v4, c3
bcaaaaaaaaaaaiacacaaaakeacaaaaaaacaaaakeacaaaaaa dp3 r0.w, r2.xyzz, r2.xyzz
bcaaaaaaaaaaaeacabaaaakeacaaaaaaabaaaakeacaaaaaa dp3 r0.z, r1.xyzz, r1.xyzz
acaaaaaaaaaaapacaaaaaaoeacaaaaaaafaaaaoeabaaaaaa sub r0, r0, c5
ckaaaaaaadaaapacaaaaaaoeacaaaaaaakaaaaaaabaaaaaa slt r3, r0, c10.x
aaaaaaaaaeaaapacakaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r4, c10
aaaaaaaaafaaapacakaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r5, c10
acaaaaaaaeaaapacaeaaaaffacaaaaaaafaaaaaaacaaaaaa sub r4, r4.y, r5.x
adaaaaaaacaaapacaeaaaaoeacaaaaaaadaaaaoeacaaaaaa mul r2, r4, r3
abaaaaaaacaaapacacaaaaoeacaaaaaaakaaaaaaabaaaaaa add r2, r2, c10.x
adaaaaaaaaaaaiacabaaaappacaaaaaaaiaaaaoeabaaaaaa mul r0.w, r1.w, c8
aaaaaaaaaaaaabacacaaaaffacaaaaaaaaaaaaaaaaaaaaaa mov r0.x, r2.y
aaaaaaaaaaaaacacacaaaakkacaaaaaaaaaaaaaaaaaaaaaa mov r0.y, r2.z
aaaaaaaaaaaaaeacacaaaappacaaaaaaaaaaaaaaaaaaaaaa mov r0.z, r2.w
acaaaaaaaaaaahacaaaaaakeacaaaaaaacaaaakeacaaaaaa sub r0.xyz, r0.xyzz, r2.xyzz
bgaaaaaaaaaaahacaaaaaakeacaaaaaaaaaaaaaaaaaaaaaa sat r0.xyz, r0.xyzz
adaaaaaaabaaahacaaaaaaaaacaaaaaaabaaaaoeaeaaaaaa mul r1.xyz, r0.x, v1
adaaaaaaadaaahacacaaaaaaacaaaaaaaaaaaaoeaeaaaaaa mul r3.xyz, r2.x, v0
abaaaaaaabaaahacadaaaakeacaaaaaaabaaaakeacaaaaaa add r1.xyz, r3.xyzz, r1.xyzz
adaaaaaaaeaaahacaaaaaaffacaaaaaaacaaaaoeaeaaaaaa mul r4.xyz, r0.y, v2
abaaaaaaabaaahacaeaaaakeacaaaaaaabaaaakeacaaaaaa add r1.xyz, r4.xyzz, r1.xyzz
acaaaaaaaaaaabacaaaaaappacaaaaaaajaaaaoeabaaaaaa sub r0.x, r0.w, c9
adaaaaaaacaaahacadaaaaoeaeaaaaaaaaaaaakkacaaaaaa mul r2.xyz, v3, r0.z
abaaaaaaacaaahacacaaaakeacaaaaaaabaaaakeacaaaaaa add r2.xyz, r2.xyzz, r1.xyzz
ckaaaaaaaaaaabacaaaaaaaaacaaaaaaakaaaaaaabaaaaaa slt r0.x, r0.x, c10.x
bfaaaaaaabaaapacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r1, r0.x
ciaaaaaaaaaaapacacaaaafeacaaaaaaabaaaaaaafaababb tex r0, r2.xyyy, s1 <2d wrap linear point>
chaaaaaaaaaaaaaaabaaaaaaacaaaaaaaaaaaaaaaaaaaaaa kil a0.none, r1.x
bdaaaaaaaaaaabacaaaaaaoeacaaaaaaalaaaaoeabaaaaaa dp4 r0.x, r0, c11
acaaaaaaaaaaabacaaaaaaaaacaaaaaaacaaaakkacaaaaaa sub r0.x, r0.x, r2.z
aaaaaaaaabaaabacagaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r1.x, c6
bfaaaaaaacaaahacaeaaaaoeaeaaaaaaaaaaaaaaaaaaaaaa neg r2.xyz, v4
abaaaaaaacaaahacacaaaakeacaaaaaaahaaaaoeabaaaaaa add r2.xyz, r2.xyzz, c7
ckaaaaaaadaaabacaaaaaaaaacaaaaaaakaaaaaaabaaaaaa slt r3.x, r0.x, c10.x
acaaaaaaaeaaabacabaaaaaaacaaaaaaakaaaaffabaaaaaa sub r4.x, r1.x, c10.y
adaaaaaaaaaaabacaeaaaaaaacaaaaaaadaaaaaaacaaaaaa mul r0.x, r4.x, r3.x
abaaaaaaaaaaabacaaaaaaaaacaaaaaaakaaaaffabaaaaaa add r0.x, r0.x, c10.y
bcaaaaaaabaaabacacaaaakeacaaaaaaacaaaakeacaaaaaa dp3 r1.x, r2.xyzz, r2.xyzz
bfaaaaaaadaaaiacaeaaaappaeaaaaaaaaaaaaaaaaaaaaaa neg r3.w, v4.w
adaaaaaaacaaabacadaaaappacaaaaaaaaaaaappabaaaaaa mul r2.x, r3.w, c0.w
akaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaaaaaaaaaaaa rsq r1.x, r1.x
abaaaaaaacaaabacacaaaaaaacaaaaaaakaaaaffabaaaaaa add r2.x, r2.x, c10.y
afaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaaaaaaaaaaaa rcp r1.x, r1.x
adaaaaaaabaaabacabaaaaaaacaaaaaaagaaaakkabaaaaaa mul r1.x, r1.x, c6.z
abaaaaaaabaaabacabaaaaaaacaaaaaaagaaaappabaaaaaa add r1.x, r1.x, c6.w
bgaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sat r1.x, r1.x
adaaaaaaacaaadacacaaaaaaacaaaaaaakaaaamjabaaaaaa mul r2.xy, r2.x, c10.yzxw
aiaaaaaaacaaadacacaaaafeacaaaaaaaaaaaaaaaaaaaaaa frc r2.xy, r2.xyyy
abaaaaaaaaaaabacaaaaaaaaacaaaaaaabaaaaaaacaaaaaa add r0.x, r0.x, r1.x
bgaaaaaaaaaaabacaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sat r0.x, r0.x
aaaaaaaaabaaacacacaaaaffacaaaaaaaaaaaaaaaaaaaaaa mov r1.y, r2.y
bfaaaaaaaeaaacacacaaaaffacaaaaaaaaaaaaaaaaaaaaaa neg r4.y, r2.y
adaaaaaaabaaabacaeaaaaffacaaaaaaakaaaappabaaaaaa mul r1.x, r4.y, c10.w
abaaaaaaabaaabacabaaaaaaacaaaaaaacaaaaaaacaaaaaa add r1.x, r1.x, r2.x
aaaaaaaaaaaaaiacabaaaaffacaaaaaaaaaaaaaaaaaaaaaa mov r0.w, r1.y
aaaaaaaaaaaaaeacabaaaaaaacaaaaaaaaaaaaaaaaaaaaaa mov r0.z, r1.x
aaaaaaaaaaaaacacakaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov r0.y, c10
aaaaaaaaaaaaapadaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r0
"
}

SubProgram "opengl " {
Keywords { "SHADOWS_NATIVE" "SHADOWS_SPLIT_SPHERES" }
Vector 0 [_ProjectionParams]
Vector 1 [unity_ShadowSplitSpheres0]
Vector 2 [unity_ShadowSplitSpheres1]
Vector 3 [unity_ShadowSplitSpheres2]
Vector 4 [unity_ShadowSplitSpheres3]
Vector 5 [unity_ShadowSplitSqRadii]
Vector 6 [_LightShadowData]
Vector 7 [unity_ShadowFadeCenterAndType]
Vector 8 [_Color]
Float 9 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
"!!ARBfp1.0
# 36 ALU, 2 TEX
OPTION ARB_fragment_program_shadow;
PARAM c[11] = { program.local[0..9],
		{ 1, 255, 0.0039215689 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEX R0.w, fragment.texcoord[5], texture[0], 2D;
ADD R1.xyz, fragment.texcoord[4], -c[1];
ADD R2.xyz, fragment.texcoord[4], -c[4];
MUL R0.w, R0, c[8];
SLT R0.w, R0, c[9].x;
DP3 R1.x, R1, R1;
ADD R0.xyz, fragment.texcoord[4], -c[2];
DP3 R1.y, R0, R0;
ADD R0.xyz, fragment.texcoord[4], -c[3];
DP3 R1.z, R0, R0;
DP3 R1.w, R2, R2;
SLT R2, R1, c[5];
ADD_SAT R0.xyz, R2.yzww, -R2;
MUL R1.xyz, R0.x, fragment.texcoord[1];
MAD R1.xyz, R2.x, fragment.texcoord[0], R1;
MAD R1.xyz, R0.y, fragment.texcoord[2], R1;
MAD R0.xyz, fragment.texcoord[3], R0.z, R1;
ADD R1.xyz, -fragment.texcoord[4], c[7];
MOV result.color.y, c[10].x;
TEX R0.x, R0, texture[1], SHADOW2D;
KIL -R0.w;
DP3 R0.z, R1, R1;
RSQ R0.z, R0.z;
MOV R0.y, c[10].x;
ADD R0.y, R0, -c[6].x;
MAD R0.x, R0, R0.y, c[6];
MUL R0.y, -fragment.texcoord[4].w, c[0].w;
ADD R0.y, R0, c[10].x;
RCP R1.x, R0.z;
MUL R0.zw, R0.y, c[10].xyxy;
MAD_SAT R0.y, R1.x, c[6].z, c[6].w;
FRC R0.zw, R0;
ADD_SAT result.color.x, R0, R0.y;
MOV R0.y, R0.w;
MAD R0.x, -R0.w, c[10].z, R0.z;
MOV result.color.zw, R0.xyxy;
END
# 36 instructions, 3 R-regs
"
}

SubProgram "d3d9 " {
Keywords { "SHADOWS_NATIVE" "SHADOWS_SPLIT_SPHERES" }
Vector 0 [_ProjectionParams]
Vector 1 [unity_ShadowSplitSpheres0]
Vector 2 [unity_ShadowSplitSpheres1]
Vector 3 [unity_ShadowSplitSpheres2]
Vector 4 [unity_ShadowSplitSpheres3]
Vector 5 [unity_ShadowSplitSqRadii]
Vector 6 [_LightShadowData]
Vector 7 [unity_ShadowFadeCenterAndType]
Vector 8 [_Color]
Float 9 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
"ps_2_0
; 41 ALU, 3 TEX
dcl_2d s0
dcl_2d s1
def c10, 0.00000000, 1.00000000, 255.00000000, 0.00392157
dcl t0.xyz
dcl t1.xyz
dcl t2.xyz
dcl t3.xyz
dcl t4
dcl t5.xy
texld r1, t5, s0
add r0.xyz, t4, -c1
add r2.xyz, t4, -c4
dp3 r0.x, r0, r0
add r1.xyz, t4, -c2
dp3 r0.y, r1, r1
add r1.xyz, t4, -c3
dp3 r0.w, r2, r2
dp3 r0.z, r1, r1
add r0, r0, -c5
cmp r2, r0, c10.x, c10.y
mul r0.w, r1, c8
mov r0.x, r2.y
mov r0.y, r2.z
mov r0.z, r2.w
add_sat r0.xyz, r0, -r2
mul r1.xyz, r0.x, t1
mad r1.xyz, r2.x, t0, r1
mad r1.xyz, r0.y, t2, r1
add_pp r0.x, r0.w, -c9
mad r2.xyz, t3, r0.z, r1
cmp r0.x, r0, c10, c10.y
mov_pp r1, -r0.x
texld r0, r2, s1
texkill r1.xyzw
mov r1.x, c6
add r1.x, c10.y, -r1
add r2.xyz, -t4, c7
mad r0.x, r0, r1, c6
dp3 r1.x, r2, r2
mul r2.x, -t4.w, c0.w
rsq r1.x, r1.x
add r2.x, r2, c10.y
rcp r1.x, r1.x
mad_sat r1.x, r1, c6.z, c6.w
mul r2.xy, r2.x, c10.yzxw
frc r2.xy, r2
add_sat r0.x, r0, r1
mov r1.y, r2
mad r1.x, -r2.y, c10.w, r2
mov r0.w, r1.y
mov r0.z, r1.x
mov r0.y, c10
mov_pp oC0, r0
"
}

SubProgram "ps3 " {
Keywords { "SHADOWS_NATIVE" "SHADOWS_SPLIT_SPHERES" }
Vector 0 [_ProjectionParams]
Vector 1 [unity_ShadowSplitSpheres0]
Vector 2 [unity_ShadowSplitSpheres1]
Vector 3 [unity_ShadowSplitSpheres2]
Vector 4 [unity_ShadowSplitSpheres3]
Vector 5 [unity_ShadowSplitSqRadii]
Vector 6 [_LightShadowData]
Vector 7 [unity_ShadowFadeCenterAndType]
Vector 8 [_Color]
Float 9 [_Cutoff]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_ShadowMapTexture] 2D
"sce_fp_rsx // 55 instructions using 3 registers
[Configuration]
24
ffffffff000fc020003fffe0000000000000848003000000
[Offsets]
10
_ProjectionParams 1 0
000000a0
unity_ShadowSplitSpheres[0] 1 0
000000d0
unity_ShadowSplitSpheres[1] 1 0
00000100
unity_ShadowSplitSpheres[2] 1 0
00000130
unity_ShadowSplitSpheres[3] 1 0
00000150
unity_ShadowSplitSqRadii 2 0
000001c0000001a0
_LightShadowData 4 0
0000033000000310000002f0000002d0
unity_ShadowFadeCenterAndType 1 0
00000080
_Color 1 0
00000020
_Cutoff 1 0
00000040
[Microcode]
880
30001701c8011c9dc8000001c8003fe102800200fe001c9dfe020001c8000001
00000000000000000000000000000000037e4a80c9001c9d00020168c8000001
00000000000000000000000000000000067e5200c8000015c8000001c8000001
1e000101c8011c9dc8000001c8003fe10e020300c8001c9fc8020001c8000001
0000000000000000000000000000000010000200c8001c9dc8020001c8000001
0000000000000000000000000000000010020500c8041c9dc8040001c8000001
0e020300c8001c9dc8020003c800000100000000000000000000000000000000
02040500c8041c9dc8040001c80000010e020300c8001c9dc8020003c8000001
0000000000000000000000000000000004040500c8041c9dc8040001c8000001
0e020300c8001c9dc8020003c800000100000000000000000000000000000000
0e000300c8001c9dc8020003c800000100000000000000000000000000000000
08040500c8041c9dc8040001c800000104021b00fe041c9dc8000001c8000001
10040500c8001c9dc8000001c800000106880a00c8081c9d08020000c8000001
0000000000000000000000000000000018880a00c8081c9dc8020001c8000001
0000000000000000000000000000000010028300ab101c9c01100002c8000001
ae000200fe041c9dc8010001c8003fe110028300c9101c9d55100003c8000001
1004830055101c9dab100002c80000018e00040001101c9cc8010001c8003fe1
ce000400fe081c9dc8010001c8003fe1ee000400c8011c9dfe040001c8003fe1
18020400fe001c9f800200008002000000003f800000437f0000000000000000
02021702c8001c9dc8000001c80000010480014000021c9cc8000001c8000001
00003f8000000000000000000000000018021000c8041c9dc8000001c8000001
08800400fe041c9f00020000c804000180813b80000000000000000000000000
02043a0054021c9daa040000c800000100000000000000000000000000000000
1000830000081c9cc8020001c800000100000000000000000000000000000000
0404040000041c9c000200020004000000000000000000000000000000000000
02020300aa081c9c00020000c800000100000000000000000000000000000000
10800140c8041c9dc8000001c800000118800140c9001c9dc8000001c8000001
02818300c8041c9dfe000001c8000001
"
}

SubProgram "d3d11 " {
Keywords { "SHADOWS_NATIVE" "SHADOWS_SPLIT_SPHERES" }
ConstBuffer "$Globals" 112 // 100 used size, 8 vars
Vector 48 [_Color] 4
Float 96 [_Cutoff]
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityShadows" 416 // 416 used size, 8 vars
Vector 0 [unity_ShadowSplitSpheres0] 4
Vector 16 [unity_ShadowSplitSpheres1] 4
Vector 32 [unity_ShadowSplitSpheres2] 4
Vector 48 [unity_ShadowSplitSpheres3] 4
Vector 64 [unity_ShadowSplitSqRadii] 4
Vector 384 [_LightShadowData] 4
Vector 400 [unity_ShadowFadeCenterAndType] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityShadows" 2
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_ShadowMapTexture] 2D 0
// 36 instructions, 2 temp regs, 0 temp arrays:
// ALU 28 float, 0 int, 1 uint
// TEX 1 (0 load, 1 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecednkhmoncklblijdbijfaadjccbnamldenabaaaaaakaagaaaaadaaaaaa
cmaaaaaapmaaaaaadaabaaaaejfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaahahaaaalmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalmaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaalmaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaalmaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapapaaaalmaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
adadaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheo
cmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaa
apaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcgiafaaaaeaaaaaaafkabaaaa
fjaaaaaeegiocaaaaaaaaaaaahaaaaaafjaaaaaeegiocaaaabaaaaaaagaaaaaa
fjaaaaaeegiocaaaacaaaaaabkaaaaaafkaiaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaa
abaaaaaaffffaaaagcbaaaadhcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaa
gcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaagcbaaaadpcbabaaa
afaaaaaagcbaaaaddcbabaaaagaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaac
acaaaaaaefaaaaajpcaabaaaaaaaaaaaegbabaaaagaaaaaaeghobaaaaaaaaaaa
aagabaaaabaaaaaadcaaaaambcaabaaaaaaaaaaadkaabaaaaaaaaaaadkiacaaa
aaaaaaaaadaaaaaaakiacaiaebaaaaaaaaaaaaaaagaaaaaadbaaaaahbcaabaaa
aaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaaanaaaeadakaabaaaaaaaaaaa
aaaaaaajhcaabaaaaaaaaaaaegbcbaaaafaaaaaaegiccaiaebaaaaaaacaaaaaa
aaaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaa
aaaaaaajhcaabaaaabaaaaaaegbcbaaaafaaaaaaegiccaiaebaaaaaaacaaaaaa
abaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
aaaaaaajhcaabaaaabaaaaaaegbcbaaaafaaaaaaegiccaiaebaaaaaaacaaaaaa
acaaaaaabaaaaaahecaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
aaaaaaajhcaabaaaabaaaaaaegbcbaaaafaaaaaaegiccaiaebaaaaaaacaaaaaa
adaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
dbaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaaegiocaaaacaaaaaaaeaaaaaa
dhaaaaaphcaabaaaabaaaaaaegacbaaaaaaaaaaaaceaaaaaaaaaialpaaaaialp
aaaaialpaaaaaaaaaceaaaaaaaaaaaiaaaaaaaiaaaaaaaiaaaaaaaaaabaaaaak
pcaabaaaaaaaaaaaegaobaaaaaaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadp
aaaaiadpaaaaaaahocaabaaaaaaaaaaaagajbaaaabaaaaaafgaobaaaaaaaaaaa
deaaaaakocaabaaaaaaaaaaafgaobaaaaaaaaaaaaceaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaafgafbaaaaaaaaaaaegbcbaaa
acaaaaaadcaaaaajhcaabaaaabaaaaaaegbcbaaaabaaaaaaagaabaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaaegbcbaaaadaaaaaakgakbaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaaegbcbaaaaeaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaaehaaaaalbcaabaaaaaaaaaaaegaabaaa
aaaaaaaaaghabaaaabaaaaaaaagabaaaaaaaaaaackaabaaaaaaaaaaaaaaaaaaj
ccaabaaaaaaaaaaaakiacaiaebaaaaaaacaaaaaabiaaaaaaabeaaaaaaaaaiadp
dcaaaaakbcaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaaakiacaaa
acaaaaaabiaaaaaaaaaaaaajocaabaaaaaaaaaaaagbjbaaaafaaaaaaagijcaia
ebaaaaaaacaaaaaabjaaaaaabaaaaaahccaabaaaaaaaaaaajgahbaaaaaaaaaaa
jgahbaaaaaaaaaaaelaaaaafccaabaaaaaaaaaaabkaabaaaaaaaaaaadccaaaal
ccaabaaaaaaaaaaabkaabaaaaaaaaaaackiacaaaacaaaaaabiaaaaaadkiacaaa
acaaaaaabiaaaaaaaacaaaahbccabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaaa
aaaaaaaadcaaaaalbcaabaaaaaaaaaaadkbabaiaebaaaaaaafaaaaaadkiacaaa
abaaaaaaafaaaaaaabeaaaaaaaaaiadpdiaaaaakdcaabaaaaaaaaaaaagaabaaa
aaaaaaaaaceaaaaaaaaaiadpaaaahpedaaaaaaaaaaaaaaaabkaaaaafdcaabaaa
aaaaaaaaegaabaaaaaaaaaaadcaaaaakeccabaaaaaaaaaaabkaabaiaebaaaaaa
aaaaaaaaabeaaaaaibiaiadlakaabaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaa
bkaabaaaaaaaaaaadgaaaaafcccabaaaaaaaaaaaabeaaaaaaaaaiadpdoaaaaab
"
}

SubProgram "gles " {
Keywords { "SHADOWS_NATIVE" "SHADOWS_SPLIT_SPHERES" }
"!!GLES"
}

SubProgram "d3d11_9x " {
Keywords { "SHADOWS_NATIVE" "SHADOWS_SPLIT_SPHERES" }
ConstBuffer "$Globals" 112 // 100 used size, 8 vars
Vector 48 [_Color] 4
Float 96 [_Cutoff]
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityShadows" 416 // 416 used size, 8 vars
Vector 0 [unity_ShadowSplitSpheres0] 4
Vector 16 [unity_ShadowSplitSpheres1] 4
Vector 32 [unity_ShadowSplitSpheres2] 4
Vector 48 [unity_ShadowSplitSpheres3] 4
Vector 64 [unity_ShadowSplitSqRadii] 4
Vector 384 [_LightShadowData] 4
Vector 400 [unity_ShadowFadeCenterAndType] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityShadows" 2
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_ShadowMapTexture] 2D 0
// 36 instructions, 2 temp regs, 0 temp arrays:
// ALU 28 float, 0 int, 1 uint
// TEX 1 (0 load, 1 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0_level_9_1
eefiecedoggnccfelmocdiomoojdgafnlbkfeahmabaaaaaacaakaaaaafaaaaaa
deaaaaaajmadaaaaamajaaaabmajaaaaomajaaaaebgpgodjgaadaaaagaadaaaa
aaacpppppiacaaaagiaaaaaaafaacmaaaaaagiaaaaaagiaaacaaceaaaaaagiaa
abaaaaaaaaababaaaaaaadaaabaaaaaaaaaaaaaaaaaaagaaabaaabaaaaaaaaaa
abaaafaaabaaacaaaaaaaaaaacaaaaaaafaaadaaaaaaaaaaacaabiaaacaaaiaa
aaaaaaaaaaacppppfbaaaaafakaaapkaaaaaiadpaaaahpedibiaiadlaaaaaaaa
fbaaaaafalaaapkaaaaaaaaaaaaaiadpaaaaaaiaaaaaialpbpaaaaacaaaaaaia
aaaaahlabpaaaaacaaaaaaiaabaaahlabpaaaaacaaaaaaiaacaaahlabpaaaaac
aaaaaaiaadaaahlabpaaaaacaaaaaaiaaeaaaplabpaaaaacaaaaaaiaafaaadla
bpaaaaacaaaaaajaaaaiapkabpaaaaacaaaaaajaabaiapkaecaaaaadaaaaapia
afaaoelaabaioekaabaaaaacabaaaiiaaaaappkaaeaaaaaeaaaacpiaaaaappia
abaappiaabaaaakbacaaaaadabaaahiaaeaaoelaadaaoekbaiaaaaadabaaabia
abaaoeiaabaaoeiaacaaaaadacaaahiaaeaaoelaaeaaoekbaiaaaaadabaaacia
acaaoeiaacaaoeiaacaaaaadacaaahiaaeaaoelaafaaoekbaiaaaaadabaaaeia
acaaoeiaacaaoeiaacaaaaadacaaahiaaeaaoelaagaaoekbaiaaaaadabaaaiia
acaaoeiaacaaoeiaacaaaaadabaaapiaabaaoeiaahaaoekbfiaaaaaeacaaahia
abaaoeiaalaakkkaalaappkafiaaaaaeabaaapiaabaaoeiaalaaaakaalaaffka
acaaaaadadaaadiaacaaoeiaabaamjiaacaaaaadadaaaeiaacaakkiaabaappia
alaaaaadabaaaoiaadaabliaalaaaakaafaaaaadacaaahiaabaappiaabaaoela
aeaaaaaeacaaahiaaaaaoelaabaaaaiaacaaoeiaaeaaaaaeacaaahiaacaaoela
abaakkiaacaaoeiaaeaaaaaeabaaahiaadaaoelaabaaffiaacaaoeiaebaaaaab
aaaaapiaecaaaaadaaaacpiaabaaoeiaaaaioekaabaaaaacaaaaaciaalaaffka
bcaaaaaeabaacbiaaaaaaaiaaaaaffiaaiaaaakaacaaaaadacaaahiaaeaaoela
ajaaoekbaiaaaaadaaaaabiaacaaoeiaacaaoeiaahaaaaacaaaaabiaaaaaaaia
agaaaaacaaaaabiaaaaaaaiaaeaaaaaeaaaabbiaaaaaaaiaaiaakkkaaiaappka
acaaaaadabaadbiaaaaaaaiaabaaaaiaaeaaaaaeaaaaabiaaeaapplaacaappkb
aaaaffiaafaaaaadaaaaadiaaaaaaaiaakaaoekabdaaaaacaaaaadiaaaaaoeia
aeaaaaaeabaaceiaaaaaffiaakaakkkbaaaaaaiaabaaaaacabaaciiaaaaaffia
abaaaaacabaacciaalaaffkaabaaaaacaaaicpiaabaaoeiappppaaaafdeieefc
giafaaaaeaaaaaaafkabaaaafjaaaaaeegiocaaaaaaaaaaaahaaaaaafjaaaaae
egiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaabkaaaaaafkaiaaad
aagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafibiaaaeaahabaaaaaaaaaaa
ffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaagcbaaaadhcbabaaaabaaaaaa
gcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaa
aeaaaaaagcbaaaadpcbabaaaafaaaaaagcbaaaaddcbabaaaagaaaaaagfaaaaad
pccabaaaaaaaaaaagiaaaaacacaaaaaaefaaaaajpcaabaaaaaaaaaaaegbabaaa
agaaaaaaeghobaaaaaaaaaaaaagabaaaabaaaaaadcaaaaambcaabaaaaaaaaaaa
dkaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaaakiacaiaebaaaaaaaaaaaaaa
agaaaaaadbaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaa
anaaaeadakaabaaaaaaaaaaaaaaaaaajhcaabaaaaaaaaaaaegbcbaaaafaaaaaa
egiccaiaebaaaaaaacaaaaaaaaaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaaaaaaaaaaaaaaaajhcaabaaaabaaaaaaegbcbaaaafaaaaaa
egiccaiaebaaaaaaacaaaaaaabaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaa
abaaaaaaegacbaaaabaaaaaaaaaaaaajhcaabaaaabaaaaaaegbcbaaaafaaaaaa
egiccaiaebaaaaaaacaaaaaaacaaaaaabaaaaaahecaabaaaaaaaaaaaegacbaaa
abaaaaaaegacbaaaabaaaaaaaaaaaaajhcaabaaaabaaaaaaegbcbaaaafaaaaaa
egiccaiaebaaaaaaacaaaaaaadaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaa
abaaaaaaegacbaaaabaaaaaadbaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaa
egiocaaaacaaaaaaaeaaaaaadhaaaaaphcaabaaaabaaaaaaegacbaaaaaaaaaaa
aceaaaaaaaaaialpaaaaialpaaaaialpaaaaaaaaaceaaaaaaaaaaaiaaaaaaaia
aaaaaaiaaaaaaaaaabaaaaakpcaabaaaaaaaaaaaegaobaaaaaaaaaaaaceaaaaa
aaaaiadpaaaaiadpaaaaiadpaaaaiadpaaaaaaahocaabaaaaaaaaaaaagajbaaa
abaaaaaafgaobaaaaaaaaaaadeaaaaakocaabaaaaaaaaaaafgaobaaaaaaaaaaa
aceaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegbcbaaaacaaaaaadcaaaaajhcaabaaaabaaaaaaegbcbaaa
abaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaa
egbcbaaaadaaaaaakgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaajhcaabaaa
aaaaaaaaegbcbaaaaeaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaaehaaaaal
bcaabaaaaaaaaaaaegaabaaaaaaaaaaaaghabaaaabaaaaaaaagabaaaaaaaaaaa
ckaabaaaaaaaaaaaaaaaaaajccaabaaaaaaaaaaaakiacaiaebaaaaaaacaaaaaa
biaaaaaaabeaaaaaaaaaiadpdcaaaaakbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
bkaabaaaaaaaaaaaakiacaaaacaaaaaabiaaaaaaaaaaaaajocaabaaaaaaaaaaa
agbjbaaaafaaaaaaagijcaiaebaaaaaaacaaaaaabjaaaaaabaaaaaahccaabaaa
aaaaaaaajgahbaaaaaaaaaaajgahbaaaaaaaaaaaelaaaaafccaabaaaaaaaaaaa
bkaabaaaaaaaaaaadccaaaalccaabaaaaaaaaaaabkaabaaaaaaaaaaackiacaaa
acaaaaaabiaaaaaadkiacaaaacaaaaaabiaaaaaaaacaaaahbccabaaaaaaaaaaa
bkaabaaaaaaaaaaaakaabaaaaaaaaaaadcaaaaalbcaabaaaaaaaaaaadkbabaia
ebaaaaaaafaaaaaadkiacaaaabaaaaaaafaaaaaaabeaaaaaaaaaiadpdiaaaaak
dcaabaaaaaaaaaaaagaabaaaaaaaaaaaaceaaaaaaaaaiadpaaaahpedaaaaaaaa
aaaaaaaabkaaaaafdcaabaaaaaaaaaaaegaabaaaaaaaaaaadcaaaaakeccabaaa
aaaaaaaabkaabaiaebaaaaaaaaaaaaaaabeaaaaaibiaiadlakaabaaaaaaaaaaa
dgaaaaaficcabaaaaaaaaaaabkaabaaaaaaaaaaadgaaaaafcccabaaaaaaaaaaa
abeaaaaaaaaaiadpdoaaaaabfdegejdaaiaaaaaaiaaaaaaaaaaaaaaaejfdeheo
miaaaaaaahaaaaaaaiaaaaaalaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaa
apaaaaaalmaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaahahaaaalmaaaaaa
abaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaalmaaaaaaacaaaaaaaaaaaaaa
adaaaaaaadaaaaaaahahaaaalmaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaa
ahahaaaalmaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapapaaaalmaaaaaa
afaaaaaaaaaaaaaaadaaaaaaagaaaaaaadadaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
"
}

SubProgram "gles3 " {
Keywords { "SHADOWS_NATIVE" "SHADOWS_SPLIT_SPHERES" }
"!!GLES3"
}

}
	}

#LINE 50

	}
	
	Fallback "Transparent/VertexLit"
}